/*
 * GitLab API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: v4
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package client

import (
	"os"
)

// Update a group. Available only for users who can administrate groups.
type PutApiV4GroupsId struct {
	// The name of the group
	Name string `json:"name,omitempty"`
	// The path of the group
	Path string `json:"path,omitempty"`
	// The description of the group
	Description string `json:"description,omitempty"`
	// The visibility of the group
	Visibility string `json:"visibility,omitempty"`
	// Avatar image for the group
	Avatar **os.File `json:"avatar,omitempty"`
	// Prevent sharing a project with another group within this group
	ShareWithGroupLock bool `json:"share_with_group_lock,omitempty"`
	// Require all users in this group to setup Two-factor authentication
	RequireTwoFactorAuthentication bool `json:"require_two_factor_authentication,omitempty"`
	// Time before Two-factor authentication is enforced
	TwoFactorGracePeriod int32 `json:"two_factor_grace_period,omitempty"`
	// Determine if developers can create projects in the group
	ProjectCreationLevel string `json:"project_creation_level,omitempty"`
	// Default to Auto DevOps pipeline for all projects within this group
	AutoDevopsEnabled bool `json:"auto_devops_enabled,omitempty"`
	// Allowed to create subgroups
	SubgroupCreationLevel string `json:"subgroup_creation_level,omitempty"`
	// _(Deprecated)_ Disable email notifications. Use: emails_enabled
	EmailsDisabled bool `json:"emails_disabled,omitempty"`
	// Enable email notifications
	EmailsEnabled bool `json:"emails_enabled,omitempty"`
	// Include the code diff preview in merge request notification emails
	ShowDiffPreviewInEmail bool `json:"show_diff_preview_in_email,omitempty"`
	// Disable a group from getting mentioned
	MentionsDisabled bool `json:"mentions_disabled,omitempty"`
	// Enable/disable LFS for the projects in this group
	LfsEnabled bool `json:"lfs_enabled,omitempty"`
	// Allow users to request member access
	RequestAccessEnabled bool `json:"request_access_enabled,omitempty"`
	// The default branch of group's projects
	DefaultBranch string `json:"default_branch,omitempty"`
	// Determine if developers can push to default branch
	DefaultBranchProtection         int32                                           `json:"default_branch_protection,omitempty"`
	DefaultBranchProtectionDefaults *PostApiV4GroupsDefaultBranchProtectionDefaults `json:"default_branch_protection_defaults,omitempty"`
	// Enable/disable shared runners for the group and its subgroups and projects
	SharedRunnersSetting string `json:"shared_runners_setting,omitempty"`
	// Allow only the selected protocols to be used for Git access.
	EnabledGitAccessProtocol string `json:"enabled_git_access_protocol,omitempty"`
	// Prevent adding new members to projects within this group
	MembershipLock bool `json:"membership_lock,omitempty"`
	// LDAP Common Name
	LdapCn string `json:"ldap_cn,omitempty"`
	// A valid access level
	LdapAccess int32 `json:"ldap_access,omitempty"`
	// (admin-only) Compute minutes quota for this group
	SharedRunnersMinutesLimit int32 `json:"shared_runners_minutes_limit,omitempty"`
	// (admin-only) Extra compute minutes quota for this group
	ExtraSharedRunnersMinutesLimit int32 `json:"extra_shared_runners_minutes_limit,omitempty"`
	// Wiki access level. One of `disabled`, `private` or `enabled`
	WikiAccessLevel string `json:"wiki_access_level,omitempty"`
	// Prevent sharing groups within this namespace with any groups outside the namespace. Only available on top-level groups.
	PreventSharingGroupsOutsideHierarchy bool `json:"prevent_sharing_groups_outside_hierarchy,omitempty"`
	// Indicates if math rendering limits are locked for all descendent groups.
	LockMathRenderingLimitsEnabled bool `json:"lock_math_rendering_limits_enabled,omitempty"`
	// Indicates if math rendering limits are used for this group.
	MathRenderingLimitsEnabled bool `json:"math_rendering_limits_enabled,omitempty"`
	// The ID of a project to use for custom templates in this group
	FileTemplateProjectId int32 `json:"file_template_project_id,omitempty"`
	// Prevent forking projects inside this group to external namespaces
	PreventForkingOutsideGroup bool `json:"prevent_forking_outside_group,omitempty"`
	// Maximum number of unique projects a user can download in the specified time period before they are banned.
	UniqueProjectDownloadLimit int32 `json:"unique_project_download_limit,omitempty"`
	// Time period during which a user can download a maximum amount of projects before they are banned.
	UniqueProjectDownloadLimitIntervalInSeconds int32 `json:"unique_project_download_limit_interval_in_seconds,omitempty"`
	// List of usernames excluded from the unique project download limit
	UniqueProjectDownloadLimitAllowlist []string `json:"unique_project_download_limit_allowlist,omitempty"`
	// List of user ids who will be emailed when Git abuse rate limit is exceeded
	UniqueProjectDownloadLimitAlertlist []int32 `json:"unique_project_download_limit_alertlist,omitempty"`
	// Ban users from the group when they exceed maximum number of unique projects download in the specified time period
	AutoBanUserOnExcessiveProjectsDownload bool `json:"auto_ban_user_on_excessive_projects_download,omitempty"`
	// List of IP addresses which need to be restricted for group
	IpRestrictionRanges string `json:"ip_restriction_ranges,omitempty"`
	// To enforce token expiration for Service accounts users for group
	ServiceAccessTokensExpirationEnforced bool `json:"service_access_tokens_expiration_enforced,omitempty"`
	// Indicates whether GitLab Duo features are enabled for the group
	DuoFeaturesEnabled bool `json:"duo_features_enabled,omitempty"`
	// Indicates if the GitLab Duo features enabled setting is enforced for all subgroups
	LockDuoFeaturesEnabled bool `json:"lock_duo_features_enabled,omitempty"`
}
