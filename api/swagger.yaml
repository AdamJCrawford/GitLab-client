---
swagger: "2.0"
info:
  version: "v4"
  title: "GitLab API"
host: "gitlab.com"
tags:
- name: "badges"
  description: "Operations about badges"
- name: "groups"
  description: "Operations about groups"
- name: "runners"
  description: "Operations about runners"
- name: "web_commits"
  description: "Operations about web commits"
- name: "group_avatar"
  description: "Operations about group_avatars"
- name: "invitations"
  description: "Operations about invitations"
- name: "members"
  description: "Operations about members"
- name: "group_access_tokens"
  description: "Operations about group_access_tokens"
- name: "wikis"
  description: "Operations about wikis"
- name: "branches"
  description: "Operations about branches"
- name: "secure_files"
  description: "Operations about secure_files"
- name: "commits"
  description: "Operations about commits"
- name: "pages"
  description: "Operations about pages"
- name: "pages_domains"
  description: "Operations about pages_domains"
- name: "project_avatar"
  description: "Operations about project_avatars"
- name: "projects_job_token_scope"
  description: "Operations about projects_job_token_scopes"
- name: "project_snippets"
  description: "Operations about project_snippets"
- name: "protected_tags"
  description: "Operations about protected_tags"
- name: "remote_mirrors"
  description: "Operations about remote_mirrors"
- name: "project_access_tokens"
  description: "Operations about project_access_tokens"
- name: "tags"
  description: "Operations about tags"
- name: "alert_management"
  description: "Operations about alert_managements"
- name: "batched_background_migrations"
  description: "Operations about batched_background_migrations"
- name: "admin"
  description: "Operations about admins"
- name: "migrations"
  description: "Operations about migrations"
- name: "broadcast_messages"
  description: "Operations about broadcast_messages"
- name: "applications"
  description: "Operations about applications"
- name: "avatar"
  description: "Operations about avatars"
- name: "bulk_imports"
  description: "Operations about bulk_imports"
- name: "job"
  description: "Operations about jobs"
- name: "jobs"
  description: "Operations about jobs"
- name: "events"
  description: "Operations about events"
- name: "users"
  description: "Operations about users"
- name: "keys"
  description: "Operations about keys"
- name: "markdown"
  description: "Operations about markdowns"
- name: "namespaces"
  description: "Operations about namespaces"
- name: "personal_access_tokens"
  description: "Operations about personal_access_tokens"
- name: "project_repository_storage_moves"
  description: "Operations about project_repository_storage_moves"
- name: "snippets"
  description: "Operations about snippets"
- name: "snippet_repository_storage_moves"
  description: "Operations about snippet_repository_storage_moves"
- name: "hooks"
  description: "Operations about hooks"
- name: "usage_data"
  description: "Operations about usage_data"
- name: "metrics"
  description: "Operations about metrics"
- name: "user"
  description: "Operations about users"
- name: "user_counts"
  description: "Operations about user_counts"
- name: "application"
  description: "Operations about applications"
- name: "import"
  description: "Operations about imports"
- name: "slack"
  description: "Operations about slacks"
- name: "topics"
  description: "Operations about topics"
- name: "access_requests"
  description: "Operations related to access requests"
- name: "ci_lint"
  description: "Operations related to linting a CI config file"
- name: "ci_resource_groups"
  description: "Operations to manage job concurrency with resource groups"
- name: "ci_variables"
  description: "Operations related to CI/CD variables"
- name: "cluster_agents"
  description: "Operations related to the GitLab agent for Kubernetes"
- name: "clusters"
  description: "Operations related to clusters"
- name: "composer_packages"
  description: "Operations related to Composer packages"
- name: "conan_packages"
  description: "Operations related to Conan packages"
- name: "container_registry"
  description: "Operations related to container registry"
- name: "container_registry_event"
  description: "Operations related to container registry events"
- name: "debian_distribution"
  description: "Operations related to Debian Linux distributions"
- name: "debian_packages"
  description: "Operations related to Debian Linux packages"
- name: "dependency_proxy"
  description: "Operations to manage dependency proxy for a groups"
- name: "deploy_keys"
  description: "Operations related to deploy keys"
- name: "deploy_tokens"
  description: "Operations related to deploy tokens"
- name: "deployments"
  description: "Operations related to deployments"
- name: "dora_metrics"
  description: "Operations related to DevOps Research and Assessment (DORA) key metrics"
- name: "environments"
  description: "Operations related to environments"
- name: "error_tracking_client_keys"
  description: "Operations related to error tracking client keys"
- name: "error_tracking_project_settings"
  description: "Operations related to error tracking project settings"
- name: "feature_flags_user_lists"
  description: "Operations related to accessing GitLab feature flag user lists"
- name: "feature_flags"
  description: "Operations related to feature flags"
- name: "features"
  description: "Operations related to managing Flipper-based feature flags"
- name: "freeze_periods"
  description: "Operations related to deploy freeze periods"
- name: "generic_packages"
  description: "Operations related to Generic packages"
- name: "geo"
  description: "Operations related to Geo"
- name: "geo_nodes"
  description: "Operations related Geo Nodes"
- name: "go_proxy"
  description: "Operations related to Go Proxy"
- name: "group_export"
  description: "Operations related to exporting groups"
- name: "group_import"
  description: "Operations related to importing groups"
- name: "group_packages"
  description: "Operations related to group packages"
- name: "helm_packages"
  description: "Operations related to Helm packages"
- name: "integrations"
  description: "Operations related to integrations"
- name: "issue_links"
  description: "Operations related to issue links"
- name: "jira_connect_subscriptions"
  description: "Operations related to JiraConnect subscriptions"
- name: "maven_packages"
  description: "Operations related to Maven packages"
- name: "merge_requests"
  description: "Operations related to merge requests"
- name: "metadata"
  description: "Operations related to metadata of the GitLab instance"
- name: "ml_model_registry"
  description: "Operations related to Model registry"
- name: "npm_packages"
  description: "Operations related to NPM packages"
- name: "nuget_packages"
  description: "Operations related to Nuget packages"
- name: "package_files"
  description: "Operations about package files"
- name: "plan_limits"
  description: "Operations related to plan limits"
- name: "project_export"
  description: "Operations related to exporting projects"
- name: "project_hooks"
  description: "Operations related to project hooks"
- name: "project_import"
  description: "Operations related to importing projects"
- name: "project_import_bitbucket"
  description: "Operations related to importing BitBucket projects"
- name: "project_import_github"
  description: "Operations related to importing GitHub projects"
- name: "project_packages"
  description: "Operations related to project packages"
- name: "projects"
  description: "Operations related to projects"
- name: "protected environments"
  description: "Operations related to protected environments"
- name: "pypi_packages"
  description: "Operations related to PyPI packages"
- name: "release_links"
  description: "Operations related to release assets (links)"
- name: "releases"
  description: "Operations related to releases"
- name: "resource_milestone_events"
  description: "Operations about resource milestone events"
- name: "rpm_packages"
  description: "Operations related to RPM packages"
- name: "rubygem_packages"
  description: "Operations related to RubyGems"
- name: "suggestions"
  description: "Operations related to suggestions"
- name: "system_hooks"
  description: "Operations related to system hooks"
- name: "terraform_state"
  description: "Operations related to Terraform state files"
- name: "terraform_registry"
  description: "Operations related to the Terraform module registry"
- name: "unleash_api"
  description: "Operations related to Unleash API"
produces:
- "application/json"
paths:
  /api/v4/groups/{id}/access_requests:
    get:
      tags:
      - "access_requests"
      summary: "Gets a list of access requests for a group."
      description: "This feature was introduced in GitLab 8.11."
      operationId: "getApiV4GroupsIdAccessRequests"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Gets a list of access requests for a group."
          schema:
            $ref: "#/definitions/API_Entities_AccessRequester"
    post:
      tags:
      - "access_requests"
      summary: "Requests access for the authenticated user to a group."
      description: "This feature was introduced in GitLab 8.11."
      operationId: "postApiV4GroupsIdAccessRequests"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "successful operation"
          examples:
            successfull_response:
              id: 1
              username: "raymond_smith"
              name: "Raymond Smith"
              state: "active"
              created_at: "2012-10-22T14:13:35Z"
              access_level: 20
          schema:
            $ref: "#/definitions/API_Entities_AccessRequester"
  /api/v4/groups/{id}/access_requests/{user_id}/approve:
    put:
      tags:
      - "access_requests"
      summary: "Approves an access request for the given user."
      description: "This feature was introduced in GitLab 8.11."
      operationId: "putApiV4GroupsIdAccessRequestsUserIdApprove"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the access requester"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - in: "body"
        name: "putApiV4GroupsIdAccessRequestsUserIdApprove"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdAccessRequestsUserIdApprove"
        x-exportParamName: "PutApiV4GroupsIdAccessRequestsUserIdApprove"
      responses:
        "200":
          description: "successful operation"
          examples:
            successfull_response:
              id: 1
              username: "raymond_smith"
              name: "Raymond Smith"
              state: "active"
              created_at: "2012-10-22T14:13:35Z"
              access_level: 20
          schema:
            $ref: "#/definitions/API_Entities_AccessRequester"
  /api/v4/groups/{id}/access_requests/{user_id}:
    delete:
      tags:
      - "access_requests"
      summary: "Denies an access request for the given user."
      description: "This feature was introduced in GitLab 8.11."
      operationId: "deleteApiV4GroupsIdAccessRequestsUserId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the access requester"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      responses:
        "204":
          description: "Denies an access request for the given user."
  /api/v4/groups/{id}/badges:
    get:
      tags:
      - "badges"
      summary: "Gets a list of group badges viewable by the authenticated user."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "getApiV4GroupsIdBadges"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "name"
        in: "query"
        description: "Name for the badge"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Gets a list of group badges viewable by the authenticated\
            \ user."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Badge"
    post:
      tags:
      - "badges"
      summary: "Adds a badge to a group."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "postApiV4GroupsIdBadges"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdBadges"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdBadges"
        x-exportParamName: "PostApiV4GroupsIdBadges"
      responses:
        "201":
          description: "Adds a badge to a group."
          schema:
            $ref: "#/definitions/API_Entities_Badge"
  /api/v4/groups/{id}/badges/render:
    get:
      tags:
      - "badges"
      summary: "Preview a badge from a group."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "getApiV4GroupsIdBadgesRender"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "link_url"
        in: "query"
        description: "URL of the badge link"
        required: true
        type: "string"
        x-exportParamName: "LinkUrl"
      - name: "image_url"
        in: "query"
        description: "URL of the badge image"
        required: true
        type: "string"
        x-exportParamName: "ImageUrl"
      responses:
        "200":
          description: "Preview a badge from a group."
          schema:
            $ref: "#/definitions/API_Entities_BasicBadgeDetails"
  /api/v4/groups/{id}/badges/{badge_id}:
    get:
      tags:
      - "badges"
      summary: "Gets a badge of a group."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "getApiV4GroupsIdBadgesBadgeId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "badge_id"
        in: "path"
        description: "The badge ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BadgeId"
      responses:
        "200":
          description: "Gets a badge of a group."
          schema:
            $ref: "#/definitions/API_Entities_Badge"
    put:
      tags:
      - "badges"
      summary: "Updates a badge of a group."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "putApiV4GroupsIdBadgesBadgeId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "badge_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BadgeId"
      - in: "body"
        name: "putApiV4GroupsIdBadgesBadgeId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdBadgesBadgeId"
        x-exportParamName: "PutApiV4GroupsIdBadgesBadgeId"
      responses:
        "200":
          description: "Updates a badge of a group."
          schema:
            $ref: "#/definitions/API_Entities_Badge"
    delete:
      tags:
      - "badges"
      summary: "Removes a badge from the group."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "deleteApiV4GroupsIdBadgesBadgeId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "badge_id"
        in: "path"
        description: "The badge ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BadgeId"
      responses:
        "204":
          description: "Removes a badge from the group."
  /api/v4/groups/{id}/custom_attributes:
    get:
      tags:
      - "groups"
      description: "Get all custom attributes on a group"
      operationId: "getApiV4GroupsIdCustomAttributes"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get all custom attributes on a group"
          schema:
            $ref: "#/definitions/API_Entities_CustomAttribute"
  /api/v4/groups/{id}/custom_attributes/{key}:
    get:
      tags:
      - "groups"
      description: "Get a custom attribute on a group"
      operationId: "getApiV4GroupsIdCustomAttributesKey"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the custom attribute"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a custom attribute on a group"
          schema:
            $ref: "#/definitions/API_Entities_CustomAttribute"
    put:
      tags:
      - "groups"
      description: "Set a custom attribute on a group"
      operationId: "putApiV4GroupsIdCustomAttributesKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the custom attribute"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4GroupsIdCustomAttributesKey"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdCustomAttributesKey"
        x-exportParamName: "PutApiV4GroupsIdCustomAttributesKey"
      responses:
        "200":
          description: "Set a custom attribute on a group"
    delete:
      tags:
      - "groups"
      description: "Delete a custom attribute on a group"
      operationId: "deleteApiV4GroupsIdCustomAttributesKey"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the custom attribute"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Delete a custom attribute on a group"
  /api/v4/groups:
    get:
      tags:
      - "groups"
      description: "Get a groups list"
      operationId: "getApiV4Groups"
      produces:
      - "application/json"
      parameters:
      - name: "statistics"
        in: "query"
        description: "Include project statistics"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Statistics"
        x-optionalDataType: "Bool"
      - name: "skip_groups"
        in: "query"
        description: "Array of group ids to exclude from list"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "SkipGroups"
      - name: "all_available"
        in: "query"
        description: "Show all group that you have access to"
        required: false
        type: "boolean"
        x-exportParamName: "AllAvailable"
        x-optionalDataType: "Bool"
      - name: "visibility"
        in: "query"
        description: "Limit by visibility"
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "Visibility"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Search for a specific group"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "owned"
        in: "query"
        description: "Limit by owned by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Owned"
        x-optionalDataType: "Bool"
      - name: "order_by"
        in: "query"
        description: "Order by name, path, id or similarity if searching"
        required: false
        type: "string"
        default: "name"
        enum:
        - "name"
        - "path"
        - "id"
        - "similarity"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Sort by asc (ascending) or desc (descending)"
        required: false
        type: "string"
        default: "asc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "min_access_level"
        in: "query"
        description: "Minimum access level of authenticated user"
        required: false
        type: "integer"
        format: "int32"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        x-exportParamName: "MinAccessLevel"
        x-optionalDataType: "Int32"
      - name: "top_level_only"
        in: "query"
        description: "Only include top level groups"
        required: false
        type: "boolean"
        x-exportParamName: "TopLevelOnly"
        x-optionalDataType: "Bool"
      - name: "repository_storage"
        in: "query"
        description: "Filter by repository storage used by the group"
        required: false
        type: "string"
        x-exportParamName: "RepositoryStorage"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a groups list"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Group"
    post:
      tags:
      - "groups"
      description: "Create a group. Available only for users who can create groups."
      operationId: "postApiV4Groups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4Groups"
        required: true
        schema:
          $ref: "#/definitions/postApiV4Groups"
        x-exportParamName: "PostApiV4Groups"
      responses:
        "201":
          description: "Create a group. Available only for users who can create groups."
          schema:
            $ref: "#/definitions/API_Entities_Group"
  /api/v4/groups/{id}:
    get:
      tags:
      - "groups"
      description: "Get a single group, with containing projects."
      operationId: "getApiV4GroupsId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      - name: "with_projects"
        in: "query"
        description: "Omit project details"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "WithProjects"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a single group, with containing projects."
          schema:
            $ref: "#/definitions/API_Entities_GroupDetail"
    put:
      tags:
      - "groups"
      description: "Update a group. Available only for users who can administrate\
        \ groups."
      operationId: "putApiV4GroupsId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4GroupsId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsId"
        x-exportParamName: "PutApiV4GroupsId"
      responses:
        "200":
          description: "Update a group. Available only for users who can administrate\
            \ groups."
          schema:
            $ref: "#/definitions/API_Entities_Group"
    delete:
      tags:
      - "groups"
      description: "Remove a group."
      operationId: "deleteApiV4GroupsId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Remove a group."
  /api/v4/groups/{id}/projects:
    get:
      tags:
      - "groups"
      description: "Get a list of projects in this group."
      operationId: "getApiV4GroupsIdProjects"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "archived"
        in: "query"
        description: "Limit by archived status"
        required: false
        type: "boolean"
        x-exportParamName: "Archived"
        x-optionalDataType: "Bool"
      - name: "visibility"
        in: "query"
        description: "Limit by visibility"
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "Visibility"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Return list of authorized projects matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "order_by"
        in: "query"
        description: "Return projects ordered by field"
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "id"
        - "name"
        - "path"
        - "created_at"
        - "updated_at"
        - "last_activity_at"
        - "similarity"
        - "star_count"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return projects sorted in ascending and descending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "simple"
        in: "query"
        description: "Return only the ID, URL, name, and path of each project"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Simple"
        x-optionalDataType: "Bool"
      - name: "owned"
        in: "query"
        description: "Limit by owned by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Owned"
        x-optionalDataType: "Bool"
      - name: "starred"
        in: "query"
        description: "Limit by starred status"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Starred"
        x-optionalDataType: "Bool"
      - name: "with_issues_enabled"
        in: "query"
        description: "Limit by enabled issues feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithIssuesEnabled"
        x-optionalDataType: "Bool"
      - name: "with_merge_requests_enabled"
        in: "query"
        description: "Limit by enabled merge requests feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithMergeRequestsEnabled"
        x-optionalDataType: "Bool"
      - name: "with_shared"
        in: "query"
        description: "Include projects shared to this group"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "WithShared"
        x-optionalDataType: "Bool"
      - name: "include_subgroups"
        in: "query"
        description: "Includes projects in subgroups of this group"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeSubgroups"
        x-optionalDataType: "Bool"
      - name: "include_ancestor_groups"
        in: "query"
        description: "Includes projects in ancestors of this group"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeAncestorGroups"
        x-optionalDataType: "Bool"
      - name: "min_access_level"
        in: "query"
        description: "Limit by minimum access level of authenticated user on projects"
        required: false
        type: "integer"
        format: "int32"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        x-exportParamName: "MinAccessLevel"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      - name: "with_security_reports"
        in: "query"
        description: "Return only projects having security report artifacts present"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithSecurityReports"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a list of projects in this group."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Project"
  /api/v4/groups/{id}/projects/shared:
    get:
      tags:
      - "groups"
      description: "Get a list of shared projects in this group"
      operationId: "getApiV4GroupsIdProjectsShared"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "archived"
        in: "query"
        description: "Limit by archived status"
        required: false
        type: "boolean"
        x-exportParamName: "Archived"
        x-optionalDataType: "Bool"
      - name: "visibility"
        in: "query"
        description: "Limit by visibility"
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "Visibility"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Return list of authorized projects matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "order_by"
        in: "query"
        description: "Return projects ordered by field"
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "id"
        - "name"
        - "path"
        - "created_at"
        - "updated_at"
        - "last_activity_at"
        - "star_count"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return projects sorted in ascending and descending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "simple"
        in: "query"
        description: "Return only the ID, URL, name, and path of each project"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Simple"
        x-optionalDataType: "Bool"
      - name: "starred"
        in: "query"
        description: "Limit by starred status"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Starred"
        x-optionalDataType: "Bool"
      - name: "with_issues_enabled"
        in: "query"
        description: "Limit by enabled issues feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithIssuesEnabled"
        x-optionalDataType: "Bool"
      - name: "with_merge_requests_enabled"
        in: "query"
        description: "Limit by enabled merge requests feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithMergeRequestsEnabled"
        x-optionalDataType: "Bool"
      - name: "min_access_level"
        in: "query"
        description: "Limit by minimum access level of authenticated user on projects"
        required: false
        type: "integer"
        format: "int32"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        x-exportParamName: "MinAccessLevel"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a list of shared projects in this group"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Project"
  /api/v4/groups/{id}/subgroups:
    get:
      tags:
      - "groups"
      description: "Get a list of subgroups in this group."
      operationId: "getApiV4GroupsIdSubgroups"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "statistics"
        in: "query"
        description: "Include project statistics"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Statistics"
        x-optionalDataType: "Bool"
      - name: "skip_groups"
        in: "query"
        description: "Array of group ids to exclude from list"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "SkipGroups"
      - name: "all_available"
        in: "query"
        description: "Show all group that you have access to"
        required: false
        type: "boolean"
        x-exportParamName: "AllAvailable"
        x-optionalDataType: "Bool"
      - name: "visibility"
        in: "query"
        description: "Limit by visibility"
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "Visibility"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Search for a specific group"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "owned"
        in: "query"
        description: "Limit by owned by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Owned"
        x-optionalDataType: "Bool"
      - name: "order_by"
        in: "query"
        description: "Order by name, path, id or similarity if searching"
        required: false
        type: "string"
        default: "name"
        enum:
        - "name"
        - "path"
        - "id"
        - "similarity"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Sort by asc (ascending) or desc (descending)"
        required: false
        type: "string"
        default: "asc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "min_access_level"
        in: "query"
        description: "Minimum access level of authenticated user"
        required: false
        type: "integer"
        format: "int32"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        x-exportParamName: "MinAccessLevel"
        x-optionalDataType: "Int32"
      - name: "top_level_only"
        in: "query"
        description: "Only include top level groups"
        required: false
        type: "boolean"
        x-exportParamName: "TopLevelOnly"
        x-optionalDataType: "Bool"
      - name: "repository_storage"
        in: "query"
        description: "Filter by repository storage used by the group"
        required: false
        type: "string"
        x-exportParamName: "RepositoryStorage"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a list of subgroups in this group."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Group"
  /api/v4/groups/{id}/descendant_groups:
    get:
      tags:
      - "groups"
      description: "Get a list of descendant groups of this group."
      operationId: "getApiV4GroupsIdDescendantGroups"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "statistics"
        in: "query"
        description: "Include project statistics"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Statistics"
        x-optionalDataType: "Bool"
      - name: "skip_groups"
        in: "query"
        description: "Array of group ids to exclude from list"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "SkipGroups"
      - name: "all_available"
        in: "query"
        description: "Show all group that you have access to"
        required: false
        type: "boolean"
        x-exportParamName: "AllAvailable"
        x-optionalDataType: "Bool"
      - name: "visibility"
        in: "query"
        description: "Limit by visibility"
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "Visibility"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Search for a specific group"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "owned"
        in: "query"
        description: "Limit by owned by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Owned"
        x-optionalDataType: "Bool"
      - name: "order_by"
        in: "query"
        description: "Order by name, path, id or similarity if searching"
        required: false
        type: "string"
        default: "name"
        enum:
        - "name"
        - "path"
        - "id"
        - "similarity"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Sort by asc (ascending) or desc (descending)"
        required: false
        type: "string"
        default: "asc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "min_access_level"
        in: "query"
        description: "Minimum access level of authenticated user"
        required: false
        type: "integer"
        format: "int32"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        x-exportParamName: "MinAccessLevel"
        x-optionalDataType: "Int32"
      - name: "top_level_only"
        in: "query"
        description: "Only include top level groups"
        required: false
        type: "boolean"
        x-exportParamName: "TopLevelOnly"
        x-optionalDataType: "Bool"
      - name: "repository_storage"
        in: "query"
        description: "Filter by repository storage used by the group"
        required: false
        type: "string"
        x-exportParamName: "RepositoryStorage"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a list of descendant groups of this group."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Group"
  /api/v4/groups/{id}/projects/{project_id}:
    post:
      tags:
      - "groups"
      description: "Transfer a project to the group namespace. Available only for\
        \ admin."
      operationId: "postApiV4GroupsIdProjectsProjectId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "project_id"
        in: "path"
        description: "The ID or path of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        "201":
          description: "Transfer a project to the group namespace. Available only\
            \ for admin."
          schema:
            $ref: "#/definitions/API_Entities_GroupDetail"
  /api/v4/groups/{id}/transfer_locations:
    get:
      tags:
      - "groups"
      description: "Get the groups to where the current group can be transferred to"
      operationId: "getApiV4GroupsIdTransferLocations"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "search"
        in: "query"
        description: "Return list of namespaces matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the groups to where the current group can be transferred\
            \ to"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Group"
  /api/v4/groups/{id}/transfer:
    post:
      tags:
      - "groups"
      description: "Transfer a group to a new parent group or promote a subgroup to\
        \ a root group"
      operationId: "postApiV4GroupsIdTransfer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdTransfer"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdTransfer"
        x-exportParamName: "PostApiV4GroupsIdTransfer"
      responses:
        "201":
          description: "Transfer a group to a new parent group or promote a subgroup\
            \ to a root group"
  /api/v4/groups/{id}/share:
    post:
      tags:
      - "groups"
      description: "Share a group with a group"
      operationId: "postApiV4GroupsIdShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdShare"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdShare"
        x-exportParamName: "PostApiV4GroupsIdShare"
      responses:
        "201":
          description: "Share a group with a group"
          schema:
            $ref: "#/definitions/API_Entities_GroupDetail"
  /api/v4/groups/{id}/share/{group_id}:
    delete:
      tags:
      - "groups"
      operationId: "deleteApiV4GroupsIdShareGroupId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "group_id"
        in: "path"
        description: "The ID of the shared group"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "GroupId"
      responses:
        "204":
          description: "deleted Share"
  /api/v4/groups/{id}/ldap_sync:
    post:
      tags:
      - "groups"
      description: "Sync a group with LDAP."
      operationId: "postApiV4GroupsIdLdapSync"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Sync a group with LDAP."
  /api/v4/groups/{id}/restore:
    post:
      tags:
      - "groups"
      description: "Restore a group."
      operationId: "postApiV4GroupsIdRestore"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Restore a group."
  /api/v4/groups/{id}/provisioned_users:
    get:
      tags:
      - "groups"
      description: "Get a list of users provisioned by the group"
      operationId: "getApiV4GroupsIdProvisionedUsers"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "Return a single user with a specific username"
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Search users by name, email or username"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "active"
        in: "query"
        description: "Return only active users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Active"
        x-optionalDataType: "Bool"
      - name: "blocked"
        in: "query"
        description: "Return only blocked users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Blocked"
        x-optionalDataType: "Bool"
      - name: "created_after"
        in: "query"
        description: "Return users created after the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Return users created before the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a list of users provisioned by the group"
          schema:
            $ref: "#/definitions/API_Entities_UserPublic"
  /api/v4/groups/{id}/users:
    get:
      tags:
      - "groups"
      description: "Get a list of users for the group"
      operationId: "getApiV4GroupsIdUsers"
      produces:
      - "application/json"
      parameters:
      - name: "search"
        in: "query"
        description: "Search users by name, email or username"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "active"
        in: "query"
        description: "Filters only active users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Active"
        x-optionalDataType: "Bool"
      - name: "include_saml_users"
        in: "query"
        description: "Return users with a SAML identity in this group"
        required: false
        type: "boolean"
        x-exportParamName: "IncludeSamlUsers"
        x-optionalDataType: "Bool"
      - name: "include_service_accounts"
        in: "query"
        description: "Return service accounts owned by this group"
        required: false
        type: "boolean"
        x-exportParamName: "IncludeServiceAccounts"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a list of users for the group"
          schema:
            $ref: "#/definitions/API_Entities_UserPublic"
        "400":
          description: "Bad request"
        "403":
          description: "Forbidden"
        "404":
          description: "404 Not Found"
  /api/v4/groups/{id}/ssh_certificates:
    get:
      tags:
      - "groups"
      summary: "Get a list of Groups::SshCertificate for a Group."
      description: "Get a list of ssh certificates created for a group."
      operationId: "getApiV4GroupsIdSshCertificates"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a list of ssh certificates created for a group."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EE_API_Entities_SshCertificate"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "404 Not Found"
    post:
      tags:
      - "groups"
      summary: "Add a Groups::SshCertificate."
      description: "Create a ssh certificate for a group."
      operationId: "postApiV4GroupsIdSshCertificates"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdSshCertificates"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdSshCertificates"
        x-exportParamName: "PostApiV4GroupsIdSshCertificates"
      responses:
        "201":
          description: "Create a ssh certificate for a group."
          schema:
            $ref: "#/definitions/EE_API_Entities_SshCertificate"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/groups/{id}/ssh_certificates/{ssh_certificates_id}:
    delete:
      tags:
      - "groups"
      summary: "Removes an ssh certificate from a group."
      description: "Removes a Groups::SshCertificate"
      operationId: "deleteApiV4GroupsIdSshCertificatesSshCertificatesId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "ssh_certificates_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SshCertificatesId"
      responses:
        "204":
          description: "Removes an ssh certificate from a group."
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "422":
          description: "Unprocessable entity"
  /api/v4/groups/{id}/runners:
    get:
      tags:
      - "runners"
      - "groups"
      summary: "List group's runners"
      description: "List all runners available in the group as well as its ancestor\
        \ groups, including any allowed shared runners."
      operationId: "getApiV4GroupsIdRunners"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "type"
        in: "query"
        description: "The type of runners to return"
        required: false
        type: "string"
        enum:
        - "instance_type"
        - "group_type"
        - "project_type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "paused"
        in: "query"
        description: "Whether to include only runners that are accepting or ignoring\
          \ new jobs"
        required: false
        type: "boolean"
        x-exportParamName: "Paused"
        x-optionalDataType: "Bool"
      - name: "status"
        in: "query"
        description: "The status of runners to return"
        required: false
        type: "string"
        enum:
        - "active"
        - "paused"
        - "online"
        - "offline"
        - "never_contacted"
        - "stale"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "tag_list"
        in: "query"
        description: "A list of runner tags"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TagList"
      - name: "version_prefix"
        in: "query"
        description: "The version prefix of runners to return"
        required: false
        type: "string"
        x-exportParamName: "VersionPrefix"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get runners available for group"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Runner"
        "400":
          description: "Scope contains invalid value"
        "403":
          description: "Forbidden"
  /api/v4/groups/{id}/runners/reset_registration_token:
    post:
      tags:
      - "runners"
      - "groups"
      summary: "Reset the runner registration token for a group"
      description: "Reset runner registration token"
      operationId: "postApiV4GroupsIdRunnersResetRegistrationToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Reset runner registration token"
          schema:
            $ref: "#/definitions/API_Entities_Ci_ResetTokenResult"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Group Not Found"
  /api/v4/groups/{id}/dependency_proxy/cache:
    delete:
      tags:
      - "dependency_proxy"
      summary: "Purge the dependency proxy for a group"
      description: "Schedules for deletion the cached manifests and blobs for a group.This\
        \ endpoint requires the Owner role for the group."
      operationId: "deleteApiV4GroupsIdDependencyProxyCache"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "202":
          description: "Purge the dependency proxy for a group"
        "401":
          description: "Unauthorized"
  /api/v4/groups/{id}/deploy_tokens:
    get:
      tags:
      - "deploy_tokens"
      summary: "List group deploy tokens"
      description: "Get a list of a group's deploy tokens. This feature was introduced\
        \ in GitLab 12.9."
      operationId: "getApiV4GroupsIdDeployTokens"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "active"
        in: "query"
        description: "Limit by active status"
        required: false
        type: "boolean"
        x-exportParamName: "Active"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "List group deploy tokens"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_DeployToken"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    post:
      tags:
      - "deploy_tokens"
      summary: "Create a group deploy token"
      description: "Creates a new deploy token for a group. This feature was introduced\
        \ in GitLab 12.9."
      operationId: "postApiV4GroupsIdDeployTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdDeployTokens"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdDeployTokens"
        x-exportParamName: "PostApiV4GroupsIdDeployTokens"
      responses:
        "201":
          description: "Create a group deploy token"
          schema:
            $ref: "#/definitions/API_Entities_DeployTokenWithToken"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/groups/{id}/deploy_tokens/{token_id}:
    get:
      tags:
      - "deploy_tokens"
      summary: "Get a group deploy token"
      description: "Get a single group's deploy token by ID. This feature was introduced\
        \ in GitLab 14.9. "
      operationId: "getApiV4GroupsIdDeployTokensTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "token_id"
        in: "path"
        description: "The ID of the deploy token"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TokenId"
      responses:
        "200":
          description: "Get a group deploy token"
          schema:
            $ref: "#/definitions/API_Entities_DeployToken"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "deploy_tokens"
      summary: "Delete a group deploy token"
      description: "Removes a deploy token from the group. This feature was introduced\
        \ in GitLab 12.9."
      operationId: "deleteApiV4GroupsIdDeployTokensTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "token_id"
        in: "path"
        description: "The ID of the deploy token"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TokenId"
      responses:
        "204":
          description: "Delete a group deploy token"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/groups/{id}/avatar:
    get:
      tags:
      - "group_avatar"
      summary: "Download the group avatar"
      description: "This feature was introduced in GitLab 14.0"
      operationId: "getApiV4GroupsIdAvatar"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Download the group avatar"
  /api/v4/groups/{id}/clusters:
    get:
      tags:
      - "clusters"
      summary: "List group clusters"
      description: "This feature was introduced in GitLab 12.1. Returns a list of\
        \ group clusters."
      operationId: "getApiV4GroupsIdClusters"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List group clusters"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Cluster"
        "403":
          description: "Forbidden"
  /api/v4/groups/{id}/clusters/{cluster_id}:
    get:
      tags:
      - "clusters"
      summary: "Get a single group cluster"
      description: "This feature was introduced in GitLab 12.1. Gets a single group\
        \ cluster."
      operationId: "getApiV4GroupsIdClustersClusterId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "cluster_id"
        in: "path"
        description: "The cluster ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClusterId"
      responses:
        "200":
          description: "Get a single group cluster"
          schema:
            $ref: "#/definitions/API_Entities_ClusterGroup"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    put:
      tags:
      - "clusters"
      summary: "Edit group cluster"
      description: "This feature was introduced in GitLab 12.1. Updates an existing\
        \ group cluster."
      operationId: "putApiV4GroupsIdClustersClusterId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "cluster_id"
        in: "path"
        description: "The cluster ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClusterId"
      - in: "body"
        name: "putApiV4GroupsIdClustersClusterId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdClustersClusterId"
        x-exportParamName: "PutApiV4GroupsIdClustersClusterId"
      responses:
        "200":
          description: "Edit group cluster"
          schema:
            $ref: "#/definitions/API_Entities_ClusterGroup"
        "400":
          description: "Validation error"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "clusters"
      summary: "Delete group cluster"
      description: "This feature was introduced in GitLab 12.1. Deletes an existing\
        \ group cluster. Does not remove existing resources within the connected Kubernetes\
        \ cluster."
      operationId: "deleteApiV4GroupsIdClustersClusterId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "cluster_id"
        in: "path"
        description: "The Cluster ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClusterId"
      responses:
        "204":
          description: "Delete group cluster"
          schema:
            $ref: "#/definitions/API_Entities_ClusterGroup"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/groups/{id}/clusters/user:
    post:
      tags:
      - "clusters"
      summary: "Add existing cluster to group"
      description: "This feature was introduced in GitLab 12.1. Adds an existing Kubernetes\
        \ cluster to the group."
      operationId: "postApiV4GroupsIdClustersUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdClustersUser"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdClustersUser"
        x-exportParamName: "PostApiV4GroupsIdClustersUser"
      responses:
        "201":
          description: "Add existing cluster to group"
          schema:
            $ref: "#/definitions/API_Entities_ClusterGroup"
        "400":
          description: "Validation error"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/groups/{id}/registry/repositories:
    get:
      tags:
      - "container_registry"
      summary: "List registry repositories within a group"
      description: "Get a list of registry repositories in a group. This feature was\
        \ introduced in GitLab 12.2."
      operationId: "getApiV4GroupsIdRegistryRepositories"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group accessible by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List registry repositories within a group"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ContainerRegistry_Repository"
        "401":
          description: "Unauthorized"
        "404":
          description: "Group Not Found"
  /api/v4/groups/{id}/export/download:
    get:
      tags:
      - "group_export"
      summary: "Download export"
      description: "This feature was introduced in GitLab 12.5."
      operationId: "getApiV4GroupsIdExportDownload"
      produces:
      - "application/octet-stream"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Download export"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/groups/{id}/export:
    post:
      tags:
      - "group_export"
      summary: "Start export"
      description: "This feature was introduced in GitLab 12.5."
      operationId: "postApiV4GroupsIdExport"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "202":
          description: "Start export"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "429":
          description: "Too many requests"
        "503":
          description: "Service unavailable"
  /api/v4/groups/{id}/export_relations:
    post:
      tags:
      - "group_export"
      summary: "Start relations export"
      description: "This feature was introduced in GitLab 13.12"
      operationId: "postApiV4GroupsIdExportRelations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdExportRelations"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdExportRelations"
        x-exportParamName: "PostApiV4GroupsIdExportRelations"
      responses:
        "202":
          description: "Start relations export"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/groups/{id}/export_relations/download:
    get:
      tags:
      - "group_export"
      summary: "Download relations export"
      description: "This feature was introduced in GitLab 13.12"
      operationId: "getApiV4GroupsIdExportRelationsDownload"
      produces:
      - "application/octet-stream"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "relation"
        in: "query"
        description: "Group relation name"
        required: true
        type: "string"
        x-exportParamName: "Relation"
      - name: "batched"
        in: "query"
        description: "Whether to download in batches"
        required: false
        type: "boolean"
        x-exportParamName: "Batched"
        x-optionalDataType: "Bool"
      - name: "batch_number"
        in: "query"
        description: "Batch number to download"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchNumber"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Download relations export"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/groups/{id}/export_relations/status:
    get:
      tags:
      - "group_export"
      summary: "Relations export status"
      description: "This feature was introduced in GitLab 13.12"
      operationId: "getApiV4GroupsIdExportRelationsStatus"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "relation"
        in: "query"
        description: "Group relation name"
        required: false
        type: "string"
        x-exportParamName: "Relation"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Relations export status"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BulkImports_ExportStatus"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/groups/import/authorize:
    post:
      tags:
      - "group_import"
      summary: "Workhorse authorize the group import upload"
      description: "This feature was introduced in GitLab 12.8"
      operationId: "postApiV4GroupsImportAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "201":
          description: "Workhorse authorize the group import upload"
  /api/v4/groups/import:
    post:
      tags:
      - "group_import"
      summary: "Create a new group import"
      description: "This feature was introduced in GitLab 12.8"
      operationId: "postApiV4GroupsImport"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "path"
        in: "formData"
        description: "Group path"
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "name"
        in: "formData"
        description: "Group name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "file"
        in: "formData"
        description: "The group export file to be imported"
        required: true
        type: "file"
        x-exportParamName: "File"
      - name: "parent_id"
        in: "formData"
        description: "The ID of the parent group that the group will be imported into.\
          \ Defaults to the current user's namespace."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ParentId"
        x-optionalDataType: "Int32"
      - name: "organization_id"
        in: "formData"
        description: "The ID of the organization that the group will be part of. "
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OrganizationId"
        x-optionalDataType: "Int32"
      responses:
        "202":
          description: "Create a new group import"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "503":
          description: "Service unavailable"
  /api/v4/groups/{id}/packages:
    get:
      tags:
      - "group_packages"
      summary: "List packages within a group"
      description: "Get a list of project packages at the group level. This feature\
        \ was introduced in GitLab 12.5"
      operationId: "getApiV4GroupsIdPackages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "exclude_subgroups"
        in: "query"
        description: "Determines if subgroups should be excluded"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExcludeSubgroups"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "order_by"
        in: "query"
        description: "Return packages ordered by `created_at`, `name`, `version` or\
          \ `type` fields."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "created_at"
        - "name"
        - "version"
        - "type"
        - "project_path"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return packages sorted in `asc` or `desc` order."
        required: false
        type: "string"
        default: "asc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "package_type"
        in: "query"
        description: "Return packages of a certain type"
        required: false
        type: "string"
        enum:
        - "maven"
        - "npm"
        - "conan"
        - "nuget"
        - "pypi"
        - "composer"
        - "generic"
        - "golang"
        - "debian"
        - "rubygems"
        - "helm"
        - "terraform_module"
        - "rpm"
        - "ml_model"
        x-exportParamName: "PackageType"
        x-optionalDataType: "String"
      - name: "package_name"
        in: "query"
        description: "Return packages with this name"
        required: false
        type: "string"
        x-exportParamName: "PackageName"
        x-optionalDataType: "String"
      - name: "package_version"
        in: "query"
        description: "Return packages with this version"
        required: false
        type: "string"
        x-exportParamName: "PackageVersion"
        x-optionalDataType: "String"
      - name: "include_versionless"
        in: "query"
        description: "Returns packages without a version"
        required: false
        type: "boolean"
        x-exportParamName: "IncludeVersionless"
        x-optionalDataType: "Bool"
      - name: "status"
        in: "query"
        description: "Return packages with specified status"
        required: false
        type: "string"
        enum:
        - "default"
        - "hidden"
        - "processing"
        - "error"
        - "pending_destruction"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List packages within a group"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Package"
        "401":
          description: "Unauthorized"
        "404":
          description: "Group Not Found"
  /api/v4/groups/{id}/variables:
    get:
      tags:
      - "ci_variables"
      description: "Get a list of group-level variables"
      operationId: "getApiV4GroupsIdVariables"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group or URL-encoded path of the group owned by\
          \ the authenticated\n      user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a list of group-level variables"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
    post:
      tags:
      - "ci_variables"
      description: "Create a new variable in a group"
      operationId: "postApiV4GroupsIdVariables"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group or URL-encoded path of the group owned by\
          \ the authenticated\n      user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdVariables"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdVariables"
        x-exportParamName: "PostApiV4GroupsIdVariables"
      responses:
        "201":
          description: "Create a new variable in a group"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "400":
          description: "400 Bad Request"
  /api/v4/groups/{id}/variables/{key}:
    get:
      tags:
      - "ci_variables"
      description: "Get the details of a group’s specific variable"
      operationId: "getApiV4GroupsIdVariablesKey"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group or URL-encoded path of the group owned by\
          \ the authenticated\n      user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "path"
        description: "The key of the variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        "200":
          description: "Get the details of a group’s specific variable"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "404":
          description: "Group Variable Not Found"
    put:
      tags:
      - "ci_variables"
      description: "Update an existing variable from a group"
      operationId: "putApiV4GroupsIdVariablesKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group or URL-encoded path of the group owned by\
          \ the authenticated\n      user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "path"
        description: "The key of a variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - in: "body"
        name: "putApiV4GroupsIdVariablesKey"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdVariablesKey"
        x-exportParamName: "PutApiV4GroupsIdVariablesKey"
      responses:
        "200":
          description: "Update an existing variable from a group"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "400":
          description: "400 Bad Request"
        "404":
          description: "Group Variable Not Found"
    delete:
      tags:
      - "ci_variables"
      description: "Delete an existing variable from a group"
      operationId: "deleteApiV4GroupsIdVariablesKey"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group or URL-encoded path of the group owned by\
          \ the authenticated\n      user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "path"
        description: "The key of a variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        "204":
          description: "Delete an existing variable from a group"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "404":
          description: "Group Variable Not Found"
  /api/v4/groups/{id}/invitations:
    get:
      tags:
      - "invitations"
      summary: "Get a list of group or project invitations viewable by the authenticated\
        \ user"
      description: "This feature was introduced in GitLab 13.6"
      operationId: "getApiV4GroupsIdInvitations"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "A query string to search for members"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get a list of group or project invitations viewable by the\
            \ authenticated user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Invitation"
    post:
      tags:
      - "invitations"
      summary: "Invite non-members by email address to a group or project."
      description: "This feature was introduced in GitLab 13.6"
      operationId: "postApiV4GroupsIdInvitations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdInvitations"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdInvitations"
        x-exportParamName: "PostApiV4GroupsIdInvitations"
      responses:
        "201":
          description: "Invite non-members by email address to a group or project."
          schema:
            $ref: "#/definitions/API_Entities_Invitation"
  /api/v4/groups/{id}/invitations/{email}:
    put:
      tags:
      - "invitations"
      description: "Updates a group or project invitation."
      operationId: "putApiV4GroupsIdInvitationsEmail"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "email"
        in: "path"
        description: "The email address of the invitation"
        required: true
        type: "string"
        x-exportParamName: "Email"
      - in: "body"
        name: "putApiV4GroupsIdInvitationsEmail"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdInvitationsEmail"
        x-exportParamName: "PutApiV4GroupsIdInvitationsEmail"
      responses:
        "200":
          description: "Updates a group or project invitation."
          schema:
            $ref: "#/definitions/API_Entities_Invitation"
    delete:
      tags:
      - "invitations"
      description: "Removes an invitation from a group or project."
      operationId: "deleteApiV4GroupsIdInvitationsEmail"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "email"
        in: "path"
        description: "The email address of the invitation"
        required: true
        type: "string"
        x-exportParamName: "Email"
      responses:
        "204":
          description: "Removes an invitation from a group or project."
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "409":
          description: "Could not delete invitation"
  /api/v4/groups/{id}/-/packages/maven/*path/{file_name}:
    get:
      tags:
      - "maven_packages"
      summary: "Download the maven package file at a group level"
      description: "This feature was introduced in GitLab 11.7"
      operationId: "getApiV4GroupsIdPackagesMaven*pathFileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "path"
        in: "query"
        description: "Package path"
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download the maven package file at a group level"
        "302":
          description: "Download the maven package file at a group level"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/members:
    get:
      tags:
      - "members"
      description: "Gets a list of group or project members viewable by the authenticated\
        \ user."
      operationId: "getApiV4GroupsIdMembers"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "query"
        in: "query"
        description: "A query string to search for members"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "user_ids"
        in: "query"
        description: "Array of user ids to look up for membership"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "UserIds"
      - name: "skip_users"
        in: "query"
        description: "Array of user ids to be skipped for membership"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "SkipUsers"
      - name: "show_seat_info"
        in: "query"
        description: "Show seat information for members"
        required: false
        type: "boolean"
        x-exportParamName: "ShowSeatInfo"
        x-optionalDataType: "Bool"
      - name: "with_saml_identity"
        in: "query"
        description: "List only members with linked SAML identity"
        required: false
        type: "boolean"
        x-exportParamName: "WithSamlIdentity"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Gets a list of group or project members viewable by the authenticated\
            \ user."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Member"
    post:
      tags:
      - "members"
      description: "Adds a member to a group or project."
      operationId: "postApiV4GroupsIdMembers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdMembers"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdMembers"
        x-exportParamName: "PostApiV4GroupsIdMembers"
      responses:
        "201":
          description: "Adds a member to a group or project."
          schema:
            $ref: "#/definitions/API_Entities_Member"
  /api/v4/groups/{id}/members/all:
    get:
      tags:
      - "members"
      description: "Gets a list of group or project members viewable by the authenticated\
        \ user, including those who gained membership through ancestor group."
      operationId: "getApiV4GroupsIdMembersAll"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "query"
        in: "query"
        description: "A query string to search for members"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "user_ids"
        in: "query"
        description: "Array of user ids to look up for membership"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "UserIds"
      - name: "show_seat_info"
        in: "query"
        description: "Show seat information for members"
        required: false
        type: "boolean"
        x-exportParamName: "ShowSeatInfo"
        x-optionalDataType: "Bool"
      - name: "state"
        in: "query"
        description: "Filter results by member state"
        required: false
        type: "string"
        enum:
        - "awaiting"
        - "active"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Gets a list of group or project members viewable by the authenticated\
            \ user, including those who gained membership through ancestor group."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Member"
  /api/v4/groups/{id}/members/{user_id}:
    get:
      tags:
      - "members"
      description: "Gets a member of a group or project."
      operationId: "getApiV4GroupsIdMembersUserId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "Gets a member of a group or project."
          schema:
            $ref: "#/definitions/API_Entities_Member"
    put:
      tags:
      - "members"
      description: "Updates a member of a group or project."
      operationId: "putApiV4GroupsIdMembersUserId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the new member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - in: "body"
        name: "putApiV4GroupsIdMembersUserId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdMembersUserId"
        x-exportParamName: "PutApiV4GroupsIdMembersUserId"
      responses:
        "200":
          description: "Updates a member of a group or project."
          schema:
            $ref: "#/definitions/API_Entities_Member"
    delete:
      tags:
      - "members"
      description: "Removes a user from a group or project."
      operationId: "deleteApiV4GroupsIdMembersUserId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - name: "skip_subresources"
        in: "query"
        description: "Flag indicating if the deletion of direct memberships of the\
          \ removed member in subgroups and projects should be skipped"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "SkipSubresources"
        x-optionalDataType: "Bool"
      - name: "unassign_issuables"
        in: "query"
        description: "Flag indicating if the removed member should be unassigned from\
          \ any issues or merge requests within given group or project"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "UnassignIssuables"
        x-optionalDataType: "Bool"
      responses:
        "204":
          description: "Removes a user from a group or project."
  /api/v4/groups/{id}/members/all/{user_id}:
    get:
      tags:
      - "members"
      description: "Gets a member of a group or project, including those who gained\
        \ membership through ancestor group"
      operationId: "getApiV4GroupsIdMembersAllUserId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "Gets a member of a group or project, including those who gained\
            \ membership through ancestor group"
          schema:
            $ref: "#/definitions/API_Entities_Member"
  /api/v4/groups/{id}/members/{user_id}/override:
    post:
      tags:
      - "groups"
      description: "Overrides the access level of an LDAP group member."
      operationId: "postApiV4GroupsIdMembersUserIdOverride"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      responses:
        "201":
          description: "Overrides the access level of an LDAP group member."
          schema:
            $ref: "#/definitions/API_Entities_Member"
    delete:
      tags:
      - "groups"
      description: "Remove an LDAP group member access level override."
      operationId: "deleteApiV4GroupsIdMembersUserIdOverride"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "Remove an LDAP group member access level override."
          schema:
            $ref: "#/definitions/API_Entities_Member"
  /api/v4/groups/{id}/members/{member_id}/approve:
    put:
      tags:
      - "groups"
      description: "Approves a pending member"
      operationId: "putApiV4GroupsIdMembersMemberIdApprove"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "member_id"
        in: "path"
        description: "The ID of the member requiring approval"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MemberId"
      responses:
        "200":
          description: "Approves a pending member"
  /api/v4/groups/{id}/members/approve_all:
    post:
      tags:
      - "groups"
      description: "Approves all pending members"
      operationId: "postApiV4GroupsIdMembersApproveAll"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Approves all pending members"
  /api/v4/groups/{id}/pending_members:
    get:
      tags:
      - "groups"
      description: "Lists all pending members for a group including invited users"
      operationId: "getApiV4GroupsIdPendingMembers"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Lists all pending members for a group including invited users"
  /api/v4/groups/{id}/billable_members:
    get:
      tags:
      - "groups"
      description: "Gets a list of billable users of root group."
      operationId: "getApiV4GroupsIdBillableMembers"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "search"
        in: "query"
        description: "The exact name of the subscribed member"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "The sorting option"
        required: false
        type: "string"
        enum:
        - "access_level_asc"
        - "access_level_desc"
        - "last_joined"
        - "name_asc"
        - "name_desc"
        - "oldest_joined"
        - "oldest_sign_in"
        - "recent_sign_in"
        - "last_activity_on_asc"
        - "last_activity_on_desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Gets a list of billable users of root group."
          schema:
            $ref: "#/definitions/API_Entities_Member"
  /api/v4/groups/{id}/members/{user_id}/state:
    put:
      tags:
      - "groups"
      description: "Changes the state of the memberships of a user in the group"
      operationId: "putApiV4GroupsIdMembersUserIdState"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - in: "body"
        name: "putApiV4GroupsIdMembersUserIdState"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdMembersUserIdState"
        x-exportParamName: "PutApiV4GroupsIdMembersUserIdState"
      responses:
        "200":
          description: "Changes the state of the memberships of a user in the group"
  /api/v4/groups/{id}/billable_members/{user_id}/memberships:
    get:
      tags:
      - "groups"
      description: "Get the direct memberships of a billable user of a root group."
      operationId: "getApiV4GroupsIdBillableMembersUserIdMemberships"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the direct memberships of a billable user of a root group."
          schema:
            $ref: "#/definitions/EE_API_Entities_BillableMembership"
  /api/v4/groups/{id}/billable_members/{user_id}/indirect:
    get:
      tags:
      - "groups"
      description: "Get the indirect memberships of a billable user of a root group."
      operationId: "getApiV4GroupsIdBillableMembersUserIdIndirect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the indirect memberships of a billable user of a root\
            \ group."
          schema:
            $ref: "#/definitions/EE_API_Entities_BillableMembership"
  /api/v4/groups/{id}/billable_members/{user_id}:
    delete:
      tags:
      - "groups"
      description: "Removes a billable member from a group or project."
      operationId: "deleteApiV4GroupsIdBillableMembersUserId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      responses:
        "204":
          description: "Removes a billable member from a group or project."
  /api/v4/groups/{id}/merge_requests:
    get:
      tags:
      - "merge_requests"
      summary: "List group merge requests"
      description: "Get all merge requests for this group and its subgroups."
      operationId: "getApiV4GroupsIdMergeRequests"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "author_id"
        in: "query"
        description: "Returns merge requests created by the given user `id`. Mutually\
          \ exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "AuthorId"
        x-optionalDataType: "Int32"
      - name: "author_username"
        in: "query"
        description: "Returns merge requests created by the given `username`. Mutually\
          \ exclusive with `author_id`."
        required: false
        type: "string"
        x-exportParamName: "AuthorUsername"
        x-optionalDataType: "String"
      - name: "assignee_id"
        in: "query"
        description: "Returns merge requests assigned to the given user `id`. `None`\
          \ returns unassigned merge requests. `Any` returns merge requests with an\
          \ assignee."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "AssigneeId"
        x-optionalDataType: "Int32"
      - name: "assignee_username"
        in: "query"
        description: "Returns merge requests created by the given `username`. Mutually\
          \ exclusive with `author_id`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "AssigneeUsername"
      - name: "reviewer_username"
        in: "query"
        description: "Returns merge requests which have the user as a reviewer with\
          \ the given `username`. `None` returns merge requests with no reviewers.\
          \ `Any` returns merge requests with any reviewer. Mutually exclusive with\
          \ `reviewer_id`. Introduced in GitLab 13.8."
        required: false
        type: "string"
        x-exportParamName: "ReviewerUsername"
        x-optionalDataType: "String"
      - name: "labels"
        in: "query"
        description: "Returns merge requests matching a comma-separated list of labels.\
          \ `None` lists all merge requests with no labels. `Any` lists all merge\
          \ requests with at least one label. Predefined names are case-insensitive."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Labels"
      - name: "milestone"
        in: "query"
        description: "Returns merge requests for a specific milestone. `None` returns\
          \ merge requests with no milestone. `Any` returns merge requests that have\
          \ an assigned milestone."
        required: false
        type: "string"
        x-exportParamName: "Milestone"
        x-optionalDataType: "String"
      - name: "my_reaction_emoji"
        in: "query"
        description: "Returns merge requests reacted by the authenticated user by\
          \ the given `emoji`. `None` returns issues not given a reaction. `Any` returns\
          \ issues given at least one reaction."
        required: false
        type: "string"
        x-exportParamName: "MyReactionEmoji"
        x-optionalDataType: "String"
      - name: "reviewer_id"
        in: "query"
        description: "Returns merge requests which have the user as a reviewer with\
          \ the given user `id`. `None` returns merge requests with no reviewers.\
          \ `Any` returns merge requests with any reviewer. Mutually exclusive with\
          \ `reviewer_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ReviewerId"
        x-optionalDataType: "Int32"
      - name: "state"
        in: "query"
        description: "Returns `all` merge requests or just those that are `opened`,\
          \ `closed`, `locked`, or `merged`."
        required: false
        type: "string"
        default: "all"
        enum:
        - "opened"
        - "closed"
        - "locked"
        - "merged"
        - "all"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "order_by"
        in: "query"
        description: "Returns merge requests ordered by `created_at`, `label_priority`,\
          \ `milestone_due`, `popularity`, `priority`, `title` or `updated_at` fields.\
          \ Introduced in GitLab 14.8."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "created_at"
        - "label_priority"
        - "milestone_due"
        - "popularity"
        - "priority"
        - "title"
        - "updated_at"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Returns merge requests sorted in `asc` or `desc` order."
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "with_labels_details"
        in: "query"
        description: "If `true`, response returns more details for each label in labels\
          \ field: `:name`,`:color`, `:description`, `:description_html`, `:text_color`"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithLabelsDetails"
        x-optionalDataType: "Bool"
      - name: "with_merge_status_recheck"
        in: "query"
        description: "If `true`, this projection requests (but does not guarantee)\
          \ that the `merge_status` field be recalculated asynchronously. Introduced\
          \ in GitLab 13.0."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithMergeStatusRecheck"
        x-optionalDataType: "Bool"
      - name: "created_after"
        in: "query"
        description: "Returns merge requests created on or after the given time. Expected\
          \ in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Returns merge requests created on or before the given time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "updated_after"
        in: "query"
        description: "Returns merge requests updated on or after the given time. Expected\
          \ in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      - name: "updated_before"
        in: "query"
        description: "Returns merge requests updated on or before the given time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "view"
        in: "query"
        description: "If simple, returns the `iid`, URL, title, description, and basic\
          \ state of merge request"
        required: false
        type: "string"
        enum:
        - "simple"
        x-exportParamName: "View"
        x-optionalDataType: "String"
      - name: "scope"
        in: "query"
        description: "Returns merge requests for the given scope: `created_by_me`,\
          \ `assigned_to_me` or `all`"
        required: false
        type: "string"
        enum:
        - "created-by-me"
        - "assigned-to-me"
        - "created_by_me"
        - "assigned_to_me"
        - "all"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "source_branch"
        in: "query"
        description: "Returns merge requests with the given source branch"
        required: false
        type: "string"
        x-exportParamName: "SourceBranch"
        x-optionalDataType: "String"
      - name: "source_project_id"
        in: "query"
        description: "Returns merge requests with the given source project id"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SourceProjectId"
        x-optionalDataType: "Int32"
      - name: "target_branch"
        in: "query"
        description: "Returns merge requests with the given target branch"
        required: false
        type: "string"
        x-exportParamName: "TargetBranch"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Search merge requests against their `title` and `description`."
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "in"
        in: "query"
        description: "Modify the scope of the search attribute. `title`, `description`,\
          \ or a string joining them with comma."
        required: false
        type: "string"
        x-exportParamName: "In"
        x-optionalDataType: "String"
      - name: "wip"
        in: "query"
        description: "Filter merge requests against their `wip` status. `yes` to return\
          \ only draft merge requests, `no` to return non-draft merge requests."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Wip"
        x-optionalDataType: "String"
      - name: "not[author_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given user\
          \ `id`. Mutually exclusive with `author_username`. Combine with `scope=all`\
          \ or `scope=assigned_to_me`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotAuthorId"
        x-optionalDataType: "Int32"
      - name: "not[author_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given `username`.\
          \ Mutually exclusive with `author_id`."
        required: false
        type: "string"
        x-exportParamName: "NotAuthorUsername"
        x-optionalDataType: "String"
      - name: "not[assignee_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests assigned to the given user\
          \ `id`. `None` returns unassigned merge requests. `Any` returns merge requests\
          \ with an assignee."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotAssigneeId"
        x-optionalDataType: "Int32"
      - name: "not[assignee_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given `username`.\
          \ Mutually exclusive with `author_id`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "NotAssigneeUsername"
      - name: "not[reviewer_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests which have the user as a\
          \ reviewer with the given `username`. `None` returns merge requests with\
          \ no reviewers. `Any` returns merge requests with any reviewer. Mutually\
          \ exclusive with `reviewer_id`. Introduced in GitLab 13.8."
        required: false
        type: "string"
        x-exportParamName: "NotReviewerUsername"
        x-optionalDataType: "String"
      - name: "not[labels]"
        in: "query"
        description: "`<Negated>` Returns merge requests matching a comma-separated\
          \ list of labels. `None` lists all merge requests with no labels. `Any`\
          \ lists all merge requests with at least one label. Predefined names are\
          \ case-insensitive."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "NotLabels"
      - name: "not[milestone]"
        in: "query"
        description: "`<Negated>` Returns merge requests for a specific milestone.\
          \ `None` returns merge requests with no milestone. `Any` returns merge requests\
          \ that have an assigned milestone."
        required: false
        type: "string"
        x-exportParamName: "NotMilestone"
        x-optionalDataType: "String"
      - name: "not[my_reaction_emoji]"
        in: "query"
        description: "`<Negated>` Returns merge requests reacted by the authenticated\
          \ user by the given `emoji`. `None` returns issues not given a reaction.\
          \ `Any` returns issues given at least one reaction."
        required: false
        type: "string"
        x-exportParamName: "NotMyReactionEmoji"
        x-optionalDataType: "String"
      - name: "not[reviewer_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests which have the user as a\
          \ reviewer with the given user `id`. `None` returns merge requests with\
          \ no reviewers. `Any` returns merge requests with any reviewer. Mutually\
          \ exclusive with `reviewer_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotReviewerId"
        x-optionalDataType: "Int32"
      - name: "deployed_before"
        in: "query"
        description: "Returns merge requests deployed before the given date/time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        x-exportParamName: "DeployedBefore"
        x-optionalDataType: "String"
      - name: "deployed_after"
        in: "query"
        description: "Returns merge requests deployed after the given date/time. Expected\
          \ in ISO 8601 format"
        required: false
        type: "string"
        x-exportParamName: "DeployedAfter"
        x-optionalDataType: "String"
      - name: "environment"
        in: "query"
        description: "Returns merge requests deployed to the given environment"
        required: false
        type: "string"
        x-exportParamName: "Environment"
        x-optionalDataType: "String"
      - name: "approved"
        in: "query"
        description: "Filters merge requests by their `approved` status. `yes` returns\
          \ only approved merge requests. `no` returns only non-approved merge requests."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Approved"
        x-optionalDataType: "String"
      - name: "merge_user_id"
        in: "query"
        description: "Returns merge requests which have been merged by the user with\
          \ the given user `id`. Mutually exclusive with `merge_user_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeUserId"
        x-optionalDataType: "Int32"
      - name: "merge_user_username"
        in: "query"
        description: "Returns merge requests which have been merged by the user with\
          \ the given `username`. Mutually exclusive with `merge_user_id`."
        required: false
        type: "string"
        x-exportParamName: "MergeUserUsername"
        x-optionalDataType: "String"
      - name: "approver_ids"
        in: "query"
        description: "Return merge requests which have specified the users with the\
          \ given IDs as an individual approver"
        required: false
        type: "string"
        x-exportParamName: "ApproverIds"
        x-optionalDataType: "String"
      - name: "approved_by_ids"
        in: "query"
        description: "Return merge requests which have been approved by the specified\
          \ users with the given IDs"
        required: false
        type: "string"
        x-exportParamName: "ApprovedByIds"
        x-optionalDataType: "String"
      - name: "approved_by_usernames"
        in: "query"
        description: "Return merge requests which have been approved by the specified\
          \ users with the given\n            usernames"
        required: false
        type: "string"
        x-exportParamName: "ApprovedByUsernames"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "non_archived"
        in: "query"
        description: "Returns merge requests from non archived projects only."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "NonArchived"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "List group merge requests"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequestBasic"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
  /api/v4/groups/{id}/releases:
    get:
      tags:
      - "releases"
      summary: "List group releases"
      description: "Returns a list of group releases."
      operationId: "getApiV4GroupsIdReleases"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sort"
        in: "query"
        description: "The direction of the order. Either `desc` (default) for descending\
          \ order or `asc` for ascending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "simple"
        in: "query"
        description: "Return only limited fields for each release"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Simple"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List group releases"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Release"
        "400":
          description: "Bad request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/groups/{id}/access_tokens:
    get:
      tags:
      - "group_access_tokens"
      summary: "Get list of all access tokens for the specified resource"
      description: "This feature was introduced in GitLab 13.9."
      operationId: "getApiV4GroupsIdAccessTokens"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get list of all access tokens for the specified resource"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ResourceAccessToken"
    post:
      tags:
      - "group_access_tokens"
      summary: "Create a resource access token"
      description: "This feature was introduced in GitLab 13.9."
      operationId: "postApiV4GroupsIdAccessTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdAccessTokens"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdAccessTokens"
        x-exportParamName: "PostApiV4GroupsIdAccessTokens"
      responses:
        "201":
          description: "Create a resource access token"
          schema:
            $ref: "#/definitions/API_Entities_ResourceAccessTokenWithToken"
  /api/v4/groups/{id}/access_tokens/{token_id}:
    get:
      tags:
      - "group_access_tokens"
      summary: "Get an access token for the specified resource by ID"
      description: "This feature was introduced in GitLab 14.10."
      operationId: "getApiV4GroupsIdAccessTokensTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "token_id"
        in: "path"
        description: "The ID of the token"
        required: true
        type: "string"
        x-exportParamName: "TokenId"
      responses:
        "200":
          description: "Get an access token for the specified resource by ID"
          schema:
            $ref: "#/definitions/API_Entities_ResourceAccessToken"
    delete:
      tags:
      - "group_access_tokens"
      summary: "Revoke a resource access token"
      description: "This feature was introduced in GitLab 13.9."
      operationId: "deleteApiV4GroupsIdAccessTokensTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "token_id"
        in: "path"
        description: "The ID of the token"
        required: true
        type: "string"
        x-exportParamName: "TokenId"
      responses:
        "204":
          description: "Revoke a resource access token"
        "400":
          description: "Bad Request"
        "404":
          description: "Not found"
  /api/v4/groups/{id}/access_tokens/{token_id}/rotate:
    post:
      tags:
      - "group_access_tokens"
      summary: "Rotate a resource access token"
      description: "This feature was introduced in GitLab 16.0."
      operationId: "postApiV4GroupsIdAccessTokensTokenIdRotate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "token_id"
        in: "path"
        description: "The ID of the token"
        required: true
        type: "string"
        x-exportParamName: "TokenId"
      - in: "body"
        name: "postApiV4GroupsIdAccessTokensTokenIdRotate"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdAccessTokensTokenIdRotate"
        x-exportParamName: "PostApiV4GroupsIdAccessTokensTokenIdRotate"
      responses:
        "201":
          description: "Rotate a resource access token"
          schema:
            $ref: "#/definitions/API_Entities_ResourceAccessTokenWithToken"
  /api/v4/groups/{id}/wikis:
    get:
      tags:
      - "wikis"
      description: "Get a list of wiki pages"
      operationId: "getApiV4GroupsIdWikis"
      produces:
      - "application/json"
      parameters:
      - name: "with_content"
        in: "query"
        description: "Include pages' content"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithContent"
        x-optionalDataType: "Bool"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a list of wiki pages"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_WikiPageBasic"
        "404":
          description: "Not found"
    post:
      tags:
      - "wikis"
      description: "Create a wiki page"
      operationId: "postApiV4GroupsIdWikis"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdWikis"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdWikis"
        x-exportParamName: "PostApiV4GroupsIdWikis"
      responses:
        "201":
          description: "Create a wiki page"
          schema:
            $ref: "#/definitions/API_Entities_WikiPage"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
  /api/v4/groups/{id}/wikis/{slug}:
    get:
      tags:
      - "wikis"
      description: "Get a wiki page"
      operationId: "getApiV4GroupsIdWikisSlug"
      produces:
      - "application/json"
      parameters:
      - name: "slug"
        in: "path"
        description: "The slug of a wiki page"
        required: true
        type: "string"
        x-exportParamName: "Slug"
      - name: "version"
        in: "query"
        description: "The version hash of a wiki page"
        required: false
        type: "string"
        x-exportParamName: "Version"
        x-optionalDataType: "String"
      - name: "render_html"
        in: "query"
        description: "Render content to HTML"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "RenderHtml"
        x-optionalDataType: "Bool"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a wiki page"
          schema:
            $ref: "#/definitions/API_Entities_WikiPage"
        "404":
          description: "Not found"
    put:
      tags:
      - "wikis"
      description: "Update a wiki page"
      operationId: "putApiV4GroupsIdWikisSlug"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "slug"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Slug"
      - in: "body"
        name: "putApiV4GroupsIdWikisSlug"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdWikisSlug"
        x-exportParamName: "PutApiV4GroupsIdWikisSlug"
      responses:
        "200":
          description: "Update a wiki page"
          schema:
            $ref: "#/definitions/API_Entities_WikiPage"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
    delete:
      tags:
      - "wikis"
      description: "Delete a wiki page"
      operationId: "deleteApiV4GroupsIdWikisSlug"
      produces:
      - "application/json"
      parameters:
      - name: "slug"
        in: "path"
        description: "The slug of a wiki page"
        required: true
        type: "string"
        x-exportParamName: "Slug"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Delete a wiki page"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
  /api/v4/groups/{id}/wikis/attachments:
    post:
      tags:
      - "wikis"
      summary: "Upload an attachment to the wiki repository"
      description: "This feature was introduced in GitLab 11.3."
      operationId: "postApiV4GroupsIdWikisAttachments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdWikisAttachments"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdWikisAttachments"
        x-exportParamName: "PostApiV4GroupsIdWikisAttachments"
      responses:
        "201":
          description: "Upload an attachment to the wiki repository"
          schema:
            $ref: "#/definitions/API_Entities_WikiAttachment"
        "404":
          description: "Not found"
  /api/v4/groups/{id}/audit_events:
    get:
      tags:
      - "groups"
      description: "Get a list of audit events in this group."
      operationId: "getApiV4GroupsIdAuditEvents"
      produces:
      - "application/json"
      parameters:
      - name: "created_after"
        in: "query"
        description: "Return audit events created after the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Return audit events created before the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a list of audit events in this group."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EE_API_Entities_AuditEvent"
  /api/v4/groups/{id}/audit_events/{audit_event_id}:
    get:
      tags:
      - "groups"
      description: "Get a specific audit event in this group."
      operationId: "getApiV4GroupsIdAuditEventsAuditEventId"
      produces:
      - "application/json"
      parameters:
      - name: "audit_event_id"
        in: "path"
        description: "The ID of the audit event"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AuditEventId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a specific audit event in this group."
          schema:
            $ref: "#/definitions/EE_API_Entities_AuditEvent"
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/Release.gpg:
    get:
      tags:
      - "debian_packages"
      summary: "The Release file signature"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "getApiV4GroupsIdPackagesDebianDists*distributionReleaseGpg"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      responses:
        "200":
          description: "The Release file signature"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/Release:
    get:
      tags:
      - "debian_packages"
      summary: "The unsigned Release file"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "getApiV4GroupsIdPackagesDebianDists*distributionRelease"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      responses:
        "200":
          description: "The unsigned Release file"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/InRelease:
    get:
      tags:
      - "debian_packages"
      summary: "The signed Release file"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "getApiV4GroupsIdPackagesDebianDists*distributionInrelease"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      responses:
        "200":
          description: "The signed Release file"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/Packages:
    get:
      tags:
      - "debian_packages"
      summary: "The installer (udeb) binary files index"
      description: "This feature was introduced in GitLab 15.4"
      operationId: "getApiV4GroupsIdPackagesDebianDists*distributionComponentDebianInstallerBinaryArchitecturePackages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      - name: "architecture"
        in: "path"
        description: "The Debian Architecture"
        required: true
        type: "string"
        x-exportParamName: "Architecture"
      responses:
        "200":
          description: "The installer (udeb) binary files index"
        "202":
          description: "The installer (udeb) binary files index"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/by-hash/SHA256/{file_sha256}
  : get:
      tags:
      - "debian_packages"
      summary: "The installer (udeb) binary files index by hash"
      description: "This feature was introduced in GitLab 15.4"
      operationId: "getApiV4GroupsIdPackagesDebianDists*distributionComponentDebianInstallerBinaryArchitectureByHashSha256FileSha256"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      - name: "architecture"
        in: "path"
        description: "The Debian Architecture"
        required: true
        type: "string"
        x-exportParamName: "Architecture"
      - name: "file_sha256"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FileSha256"
      responses:
        "200":
          description: "The installer (udeb) binary files index by hash"
        "202":
          description: "The installer (udeb) binary files index by hash"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/source/Sources:
    get:
      tags:
      - "debian_packages"
      summary: "The source files index"
      description: "This feature was introduced in GitLab 15.4"
      operationId: "getApiV4GroupsIdPackagesDebianDists*distributionComponentSourceSources"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      responses:
        "200":
          description: "The source files index"
        "202":
          description: "The source files index"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/source/by-hash/SHA256/{file_sha256}:
    get:
      tags:
      - "debian_packages"
      summary: "The source files index by hash"
      description: "This feature was introduced in GitLab 15.4"
      operationId: "getApiV4GroupsIdPackagesDebianDists*distributionComponentSourceByHashSha256FileSha256"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      - name: "file_sha256"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FileSha256"
      responses:
        "200":
          description: "The source files index by hash"
        "202":
          description: "The source files index by hash"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/binary-{architecture}/Packages:
    get:
      tags:
      - "debian_packages"
      summary: "The binary files index"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "getApiV4GroupsIdPackagesDebianDists*distributionComponentBinaryArchitecturePackages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      - name: "architecture"
        in: "path"
        description: "The Debian Architecture"
        required: true
        type: "string"
        x-exportParamName: "Architecture"
      responses:
        "200":
          description: "The binary files index"
        "202":
          description: "The binary files index"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/binary-{architecture}/by-hash/SHA256/{file_sha256}:
    get:
      tags:
      - "debian_packages"
      summary: "The binary files index by hash"
      description: "This feature was introduced in GitLab 15.4"
      operationId: "getApiV4GroupsIdPackagesDebianDists*distributionComponentBinaryArchitectureByHashSha256FileSha256"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      - name: "architecture"
        in: "path"
        description: "The Debian Architecture"
        required: true
        type: "string"
        x-exportParamName: "Architecture"
      - name: "file_sha256"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FileSha256"
      responses:
        "200":
          description: "The binary files index by hash"
        "202":
          description: "The binary files index by hash"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/debian/pool/{distribution}/{project_id}/{letter}/{package_name}/{package_version}/{file_name}:
    get:
      tags:
      - "debian_packages"
      summary: "Download Debian package"
      description: "This feature was introduced in GitLab 14.2"
      operationId: "getApiV4GroupsIdPackagesDebianPoolDistributionProjectIdLetterPackageNamePackageVersionFileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "project_id"
        in: "path"
        description: "The Project Id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ProjectId"
      - name: "distribution"
        in: "path"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "letter"
        in: "path"
        description: "The Debian Classification (first-letter or lib-first-letter)"
        required: true
        type: "string"
        x-exportParamName: "Letter"
      - name: "package_name"
        in: "path"
        description: "The Debian Source Package Name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "The Debian Source Package Version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "file_name"
        in: "path"
        description: "The Debian File Name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download Debian package"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/debian_distributions:
    get:
      tags:
      - "debian_distribution"
      summary: "Get a list of Debian Distributions"
      description: "This feature was introduced in 14.0"
      operationId: "getApiV4GroupsIdDebianDistributions"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "codename"
        in: "query"
        description: "The Debian Codename"
        required: false
        type: "string"
        x-exportParamName: "Codename"
        x-optionalDataType: "String"
      - name: "suite"
        in: "query"
        description: "The Debian Suite"
        required: false
        type: "string"
        x-exportParamName: "Suite"
        x-optionalDataType: "String"
      - name: "origin"
        in: "query"
        description: "The Debian Origin"
        required: false
        type: "string"
        x-exportParamName: "Origin"
        x-optionalDataType: "String"
      - name: "label"
        in: "query"
        description: "The Debian Label"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "version"
        in: "query"
        description: "The Debian Version"
        required: false
        type: "string"
        x-exportParamName: "Version"
        x-optionalDataType: "String"
      - name: "description"
        in: "query"
        description: "The Debian Description"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "valid_time_duration_seconds"
        in: "query"
        description: "The duration before the Release file should be considered expired\
          \ by the client"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ValidTimeDurationSeconds"
        x-optionalDataType: "Int32"
      - name: "components"
        in: "query"
        description: "The list of Components"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Components"
      - name: "architectures"
        in: "query"
        description: "The list of Architectures"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Architectures"
      responses:
        "200":
          description: "Get a list of Debian Distributions"
          schema:
            $ref: "#/definitions/API_Entities_Packages_Debian_Distribution"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    post:
      tags:
      - "debian_distribution"
      summary: "Create a Debian Distribution"
      description: "This feature was introduced in 14.0"
      operationId: "postApiV4GroupsIdDebianDistributions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4GroupsIdDebianDistributions"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GroupsIdDebianDistributions"
        x-exportParamName: "PostApiV4GroupsIdDebianDistributions"
      responses:
        "201":
          description: "Create a Debian Distribution"
          schema:
            $ref: "#/definitions/API_Entities_Packages_Debian_Distribution"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/debian_distributions/{codename}:
    get:
      tags:
      - "debian_distribution"
      summary: "Get a Debian Distribution"
      description: "This feature was introduced in 14.0"
      operationId: "getApiV4GroupsIdDebianDistributionsCodename"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "codename"
        in: "path"
        description: "The Debian Codename"
        required: true
        type: "string"
        x-exportParamName: "Codename"
      responses:
        "200":
          description: "Get a Debian Distribution"
          schema:
            $ref: "#/definitions/API_Entities_Packages_Debian_Distribution"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    put:
      tags:
      - "debian_distribution"
      summary: "Update a Debian Distribution"
      description: "This feature was introduced in 14.0"
      operationId: "putApiV4GroupsIdDebianDistributionsCodename"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "codename"
        in: "path"
        description: "The Debian Codename"
        required: true
        type: "string"
        x-exportParamName: "Codename"
      - in: "body"
        name: "putApiV4GroupsIdDebianDistributionsCodename"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdDebianDistributionsCodename"
        x-exportParamName: "PutApiV4GroupsIdDebianDistributionsCodename"
      responses:
        "200":
          description: "Update a Debian Distribution"
          schema:
            $ref: "#/definitions/API_Entities_Packages_Debian_Distribution"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "debian_distribution"
      summary: "Delete a Debian Distribution"
      description: "This feature was introduced in 14.0"
      operationId: "deleteApiV4GroupsIdDebianDistributionsCodename"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "codename"
        in: "path"
        description: "The Debian Codename"
        required: true
        type: "string"
        x-exportParamName: "Codename"
      - name: "suite"
        in: "query"
        description: "The Debian Suite"
        required: false
        type: "string"
        x-exportParamName: "Suite"
        x-optionalDataType: "String"
      - name: "origin"
        in: "query"
        description: "The Debian Origin"
        required: false
        type: "string"
        x-exportParamName: "Origin"
        x-optionalDataType: "String"
      - name: "label"
        in: "query"
        description: "The Debian Label"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "version"
        in: "query"
        description: "The Debian Version"
        required: false
        type: "string"
        x-exportParamName: "Version"
        x-optionalDataType: "String"
      - name: "description"
        in: "query"
        description: "The Debian Description"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "valid_time_duration_seconds"
        in: "query"
        description: "The duration before the Release file should be considered expired\
          \ by the client"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ValidTimeDurationSeconds"
        x-optionalDataType: "Int32"
      - name: "components"
        in: "query"
        description: "The list of Components"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Components"
      - name: "architectures"
        in: "query"
        description: "The list of Architectures"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Architectures"
      responses:
        "202":
          description: "Delete a Debian Distribution"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/debian_distributions/{codename}/key.asc:
    get:
      tags:
      - "debian_distribution"
      summary: "Get a Debian Distribution Key"
      description: "This feature was introduced in 14.4"
      operationId: "getApiV4GroupsIdDebianDistributionsCodenameKeyAsc"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "codename"
        in: "path"
        description: "The Debian Codename"
        required: true
        type: "string"
        x-exportParamName: "Codename"
      responses:
        "200":
          description: "Get a Debian Distribution Key"
          schema:
            $ref: "#/definitions/API_Entities_Packages_Debian_Distribution"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/npm/-/package/*package_name/dist-tags:
    get:
      tags:
      - "npm_packages"
      summary: "Get all tags for a given an NPM package"
      description: "This feature was introduced in GitLab 12.7"
      operationId: "getApiV4GroupsIdPackagesNpmPackage*packageNameDistTags"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "Get all tags for a given an NPM package"
          schema:
            $ref: "#/definitions/API_Entities_NpmPackageTag"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/npm/-/package/*package_name/dist-tags/{tag}:
    put:
      tags:
      - "npm_packages"
      summary: "Create or Update the given tag for the given NPM package and version"
      description: "This feature was introduced in GitLab 12.7"
      operationId: "putApiV4GroupsIdPackagesNpmPackage*packageNameDistTagsTag"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag"
        in: "path"
        description: "Package dist-tag"
        required: true
        type: "string"
        x-exportParamName: "Tag"
      - in: "body"
        name: "putApiV4GroupsIdPackagesNpmPackage*packageNameDistTagsTag"
        required: true
        schema:
          $ref: "#/definitions/putApiV4GroupsIdPackagesNpmPackage*packageNameDistTagsTag"
        x-exportParamName: "PutApiV4GroupsIdPackagesNpmPackagepackageNameDistTagsTag"
      responses:
        "204":
          description: "Create or Update the given tag for the given NPM package and\
            \ version"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "npm_packages"
      summary: "Deletes the given tag"
      description: "This feature was introduced in GitLab 12.7"
      operationId: "deleteApiV4GroupsIdPackagesNpmPackage*packageNameDistTagsTag"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "tag"
        in: "path"
        description: "Package dist-tag"
        required: true
        type: "string"
        x-exportParamName: "Tag"
      responses:
        "204":
          description: "Deletes the given tag"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/npm/*package_name:
    get:
      tags:
      - "npm_packages"
      summary: "NPM registry metadata endpoint"
      description: "This feature was introduced in GitLab 11.8"
      operationId: "getApiV4GroupsIdPackagesNpm*packageName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/API_Entities_NpmPackage"
        "302":
          description: "Found (redirect)"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/npm/-/npm/v1/security/advisories/bulk:
    post:
      tags:
      - "npm_packages"
      summary: "NPM registry bulk advisory endpoint"
      description: "This feature was introduced in GitLab 15.6"
      operationId: "postApiV4GroupsIdPackagesNpmNpmV1SecurityAdvisoriesBulk"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Ok"
        "307":
          description: "Temporary Redirect"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/npm/-/npm/v1/security/audits/quick:
    post:
      tags:
      - "npm_packages"
      summary: "NPM registry quick audit endpoint"
      description: "This feature was introduced in GitLab 15.6"
      operationId: "postApiV4GroupsIdPackagesNpmNpmV1SecurityAuditsQuick"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Ok"
        "307":
          description: "Temporary Redirect"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/nuget/index:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet V3 Feed Service Index"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "getApiV4GroupsIdPackagesNugetIndex"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The NuGet V3 Feed Service Index"
          schema:
            $ref: "#/definitions/API_Entities_Nuget_ServiceIndex"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/nuget/symbolfiles/*file_name/*signature/*same_file_name:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet Symbol File Download Endpoint"
      description: "This feature was introduced in GitLab 16.7"
      operationId: "getApiV4GroupsIdPackagesNugetSymbolfiles*fileName*signature*sameFileName"
      produces:
      - "application/json"
      parameters:
      - name: "Symbolchecksum"
        in: "header"
        required: true
        type: "string"
        x-exportParamName: "Symbolchecksum"
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "file_name"
        in: "query"
        description: "The symbol file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - name: "signature"
        in: "query"
        description: "The symbol file signature"
        required: true
        type: "string"
        x-exportParamName: "Signature"
      - name: "same_file_name"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "SameFileName"
      responses:
        "200":
          description: "The NuGet Symbol File Download Endpoint"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/nuget/v2:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet V2 Feed Service Index"
      description: "This feature was introduced in GitLab 16.2"
      operationId: "getApiV4GroupsIdPackagesNugetV2"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The NuGet V2 Feed Service Index"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/nuget/v2/$metadata:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet V2 Feed Package $metadata endpoint"
      description: "This feature was introduced in GitLab 16.3"
      operationId: "getApiV4GroupsIdPackagesNugetV2$metadata"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The NuGet V2 Feed Package $metadata endpoint"
  /api/v4/groups/{id}/-/packages/nuget/metadata/*package_name/index:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet Metadata Service - Package name level"
      description: "This feature was introduced in GitLab 12.8"
      operationId: "getApiV4GroupsIdPackagesNugetMetadata*packageNameIndex"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The NuGet package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "The NuGet Metadata Service - Package name level"
          schema:
            $ref: "#/definitions/API_Entities_Nuget_PackagesMetadata"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/nuget/metadata/*package_name/*package_version:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet Metadata Service - Package name and version level"
      description: "This feature was introduced in GitLab 12.8"
      operationId: "getApiV4GroupsIdPackagesNugetMetadata*packageName*packageVersion"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The NuGet package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "query"
        description: "The NuGet package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      responses:
        "200":
          description: "The NuGet Metadata Service - Package name and version level"
          schema:
            $ref: "#/definitions/API_Entities_Nuget_PackageMetadata"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/nuget/query:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet Search Service"
      description: "This feature was introduced in GitLab 12.8"
      operationId: "getApiV4GroupsIdPackagesNugetQuery"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The group ID or full group path."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "q"
        in: "query"
        description: "The search term"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "skip"
        in: "query"
        description: "The number of results to skip"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "take"
        in: "query"
        description: "The number of results to return"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Take"
        x-optionalDataType: "Int32"
      - name: "prerelease"
        in: "query"
        description: "Include prerelease versions"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "Prerelease"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "The NuGet Search Service"
          schema:
            $ref: "#/definitions/API_Entities_Nuget_SearchResults"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/pypi/files/{sha256}/*file_identifier:
    get:
      tags:
      - "pypi_packages"
      summary: "Download a package file from a group"
      description: "This feature was introduced in GitLab 13.12"
      operationId: "getApiV4GroupsIdPackagesPypiFilesSha256*fileIdentifier"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of the group."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "file_identifier"
        in: "query"
        description: "The PyPi package file identifier"
        required: true
        type: "string"
        x-exportParamName: "FileIdentifier"
      - name: "sha256"
        in: "path"
        description: "The PyPi package sha256 check sum"
        required: true
        type: "string"
        x-exportParamName: "Sha256"
      responses:
        "200":
          description: "Download a package file from a group"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/pypi/simple:
    get:
      tags:
      - "pypi_packages"
      summary: "The PyPi Simple Group Index Endpoint"
      description: "This feature was introduced in GitLab 15.1"
      operationId: "getApiV4GroupsIdPackagesPypiSimple"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of the group."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The PyPi Simple Group Index Endpoint"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/groups/{id}/-/packages/pypi/simple/*package_name:
    get:
      tags:
      - "pypi_packages"
      summary: "The PyPi Simple Group Package Endpoint"
      description: "This feature was introduced in GitLab 12.10"
      operationId: "getApiV4GroupsIdPackagesPypiSimple*packageName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of the group."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The PyPi package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "The PyPi Simple Group Package Endpoint"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/access_requests:
    get:
      tags:
      - "access_requests"
      summary: "Gets a list of access requests for a project."
      description: "This feature was introduced in GitLab 8.11."
      operationId: "getApiV4ProjectsIdAccessRequests"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Gets a list of access requests for a project."
          schema:
            $ref: "#/definitions/API_Entities_AccessRequester"
    post:
      tags:
      - "access_requests"
      summary: "Requests access for the authenticated user to a project."
      description: "This feature was introduced in GitLab 8.11."
      operationId: "postApiV4ProjectsIdAccessRequests"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "successful operation"
          examples:
            successfull_response:
              id: 1
              username: "raymond_smith"
              name: "Raymond Smith"
              state: "active"
              created_at: "2012-10-22T14:13:35Z"
              access_level: 20
          schema:
            $ref: "#/definitions/API_Entities_AccessRequester"
  /api/v4/projects/{id}/access_requests/{user_id}/approve:
    put:
      tags:
      - "access_requests"
      summary: "Approves an access request for the given user."
      description: "This feature was introduced in GitLab 8.11."
      operationId: "putApiV4ProjectsIdAccessRequestsUserIdApprove"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the access requester"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - in: "body"
        name: "putApiV4ProjectsIdAccessRequestsUserIdApprove"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdAccessRequestsUserIdApprove"
        x-exportParamName: "PutApiV4ProjectsIdAccessRequestsUserIdApprove"
      responses:
        "200":
          description: "successful operation"
          examples:
            successfull_response:
              id: 1
              username: "raymond_smith"
              name: "Raymond Smith"
              state: "active"
              created_at: "2012-10-22T14:13:35Z"
              access_level: 20
          schema:
            $ref: "#/definitions/API_Entities_AccessRequester"
  /api/v4/projects/{id}/access_requests/{user_id}:
    delete:
      tags:
      - "access_requests"
      summary: "Denies an access request for the given user."
      description: "This feature was introduced in GitLab 8.11."
      operationId: "deleteApiV4ProjectsIdAccessRequestsUserId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the access requester"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      responses:
        "204":
          description: "Denies an access request for the given user."
  /api/v4/projects/{id}/badges:
    get:
      tags:
      - "badges"
      summary: "Gets a list of project badges viewable by the authenticated user."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "getApiV4ProjectsIdBadges"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "name"
        in: "query"
        description: "Name for the badge"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Gets a list of project badges viewable by the authenticated\
            \ user."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Badge"
    post:
      tags:
      - "badges"
      summary: "Adds a badge to a project."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "postApiV4ProjectsIdBadges"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdBadges"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdBadges"
        x-exportParamName: "PostApiV4ProjectsIdBadges"
      responses:
        "201":
          description: "Adds a badge to a project."
          schema:
            $ref: "#/definitions/API_Entities_Badge"
  /api/v4/projects/{id}/badges/render:
    get:
      tags:
      - "badges"
      summary: "Preview a badge from a project."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "getApiV4ProjectsIdBadgesRender"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "link_url"
        in: "query"
        description: "URL of the badge link"
        required: true
        type: "string"
        x-exportParamName: "LinkUrl"
      - name: "image_url"
        in: "query"
        description: "URL of the badge image"
        required: true
        type: "string"
        x-exportParamName: "ImageUrl"
      responses:
        "200":
          description: "Preview a badge from a project."
          schema:
            $ref: "#/definitions/API_Entities_BasicBadgeDetails"
  /api/v4/projects/{id}/badges/{badge_id}:
    get:
      tags:
      - "badges"
      summary: "Gets a badge of a project."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "getApiV4ProjectsIdBadgesBadgeId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "badge_id"
        in: "path"
        description: "The badge ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BadgeId"
      responses:
        "200":
          description: "Gets a badge of a project."
          schema:
            $ref: "#/definitions/API_Entities_Badge"
    put:
      tags:
      - "badges"
      summary: "Updates a badge of a project."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "putApiV4ProjectsIdBadgesBadgeId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "badge_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BadgeId"
      - in: "body"
        name: "putApiV4ProjectsIdBadgesBadgeId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdBadgesBadgeId"
        x-exportParamName: "PutApiV4ProjectsIdBadgesBadgeId"
      responses:
        "200":
          description: "Updates a badge of a project."
          schema:
            $ref: "#/definitions/API_Entities_Badge"
    delete:
      tags:
      - "badges"
      summary: "Removes a badge from the project."
      description: "This feature was introduced in GitLab 10.6."
      operationId: "deleteApiV4ProjectsIdBadgesBadgeId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "badge_id"
        in: "path"
        description: "The badge ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BadgeId"
      responses:
        "204":
          description: "Removes a badge from the project."
  /api/v4/projects/{id}/repository/branches:
    get:
      tags:
      - "branches"
      description: "Get a project repository branches"
      operationId: "getApiV4ProjectsIdRepositoryBranches"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "search"
        in: "query"
        description: "Return list of branches matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "regex"
        in: "query"
        description: "Return list of branches matching the regex"
        required: false
        type: "string"
        x-exportParamName: "Regex"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return list of branches sorted by the given field"
        required: false
        type: "string"
        enum:
        - "name_asc"
        - "updated_asc"
        - "updated_desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "page_token"
        in: "query"
        description: "Name of branch to start the pagination from"
        required: false
        type: "string"
        x-exportParamName: "PageToken"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get a project repository branches"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Branch"
        "404":
          description: "404 Project Not Found"
    post:
      tags:
      - "branches"
      description: "Create branch"
      operationId: "postApiV4ProjectsIdRepositoryBranches"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdRepositoryBranches"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRepositoryBranches"
        x-exportParamName: "PostApiV4ProjectsIdRepositoryBranches"
      responses:
        "201":
          description: "Create branch"
          schema:
            $ref: "#/definitions/API_Entities_Branch"
        "400":
          description: "Failed to create branch"
  /api/v4/projects/{id}/repository/branches/{branch}/protect:
    put:
      tags:
      - "branches"
      description: "Protect a single branch"
      operationId: "putApiV4ProjectsIdRepositoryBranchesBranchProtect"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "branch"
        in: "path"
        description: "The name of the branch"
        required: true
        type: "string"
        x-exportParamName: "Branch"
      - in: "body"
        name: "putApiV4ProjectsIdRepositoryBranchesBranchProtect"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdRepositoryBranchesBranchProtect"
        x-exportParamName: "PutApiV4ProjectsIdRepositoryBranchesBranchProtect"
      responses:
        "200":
          description: "Protect a single branch"
          schema:
            $ref: "#/definitions/API_Entities_Branch"
        "404":
          description: "404 Branch Not Found"
  /api/v4/projects/{id}/repository/branches/{branch}/unprotect:
    put:
      tags:
      - "branches"
      description: "Unprotect a single branch"
      operationId: "putApiV4ProjectsIdRepositoryBranchesBranchUnprotect"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "branch"
        in: "path"
        description: "The name of the branch"
        required: true
        type: "string"
        x-exportParamName: "Branch"
      responses:
        "200":
          description: "Unprotect a single branch"
          schema:
            $ref: "#/definitions/API_Entities_Branch"
        "404":
          description: "404 Project Not Found"
  /api/v4/projects/{id}/repository/branches/{branch}:
    get:
      tags:
      - "branches"
      description: "Get a single repository branch"
      operationId: "getApiV4ProjectsIdRepositoryBranchesBranch"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "branch"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Branch"
      responses:
        "200":
          description: "Get a single repository branch"
          schema:
            $ref: "#/definitions/API_Entities_Branch"
        "404":
          description: "Branch Not Found"
    head:
      tags:
      - "branches"
      description: "Check if a branch exists"
      operationId: "headApiV4ProjectsIdRepositoryBranchesBranch"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "branch"
        in: "path"
        description: "The name of the branch"
        required: true
        type: "string"
        x-exportParamName: "Branch"
      responses:
        "204":
          description: "No Content"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "branches"
      description: "Delete a branch"
      operationId: "deleteApiV4ProjectsIdRepositoryBranchesBranch"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "branch"
        in: "path"
        description: "The name of the branch"
        required: true
        type: "string"
        x-exportParamName: "Branch"
      responses:
        "204":
          description: "Delete a branch"
        "404":
          description: "Branch Not Found"
  /api/v4/projects/{id}/repository/merged_branches:
    delete:
      tags:
      - "branches"
      description: "Delete all merged branches"
      operationId: "deleteApiV4ProjectsIdRepositoryMergedBranches"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "202":
          description: "202 Accepted"
        "404":
          description: "404 Project Not Found"
  /api/v4/projects/{id}/jobs/artifacts/{ref_name}/download:
    get:
      tags:
      - "projects"
      summary: "Download the artifacts archive from a job"
      description: "This feature was introduced in GitLab 8.10"
      operationId: "getApiV4ProjectsIdJobsArtifactsRefNameDownload"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "ref_name"
        in: "path"
        description: "Branch or tag name in repository. `HEAD` or `SHA` references\
          \ are not supported."
        required: true
        type: "string"
        x-exportParamName: "RefName"
      - name: "job"
        in: "query"
        description: "The name of the job."
        required: true
        type: "string"
        x-exportParamName: "Job"
      - name: "job_token"
        in: "query"
        description: "To be used with triggers for multi-project pipelines, available\
          \ only on Premium and Ultimate tiers."
        required: false
        type: "string"
        x-exportParamName: "JobToken"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Download the artifacts archive from a job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/jobs/artifacts/{ref_name}/raw/*artifact_path:
    get:
      tags:
      - "projects"
      summary: "Download a specific file from artifacts archive from a ref"
      description: "This feature was introduced in GitLab 11.5"
      operationId: "getApiV4ProjectsIdJobsArtifactsRefNameRaw*artifactPath"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "ref_name"
        in: "path"
        description: "Branch or tag name in repository. `HEAD` or `SHA` references\
          \ are not supported."
        required: true
        type: "string"
        x-exportParamName: "RefName"
      - name: "job"
        in: "query"
        description: "The name of the job."
        required: true
        type: "string"
        x-exportParamName: "Job"
      - name: "artifact_path"
        in: "query"
        description: "Path to a file inside the artifacts archive."
        required: true
        type: "string"
        x-exportParamName: "ArtifactPath"
      - name: "job_token"
        in: "query"
        description: "To be used with triggers for multi-project pipelines, available\
          \ only on Premium and Ultimate tiers."
        required: false
        type: "string"
        x-exportParamName: "JobToken"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Download a specific file from artifacts archive from a ref"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/jobs/{job_id}/artifacts:
    get:
      tags:
      - "projects"
      summary: "Download the artifacts archive from a job"
      description: "This feature was introduced in GitLab 8.5"
      operationId: "getApiV4ProjectsIdJobsJobIdArtifacts"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "job_id"
        in: "path"
        description: "The ID of a job"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "JobId"
      - name: "job_token"
        in: "query"
        description: "To be used with triggers for multi-project pipelines, available\
          \ only on Premium and Ultimate tiers."
        required: false
        type: "string"
        x-exportParamName: "JobToken"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Download the artifacts archive from a job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "projects"
      summary: "Delete the artifacts files from a job"
      description: "This feature was introduced in GitLab 11.9"
      operationId: "deleteApiV4ProjectsIdJobsJobIdArtifacts"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "job_id"
        in: "path"
        description: "The ID of a job"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "JobId"
      responses:
        "204":
          description: "Delete the artifacts files from a job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "409":
          description: "Conflict"
  /api/v4/projects/{id}/jobs/{job_id}/artifacts/*artifact_path:
    get:
      tags:
      - "projects"
      summary: "Download a specific file from artifacts archive"
      description: "This feature was introduced in GitLab 10.0"
      operationId: "getApiV4ProjectsIdJobsJobIdArtifacts*artifactPath"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "job_id"
        in: "path"
        description: "The ID of a job"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "JobId"
      - name: "artifact_path"
        in: "query"
        description: "Path to a file inside the artifacts archive."
        required: true
        type: "string"
        x-exportParamName: "ArtifactPath"
      - name: "job_token"
        in: "query"
        description: "To be used with triggers for multi-project pipelines, available\
          \ only on Premium and Ultimate tiers."
        required: false
        type: "string"
        x-exportParamName: "JobToken"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Download a specific file from artifacts archive"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/jobs/{job_id}/artifacts/keep:
    post:
      tags:
      - "projects"
      description: "Keep the artifacts to prevent them from being deleted"
      operationId: "postApiV4ProjectsIdJobsJobIdArtifactsKeep"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "job_id"
        in: "path"
        description: "The ID of a job"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "JobId"
      responses:
        "201":
          description: "Keep the artifacts to prevent them from being deleted"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/artifacts:
    delete:
      tags:
      - "projects"
      description: "Expire the artifacts files from a project"
      operationId: "deleteApiV4ProjectsIdArtifacts"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "202":
          description: "Expire the artifacts files from a project"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "409":
          description: "Conflict"
  /api/v4/projects/{id}/jobs:
    get:
      tags:
      - "projects"
      description: "Get a projects jobs"
      operationId: "getApiV4ProjectsIdJobs"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "scope"
        in: "query"
        description: "The scope of builds to show"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "created"
          - "waiting_for_resource"
          - "preparing"
          - "waiting_for_callback"
          - "pending"
          - "running"
          - "success"
          - "failed"
          - "canceling"
          - "canceled"
          - "skipped"
          - "manual"
          - "scheduled"
        collectionFormat: "multi"
        x-exportParamName: "Scope"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a projects jobs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Ci_Job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/jobs/{job_id}:
    get:
      tags:
      - "projects"
      description: "Get a specific job of a project"
      operationId: "getApiV4ProjectsIdJobsJobId"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        description: "The ID of a job"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "JobId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a specific job of a project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/jobs/{job_id}/trace:
    get:
      tags:
      - "projects"
      description: "Get a trace of a specific job of a project"
      operationId: "getApiV4ProjectsIdJobsJobIdTrace"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        description: "The ID of a job"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "JobId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a trace of a specific job of a project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/jobs/{job_id}/cancel:
    post:
      tags:
      - "projects"
      description: "Cancel a specific job of a project"
      operationId: "postApiV4ProjectsIdJobsJobIdCancel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        description: "The ID of a job"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "JobId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Cancel a specific job of a project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/jobs/{job_id}/retry:
    post:
      tags:
      - "projects"
      description: "Retry a specific job of a project"
      operationId: "postApiV4ProjectsIdJobsJobIdRetry"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        description: "The ID of a job"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "JobId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Retry a specific job of a project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/jobs/{job_id}/erase:
    post:
      tags:
      - "projects"
      description: "Erase job (remove artifacts and the trace)"
      operationId: "postApiV4ProjectsIdJobsJobIdErase"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        description: "The ID of a build"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "JobId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Erase job (remove artifacts and the trace)"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "409":
          description: "Conflict"
  /api/v4/projects/{id}/jobs/{job_id}/play:
    post:
      tags:
      - "projects"
      summary: "Trigger an actionable job (manual, delayed, etc)"
      description: "This feature was added in GitLab 8.11"
      operationId: "postApiV4ProjectsIdJobsJobIdPlay"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "job_id"
        in: "path"
        description: "The ID of a Job"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "JobId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdJobsJobIdPlay"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdJobsJobIdPlay"
        x-exportParamName: "PostApiV4ProjectsIdJobsJobIdPlay"
      responses:
        "200":
          description: "Trigger an actionable job (manual, delayed, etc)"
          schema:
            $ref: "#/definitions/API_Entities_Ci_JobBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/resource_groups:
    get:
      tags:
      - "ci_resource_groups"
      description: "Get all resource groups for a project"
      operationId: "getApiV4ProjectsIdResourceGroups"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get all resource groups for a project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Ci_ResourceGroup"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/resource_groups/{key}:
    get:
      tags:
      - "ci_resource_groups"
      description: "Get a specific resource group"
      operationId: "getApiV4ProjectsIdResourceGroupsKey"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "path"
        description: "The key of the resource group"
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        "200":
          description: "Get a specific resource group"
          schema:
            $ref: "#/definitions/API_Entities_Ci_ResourceGroup"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "ci_resource_groups"
      summary: "Edit an existing resource group"
      description: "Updates an existing resource group's properties."
      operationId: "putApiV4ProjectsIdResourceGroupsKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "path"
        description: "The key of the resource group"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - in: "body"
        name: "putApiV4ProjectsIdResourceGroupsKey"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdResourceGroupsKey"
        x-exportParamName: "PutApiV4ProjectsIdResourceGroupsKey"
      responses:
        "200":
          description: "Edit an existing resource group"
          schema:
            $ref: "#/definitions/API_Entities_Ci_ResourceGroup"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/resource_groups/{key}/upcoming_jobs:
    get:
      tags:
      - "ci_resource_groups"
      description: "List upcoming jobs for a specific resource group"
      operationId: "getApiV4ProjectsIdResourceGroupsKeyUpcomingJobs"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "path"
        description: "The key of the resource group"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List upcoming jobs for a specific resource group"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Ci_JobBasic"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/runners:
    get:
      tags:
      - "runners"
      - "projects"
      summary: "List project's runners"
      description: "List all runners available in the project, including from ancestor\
        \ groups and any allowed shared runners."
      operationId: "getApiV4ProjectsIdRunners"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "scope"
        in: "query"
        description: "Deprecated: Use `type` or `status` instead. The scope of runners\
          \ to return"
        required: false
        type: "string"
        enum:
        - "specific"
        - "shared"
        - "instance_type"
        - "group_type"
        - "project_type"
        - "active"
        - "paused"
        - "online"
        - "offline"
        - "never_contacted"
        - "stale"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "The type of runners to return"
        required: false
        type: "string"
        enum:
        - "instance_type"
        - "group_type"
        - "project_type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "paused"
        in: "query"
        description: "Whether to include only runners that are accepting or ignoring\
          \ new jobs"
        required: false
        type: "boolean"
        x-exportParamName: "Paused"
        x-optionalDataType: "Bool"
      - name: "status"
        in: "query"
        description: "The status of runners to return"
        required: false
        type: "string"
        enum:
        - "active"
        - "paused"
        - "online"
        - "offline"
        - "never_contacted"
        - "stale"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "tag_list"
        in: "query"
        description: "A list of runner tags"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TagList"
      - name: "version_prefix"
        in: "query"
        description: "The version prefix of runners to return"
        required: false
        type: "string"
        x-exportParamName: "VersionPrefix"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get runners available for project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Runner"
        "400":
          description: "Scope contains invalid value"
        "403":
          description: "No access granted"
    post:
      tags:
      - "runners"
      - "projects"
      summary: "Enable a runner in project"
      description: "Enable an available project runner in the project."
      operationId: "postApiV4ProjectsIdRunners"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdRunners"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRunners"
        x-exportParamName: "PostApiV4ProjectsIdRunners"
      responses:
        "201":
          description: "Enable a runner in project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Runner"
        "400":
          description: "Bad Request"
        "403":
          description: "No access granted"
        "404":
          description: "Runner not found"
  /api/v4/projects/{id}/runners/{runner_id}:
    delete:
      tags:
      - "runners"
      - "projects"
      summary: "Disable a project runner from the project"
      description: "It works only if the project isn't the only project associated\
        \ with the specified runner. If so, an error is returned. Use the call to\
        \ delete a runner instead."
      operationId: "deleteApiV4ProjectsIdRunnersRunnerId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "runner_id"
        in: "path"
        description: "The ID of a runner"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RunnerId"
      responses:
        "204":
          description: "Disable project's runner"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Runner"
        "400":
          description: "Bad Request"
        "403":
          description: "Only one project associated with the runner. Please remove\
            \ the runner instead"
        "404":
          description: "Runner not found"
        "412":
          description: "Precondition Failed"
  /api/v4/projects/{id}/runners/reset_registration_token:
    post:
      tags:
      - "runners"
      - "projects"
      summary: "Reset the runner registration token for a project"
      description: "Reset runner registration token"
      operationId: "postApiV4ProjectsIdRunnersResetRegistrationToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Reset runner registration token"
          schema:
            $ref: "#/definitions/API_Entities_Ci_ResetTokenResult"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Project Not Found"
  /api/v4/projects/{id}/secure_files:
    get:
      tags:
      - "secure_files"
      description: "Get list of secure files in a project"
      operationId: "getApiV4ProjectsIdSecureFiles"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the\n   \
          \     authenticated user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get list of secure files in a project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_SecureFile"
    post:
      tags:
      - "secure_files"
      description: "Create a secure file"
      operationId: "postApiV4ProjectsIdSecureFiles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the\n   \
          \     authenticated user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdSecureFiles"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdSecureFiles"
        x-exportParamName: "PostApiV4ProjectsIdSecureFiles"
      responses:
        "201":
          description: "Create a secure file"
          schema:
            $ref: "#/definitions/API_Entities_Ci_SecureFile"
        "400":
          description: "400 Bad Request"
  /api/v4/projects/{id}/secure_files/{secure_file_id}:
    get:
      tags:
      - "secure_files"
      description: "Get the details of a specific secure file in a project"
      operationId: "getApiV4ProjectsIdSecureFilesSecureFileId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a secure file"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "secure_file_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SecureFileId"
      responses:
        "200":
          description: "Get the details of a specific secure file in a project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_SecureFile"
        "404":
          description: "404 Not found"
    delete:
      tags:
      - "secure_files"
      description: "Remove a secure file"
      operationId: "deleteApiV4ProjectsIdSecureFilesSecureFileId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the\n   \
          \     authenticated user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "secure_file_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SecureFileId"
      responses:
        "204":
          description: "Remove a secure file"
        "404":
          description: "404 Not found"
  /api/v4/projects/{id}/secure_files/{secure_file_id}/download:
    get:
      tags:
      - "secure_files"
      description: "Download secure file"
      operationId: "getApiV4ProjectsIdSecureFilesSecureFileIdDownload"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the\n   \
          \     authenticated user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "secure_file_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SecureFileId"
      responses:
        "200":
          description: "Download secure file"
        "404":
          description: "404 Not found"
  /api/v4/projects/{id}/pipelines:
    get:
      tags:
      - "projects"
      summary: "Get all Pipelines of the project"
      description: "This feature was introduced in GitLab 8.11."
      operationId: "getApiV4ProjectsIdPipelines"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "scope"
        in: "query"
        description: "The scope of pipelines"
        required: false
        type: "string"
        enum:
        - "running"
        - "pending"
        - "finished"
        - "branches"
        - "tags"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "The status of pipelines"
        required: false
        type: "string"
        enum:
        - "created"
        - "waiting_for_resource"
        - "preparing"
        - "waiting_for_callback"
        - "pending"
        - "running"
        - "success"
        - "failed"
        - "canceling"
        - "canceled"
        - "skipped"
        - "manual"
        - "scheduled"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "ref"
        in: "query"
        description: "The ref of pipelines"
        required: false
        type: "string"
        x-exportParamName: "Ref"
        x-optionalDataType: "String"
      - name: "sha"
        in: "query"
        description: "The sha of pipelines"
        required: false
        type: "string"
        x-exportParamName: "Sha"
        x-optionalDataType: "String"
      - name: "yaml_errors"
        in: "query"
        description: "Returns pipelines with invalid configurations"
        required: false
        type: "boolean"
        x-exportParamName: "YamlErrors"
        x-optionalDataType: "Bool"
      - name: "username"
        in: "query"
        description: "The username of the user who triggered pipelines"
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "updated_before"
        in: "query"
        description: "Return pipelines updated before the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "updated_after"
        in: "query"
        description: "Return pipelines updated after the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      - name: "order_by"
        in: "query"
        description: "Order pipelines"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "status"
        - "ref"
        - "updated_at"
        - "user_id"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Sort pipelines"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "source"
        in: "query"
        required: false
        type: "string"
        enum:
        - "unknown"
        - "push"
        - "web"
        - "trigger"
        - "schedule"
        - "api"
        - "external"
        - "pipeline"
        - "chat"
        - "webide"
        - "merge_request_event"
        - "external_pull_request_event"
        - "parent_pipeline"
        - "ondemand_dast_scan"
        - "ondemand_dast_validation"
        - "security_orchestration_policy"
        - "container_registry_push"
        x-exportParamName: "Source"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter pipelines by name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get all Pipelines of the project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
  /api/v4/projects/{id}/pipeline:
    post:
      tags:
      - "projects"
      summary: "Create a new pipeline"
      description: "This feature was introduced in GitLab 8.14"
      operationId: "postApiV4ProjectsIdPipeline"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdPipeline"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdPipeline"
        x-exportParamName: "PostApiV4ProjectsIdPipeline"
      responses:
        "201":
          description: "Create a new pipeline"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Pipeline"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipelines/latest:
    get:
      tags:
      - "projects"
      summary: "Gets the latest pipeline for the project branch"
      description: "This feature was introduced in GitLab 12.3"
      operationId: "getApiV4ProjectsIdPipelinesLatest"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "ref"
        in: "query"
        description: "Branch ref of pipeline. Uses project default branch if not specified."
        required: false
        type: "string"
        x-exportParamName: "Ref"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Gets the latest pipeline for the project branch"
          schema:
            $ref: "#/definitions/API_Entities_Ci_PipelineWithMetadata"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipelines/{pipeline_id}:
    get:
      tags:
      - "projects"
      summary: "Gets a specific pipeline for the project"
      description: "This feature was introduced in GitLab 8.11"
      operationId: "getApiV4ProjectsIdPipelinesPipelineId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_id"
        in: "path"
        description: "The pipeline ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineId"
      responses:
        "200":
          description: "Gets a specific pipeline for the project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_PipelineWithMetadata"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "projects"
      summary: "Deletes a pipeline"
      description: "This feature was introduced in GitLab 11.6"
      operationId: "deleteApiV4ProjectsIdPipelinesPipelineId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_id"
        in: "path"
        description: "The pipeline ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineId"
      responses:
        "204":
          description: "Pipeline was deleted"
        "403":
          description: "Forbidden"
  /api/v4/projects/{id}/pipelines/{pipeline_id}/jobs:
    get:
      tags:
      - "projects"
      description: "Get pipeline jobs"
      operationId: "getApiV4ProjectsIdPipelinesPipelineIdJobs"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_id"
        in: "path"
        description: "The pipeline ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineId"
      - name: "include_retried"
        in: "query"
        description: "Includes retried jobs"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeRetried"
        x-optionalDataType: "Bool"
      - name: "scope"
        in: "query"
        description: "The scope of builds to show"
        required: false
        type: "string"
        enum:
        - "created"
        - "waiting_for_resource"
        - "preparing"
        - "waiting_for_callback"
        - "pending"
        - "running"
        - "success"
        - "failed"
        - "canceling"
        - "canceled"
        - "skipped"
        - "manual"
        - "scheduled"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get pipeline jobs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Ci_Job"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipelines/{pipeline_id}/bridges:
    get:
      tags:
      - "projects"
      description: "Get pipeline bridge jobs"
      operationId: "getApiV4ProjectsIdPipelinesPipelineIdBridges"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_id"
        in: "path"
        description: "The pipeline ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineId"
      - name: "scope"
        in: "query"
        description: "The scope of builds to show"
        required: false
        type: "string"
        enum:
        - "created"
        - "waiting_for_resource"
        - "preparing"
        - "waiting_for_callback"
        - "pending"
        - "running"
        - "success"
        - "failed"
        - "canceling"
        - "canceled"
        - "skipped"
        - "manual"
        - "scheduled"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get pipeline bridge jobs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Ci_Bridge"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipelines/{pipeline_id}/variables:
    get:
      tags:
      - "projects"
      summary: "Gets the variables for a given pipeline"
      description: "This feature was introduced in GitLab 11.11"
      operationId: "getApiV4ProjectsIdPipelinesPipelineIdVariables"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_id"
        in: "path"
        description: "The pipeline ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineId"
      responses:
        "200":
          description: "Gets the variables for a given pipeline"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Ci_Variable"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipelines/{pipeline_id}/test_report:
    get:
      tags:
      - "projects"
      summary: "Gets the test report for a given pipeline"
      description: "This feature was introduced in GitLab 13.0."
      operationId: "getApiV4ProjectsIdPipelinesPipelineIdTestReport"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_id"
        in: "path"
        description: "The pipeline ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineId"
      responses:
        "200":
          description: "Gets the test report for a given pipeline"
          schema:
            $ref: "#/definitions/TestReportEntity"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipelines/{pipeline_id}/test_report_summary:
    get:
      tags:
      - "projects"
      summary: "Gets the test report summary for a given pipeline"
      description: "This feature was introduced in GitLab 14.2"
      operationId: "getApiV4ProjectsIdPipelinesPipelineIdTestReportSummary"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_id"
        in: "path"
        description: "The pipeline ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineId"
      responses:
        "200":
          description: "Gets the test report summary for a given pipeline"
          schema:
            $ref: "#/definitions/TestReportSummaryEntity"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipelines/{pipeline_id}/metadata:
    put:
      tags:
      - "projects"
      summary: "Updates pipeline metadata"
      description: "This feature was introduced in GitLab 16.6"
      operationId: "putApiV4ProjectsIdPipelinesPipelineIdMetadata"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_id"
        in: "path"
        description: "The pipeline ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineId"
      - in: "body"
        name: "putApiV4ProjectsIdPipelinesPipelineIdMetadata"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPipelinesPipelineIdMetadata"
        x-exportParamName: "PutApiV4ProjectsIdPipelinesPipelineIdMetadata"
      responses:
        "200":
          description: "Updates pipeline metadata"
          schema:
            $ref: "#/definitions/API_Entities_Ci_PipelineWithMetadata"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipelines/{pipeline_id}/retry:
    post:
      tags:
      - "projects"
      summary: "Retry builds in the pipeline"
      description: "This feature was introduced in GitLab 8.11."
      operationId: "postApiV4ProjectsIdPipelinesPipelineIdRetry"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_id"
        in: "path"
        description: "The pipeline ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineId"
      responses:
        "201":
          description: "Retry builds in the pipeline"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Pipeline"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipelines/{pipeline_id}/cancel:
    post:
      tags:
      - "projects"
      summary: "Cancel all builds in the pipeline"
      description: "This feature was introduced in GitLab 8.11."
      operationId: "postApiV4ProjectsIdPipelinesPipelineIdCancel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or URL-encoded path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_id"
        in: "path"
        description: "The pipeline ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineId"
      responses:
        "201":
          description: "Cancel all builds in the pipeline"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Pipeline"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipeline_schedules:
    get:
      tags:
      - "projects"
      description: "Get all pipeline schedules"
      operationId: "getApiV4ProjectsIdPipelineSchedules"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "scope"
        in: "query"
        description: "The scope of pipeline schedules"
        required: false
        type: "string"
        enum:
        - "active"
        - "inactive"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get all pipeline schedules"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Ci_PipelineSchedule"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    post:
      tags:
      - "projects"
      description: "Create a new pipeline schedule"
      operationId: "postApiV4ProjectsIdPipelineSchedules"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdPipelineSchedules"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdPipelineSchedules"
        x-exportParamName: "PostApiV4ProjectsIdPipelineSchedules"
      responses:
        "201":
          description: "Create a new pipeline schedule"
          schema:
            $ref: "#/definitions/API_Entities_Ci_PipelineScheduleDetails"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}:
    get:
      tags:
      - "projects"
      description: "Get a single pipeline schedule"
      operationId: "getApiV4ProjectsIdPipelineSchedulesPipelineScheduleId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_schedule_id"
        in: "path"
        description: "The pipeline schedule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineScheduleId"
      responses:
        "200":
          description: "Get a single pipeline schedule"
          schema:
            $ref: "#/definitions/API_Entities_Ci_PipelineScheduleDetails"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    put:
      tags:
      - "projects"
      description: "Edit a pipeline schedule"
      operationId: "putApiV4ProjectsIdPipelineSchedulesPipelineScheduleId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_schedule_id"
        in: "path"
        description: "The pipeline schedule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineScheduleId"
      - in: "body"
        name: "putApiV4ProjectsIdPipelineSchedulesPipelineScheduleId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPipelineSchedulesPipelineScheduleId"
        x-exportParamName: "PutApiV4ProjectsIdPipelineSchedulesPipelineScheduleId"
      responses:
        "200":
          description: "Edit a pipeline schedule"
          schema:
            $ref: "#/definitions/API_Entities_Ci_PipelineScheduleDetails"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "projects"
      description: "Delete a pipeline schedule"
      operationId: "deleteApiV4ProjectsIdPipelineSchedulesPipelineScheduleId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_schedule_id"
        in: "path"
        description: "The pipeline schedule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineScheduleId"
      responses:
        "204":
          description: "Delete a pipeline schedule"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "412":
          description: "Precondition Failed"
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/pipelines:
    get:
      tags:
      - "projects"
      description: "Get all pipelines triggered from a pipeline schedule"
      operationId: "getApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdPipelines"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_schedule_id"
        in: "path"
        description: "The pipeline schedule ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineScheduleId"
      responses:
        "200":
          description: "Get all pipelines triggered from a pipeline schedule"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/take_ownership:
    post:
      tags:
      - "projects"
      description: "Take ownership of a pipeline schedule"
      operationId: "postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdTakeOwnership"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_schedule_id"
        in: "path"
        description: "The pipeline schedule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineScheduleId"
      responses:
        "201":
          description: "Take ownership of a pipeline schedule"
          schema:
            $ref: "#/definitions/API_Entities_Ci_PipelineScheduleDetails"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/play:
    post:
      tags:
      - "projects"
      summary: "Play a scheduled pipeline immediately"
      description: "This feature was added in GitLab 12.8"
      operationId: "postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdPlay"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_schedule_id"
        in: "path"
        description: "The pipeline schedule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineScheduleId"
      responses:
        "201":
          description: "Play a scheduled pipeline immediately"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables:
    post:
      tags:
      - "projects"
      description: "Create a new pipeline schedule variable"
      operationId: "postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariables"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_schedule_id"
        in: "path"
        description: "The pipeline schedule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineScheduleId"
      - in: "body"
        name: "postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariables"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariables"
        x-exportParamName: "PostApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariables"
      responses:
        "201":
          description: "Create a new pipeline schedule variable"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}:
    put:
      tags:
      - "projects"
      description: "Edit a pipeline schedule variable"
      operationId: "putApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_schedule_id"
        in: "path"
        description: "The pipeline schedule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineScheduleId"
      - name: "key"
        in: "path"
        description: "The key of the variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - in: "body"
        name: "putApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey"
        x-exportParamName: "PutApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey"
      responses:
        "200":
          description: "Edit a pipeline schedule variable"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "projects"
      description: "Delete a pipeline schedule variable"
      operationId: "deleteApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pipeline_schedule_id"
        in: "path"
        description: "The pipeline schedule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PipelineScheduleId"
      - name: "key"
        in: "path"
        description: "The key of the variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        "202":
          description: "Delete a pipeline schedule variable"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/(ref/{ref}/)trigger/pipeline:
    post:
      tags:
      - "projects"
      description: "Trigger a GitLab project pipeline"
      operationId: "postApiV4ProjectsId(refRef)triggerPipeline"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "ref"
        in: "path"
        description: "The commit sha or name of a branch or tag"
        required: true
        type: "string"
        x-exportParamName: "Ref"
      - in: "body"
        name: "postApiV4ProjectsId(refRef)triggerPipeline"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsId(refRef)triggerPipeline"
        x-exportParamName: "PostApiV4ProjectsIdRefReftriggerPipeline"
      responses:
        "201":
          description: "Trigger a GitLab project pipeline"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Pipeline"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/triggers:
    get:
      tags:
      - "projects"
      description: "Get trigger tokens list"
      operationId: "getApiV4ProjectsIdTriggers"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get trigger tokens list"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Trigger"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    post:
      tags:
      - "projects"
      description: "Create a trigger token"
      operationId: "postApiV4ProjectsIdTriggers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdTriggers"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdTriggers"
        x-exportParamName: "PostApiV4ProjectsIdTriggers"
      responses:
        "201":
          description: "Create a trigger token"
          schema:
            $ref: "#/definitions/API_Entities_Trigger"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/triggers/{trigger_id}:
    get:
      tags:
      - "projects"
      description: "Get specific trigger token of a project"
      operationId: "getApiV4ProjectsIdTriggersTriggerId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "trigger_id"
        in: "path"
        description: "The trigger token ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TriggerId"
      responses:
        "200":
          description: "Get specific trigger token of a project"
          schema:
            $ref: "#/definitions/API_Entities_Trigger"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    put:
      tags:
      - "projects"
      description: "Update a trigger token"
      operationId: "putApiV4ProjectsIdTriggersTriggerId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "trigger_id"
        in: "path"
        description: "The trigger token ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TriggerId"
      - in: "body"
        name: "putApiV4ProjectsIdTriggersTriggerId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdTriggersTriggerId"
        x-exportParamName: "PutApiV4ProjectsIdTriggersTriggerId"
      responses:
        "200":
          description: "Update a trigger token"
          schema:
            $ref: "#/definitions/API_Entities_Trigger"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "projects"
      description: "Delete a trigger token"
      operationId: "deleteApiV4ProjectsIdTriggersTriggerId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "trigger_id"
        in: "path"
        description: "The trigger token ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TriggerId"
      responses:
        "204":
          description: "Delete a trigger token"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "412":
          description: "Precondition Failed"
  /api/v4/projects/{id}/variables:
    get:
      tags:
      - "ci_variables"
      description: "Get project variables"
      operationId: "getApiV4ProjectsIdVariables"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of\
          \ the project owned by the authenticated user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get project variables"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
    post:
      tags:
      - "ci_variables"
      description: "Create a new variable in a project"
      operationId: "postApiV4ProjectsIdVariables"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of\
          \ the project owned by the authenticated user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdVariables"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdVariables"
        x-exportParamName: "PostApiV4ProjectsIdVariables"
      responses:
        "201":
          description: "Create a new variable in a project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "400":
          description: "400 Bad Request"
  /api/v4/projects/{id}/variables/{key}:
    get:
      tags:
      - "ci_variables"
      description: "Get the details of a single variable from a project"
      operationId: "getApiV4ProjectsIdVariablesKey"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of\
          \ the project owned by the authenticated user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "path"
        description: "The key of a variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "filter[environment_scope]"
        in: "query"
        description: "The environment scope of a variable"
        required: false
        type: "string"
        x-exportParamName: "FilterEnvironmentScope"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get the details of a single variable from a project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "404":
          description: "Variable Not Found"
    put:
      tags:
      - "ci_variables"
      description: "Update an existing variable from a project"
      operationId: "putApiV4ProjectsIdVariablesKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of\
          \ the project owned by the authenticated user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "path"
        description: "The key of a variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - in: "body"
        name: "putApiV4ProjectsIdVariablesKey"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdVariablesKey"
        x-exportParamName: "PutApiV4ProjectsIdVariablesKey"
      responses:
        "200":
          description: "Update an existing variable from a project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "404":
          description: "Variable Not Found"
    delete:
      tags:
      - "ci_variables"
      description: "Delete an existing variable from a project"
      operationId: "deleteApiV4ProjectsIdVariablesKey"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of\
          \ the project owned by the authenticated user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key"
        in: "path"
        description: "The key of a variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "filter[environment_scope]"
        in: "query"
        description: "The environment scope of the variable"
        required: false
        type: "string"
        x-exportParamName: "FilterEnvironmentScope"
        x-optionalDataType: "String"
      responses:
        "204":
          description: "Delete an existing variable from a project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "404":
          description: "Variable Not Found"
  /api/v4/projects/{id}/cluster_agents:
    get:
      tags:
      - "cluster_agents"
      summary: "List the agents for a project"
      description: "This feature was introduced in GitLab 14.10. Returns the list\
        \ of agents registered for the project."
      operationId: "getApiV4ProjectsIdClusterAgents"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List the agents for a project"
          schema:
            $ref: "#/definitions/API_Entities_Clusters_Agent"
    post:
      tags:
      - "cluster_agents"
      summary: "Register an agent with a project"
      description: "This feature was introduced in GitLab 14.10. Registers an agent\
        \ to the project."
      operationId: "postApiV4ProjectsIdClusterAgents"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdClusterAgents"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdClusterAgents"
        x-exportParamName: "PostApiV4ProjectsIdClusterAgents"
      responses:
        "201":
          description: "Register an agent with a project"
          schema:
            $ref: "#/definitions/API_Entities_Clusters_Agent"
  /api/v4/projects/{id}/cluster_agents/{agent_id}:
    get:
      tags:
      - "cluster_agents"
      summary: "Get details about an agent"
      description: "This feature was introduced in GitLab 14.10. Gets a single agent\
        \ details."
      operationId: "getApiV4ProjectsIdClusterAgentsAgentId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "agent_id"
        in: "path"
        description: "The ID of an agent"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AgentId"
      responses:
        "200":
          description: "Get details about an agent"
          schema:
            $ref: "#/definitions/API_Entities_Clusters_Agent"
    delete:
      tags:
      - "cluster_agents"
      summary: "Delete a registered agent"
      description: "This feature was introduced in GitLab 14.10. Deletes an existing\
        \ agent registration."
      operationId: "deleteApiV4ProjectsIdClusterAgentsAgentId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "agent_id"
        in: "path"
        description: "The ID of an agent"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AgentId"
      responses:
        "204":
          description: "Delete a registered agent"
  /api/v4/projects/{id}/repository/commits:
    get:
      tags:
      - "commits"
      description: "Get a project repository commits"
      operationId: "getApiV4ProjectsIdRepositoryCommits"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "ref_name"
        in: "query"
        description: "The name of a repository branch or tag, if not given the default\
          \ branch is used"
        required: false
        type: "string"
        x-exportParamName: "RefName"
        x-optionalDataType: "String"
      - name: "since"
        in: "query"
        description: "Only commits after or on this date will be returned"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "Since"
        x-optionalDataType: "Time"
      - name: "until"
        in: "query"
        description: "Only commits before or on this date will be returned"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "Until"
        x-optionalDataType: "Time"
      - name: "path"
        in: "query"
        description: "The file path"
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      - name: "author"
        in: "query"
        description: "Search commits by commit author"
        required: false
        type: "string"
        x-exportParamName: "Author"
        x-optionalDataType: "String"
      - name: "all"
        in: "query"
        description: "Every commit will be returned"
        required: false
        type: "boolean"
        x-exportParamName: "All"
        x-optionalDataType: "Bool"
      - name: "with_stats"
        in: "query"
        description: "Stats about each commit will be added to the response"
        required: false
        type: "boolean"
        x-exportParamName: "WithStats"
        x-optionalDataType: "Bool"
      - name: "first_parent"
        in: "query"
        description: "Only include the first parent of merges"
        required: false
        type: "boolean"
        x-exportParamName: "FirstParent"
        x-optionalDataType: "Bool"
      - name: "order"
        in: "query"
        description: "List commits in order"
        required: false
        type: "string"
        default: "default"
        enum:
        - "default"
        - "topo"
        x-exportParamName: "Order"
        x-optionalDataType: "String"
      - name: "trailers"
        in: "query"
        description: "Parse and include Git trailers for every commit"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Trailers"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a project repository commits"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Commit"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "commits"
      summary: "Commit multiple file changes as one commit"
      description: "This feature was introduced in GitLab 8.13"
      operationId: "postApiV4ProjectsIdRepositoryCommits"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdRepositoryCommits"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRepositoryCommits"
        x-exportParamName: "PostApiV4ProjectsIdRepositoryCommits"
      responses:
        "200":
          description: "Commit multiple file changes as one commit"
          schema:
            $ref: "#/definitions/API_Entities_CommitDetail"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/commits/{sha}:
    get:
      tags:
      - "commits"
      description: "Get a specific commit of a project"
      operationId: "getApiV4ProjectsIdRepositoryCommitsSha"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "A commit sha, or the name of a branch or tag"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - name: "stats"
        in: "query"
        description: "Include commit stats"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "Stats"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a specific commit of a project"
          schema:
            $ref: "#/definitions/API_Entities_CommitDetail"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/commits/{sha}/diff:
    get:
      tags:
      - "commits"
      description: "Get the diff for a specific commit of a project"
      operationId: "getApiV4ProjectsIdRepositoryCommitsShaDiff"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "A commit sha, or the name of a branch or tag"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "unidiff"
        in: "query"
        description: "A diff in a Unified diff format"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Unidiff"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get the diff for a specific commit of a project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Diff"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/commits/{sha}/comments:
    get:
      tags:
      - "commits"
      description: "Get a commit's comments"
      operationId: "getApiV4ProjectsIdRepositoryCommitsShaComments"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "sha"
        in: "path"
        description: "A commit sha, or the name of a branch or tag"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      responses:
        "200":
          description: "Get a commit's comments"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_CommitNote"
        "404":
          description: "Not found"
    post:
      tags:
      - "commits"
      description: "Post comment to commit"
      operationId: "postApiV4ProjectsIdRepositoryCommitsShaComments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "A commit sha, or the name of a branch or tag on which to post\
          \ a comment"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - in: "body"
        name: "postApiV4ProjectsIdRepositoryCommitsShaComments"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRepositoryCommitsShaComments"
        x-exportParamName: "PostApiV4ProjectsIdRepositoryCommitsShaComments"
      responses:
        "200":
          description: "Post comment to commit"
          schema:
            $ref: "#/definitions/API_Entities_CommitNote"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/commits/{sha}/sequence:
    get:
      tags:
      - "commits"
      description: "Get the sequence count of a commit SHA"
      operationId: "getApiV4ProjectsIdRepositoryCommitsShaSequence"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "A commit SHA"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - name: "first_parent"
        in: "query"
        description: "Only include the first parent of merges"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "FirstParent"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get the sequence count of a commit SHA"
          schema:
            $ref: "#/definitions/API_Entities_CommitSequence"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/commits/{sha}/cherry_pick:
    post:
      tags:
      - "commits"
      summary: "Cherry pick commit into a branch"
      description: "This feature was introduced in GitLab 8.15"
      operationId: "postApiV4ProjectsIdRepositoryCommitsShaCherryPick"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "A commit sha, or the name of a branch or tag to be cherry picked"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - in: "body"
        name: "postApiV4ProjectsIdRepositoryCommitsShaCherryPick"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRepositoryCommitsShaCherryPick"
        x-exportParamName: "PostApiV4ProjectsIdRepositoryCommitsShaCherryPick"
      responses:
        "200":
          description: "Cherry pick commit into a branch"
          schema:
            $ref: "#/definitions/API_Entities_Commit"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/commits/{sha}/revert:
    post:
      tags:
      - "commits"
      summary: "Revert a commit in a branch"
      description: "This feature was introduced in GitLab 11.5"
      operationId: "postApiV4ProjectsIdRepositoryCommitsShaRevert"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "Commit SHA to revert"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - in: "body"
        name: "postApiV4ProjectsIdRepositoryCommitsShaRevert"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRepositoryCommitsShaRevert"
        x-exportParamName: "PostApiV4ProjectsIdRepositoryCommitsShaRevert"
      responses:
        "200":
          description: "Revert a commit in a branch"
          schema:
            $ref: "#/definitions/API_Entities_Commit"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/commits/{sha}/refs:
    get:
      tags:
      - "commits"
      summary: "Get all references a commit is pushed to"
      description: "This feature was introduced in GitLab 10.6"
      operationId: "getApiV4ProjectsIdRepositoryCommitsShaRefs"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "A commit sha"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - name: "type"
        in: "query"
        description: "Scope"
        required: false
        type: "string"
        default: "all"
        enum:
        - "branch"
        - "tag"
        - "all"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get all references a commit is pushed to"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BasicRef"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/commits/{sha}/merge_requests:
    get:
      tags:
      - "commits"
      description: "Get Merge Requests associated with a commit"
      operationId: "getApiV4ProjectsIdRepositoryCommitsShaMergeRequests"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "A commit sha, or the name of a branch or tag on which to find\
          \ Merge Requests"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get Merge Requests associated with a commit"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_MergeRequestBasic"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/commits/{sha}/signature:
    get:
      tags:
      - "commits"
      description: "Get a commit's signature"
      operationId: "getApiV4ProjectsIdRepositoryCommitsShaSignature"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "A commit sha, or the name of a branch or tag"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      responses:
        "200":
          description: "Get a commit's signature"
          schema:
            $ref: "#/definitions/API_Entities_CommitSignature"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/commits/{sha}/statuses:
    get:
      tags:
      - "projects"
      description: "Get a commit's statuses"
      operationId: "getApiV4ProjectsIdRepositoryCommitsShaStatuses"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "The commit hash"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - name: "ref"
        in: "query"
        description: "The ref"
        required: false
        type: "string"
        x-exportParamName: "Ref"
        x-optionalDataType: "String"
      - name: "stage"
        in: "query"
        description: "The stage"
        required: false
        type: "string"
        x-exportParamName: "Stage"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "The name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "all"
        in: "query"
        description: "Show all statuses"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "All"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a commit's statuses"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_CommitStatus"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/statuses/{sha}:
    post:
      tags:
      - "projects"
      description: "Post status to a commit"
      operationId: "postApiV4ProjectsIdStatusesSha"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "The commit hash"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - in: "body"
        name: "postApiV4ProjectsIdStatusesSha"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdStatusesSha"
        x-exportParamName: "PostApiV4ProjectsIdStatusesSha"
      responses:
        "200":
          description: "Post status to a commit"
          schema:
            $ref: "#/definitions/API_Entities_CommitStatus"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/deploy_keys:
    get:
      tags:
      - "deploy_keys"
      summary: "List deploy keys for project"
      description: "Get a list of a project's deploy keys."
      operationId: "getApiV4ProjectsIdDeployKeys"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List deploy keys for project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_DeployKeysProject"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "deploy_keys"
      summary: "Add deploy key"
      description: "Creates a new deploy key for a project. If the deploy key already\
        \ exists in another project, it's joined to the current project only if the\
        \ original one is accessible by the same user."
      operationId: "postApiV4ProjectsIdDeployKeys"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdDeployKeys"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdDeployKeys"
        x-exportParamName: "PostApiV4ProjectsIdDeployKeys"
      responses:
        "201":
          description: "Add deploy key"
          schema:
            $ref: "#/definitions/API_Entities_DeployKeysProject"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/deploy_keys/{key_id}:
    get:
      tags:
      - "deploy_keys"
      summary: "Get a single deploy key"
      description: "Get a single key."
      operationId: "getApiV4ProjectsIdDeployKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key_id"
        in: "path"
        description: "The ID of the deploy key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "200":
          description: "Get a single deploy key"
          schema:
            $ref: "#/definitions/API_Entities_DeployKeysProject"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "deploy_keys"
      summary: "Update deploy key"
      description: "Updates a deploy key for a project."
      operationId: "putApiV4ProjectsIdDeployKeysKeyId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key_id"
        in: "path"
        description: "The ID of the deploy key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      - in: "body"
        name: "putApiV4ProjectsIdDeployKeysKeyId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdDeployKeysKeyId"
        x-exportParamName: "PutApiV4ProjectsIdDeployKeysKeyId"
      responses:
        "200":
          description: "Update deploy key"
          schema:
            $ref: "#/definitions/API_Entities_DeployKey"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "deploy_keys"
      summary: "Delete deploy key"
      description: "Removes a deploy key from the project. If the deploy key is used\
        \ only for this project, it's deleted from the system."
      operationId: "deleteApiV4ProjectsIdDeployKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key_id"
        in: "path"
        description: "The ID of the deploy key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "204":
          description: "Delete deploy key"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/deploy_keys/{key_id}/enable:
    post:
      tags:
      - "deploy_keys"
      summary: "Enable a deploy key"
      description: "Enables a deploy key for a project so this can be used. Returns\
        \ the enabled key, with a status code 201 when successful. This feature was\
        \ added in GitLab 8.11."
      operationId: "postApiV4ProjectsIdDeployKeysKeyIdEnable"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key_id"
        in: "path"
        description: "The ID of the deploy key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "201":
          description: "Enable a deploy key"
          schema:
            $ref: "#/definitions/API_Entities_DeployKey"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/deploy_tokens:
    get:
      tags:
      - "deploy_tokens"
      summary: "List project deploy tokens"
      description: "Get a list of a project's deploy tokens. This feature was introduced\
        \ in GitLab 12.9."
      operationId: "getApiV4ProjectsIdDeployTokens"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "active"
        in: "query"
        description: "Limit by active status"
        required: false
        type: "boolean"
        x-exportParamName: "Active"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "List project deploy tokens"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_DeployToken"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    post:
      tags:
      - "deploy_tokens"
      summary: "Create a project deploy token"
      description: "Creates a new deploy token for a project. This feature was introduced\
        \ in GitLab 12.9."
      operationId: "postApiV4ProjectsIdDeployTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdDeployTokens"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdDeployTokens"
        x-exportParamName: "PostApiV4ProjectsIdDeployTokens"
      responses:
        "201":
          description: "Create a project deploy token"
          schema:
            $ref: "#/definitions/API_Entities_DeployTokenWithToken"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/deploy_tokens/{token_id}:
    get:
      tags:
      - "deploy_tokens"
      summary: "Get a project deploy token"
      description: "Get a single project's deploy token by ID. This feature was introduced\
        \ in GitLab 14.9."
      operationId: "getApiV4ProjectsIdDeployTokensTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "token_id"
        in: "path"
        description: "The ID of the deploy token"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TokenId"
      responses:
        "200":
          description: "Get a project deploy token"
          schema:
            $ref: "#/definitions/API_Entities_DeployToken"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "deploy_tokens"
      summary: "Delete a project deploy token"
      description: "This feature was introduced in GitLab 12.9."
      operationId: "deleteApiV4ProjectsIdDeployTokensTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "token_id"
        in: "path"
        description: "The ID of the deploy token"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TokenId"
      responses:
        "204":
          description: "Delete a project deploy token"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/deployments:
    get:
      tags:
      - "deployments"
      summary: "List project deployments"
      description: "Get a list of deployments in a project. This feature was introduced\
        \ in GitLab 8.11."
      operationId: "getApiV4ProjectsIdDeployments"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "order_by"
        in: "query"
        description: "Return deployments ordered by either one of `id`, `iid`, `created_at`,\
          \ `updated_at` or `ref` fields. Default is `id`"
        required: false
        type: "string"
        default: "id"
        enum:
        - "id"
        - "iid"
        - "created_at"
        - "updated_at"
        - "finished_at"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return deployments sorted in `asc` or `desc` order. Default\
          \ is `asc`"
        required: false
        type: "string"
        default: "asc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "updated_after"
        in: "query"
        description: "Return deployments updated after the specified date. Expected\
          \ in ISO 8601 format (`2019-03-15T08:00:00Z`)"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      - name: "updated_before"
        in: "query"
        description: "Return deployments updated before the specified date. Expected\
          \ in ISO 8601 format (`2019-03-15T08:00:00Z`)"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "finished_after"
        in: "query"
        description: "Return deployments finished after the specified date. Expected\
          \ in ISO 8601 format (`2019-03-15T08:00:00Z`)"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "FinishedAfter"
        x-optionalDataType: "Time"
      - name: "finished_before"
        in: "query"
        description: "Return deployments finished before the specified date. Expected\
          \ in ISO 8601 format (`2019-03-15T08:00:00Z`)"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "FinishedBefore"
        x-optionalDataType: "Time"
      - name: "environment"
        in: "query"
        description: "The name of the environment to filter deployments by"
        required: false
        type: "string"
        x-exportParamName: "Environment"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "The status to filter deployments by. One of `created`, `running`,\
          \ `success`, `failed`, `canceled`, or `blocked`"
        required: false
        type: "string"
        enum:
        - "created"
        - "running"
        - "success"
        - "failed"
        - "canceled"
        - "skipped"
        - "blocked"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List project deployments"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Deployment"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "deployments"
      summary: "Create a deployment"
      description: "This feature was introduced in GitLab 12.4."
      operationId: "postApiV4ProjectsIdDeployments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdDeployments"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdDeployments"
        x-exportParamName: "PostApiV4ProjectsIdDeployments"
      responses:
        "201":
          description: "Create a deployment"
          schema:
            $ref: "#/definitions/API_Entities_DeploymentExtended"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/deployments/{deployment_id}:
    get:
      tags:
      - "deployments"
      summary: "Get a specific deployment"
      description: "This feature was introduced in GitLab 8.11."
      operationId: "getApiV4ProjectsIdDeploymentsDeploymentId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "deployment_id"
        in: "path"
        description: "The ID of the deployment"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DeploymentId"
      responses:
        "200":
          description: "Get a specific deployment"
          schema:
            $ref: "#/definitions/API_Entities_DeploymentExtended"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "deployments"
      summary: "Update a deployment"
      description: "This feature was introduced in GitLab 12.4."
      operationId: "putApiV4ProjectsIdDeploymentsDeploymentId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "deployment_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DeploymentId"
      - in: "body"
        name: "putApiV4ProjectsIdDeploymentsDeploymentId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdDeploymentsDeploymentId"
        x-exportParamName: "PutApiV4ProjectsIdDeploymentsDeploymentId"
      responses:
        "200":
          description: "Update a deployment"
          schema:
            $ref: "#/definitions/API_Entities_DeploymentExtended"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "deployments"
      summary: "Delete a specific deployment"
      description: "Delete a specific deployment that is not currently the last deployment\
        \ for an environment or in a running state. This feature was introduced in\
        \ GitLab 15.3."
      operationId: "deleteApiV4ProjectsIdDeploymentsDeploymentId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "deployment_id"
        in: "path"
        description: "The ID of the deployment"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DeploymentId"
      responses:
        "204":
          description: "Deployment destroyed"
        "400":
          description: "\"Cannot destroy running deployment\" or \"Deployment currently\
            \ deployed to environment\""
        "403":
          description: "Forbidden"
  /api/v4/projects/{id}/deployments/{deployment_id}/merge_requests:
    get:
      tags:
      - "deployments"
      summary: "List of merge requests associated with a deployment"
      description: "Retrieves the list of merge requests shipped with a given deployment.\
        \ This feature was introduced in GitLab 12.7."
      operationId: "getApiV4ProjectsIdDeploymentsDeploymentIdMergeRequests"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "deployment_id"
        in: "path"
        description: "The ID of the deployment"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DeploymentId"
      - name: "author_id"
        in: "query"
        description: "Returns merge requests created by the given user `id`. Mutually\
          \ exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "AuthorId"
        x-optionalDataType: "Int32"
      - name: "author_username"
        in: "query"
        description: "Returns merge requests created by the given `username`. Mutually\
          \ exclusive with `author_id`."
        required: false
        type: "string"
        x-exportParamName: "AuthorUsername"
        x-optionalDataType: "String"
      - name: "assignee_id"
        in: "query"
        description: "Returns merge requests assigned to the given user `id`. `None`\
          \ returns unassigned merge requests. `Any` returns merge requests with an\
          \ assignee."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "AssigneeId"
        x-optionalDataType: "Int32"
      - name: "assignee_username"
        in: "query"
        description: "Returns merge requests created by the given `username`. Mutually\
          \ exclusive with `author_id`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "AssigneeUsername"
      - name: "reviewer_username"
        in: "query"
        description: "Returns merge requests which have the user as a reviewer with\
          \ the given `username`. `None` returns merge requests with no reviewers.\
          \ `Any` returns merge requests with any reviewer. Mutually exclusive with\
          \ `reviewer_id`. Introduced in GitLab 13.8."
        required: false
        type: "string"
        x-exportParamName: "ReviewerUsername"
        x-optionalDataType: "String"
      - name: "labels"
        in: "query"
        description: "Returns merge requests matching a comma-separated list of labels.\
          \ `None` lists all merge requests with no labels. `Any` lists all merge\
          \ requests with at least one label. Predefined names are case-insensitive."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Labels"
      - name: "milestone"
        in: "query"
        description: "Returns merge requests for a specific milestone. `None` returns\
          \ merge requests with no milestone. `Any` returns merge requests that have\
          \ an assigned milestone."
        required: false
        type: "string"
        x-exportParamName: "Milestone"
        x-optionalDataType: "String"
      - name: "my_reaction_emoji"
        in: "query"
        description: "Returns merge requests reacted by the authenticated user by\
          \ the given `emoji`. `None` returns issues not given a reaction. `Any` returns\
          \ issues given at least one reaction."
        required: false
        type: "string"
        x-exportParamName: "MyReactionEmoji"
        x-optionalDataType: "String"
      - name: "reviewer_id"
        in: "query"
        description: "Returns merge requests which have the user as a reviewer with\
          \ the given user `id`. `None` returns merge requests with no reviewers.\
          \ `Any` returns merge requests with any reviewer. Mutually exclusive with\
          \ `reviewer_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ReviewerId"
        x-optionalDataType: "Int32"
      - name: "state"
        in: "query"
        description: "Returns `all` merge requests or just those that are `opened`,\
          \ `closed`, `locked`, or `merged`."
        required: false
        type: "string"
        default: "all"
        enum:
        - "opened"
        - "closed"
        - "locked"
        - "merged"
        - "all"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "order_by"
        in: "query"
        description: "Returns merge requests ordered by `created_at`, `label_priority`,\
          \ `milestone_due`, `popularity`, `priority`, `title` or `updated_at` fields.\
          \ Introduced in GitLab 14.8."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "created_at"
        - "label_priority"
        - "milestone_due"
        - "popularity"
        - "priority"
        - "title"
        - "updated_at"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Returns merge requests sorted in `asc` or `desc` order."
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "with_labels_details"
        in: "query"
        description: "If `true`, response returns more details for each label in labels\
          \ field: `:name`,`:color`, `:description`, `:description_html`, `:text_color`"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithLabelsDetails"
        x-optionalDataType: "Bool"
      - name: "with_merge_status_recheck"
        in: "query"
        description: "If `true`, this projection requests (but does not guarantee)\
          \ that the `merge_status` field be recalculated asynchronously. Introduced\
          \ in GitLab 13.0."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithMergeStatusRecheck"
        x-optionalDataType: "Bool"
      - name: "created_after"
        in: "query"
        description: "Returns merge requests created on or after the given time. Expected\
          \ in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Returns merge requests created on or before the given time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "updated_after"
        in: "query"
        description: "Returns merge requests updated on or after the given time. Expected\
          \ in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      - name: "updated_before"
        in: "query"
        description: "Returns merge requests updated on or before the given time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "view"
        in: "query"
        description: "If simple, returns the `iid`, URL, title, description, and basic\
          \ state of merge request"
        required: false
        type: "string"
        enum:
        - "simple"
        x-exportParamName: "View"
        x-optionalDataType: "String"
      - name: "scope"
        in: "query"
        description: "Returns merge requests for the given scope: `created_by_me`,\
          \ `assigned_to_me` or `all`"
        required: false
        type: "string"
        enum:
        - "created-by-me"
        - "assigned-to-me"
        - "created_by_me"
        - "assigned_to_me"
        - "all"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "source_branch"
        in: "query"
        description: "Returns merge requests with the given source branch"
        required: false
        type: "string"
        x-exportParamName: "SourceBranch"
        x-optionalDataType: "String"
      - name: "source_project_id"
        in: "query"
        description: "Returns merge requests with the given source project id"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SourceProjectId"
        x-optionalDataType: "Int32"
      - name: "target_branch"
        in: "query"
        description: "Returns merge requests with the given target branch"
        required: false
        type: "string"
        x-exportParamName: "TargetBranch"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Search merge requests against their `title` and `description`."
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "in"
        in: "query"
        description: "Modify the scope of the search attribute. `title`, `description`,\
          \ or a string joining them with comma."
        required: false
        type: "string"
        x-exportParamName: "In"
        x-optionalDataType: "String"
      - name: "wip"
        in: "query"
        description: "Filter merge requests against their `wip` status. `yes` to return\
          \ only draft merge requests, `no` to return non-draft merge requests."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Wip"
        x-optionalDataType: "String"
      - name: "not[author_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given user\
          \ `id`. Mutually exclusive with `author_username`. Combine with `scope=all`\
          \ or `scope=assigned_to_me`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotAuthorId"
        x-optionalDataType: "Int32"
      - name: "not[author_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given `username`.\
          \ Mutually exclusive with `author_id`."
        required: false
        type: "string"
        x-exportParamName: "NotAuthorUsername"
        x-optionalDataType: "String"
      - name: "not[assignee_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests assigned to the given user\
          \ `id`. `None` returns unassigned merge requests. `Any` returns merge requests\
          \ with an assignee."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotAssigneeId"
        x-optionalDataType: "Int32"
      - name: "not[assignee_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given `username`.\
          \ Mutually exclusive with `author_id`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "NotAssigneeUsername"
      - name: "not[reviewer_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests which have the user as a\
          \ reviewer with the given `username`. `None` returns merge requests with\
          \ no reviewers. `Any` returns merge requests with any reviewer. Mutually\
          \ exclusive with `reviewer_id`. Introduced in GitLab 13.8."
        required: false
        type: "string"
        x-exportParamName: "NotReviewerUsername"
        x-optionalDataType: "String"
      - name: "not[labels]"
        in: "query"
        description: "`<Negated>` Returns merge requests matching a comma-separated\
          \ list of labels. `None` lists all merge requests with no labels. `Any`\
          \ lists all merge requests with at least one label. Predefined names are\
          \ case-insensitive."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "NotLabels"
      - name: "not[milestone]"
        in: "query"
        description: "`<Negated>` Returns merge requests for a specific milestone.\
          \ `None` returns merge requests with no milestone. `Any` returns merge requests\
          \ that have an assigned milestone."
        required: false
        type: "string"
        x-exportParamName: "NotMilestone"
        x-optionalDataType: "String"
      - name: "not[my_reaction_emoji]"
        in: "query"
        description: "`<Negated>` Returns merge requests reacted by the authenticated\
          \ user by the given `emoji`. `None` returns issues not given a reaction.\
          \ `Any` returns issues given at least one reaction."
        required: false
        type: "string"
        x-exportParamName: "NotMyReactionEmoji"
        x-optionalDataType: "String"
      - name: "not[reviewer_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests which have the user as a\
          \ reviewer with the given user `id`. `None` returns merge requests with\
          \ no reviewers. `Any` returns merge requests with any reviewer. Mutually\
          \ exclusive with `reviewer_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotReviewerId"
        x-optionalDataType: "Int32"
      - name: "deployed_before"
        in: "query"
        description: "Returns merge requests deployed before the given date/time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        x-exportParamName: "DeployedBefore"
        x-optionalDataType: "String"
      - name: "deployed_after"
        in: "query"
        description: "Returns merge requests deployed after the given date/time. Expected\
          \ in ISO 8601 format"
        required: false
        type: "string"
        x-exportParamName: "DeployedAfter"
        x-optionalDataType: "String"
      - name: "environment"
        in: "query"
        description: "Returns merge requests deployed to the given environment"
        required: false
        type: "string"
        x-exportParamName: "Environment"
        x-optionalDataType: "String"
      - name: "approved"
        in: "query"
        description: "Filters merge requests by their `approved` status. `yes` returns\
          \ only approved merge requests. `no` returns only non-approved merge requests."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Approved"
        x-optionalDataType: "String"
      - name: "merge_user_id"
        in: "query"
        description: "Returns merge requests which have been merged by the user with\
          \ the given user `id`. Mutually exclusive with `merge_user_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeUserId"
        x-optionalDataType: "Int32"
      - name: "merge_user_username"
        in: "query"
        description: "Returns merge requests which have been merged by the user with\
          \ the given `username`. Mutually exclusive with `merge_user_id`."
        required: false
        type: "string"
        x-exportParamName: "MergeUserUsername"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List of merge requests associated with a deployment"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_MergeRequestBasic"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/deployments/{deployment_id}/approval:
    post:
      tags:
      - "deployments"
      summary: "Approve or reject a blocked deployment"
      description: "This feature was introduced in GitLab 14.8."
      operationId: "postApiV4ProjectsIdDeploymentsDeploymentIdApproval"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "deployment_id"
        in: "path"
        description: "The ID of the deployment"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DeploymentId"
      - in: "body"
        name: "postApiV4ProjectsIdDeploymentsDeploymentIdApproval"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdDeploymentsDeploymentIdApproval"
        x-exportParamName: "PostApiV4ProjectsIdDeploymentsDeploymentIdApproval"
      responses:
        "201":
          description: "Approve or reject a blocked deployment"
          schema:
            $ref: "#/definitions/API_Entities_Deployments_Approval"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes:
    get:
      tags:
      - "projects"
      description: "Get a list of merge request draft notes"
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The ID of a merge request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Get a list of merge request draft notes"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_DraftNote"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "projects"
      description: "Create a new draft note"
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The ID of a merge request."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - in: "body"
        name: "postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes"
        x-exportParamName: "PostApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes"
      responses:
        "201":
          description: "Create a new draft note"
          schema:
            $ref: "#/definitions/API_Entities_DraftNote"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}:
    get:
      tags:
      - "projects"
      description: "Get a single draft note"
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The ID of a merge request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - name: "draft_note_id"
        in: "path"
        description: "The ID of a draft note"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DraftNoteId"
      responses:
        "200":
          description: "Get a single draft note"
          schema:
            $ref: "#/definitions/API_Entities_DraftNote"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "projects"
      description: "Modify an existing draft note"
      operationId: "putApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The ID of a merge request."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - name: "draft_note_id"
        in: "path"
        description: "The ID of a draft note"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DraftNoteId"
      - in: "body"
        name: "putApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId"
        x-exportParamName: "PutApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId"
      responses:
        "200":
          description: "Modify an existing draft note"
          schema:
            $ref: "#/definitions/API_Entities_DraftNote"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "projects"
      description: "Delete a draft note"
      operationId: "deleteApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The ID of a merge request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - name: "draft_note_id"
        in: "path"
        description: "The ID of a draft note"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DraftNoteId"
      responses:
        "204":
          description: "Delete a draft note"
          schema:
            $ref: "#/definitions/API_Entities_DraftNote"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}/publish:
    put:
      tags:
      - "projects"
      description: "Publish a pending draft note"
      operationId: "putApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteIdPublish"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The ID of a merge request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - name: "draft_note_id"
        in: "path"
        description: "The ID of a draft note"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DraftNoteId"
      responses:
        "204":
          description: "Publish a pending draft note"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/bulk_publish:
    post:
      tags:
      - "projects"
      description: "Bulk publish all pending draft notes"
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesBulkPublish"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The ID of a merge request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "204":
          description: "Bulk publish all pending draft notes"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/environments:
    get:
      tags:
      - "environments"
      summary: "List environments"
      description: "Get all environments for a given project. This feature was introduced\
        \ in GitLab 8.11."
      operationId: "getApiV4ProjectsIdEnvironments"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "name"
        in: "query"
        description: "Return the environment with this name. Mutually exclusive with\
          \ search"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Return list of environments matching the search criteria. Mutually\
          \ exclusive with name. Must be at least 3 characters."
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "states"
        in: "query"
        description: "List all environments that match a specific state. Accepted\
          \ values: `available`, `stopping`, or `stopped`. If no state value given,\
          \ returns all environments"
        required: false
        type: "string"
        enum:
        - "stopped"
        - "available"
        - "stopping"
        x-exportParamName: "States"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List environments"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Environment"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "environments"
      summary: "Create a new environment"
      description: "Creates a new environment with the given name and `external_url`.\
        \ It returns `201` if the environment was successfully created, `400` for\
        \ wrong parameters. This feature was introduced in GitLab 8.11."
      operationId: "postApiV4ProjectsIdEnvironments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdEnvironments"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdEnvironments"
        x-exportParamName: "PostApiV4ProjectsIdEnvironments"
      responses:
        "201":
          description: "Create a new environment"
          schema:
            $ref: "#/definitions/API_Entities_Environment"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/environments/{environment_id}:
    get:
      tags:
      - "environments"
      description: "Get a specific environment"
      operationId: "getApiV4ProjectsIdEnvironmentsEnvironmentId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "environment_id"
        in: "path"
        description: "The ID of the environment"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EnvironmentId"
      responses:
        "200":
          description: "Get a specific environment"
          schema:
            $ref: "#/definitions/API_Entities_Environment"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "environments"
      summary: "Update an existing environment"
      description: "Updates an existing environment name and/or `external_url`. It\
        \ returns `200` if the environment was successfully updated. In case of an\
        \ error, a status code `400` is returned. This feature was introduced in GitLab\
        \ 8.11."
      operationId: "putApiV4ProjectsIdEnvironmentsEnvironmentId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "environment_id"
        in: "path"
        description: "The ID of the environment"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EnvironmentId"
      - in: "body"
        name: "putApiV4ProjectsIdEnvironmentsEnvironmentId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdEnvironmentsEnvironmentId"
        x-exportParamName: "PutApiV4ProjectsIdEnvironmentsEnvironmentId"
      responses:
        "200":
          description: "Update an existing environment"
          schema:
            $ref: "#/definitions/API_Entities_Environment"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "environments"
      summary: "Delete an environment"
      description: "It returns 204 if the environment was successfully deleted, and\
        \ 404 if the environment does not exist. This feature was introduced in GitLab\
        \ 8.11."
      operationId: "deleteApiV4ProjectsIdEnvironmentsEnvironmentId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "environment_id"
        in: "path"
        description: "The ID of the environment"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EnvironmentId"
      responses:
        "204":
          description: "Delete an environment"
          schema:
            $ref: "#/definitions/API_Entities_Environment"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/environments/review_apps:
    delete:
      tags:
      - "environments"
      summary: "Delete multiple stopped review apps"
      description: "It schedules for deletion multiple environments that have already\
        \ been stopped and are in the review app folder. The actual deletion is performed\
        \ after 1 week from the time of execution. By default, it only deletes environments\
        \ 30 days or older. You can change this default using the `before` parameter."
      operationId: "deleteApiV4ProjectsIdEnvironmentsReviewApps"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "before"
        in: "query"
        description: "The date before which environments can be deleted. Defaults\
          \ to 30 days ago. Expected in ISO 8601 format (`YYYY-MM-DDTHH:MM:SSZ`)"
        required: false
        type: "string"
        default: "{}"
        format: "date-time"
        x-exportParamName: "Before"
        x-optionalDataType: "Time"
      - name: "limit"
        in: "query"
        description: "Maximum number of environments to delete. Defaults to 100"
        required: false
        type: "integer"
        default: 100
        maximum: 1000
        minimum: 1
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "dry_run"
        in: "query"
        description: "Defaults to true for safety reasons. It performs a dry run where\
          \ no actual deletion will be performed. Set to false to actually delete\
          \ the environment"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "DryRun"
        x-optionalDataType: "Bool"
      responses:
        "204":
          description: "Delete multiple stopped review apps"
          schema:
            $ref: "#/definitions/API_Entities_EnvironmentBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "409":
          description: "Conflict"
  /api/v4/projects/{id}/environments/{environment_id}/stop:
    post:
      tags:
      - "environments"
      summary: "Stop an environment"
      description: "It returns 200 if the environment was successfully stopped, and\
        \ 404 if the environment does not exist."
      operationId: "postApiV4ProjectsIdEnvironmentsEnvironmentIdStop"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "environment_id"
        in: "path"
        description: "The ID of the environment"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EnvironmentId"
      - in: "body"
        name: "postApiV4ProjectsIdEnvironmentsEnvironmentIdStop"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdEnvironmentsEnvironmentIdStop"
        x-exportParamName: "PostApiV4ProjectsIdEnvironmentsEnvironmentIdStop"
      responses:
        "201":
          description: "Stop an environment"
          schema:
            $ref: "#/definitions/API_Entities_Environment"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/environments/stop_stale:
    post:
      tags:
      - "environments"
      summary: "Stop stale environments"
      description: "It returns `200` if stale environment check was scheduled successfully"
      operationId: "postApiV4ProjectsIdEnvironmentsStopStale"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdEnvironmentsStopStale"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdEnvironmentsStopStale"
        x-exportParamName: "PostApiV4ProjectsIdEnvironmentsStopStale"
      responses:
        "201":
          description: "Stop stale environments"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
  /api/v4/projects/{id}/error_tracking/settings:
    get:
      tags:
      - "error_tracking_project_settings"
      summary: "Get Error Tracking settings"
      description: "Get error tracking settings for the project. This feature was\
        \ introduced in GitLab 12.7."
      operationId: "getApiV4ProjectsIdErrorTrackingSettings"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get Error Tracking settings"
          schema:
            $ref: "#/definitions/API_Entities_ErrorTracking_ProjectSetting"
    put:
      tags:
      - "error_tracking_project_settings"
      summary: "Update Error Tracking project settings. Available in GitLab 15.10\
        \ and later."
      description: "Update Error Tracking settings for a project. Only for users with\
        \ Maintainer role for the project."
      operationId: "putApiV4ProjectsIdErrorTrackingSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdErrorTrackingSettings"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdErrorTrackingSettings"
        x-exportParamName: "PutApiV4ProjectsIdErrorTrackingSettings"
      responses:
        "200":
          description: "Update Error Tracking project settings. Available in GitLab\
            \ 15.10 and later."
          schema:
            $ref: "#/definitions/API_Entities_ErrorTracking_ProjectSetting"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    patch:
      tags:
      - "error_tracking_project_settings"
      summary: "Enable or disable the Error Tracking project settings"
      description: "The API allows you to enable or disable the Error Tracking settings\
        \ for a project.Only for users with the Maintainer role for the project."
      operationId: "patchApiV4ProjectsIdErrorTrackingSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "patchApiV4ProjectsIdErrorTrackingSettings"
        required: true
        schema:
          $ref: "#/definitions/patchApiV4ProjectsIdErrorTrackingSettings"
        x-exportParamName: "PatchApiV4ProjectsIdErrorTrackingSettings"
      responses:
        "200":
          description: "Enable or disable the Error Tracking project settings"
          schema:
            $ref: "#/definitions/API_Entities_ErrorTracking_ProjectSetting"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/files/{file_path}/blame:
    get:
      tags:
      - "projects"
      description: "Get blame file from the repository"
      operationId: "getApiV4ProjectsIdRepositoryFilesFilePathBlame"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_path"
        in: "path"
        description: "The url encoded path to the file."
        required: true
        type: "string"
        x-exportParamName: "FilePath"
      - name: "ref"
        in: "query"
        description: "The name of branch, tag or commit"
        required: true
        type: "string"
        x-exportParamName: "Ref"
      - name: "range[start]"
        in: "query"
        description: "The first line of the range to blame"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RangeStart"
      - name: "range[end]"
        in: "query"
        description: "The last line of the range to blame"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RangeEnd"
      responses:
        "200":
          description: "Get blame file from the repository"
    head:
      tags:
      - "projects"
      description: "Get blame file metadata from repository"
      operationId: "headApiV4ProjectsIdRepositoryFilesFilePathBlame"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_path"
        in: "path"
        description: "The url encoded path to the file."
        required: true
        type: "string"
        x-exportParamName: "FilePath"
      - name: "ref"
        in: "query"
        description: "The name of branch, tag or commit"
        required: true
        type: "string"
        x-exportParamName: "Ref"
      responses:
        "200":
          description: "Get blame file metadata from repository"
  /api/v4/projects/{id}/repository/files/{file_path}/raw:
    get:
      tags:
      - "projects"
      description: "Get raw file contents from the repository"
      operationId: "getApiV4ProjectsIdRepositoryFilesFilePathRaw"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_path"
        in: "path"
        description: "The url encoded path to the file."
        required: true
        type: "string"
        x-exportParamName: "FilePath"
      - name: "ref"
        in: "query"
        description: "The name of branch, tag or commit"
        required: false
        type: "string"
        x-exportParamName: "Ref"
        x-optionalDataType: "String"
      - name: "lfs"
        in: "query"
        description: "Retrieve binary data for a file that is an lfs pointer"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Lfs"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get raw file contents from the repository"
          schema:
            type: "file"
  /api/v4/projects/{id}/repository/files/{file_path}:
    get:
      tags:
      - "projects"
      description: "Get a file from the repository"
      operationId: "getApiV4ProjectsIdRepositoryFilesFilePath"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_path"
        in: "path"
        description: "The url encoded path to the file."
        required: true
        type: "string"
        x-exportParamName: "FilePath"
      - name: "ref"
        in: "query"
        description: "The name of branch, tag or commit"
        required: true
        type: "string"
        x-exportParamName: "Ref"
      responses:
        "200":
          description: "Get a file from the repository"
    head:
      tags:
      - "projects"
      description: "Get file metadata from repository"
      operationId: "headApiV4ProjectsIdRepositoryFilesFilePath"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_path"
        in: "path"
        description: "The url encoded path to the file."
        required: true
        type: "string"
        x-exportParamName: "FilePath"
      - name: "ref"
        in: "query"
        description: "The name of branch, tag or commit"
        required: true
        type: "string"
        x-exportParamName: "Ref"
      responses:
        "200":
          description: "Get file metadata from repository"
    post:
      tags:
      - "projects"
      description: "Create new file in repository"
      operationId: "postApiV4ProjectsIdRepositoryFilesFilePath"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_path"
        in: "path"
        description: "The url encoded path to the file."
        required: true
        type: "string"
        x-exportParamName: "FilePath"
      - in: "body"
        name: "postApiV4ProjectsIdRepositoryFilesFilePath"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRepositoryFilesFilePath"
        x-exportParamName: "PostApiV4ProjectsIdRepositoryFilesFilePath"
      responses:
        "201":
          description: "Create new file in repository"
    put:
      tags:
      - "projects"
      description: "Update existing file in repository"
      operationId: "putApiV4ProjectsIdRepositoryFilesFilePath"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_path"
        in: "path"
        description: "The url encoded path to the file."
        required: true
        type: "string"
        x-exportParamName: "FilePath"
      - in: "body"
        name: "putApiV4ProjectsIdRepositoryFilesFilePath"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdRepositoryFilesFilePath"
        x-exportParamName: "PutApiV4ProjectsIdRepositoryFilesFilePath"
      responses:
        "200":
          description: "Update existing file in repository"
    delete:
      tags:
      - "projects"
      description: "Delete an existing file in repository"
      operationId: "deleteApiV4ProjectsIdRepositoryFilesFilePath"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_path"
        in: "path"
        description: "The url encoded path to the file."
        required: true
        type: "string"
        x-exportParamName: "FilePath"
      - name: "branch"
        in: "query"
        description: "Name of the branch to commit into. To create a new branch, also\
          \ provide `start_branch`."
        required: true
        type: "string"
        x-exportParamName: "Branch"
      - name: "commit_message"
        in: "query"
        description: "Commit message"
        required: true
        type: "string"
        x-exportParamName: "CommitMessage"
      - name: "start_branch"
        in: "query"
        description: "Name of the branch to start the new commit from"
        required: false
        type: "string"
        x-exportParamName: "StartBranch"
        x-optionalDataType: "String"
      - name: "author_email"
        in: "query"
        description: "The email of the author"
        required: false
        type: "string"
        x-exportParamName: "AuthorEmail"
        x-optionalDataType: "String"
      - name: "author_name"
        in: "query"
        description: "The name of the author"
        required: false
        type: "string"
        x-exportParamName: "AuthorName"
        x-optionalDataType: "String"
      responses:
        "204":
          description: "Delete an existing file in repository"
  /api/v4/projects/{id}/freeze_periods:
    get:
      tags:
      - "freeze_periods"
      summary: "List freeze periods"
      description: "Paginated list of Freeze Periods, sorted by created_at in ascending\
        \ order. This feature was introduced in GitLab 13.0."
      operationId: "getApiV4ProjectsIdFreezePeriods"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List freeze periods"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_FreezePeriod"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "freeze_periods"
      summary: "Create a freeze period"
      description: "Creates a freeze period. This feature was introduced in GitLab\
        \ 13.0."
      operationId: "postApiV4ProjectsIdFreezePeriods"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdFreezePeriods"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdFreezePeriods"
        x-exportParamName: "PostApiV4ProjectsIdFreezePeriods"
      responses:
        "201":
          description: "Create a freeze period"
          schema:
            $ref: "#/definitions/API_Entities_FreezePeriod"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
  /api/v4/projects/{id}/freeze_periods/{freeze_period_id}:
    get:
      tags:
      - "freeze_periods"
      summary: "Get a freeze period"
      description: "Get a freeze period for the given `freeze_period_id`. This feature\
        \ was introduced in GitLab 13.0."
      operationId: "getApiV4ProjectsIdFreezePeriodsFreezePeriodId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "freeze_period_id"
        in: "path"
        description: "The ID of the freeze period"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FreezePeriodId"
      responses:
        "200":
          description: "Get a freeze period"
          schema:
            $ref: "#/definitions/API_Entities_FreezePeriod"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "freeze_periods"
      summary: "Update a freeze period"
      description: "Updates a freeze period for the given `freeze_period_id`. This\
        \ feature was introduced in GitLab 13.0."
      operationId: "putApiV4ProjectsIdFreezePeriodsFreezePeriodId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "freeze_period_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FreezePeriodId"
      - in: "body"
        name: "putApiV4ProjectsIdFreezePeriodsFreezePeriodId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdFreezePeriodsFreezePeriodId"
        x-exportParamName: "PutApiV4ProjectsIdFreezePeriodsFreezePeriodId"
      responses:
        "200":
          description: "Update a freeze period"
          schema:
            $ref: "#/definitions/API_Entities_FreezePeriod"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
    delete:
      tags:
      - "freeze_periods"
      summary: "Delete a freeze period"
      description: "Deletes a freeze period for the given `freeze_period_id`. This\
        \ feature was introduced in GitLab 13.0."
      operationId: "deleteApiV4ProjectsIdFreezePeriodsFreezePeriodId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "freeze_period_id"
        in: "path"
        description: "The ID of the freeze period"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FreezePeriodId"
      responses:
        "204":
          description: "Delete a freeze period"
          schema:
            $ref: "#/definitions/API_Entities_FreezePeriod"
        "401":
          description: "Unauthorized"
  /api/v4/projects/{id}/services:
    get:
      tags:
      - "integrations"
      summary: "List all active integrations"
      description: "Get a list of all active project integrations."
      operationId: "getApiV4ProjectsIdServices"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "List all active integrations"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/apple-app-store:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Apple App Store integration"
      description: "Set Apple App Store integration for a project."
      operationId: "putApiV4ProjectsIdServicesAppleAppStore"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesAppleAppStore"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesAppleAppStore"
        x-exportParamName: "PutApiV4ProjectsIdServicesAppleAppStore"
      responses:
        "200":
          description: "Create/Edit Apple App Store integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/asana:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Asana integration"
      description: "Set Asana integration for a project."
      operationId: "putApiV4ProjectsIdServicesAsana"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesAsana"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesAsana"
        x-exportParamName: "PutApiV4ProjectsIdServicesAsana"
      responses:
        "200":
          description: "Create/Edit Asana integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/assembla:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Assembla integration"
      description: "Set Assembla integration for a project."
      operationId: "putApiV4ProjectsIdServicesAssembla"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesAssembla"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesAssembla"
        x-exportParamName: "PutApiV4ProjectsIdServicesAssembla"
      responses:
        "200":
          description: "Create/Edit Assembla integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/bamboo:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Bamboo integration"
      description: "Set Bamboo integration for a project."
      operationId: "putApiV4ProjectsIdServicesBamboo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesBamboo"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesBamboo"
        x-exportParamName: "PutApiV4ProjectsIdServicesBamboo"
      responses:
        "200":
          description: "Create/Edit Bamboo integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/bugzilla:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Bugzilla integration"
      description: "Set Bugzilla integration for a project."
      operationId: "putApiV4ProjectsIdServicesBugzilla"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesBugzilla"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesBugzilla"
        x-exportParamName: "PutApiV4ProjectsIdServicesBugzilla"
      responses:
        "200":
          description: "Create/Edit Bugzilla integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/buildkite:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Buildkite integration"
      description: "Set Buildkite integration for a project."
      operationId: "putApiV4ProjectsIdServicesBuildkite"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesBuildkite"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesBuildkite"
        x-exportParamName: "PutApiV4ProjectsIdServicesBuildkite"
      responses:
        "200":
          description: "Create/Edit Buildkite integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/campfire:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Campfire integration"
      description: "Set Campfire integration for a project."
      operationId: "putApiV4ProjectsIdServicesCampfire"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesCampfire"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesCampfire"
        x-exportParamName: "PutApiV4ProjectsIdServicesCampfire"
      responses:
        "200":
          description: "Create/Edit Campfire integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/confluence:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Confluence integration"
      description: "Set Confluence integration for a project."
      operationId: "putApiV4ProjectsIdServicesConfluence"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesConfluence"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesConfluence"
        x-exportParamName: "PutApiV4ProjectsIdServicesConfluence"
      responses:
        "200":
          description: "Create/Edit Confluence integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/custom-issue-tracker:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Custom Issue Tracker integration"
      description: "Set Custom Issue Tracker integration for a project."
      operationId: "putApiV4ProjectsIdServicesCustomIssueTracker"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesCustomIssueTracker"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesCustomIssueTracker"
        x-exportParamName: "PutApiV4ProjectsIdServicesCustomIssueTracker"
      responses:
        "200":
          description: "Create/Edit Custom Issue Tracker integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/datadog:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Datadog integration"
      description: "Set Datadog integration for a project."
      operationId: "putApiV4ProjectsIdServicesDatadog"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesDatadog"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesDatadog"
        x-exportParamName: "PutApiV4ProjectsIdServicesDatadog"
      responses:
        "200":
          description: "Create/Edit Datadog integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/diffblue-cover:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Diffblue Cover integration"
      description: "Set Diffblue Cover integration for a project."
      operationId: "putApiV4ProjectsIdServicesDiffblueCover"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesDiffblueCover"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesDiffblueCover"
        x-exportParamName: "PutApiV4ProjectsIdServicesDiffblueCover"
      responses:
        "200":
          description: "Create/Edit Diffblue Cover integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/discord:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Discord integration"
      description: "Set Discord integration for a project."
      operationId: "putApiV4ProjectsIdServicesDiscord"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesDiscord"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesDiscord"
        x-exportParamName: "PutApiV4ProjectsIdServicesDiscord"
      responses:
        "200":
          description: "Create/Edit Discord integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/drone-ci:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Drone Ci integration"
      description: "Set Drone Ci integration for a project."
      operationId: "putApiV4ProjectsIdServicesDroneCi"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesDroneCi"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesDroneCi"
        x-exportParamName: "PutApiV4ProjectsIdServicesDroneCi"
      responses:
        "200":
          description: "Create/Edit Drone Ci integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/emails-on-push:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Emails On Push integration"
      description: "Set Emails On Push integration for a project."
      operationId: "putApiV4ProjectsIdServicesEmailsOnPush"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesEmailsOnPush"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesEmailsOnPush"
        x-exportParamName: "PutApiV4ProjectsIdServicesEmailsOnPush"
      responses:
        "200":
          description: "Create/Edit Emails On Push integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/external-wiki:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit External Wiki integration"
      description: "Set External Wiki integration for a project."
      operationId: "putApiV4ProjectsIdServicesExternalWiki"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesExternalWiki"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesExternalWiki"
        x-exportParamName: "PutApiV4ProjectsIdServicesExternalWiki"
      responses:
        "200":
          description: "Create/Edit External Wiki integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/gitlab-slack-application:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Gitlab Slack Application integration"
      description: "Set Gitlab Slack Application integration for a project."
      operationId: "putApiV4ProjectsIdServicesGitlabSlackApplication"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesGitlabSlackApplication"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesGitlabSlackApplication"
        x-exportParamName: "PutApiV4ProjectsIdServicesGitlabSlackApplication"
      responses:
        "200":
          description: "Create/Edit Gitlab Slack Application integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/google-play:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Google Play integration"
      description: "Set Google Play integration for a project."
      operationId: "putApiV4ProjectsIdServicesGooglePlay"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesGooglePlay"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesGooglePlay"
        x-exportParamName: "PutApiV4ProjectsIdServicesGooglePlay"
      responses:
        "200":
          description: "Create/Edit Google Play integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/hangouts-chat:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Hangouts Chat integration"
      description: "Set Hangouts Chat integration for a project."
      operationId: "putApiV4ProjectsIdServicesHangoutsChat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesHangoutsChat"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesHangoutsChat"
        x-exportParamName: "PutApiV4ProjectsIdServicesHangoutsChat"
      responses:
        "200":
          description: "Create/Edit Hangouts Chat integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/harbor:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Harbor integration"
      description: "Set Harbor integration for a project."
      operationId: "putApiV4ProjectsIdServicesHarbor"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesHarbor"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesHarbor"
        x-exportParamName: "PutApiV4ProjectsIdServicesHarbor"
      responses:
        "200":
          description: "Create/Edit Harbor integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/irker:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Irker integration"
      description: "Set Irker integration for a project."
      operationId: "putApiV4ProjectsIdServicesIrker"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesIrker"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesIrker"
        x-exportParamName: "PutApiV4ProjectsIdServicesIrker"
      responses:
        "200":
          description: "Create/Edit Irker integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/jenkins:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Jenkins integration"
      description: "Set Jenkins integration for a project."
      operationId: "putApiV4ProjectsIdServicesJenkins"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesJenkins"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesJenkins"
        x-exportParamName: "PutApiV4ProjectsIdServicesJenkins"
      responses:
        "200":
          description: "Create/Edit Jenkins integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/jira:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Jira integration"
      description: "Set Jira integration for a project."
      operationId: "putApiV4ProjectsIdServicesJira"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesJira"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesJira"
        x-exportParamName: "PutApiV4ProjectsIdServicesJira"
      responses:
        "200":
          description: "Create/Edit Jira integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/mattermost-slash-commands:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Mattermost Slash Commands integration"
      description: "Set Mattermost Slash Commands integration for a project."
      operationId: "putApiV4ProjectsIdServicesMattermostSlashCommands"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesMattermostSlashCommands"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesMattermostSlashCommands"
        x-exportParamName: "PutApiV4ProjectsIdServicesMattermostSlashCommands"
      responses:
        "200":
          description: "Create/Edit Mattermost Slash Commands integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/slack-slash-commands:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Slack Slash Commands integration"
      description: "Set Slack Slash Commands integration for a project."
      operationId: "putApiV4ProjectsIdServicesSlackSlashCommands"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesSlackSlashCommands"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesSlackSlashCommands"
        x-exportParamName: "PutApiV4ProjectsIdServicesSlackSlashCommands"
      responses:
        "200":
          description: "Create/Edit Slack Slash Commands integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/packagist:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Packagist integration"
      description: "Set Packagist integration for a project."
      operationId: "putApiV4ProjectsIdServicesPackagist"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesPackagist"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesPackagist"
        x-exportParamName: "PutApiV4ProjectsIdServicesPackagist"
      responses:
        "200":
          description: "Create/Edit Packagist integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/phorge:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Phorge integration"
      description: "Set Phorge integration for a project."
      operationId: "putApiV4ProjectsIdServicesPhorge"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesPhorge"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesPhorge"
        x-exportParamName: "PutApiV4ProjectsIdServicesPhorge"
      responses:
        "200":
          description: "Create/Edit Phorge integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/pipelines-email:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Pipelines Email integration"
      description: "Set Pipelines Email integration for a project."
      operationId: "putApiV4ProjectsIdServicesPipelinesEmail"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesPipelinesEmail"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesPipelinesEmail"
        x-exportParamName: "PutApiV4ProjectsIdServicesPipelinesEmail"
      responses:
        "200":
          description: "Create/Edit Pipelines Email integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/pivotaltracker:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Pivotaltracker integration"
      description: "Set Pivotaltracker integration for a project."
      operationId: "putApiV4ProjectsIdServicesPivotaltracker"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesPivotaltracker"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesPivotaltracker"
        x-exportParamName: "PutApiV4ProjectsIdServicesPivotaltracker"
      responses:
        "200":
          description: "Create/Edit Pivotaltracker integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/prometheus:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Prometheus integration"
      description: "Set Prometheus integration for a project."
      operationId: "putApiV4ProjectsIdServicesPrometheus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesPrometheus"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesPrometheus"
        x-exportParamName: "PutApiV4ProjectsIdServicesPrometheus"
      responses:
        "200":
          description: "Create/Edit Prometheus integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/pumble:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Pumble integration"
      description: "Set Pumble integration for a project."
      operationId: "putApiV4ProjectsIdServicesPumble"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesPumble"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesPumble"
        x-exportParamName: "PutApiV4ProjectsIdServicesPumble"
      responses:
        "200":
          description: "Create/Edit Pumble integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/pushover:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Pushover integration"
      description: "Set Pushover integration for a project."
      operationId: "putApiV4ProjectsIdServicesPushover"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesPushover"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesPushover"
        x-exportParamName: "PutApiV4ProjectsIdServicesPushover"
      responses:
        "200":
          description: "Create/Edit Pushover integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/redmine:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Redmine integration"
      description: "Set Redmine integration for a project."
      operationId: "putApiV4ProjectsIdServicesRedmine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesRedmine"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesRedmine"
        x-exportParamName: "PutApiV4ProjectsIdServicesRedmine"
      responses:
        "200":
          description: "Create/Edit Redmine integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/ewm:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Ewm integration"
      description: "Set Ewm integration for a project."
      operationId: "putApiV4ProjectsIdServicesEwm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesEwm"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesEwm"
        x-exportParamName: "PutApiV4ProjectsIdServicesEwm"
      responses:
        "200":
          description: "Create/Edit Ewm integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/youtrack:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Youtrack integration"
      description: "Set Youtrack integration for a project."
      operationId: "putApiV4ProjectsIdServicesYoutrack"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesYoutrack"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesYoutrack"
        x-exportParamName: "PutApiV4ProjectsIdServicesYoutrack"
      responses:
        "200":
          description: "Create/Edit Youtrack integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/clickup:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Clickup integration"
      description: "Set Clickup integration for a project."
      operationId: "putApiV4ProjectsIdServicesClickup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesClickup"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesClickup"
        x-exportParamName: "PutApiV4ProjectsIdServicesClickup"
      responses:
        "200":
          description: "Create/Edit Clickup integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/slack:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Slack integration"
      description: "Set Slack integration for a project."
      operationId: "putApiV4ProjectsIdServicesSlack"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesSlack"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesSlack"
        x-exportParamName: "PutApiV4ProjectsIdServicesSlack"
      responses:
        "200":
          description: "Create/Edit Slack integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/microsoft-teams:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Microsoft Teams integration"
      description: "Set Microsoft Teams integration for a project."
      operationId: "putApiV4ProjectsIdServicesMicrosoftTeams"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesMicrosoftTeams"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesMicrosoftTeams"
        x-exportParamName: "PutApiV4ProjectsIdServicesMicrosoftTeams"
      responses:
        "200":
          description: "Create/Edit Microsoft Teams integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/mattermost:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Mattermost integration"
      description: "Set Mattermost integration for a project."
      operationId: "putApiV4ProjectsIdServicesMattermost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesMattermost"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesMattermost"
        x-exportParamName: "PutApiV4ProjectsIdServicesMattermost"
      responses:
        "200":
          description: "Create/Edit Mattermost integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/teamcity:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Teamcity integration"
      description: "Set Teamcity integration for a project."
      operationId: "putApiV4ProjectsIdServicesTeamcity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesTeamcity"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesTeamcity"
        x-exportParamName: "PutApiV4ProjectsIdServicesTeamcity"
      responses:
        "200":
          description: "Create/Edit Teamcity integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/telegram:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Telegram integration"
      description: "Set Telegram integration for a project."
      operationId: "putApiV4ProjectsIdServicesTelegram"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesTelegram"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesTelegram"
        x-exportParamName: "PutApiV4ProjectsIdServicesTelegram"
      responses:
        "200":
          description: "Create/Edit Telegram integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/unify-circuit:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Unify Circuit integration"
      description: "Set Unify Circuit integration for a project."
      operationId: "putApiV4ProjectsIdServicesUnifyCircuit"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesUnifyCircuit"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesUnifyCircuit"
        x-exportParamName: "PutApiV4ProjectsIdServicesUnifyCircuit"
      responses:
        "200":
          description: "Create/Edit Unify Circuit integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/webex-teams:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Webex Teams integration"
      description: "Set Webex Teams integration for a project."
      operationId: "putApiV4ProjectsIdServicesWebexTeams"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesWebexTeams"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesWebexTeams"
        x-exportParamName: "PutApiV4ProjectsIdServicesWebexTeams"
      responses:
        "200":
          description: "Create/Edit Webex Teams integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/zentao:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Zentao integration"
      description: "Set Zentao integration for a project."
      operationId: "putApiV4ProjectsIdServicesZentao"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesZentao"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesZentao"
        x-exportParamName: "PutApiV4ProjectsIdServicesZentao"
      responses:
        "200":
          description: "Create/Edit Zentao integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/squash-tm:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Squash Tm integration"
      description: "Set Squash Tm integration for a project."
      operationId: "putApiV4ProjectsIdServicesSquashTm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesSquashTm"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesSquashTm"
        x-exportParamName: "PutApiV4ProjectsIdServicesSquashTm"
      responses:
        "200":
          description: "Create/Edit Squash Tm integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/github:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Github integration"
      description: "Set Github integration for a project."
      operationId: "putApiV4ProjectsIdServicesGithub"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesGithub"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesGithub"
        x-exportParamName: "PutApiV4ProjectsIdServicesGithub"
      responses:
        "200":
          description: "Create/Edit Github integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/git-guardian:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Git Guardian integration"
      description: "Set Git Guardian integration for a project."
      operationId: "putApiV4ProjectsIdServicesGitGuardian"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesGitGuardian"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesGitGuardian"
        x-exportParamName: "PutApiV4ProjectsIdServicesGitGuardian"
      responses:
        "200":
          description: "Create/Edit Git Guardian integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/google-cloud-platform-artifact-registry:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Google Cloud Platform Artifact Registry integration"
      description: "Set Google Cloud Platform Artifact Registry integration for a\
        \ project."
      operationId: "putApiV4ProjectsIdServicesGoogleCloudPlatformArtifactRegistry"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesGoogleCloudPlatformArtifactRegistry"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesGoogleCloudPlatformArtifactRegistry"
        x-exportParamName: "PutApiV4ProjectsIdServicesGoogleCloudPlatformArtifactRegistry"
      responses:
        "200":
          description: "Create/Edit Google Cloud Platform Artifact Registry integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/google-cloud-platform-workload-identity-federation:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Google Cloud Platform Workload Identity Federation integration"
      description: "Set Google Cloud Platform Workload Identity Federation integration\
        \ for a project."
      operationId: "putApiV4ProjectsIdServicesGoogleCloudPlatformWorkloadIdentityFederation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesGoogleCloudPlatformWorkloadIdentityFederation"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesGoogleCloudPlatformWorkloadIdentityFederation"
        x-exportParamName: "PutApiV4ProjectsIdServicesGoogleCloudPlatformWorkloadIdentityFederation"
      responses:
        "200":
          description: "Create/Edit Google Cloud Platform Workload Identity Federation\
            \ integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/mock-ci:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Mock Ci integration"
      description: "Set Mock Ci integration for a project."
      operationId: "putApiV4ProjectsIdServicesMockCi"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdServicesMockCi"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdServicesMockCi"
        x-exportParamName: "PutApiV4ProjectsIdServicesMockCi"
      responses:
        "200":
          description: "Create/Edit Mock Ci integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/mock-monitoring:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Mock Monitoring integration"
      description: "Set Mock Monitoring integration for a project."
      operationId: "putApiV4ProjectsIdServicesMockMonitoring"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Create/Edit Mock Monitoring integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/{slug}:
    get:
      tags:
      - "integrations"
      summary: "Get an integration settings"
      description: "Get the integration settings for a project."
      operationId: "getApiV4ProjectsIdServicesSlug"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "slug"
        in: "path"
        description: "The name of the integration"
        required: true
        type: "string"
        enum:
        - "apple-app-store"
        - "asana"
        - "assembla"
        - "bamboo"
        - "bugzilla"
        - "buildkite"
        - "campfire"
        - "confluence"
        - "custom-issue-tracker"
        - "datadog"
        - "diffblue-cover"
        - "discord"
        - "drone-ci"
        - "emails-on-push"
        - "external-wiki"
        - "gitlab-slack-application"
        - "google-play"
        - "hangouts-chat"
        - "harbor"
        - "irker"
        - "jenkins"
        - "jira"
        - "jira-cloud-app"
        - "mattermost-slash-commands"
        - "slack-slash-commands"
        - "packagist"
        - "phorge"
        - "pipelines-email"
        - "pivotaltracker"
        - "prometheus"
        - "pumble"
        - "pushover"
        - "redmine"
        - "ewm"
        - "youtrack"
        - "clickup"
        - "slack"
        - "microsoft-teams"
        - "mattermost"
        - "teamcity"
        - "telegram"
        - "unify-circuit"
        - "webex-teams"
        - "zentao"
        - "squash-tm"
        - "github"
        - "git-guardian"
        - "google-cloud-platform-artifact-registry"
        - "google-cloud-platform-workload-identity-federation"
        - "mock-ci"
        - "mock-monitoring"
        x-exportParamName: "Slug"
      responses:
        "200":
          description: "Get an integration settings"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegration"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "integrations"
      summary: "Disable an integration"
      description: "Disable the integration for a project. Integration settings are\
        \ preserved."
      operationId: "deleteApiV4ProjectsIdServicesSlug"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "slug"
        in: "path"
        description: "The name of the integration"
        required: true
        type: "string"
        enum:
        - "apple-app-store"
        - "asana"
        - "assembla"
        - "bamboo"
        - "bugzilla"
        - "buildkite"
        - "campfire"
        - "confluence"
        - "custom-issue-tracker"
        - "datadog"
        - "diffblue-cover"
        - "discord"
        - "drone-ci"
        - "emails-on-push"
        - "external-wiki"
        - "gitlab-slack-application"
        - "google-play"
        - "hangouts-chat"
        - "harbor"
        - "irker"
        - "jenkins"
        - "jira"
        - "jira-cloud-app"
        - "mattermost-slash-commands"
        - "slack-slash-commands"
        - "packagist"
        - "phorge"
        - "pipelines-email"
        - "pivotaltracker"
        - "prometheus"
        - "pumble"
        - "pushover"
        - "redmine"
        - "ewm"
        - "youtrack"
        - "clickup"
        - "slack"
        - "microsoft-teams"
        - "mattermost"
        - "teamcity"
        - "telegram"
        - "unify-circuit"
        - "webex-teams"
        - "zentao"
        - "squash-tm"
        - "github"
        - "git-guardian"
        - "google-cloud-platform-artifact-registry"
        - "google-cloud-platform-workload-identity-federation"
        - "mock-ci"
        - "mock-monitoring"
        x-exportParamName: "Slug"
      responses:
        "204":
          description: "Disable an integration"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/mattermost_slash_commands/trigger:
    post:
      tags:
      - "integrations"
      summary: "Trigger a slash command for mattermost-slash-commands"
      description: "Added in GitLab 8.13"
      operationId: "postApiV4ProjectsIdServicesMattermostSlashCommandsTrigger"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdServicesMattermostSlashCommandsTrigger"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdServicesMattermostSlashCommandsTrigger"
        x-exportParamName: "PostApiV4ProjectsIdServicesMattermostSlashCommandsTrigger"
      responses:
        "201":
          description: "Trigger a slash command for mattermost-slash-commands"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/services/slack_slash_commands/trigger:
    post:
      tags:
      - "integrations"
      summary: "Trigger a slash command for slack-slash-commands"
      description: "Added in GitLab 8.13"
      operationId: "postApiV4ProjectsIdServicesSlackSlashCommandsTrigger"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdServicesSlackSlashCommandsTrigger"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdServicesSlackSlashCommandsTrigger"
        x-exportParamName: "PostApiV4ProjectsIdServicesSlackSlashCommandsTrigger"
      responses:
        "201":
          description: "Trigger a slash command for slack-slash-commands"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations:
    get:
      tags:
      - "integrations"
      summary: "List all active integrations"
      description: "Get a list of all active project integrations."
      operationId: "getApiV4ProjectsIdIntegrations"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "List all active integrations"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/apple-app-store:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Apple App Store integration"
      description: "Set Apple App Store integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsAppleAppStore"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsAppleAppStore"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsAppleAppStore"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsAppleAppStore"
      responses:
        "200":
          description: "Create/Edit Apple App Store integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/asana:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Asana integration"
      description: "Set Asana integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsAsana"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsAsana"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsAsana"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsAsana"
      responses:
        "200":
          description: "Create/Edit Asana integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/assembla:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Assembla integration"
      description: "Set Assembla integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsAssembla"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsAssembla"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsAssembla"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsAssembla"
      responses:
        "200":
          description: "Create/Edit Assembla integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/bamboo:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Bamboo integration"
      description: "Set Bamboo integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsBamboo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsBamboo"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsBamboo"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsBamboo"
      responses:
        "200":
          description: "Create/Edit Bamboo integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/bugzilla:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Bugzilla integration"
      description: "Set Bugzilla integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsBugzilla"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsBugzilla"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsBugzilla"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsBugzilla"
      responses:
        "200":
          description: "Create/Edit Bugzilla integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/buildkite:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Buildkite integration"
      description: "Set Buildkite integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsBuildkite"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsBuildkite"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsBuildkite"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsBuildkite"
      responses:
        "200":
          description: "Create/Edit Buildkite integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/campfire:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Campfire integration"
      description: "Set Campfire integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsCampfire"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsCampfire"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsCampfire"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsCampfire"
      responses:
        "200":
          description: "Create/Edit Campfire integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/confluence:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Confluence integration"
      description: "Set Confluence integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsConfluence"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsConfluence"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsConfluence"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsConfluence"
      responses:
        "200":
          description: "Create/Edit Confluence integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/custom-issue-tracker:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Custom Issue Tracker integration"
      description: "Set Custom Issue Tracker integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsCustomIssueTracker"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsCustomIssueTracker"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsCustomIssueTracker"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsCustomIssueTracker"
      responses:
        "200":
          description: "Create/Edit Custom Issue Tracker integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/datadog:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Datadog integration"
      description: "Set Datadog integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsDatadog"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsDatadog"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsDatadog"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsDatadog"
      responses:
        "200":
          description: "Create/Edit Datadog integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/diffblue-cover:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Diffblue Cover integration"
      description: "Set Diffblue Cover integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsDiffblueCover"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsDiffblueCover"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsDiffblueCover"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsDiffblueCover"
      responses:
        "200":
          description: "Create/Edit Diffblue Cover integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/discord:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Discord integration"
      description: "Set Discord integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsDiscord"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsDiscord"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsDiscord"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsDiscord"
      responses:
        "200":
          description: "Create/Edit Discord integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/drone-ci:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Drone Ci integration"
      description: "Set Drone Ci integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsDroneCi"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsDroneCi"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsDroneCi"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsDroneCi"
      responses:
        "200":
          description: "Create/Edit Drone Ci integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/emails-on-push:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Emails On Push integration"
      description: "Set Emails On Push integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsEmailsOnPush"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsEmailsOnPush"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsEmailsOnPush"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsEmailsOnPush"
      responses:
        "200":
          description: "Create/Edit Emails On Push integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/external-wiki:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit External Wiki integration"
      description: "Set External Wiki integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsExternalWiki"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsExternalWiki"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsExternalWiki"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsExternalWiki"
      responses:
        "200":
          description: "Create/Edit External Wiki integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/gitlab-slack-application:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Gitlab Slack Application integration"
      description: "Set Gitlab Slack Application integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsGitlabSlackApplication"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsGitlabSlackApplication"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsGitlabSlackApplication"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsGitlabSlackApplication"
      responses:
        "200":
          description: "Create/Edit Gitlab Slack Application integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/google-play:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Google Play integration"
      description: "Set Google Play integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsGooglePlay"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsGooglePlay"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsGooglePlay"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsGooglePlay"
      responses:
        "200":
          description: "Create/Edit Google Play integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/hangouts-chat:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Hangouts Chat integration"
      description: "Set Hangouts Chat integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsHangoutsChat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsHangoutsChat"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsHangoutsChat"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsHangoutsChat"
      responses:
        "200":
          description: "Create/Edit Hangouts Chat integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/harbor:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Harbor integration"
      description: "Set Harbor integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsHarbor"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsHarbor"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsHarbor"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsHarbor"
      responses:
        "200":
          description: "Create/Edit Harbor integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/irker:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Irker integration"
      description: "Set Irker integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsIrker"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsIrker"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsIrker"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsIrker"
      responses:
        "200":
          description: "Create/Edit Irker integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/jenkins:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Jenkins integration"
      description: "Set Jenkins integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsJenkins"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsJenkins"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsJenkins"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsJenkins"
      responses:
        "200":
          description: "Create/Edit Jenkins integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/jira:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Jira integration"
      description: "Set Jira integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsJira"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsJira"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsJira"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsJira"
      responses:
        "200":
          description: "Create/Edit Jira integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/mattermost-slash-commands:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Mattermost Slash Commands integration"
      description: "Set Mattermost Slash Commands integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsMattermostSlashCommands"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsMattermostSlashCommands"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsMattermostSlashCommands"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsMattermostSlashCommands"
      responses:
        "200":
          description: "Create/Edit Mattermost Slash Commands integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/slack-slash-commands:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Slack Slash Commands integration"
      description: "Set Slack Slash Commands integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsSlackSlashCommands"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsSlackSlashCommands"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsSlackSlashCommands"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsSlackSlashCommands"
      responses:
        "200":
          description: "Create/Edit Slack Slash Commands integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/packagist:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Packagist integration"
      description: "Set Packagist integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsPackagist"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsPackagist"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsPackagist"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsPackagist"
      responses:
        "200":
          description: "Create/Edit Packagist integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/phorge:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Phorge integration"
      description: "Set Phorge integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsPhorge"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsPhorge"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsPhorge"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsPhorge"
      responses:
        "200":
          description: "Create/Edit Phorge integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/pipelines-email:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Pipelines Email integration"
      description: "Set Pipelines Email integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsPipelinesEmail"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsPipelinesEmail"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsPipelinesEmail"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsPipelinesEmail"
      responses:
        "200":
          description: "Create/Edit Pipelines Email integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/pivotaltracker:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Pivotaltracker integration"
      description: "Set Pivotaltracker integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsPivotaltracker"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsPivotaltracker"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsPivotaltracker"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsPivotaltracker"
      responses:
        "200":
          description: "Create/Edit Pivotaltracker integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/prometheus:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Prometheus integration"
      description: "Set Prometheus integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsPrometheus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsPrometheus"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsPrometheus"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsPrometheus"
      responses:
        "200":
          description: "Create/Edit Prometheus integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/pumble:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Pumble integration"
      description: "Set Pumble integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsPumble"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsPumble"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsPumble"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsPumble"
      responses:
        "200":
          description: "Create/Edit Pumble integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/pushover:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Pushover integration"
      description: "Set Pushover integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsPushover"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsPushover"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsPushover"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsPushover"
      responses:
        "200":
          description: "Create/Edit Pushover integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/redmine:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Redmine integration"
      description: "Set Redmine integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsRedmine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsRedmine"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsRedmine"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsRedmine"
      responses:
        "200":
          description: "Create/Edit Redmine integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/ewm:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Ewm integration"
      description: "Set Ewm integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsEwm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsEwm"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsEwm"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsEwm"
      responses:
        "200":
          description: "Create/Edit Ewm integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/youtrack:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Youtrack integration"
      description: "Set Youtrack integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsYoutrack"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsYoutrack"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsYoutrack"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsYoutrack"
      responses:
        "200":
          description: "Create/Edit Youtrack integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/clickup:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Clickup integration"
      description: "Set Clickup integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsClickup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsClickup"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsClickup"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsClickup"
      responses:
        "200":
          description: "Create/Edit Clickup integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/slack:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Slack integration"
      description: "Set Slack integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsSlack"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsSlack"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsSlack"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsSlack"
      responses:
        "200":
          description: "Create/Edit Slack integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/microsoft-teams:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Microsoft Teams integration"
      description: "Set Microsoft Teams integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsMicrosoftTeams"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsMicrosoftTeams"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsMicrosoftTeams"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsMicrosoftTeams"
      responses:
        "200":
          description: "Create/Edit Microsoft Teams integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/mattermost:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Mattermost integration"
      description: "Set Mattermost integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsMattermost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsMattermost"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsMattermost"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsMattermost"
      responses:
        "200":
          description: "Create/Edit Mattermost integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/teamcity:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Teamcity integration"
      description: "Set Teamcity integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsTeamcity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsTeamcity"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsTeamcity"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsTeamcity"
      responses:
        "200":
          description: "Create/Edit Teamcity integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/telegram:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Telegram integration"
      description: "Set Telegram integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsTelegram"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsTelegram"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsTelegram"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsTelegram"
      responses:
        "200":
          description: "Create/Edit Telegram integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/unify-circuit:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Unify Circuit integration"
      description: "Set Unify Circuit integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsUnifyCircuit"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsUnifyCircuit"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsUnifyCircuit"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsUnifyCircuit"
      responses:
        "200":
          description: "Create/Edit Unify Circuit integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/webex-teams:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Webex Teams integration"
      description: "Set Webex Teams integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsWebexTeams"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsWebexTeams"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsWebexTeams"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsWebexTeams"
      responses:
        "200":
          description: "Create/Edit Webex Teams integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/zentao:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Zentao integration"
      description: "Set Zentao integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsZentao"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsZentao"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsZentao"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsZentao"
      responses:
        "200":
          description: "Create/Edit Zentao integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/squash-tm:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Squash Tm integration"
      description: "Set Squash Tm integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsSquashTm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsSquashTm"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsSquashTm"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsSquashTm"
      responses:
        "200":
          description: "Create/Edit Squash Tm integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/github:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Github integration"
      description: "Set Github integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsGithub"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsGithub"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsGithub"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsGithub"
      responses:
        "200":
          description: "Create/Edit Github integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/git-guardian:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Git Guardian integration"
      description: "Set Git Guardian integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsGitGuardian"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsGitGuardian"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsGitGuardian"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsGitGuardian"
      responses:
        "200":
          description: "Create/Edit Git Guardian integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/google-cloud-platform-artifact-registry:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Google Cloud Platform Artifact Registry integration"
      description: "Set Google Cloud Platform Artifact Registry integration for a\
        \ project."
      operationId: "putApiV4ProjectsIdIntegrationsGoogleCloudPlatformArtifactRegistry"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsGoogleCloudPlatformArtifactRegistry"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsGoogleCloudPlatformArtifactRegistry"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsGoogleCloudPlatformArtifactRegistry"
      responses:
        "200":
          description: "Create/Edit Google Cloud Platform Artifact Registry integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/google-cloud-platform-workload-identity-federation:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Google Cloud Platform Workload Identity Federation integration"
      description: "Set Google Cloud Platform Workload Identity Federation integration\
        \ for a project."
      operationId: "putApiV4ProjectsIdIntegrationsGoogleCloudPlatformWorkloadIdentityFederation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsGoogleCloudPlatformWorkloadIdentityFederation"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsGoogleCloudPlatformWorkloadIdentityFederation"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsGoogleCloudPlatformWorkloadIdentityFederation"
      responses:
        "200":
          description: "Create/Edit Google Cloud Platform Workload Identity Federation\
            \ integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/mock-ci:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Mock Ci integration"
      description: "Set Mock Ci integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsMockCi"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdIntegrationsMockCi"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdIntegrationsMockCi"
        x-exportParamName: "PutApiV4ProjectsIdIntegrationsMockCi"
      responses:
        "200":
          description: "Create/Edit Mock Ci integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/mock-monitoring:
    put:
      tags:
      - "integrations"
      summary: "Create/Edit Mock Monitoring integration"
      description: "Set Mock Monitoring integration for a project."
      operationId: "putApiV4ProjectsIdIntegrationsMockMonitoring"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Create/Edit Mock Monitoring integration"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegrationBasic"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/{slug}:
    get:
      tags:
      - "integrations"
      summary: "Get an integration settings"
      description: "Get the integration settings for a project."
      operationId: "getApiV4ProjectsIdIntegrationsSlug"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "slug"
        in: "path"
        description: "The name of the integration"
        required: true
        type: "string"
        enum:
        - "apple-app-store"
        - "asana"
        - "assembla"
        - "bamboo"
        - "bugzilla"
        - "buildkite"
        - "campfire"
        - "confluence"
        - "custom-issue-tracker"
        - "datadog"
        - "diffblue-cover"
        - "discord"
        - "drone-ci"
        - "emails-on-push"
        - "external-wiki"
        - "gitlab-slack-application"
        - "google-play"
        - "hangouts-chat"
        - "harbor"
        - "irker"
        - "jenkins"
        - "jira"
        - "jira-cloud-app"
        - "mattermost-slash-commands"
        - "slack-slash-commands"
        - "packagist"
        - "phorge"
        - "pipelines-email"
        - "pivotaltracker"
        - "prometheus"
        - "pumble"
        - "pushover"
        - "redmine"
        - "ewm"
        - "youtrack"
        - "clickup"
        - "slack"
        - "microsoft-teams"
        - "mattermost"
        - "teamcity"
        - "telegram"
        - "unify-circuit"
        - "webex-teams"
        - "zentao"
        - "squash-tm"
        - "github"
        - "git-guardian"
        - "google-cloud-platform-artifact-registry"
        - "google-cloud-platform-workload-identity-federation"
        - "mock-ci"
        - "mock-monitoring"
        x-exportParamName: "Slug"
      responses:
        "200":
          description: "Get an integration settings"
          schema:
            $ref: "#/definitions/API_Entities_ProjectIntegration"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "integrations"
      summary: "Disable an integration"
      description: "Disable the integration for a project. Integration settings are\
        \ preserved."
      operationId: "deleteApiV4ProjectsIdIntegrationsSlug"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "slug"
        in: "path"
        description: "The name of the integration"
        required: true
        type: "string"
        enum:
        - "apple-app-store"
        - "asana"
        - "assembla"
        - "bamboo"
        - "bugzilla"
        - "buildkite"
        - "campfire"
        - "confluence"
        - "custom-issue-tracker"
        - "datadog"
        - "diffblue-cover"
        - "discord"
        - "drone-ci"
        - "emails-on-push"
        - "external-wiki"
        - "gitlab-slack-application"
        - "google-play"
        - "hangouts-chat"
        - "harbor"
        - "irker"
        - "jenkins"
        - "jira"
        - "jira-cloud-app"
        - "mattermost-slash-commands"
        - "slack-slash-commands"
        - "packagist"
        - "phorge"
        - "pipelines-email"
        - "pivotaltracker"
        - "prometheus"
        - "pumble"
        - "pushover"
        - "redmine"
        - "ewm"
        - "youtrack"
        - "clickup"
        - "slack"
        - "microsoft-teams"
        - "mattermost"
        - "teamcity"
        - "telegram"
        - "unify-circuit"
        - "webex-teams"
        - "zentao"
        - "squash-tm"
        - "github"
        - "git-guardian"
        - "google-cloud-platform-artifact-registry"
        - "google-cloud-platform-workload-identity-federation"
        - "mock-ci"
        - "mock-monitoring"
        x-exportParamName: "Slug"
      responses:
        "204":
          description: "Disable an integration"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/mattermost_slash_commands/trigger:
    post:
      tags:
      - "integrations"
      summary: "Trigger a slash command for mattermost-slash-commands"
      description: "Added in GitLab 8.13"
      operationId: "postApiV4ProjectsIdIntegrationsMattermostSlashCommandsTrigger"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdIntegrationsMattermostSlashCommandsTrigger"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdIntegrationsMattermostSlashCommandsTrigger"
        x-exportParamName: "PostApiV4ProjectsIdIntegrationsMattermostSlashCommandsTrigger"
      responses:
        "201":
          description: "Trigger a slash command for mattermost-slash-commands"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/integrations/slack_slash_commands/trigger:
    post:
      tags:
      - "integrations"
      summary: "Trigger a slash command for slack-slash-commands"
      description: "Added in GitLab 8.13"
      operationId: "postApiV4ProjectsIdIntegrationsSlackSlashCommandsTrigger"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdIntegrationsSlackSlashCommandsTrigger"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdIntegrationsSlackSlashCommandsTrigger"
        x-exportParamName: "PostApiV4ProjectsIdIntegrationsSlackSlashCommandsTrigger"
      responses:
        "201":
          description: "Trigger a slash command for slack-slash-commands"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/invitations:
    get:
      tags:
      - "invitations"
      summary: "Get a list of group or project invitations viewable by the authenticated\
        \ user"
      description: "This feature was introduced in GitLab 13.6"
      operationId: "getApiV4ProjectsIdInvitations"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "query"
        in: "query"
        description: "A query string to search for members"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get a list of group or project invitations viewable by the\
            \ authenticated user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Invitation"
    post:
      tags:
      - "invitations"
      summary: "Invite non-members by email address to a group or project."
      description: "This feature was introduced in GitLab 13.6"
      operationId: "postApiV4ProjectsIdInvitations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdInvitations"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdInvitations"
        x-exportParamName: "PostApiV4ProjectsIdInvitations"
      responses:
        "201":
          description: "Invite non-members by email address to a group or project."
          schema:
            $ref: "#/definitions/API_Entities_Invitation"
  /api/v4/projects/{id}/invitations/{email}:
    put:
      tags:
      - "invitations"
      description: "Updates a group or project invitation."
      operationId: "putApiV4ProjectsIdInvitationsEmail"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "email"
        in: "path"
        description: "The email address of the invitation"
        required: true
        type: "string"
        x-exportParamName: "Email"
      - in: "body"
        name: "putApiV4ProjectsIdInvitationsEmail"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdInvitationsEmail"
        x-exportParamName: "PutApiV4ProjectsIdInvitationsEmail"
      responses:
        "200":
          description: "Updates a group or project invitation."
          schema:
            $ref: "#/definitions/API_Entities_Invitation"
    delete:
      tags:
      - "invitations"
      description: "Removes an invitation from a group or project."
      operationId: "deleteApiV4ProjectsIdInvitationsEmail"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "email"
        in: "path"
        description: "The email address of the invitation"
        required: true
        type: "string"
        x-exportParamName: "Email"
      responses:
        "204":
          description: "Removes an invitation from a group or project."
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "409":
          description: "Could not delete invitation"
  /api/v4/projects/{id}/issues/{issue_iid}/links:
    get:
      tags:
      - "issue_links"
      summary: "List issue relations"
      description: "Get a list of a given issue’s linked issues, sorted by the relationship\
        \ creation datetime (ascending).Issues are filtered according to the user\
        \ authorizations."
      operationId: "getApiV4ProjectsIdIssuesIssueIidLinks"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "issue_iid"
        in: "path"
        description: "The internal ID of a project’s issue"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "IssueIid"
      responses:
        "200":
          description: "List issue relations"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_RelatedIssue"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "issue_links"
      summary: "Create an issue link"
      description: "Creates a two-way relation between two issues.The user must be\
        \ allowed to update both issues to succeed."
      operationId: "postApiV4ProjectsIdIssuesIssueIidLinks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "issue_iid"
        in: "path"
        description: "The internal ID of a project’s issue"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "IssueIid"
      - in: "body"
        name: "postApiV4ProjectsIdIssuesIssueIidLinks"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdIssuesIssueIidLinks"
        x-exportParamName: "PostApiV4ProjectsIdIssuesIssueIidLinks"
      responses:
        "201":
          description: "Create an issue link"
          schema:
            $ref: "#/definitions/API_Entities_IssueLink"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
  /api/v4/projects/{id}/issues/{issue_iid}/links/{issue_link_id}:
    get:
      tags:
      - "issue_links"
      summary: "Get an issue link"
      description: "Gets details about an issue link. This feature was introduced\
        \ in GitLab 15.1."
      operationId: "getApiV4ProjectsIdIssuesIssueIidLinksIssueLinkId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "issue_iid"
        in: "path"
        description: "The internal ID of a project’s issue"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "IssueIid"
      - name: "issue_link_id"
        in: "path"
        description: "ID of an issue relationship"
        required: true
        type: "string"
        x-exportParamName: "IssueLinkId"
      responses:
        "200":
          description: "Get an issue link"
          schema:
            $ref: "#/definitions/API_Entities_IssueLink"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "issue_links"
      summary: "Delete an issue link"
      description: "Deletes an issue link, thus removes the two-way relationship."
      operationId: "deleteApiV4ProjectsIdIssuesIssueIidLinksIssueLinkId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "issue_iid"
        in: "path"
        description: "The internal ID of a project’s issue"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "IssueIid"
      - name: "issue_link_id"
        in: "path"
        description: "The ID of an issue relationship"
        required: true
        type: "string"
        x-exportParamName: "IssueLinkId"
      responses:
        "204":
          description: "Delete an issue link"
          schema:
            $ref: "#/definitions/API_Entities_IssueLink"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/ci/lint:
    get:
      tags:
      - "ci_lint"
      summary: "Validates a CI YAML configuration with a namespace"
      description: "Checks if a project’s .gitlab-ci.yml configuration in a given\
        \ commit (by default HEAD of the\n        project’s default branch) is valid"
      operationId: "getApiV4ProjectsIdCiLint"
      produces:
      - "application/json"
      parameters:
      - name: "sha"
        in: "query"
        description: "Deprecated: Use content_ref instead"
        required: false
        type: "string"
        x-exportParamName: "Sha"
        x-optionalDataType: "String"
      - name: "content_ref"
        in: "query"
        description: "The CI/CD configuration content is taken from this commit SHA,\
          \ branch or tag. Defaults to the HEAD of the project's default branch"
        required: false
        type: "string"
        x-exportParamName: "ContentRef"
        x-optionalDataType: "String"
      - name: "dry_run"
        in: "query"
        description: "Run pipeline creation simulation, or only do static check. This\
          \ is false by default"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "DryRun"
        x-optionalDataType: "Bool"
      - name: "include_jobs"
        in: "query"
        description: "If the list of jobs that would exist in a static check or pipeline\n\
          \        simulation should be included in the response. This is false by\
          \ default"
        required: false
        type: "boolean"
        x-exportParamName: "IncludeJobs"
        x-optionalDataType: "Bool"
      - name: "ref"
        in: "query"
        description: "Deprecated: Use dry_run_ref instead"
        required: false
        type: "string"
        x-exportParamName: "Ref"
        x-optionalDataType: "String"
      - name: "dry_run_ref"
        in: "query"
        description: "Branch or tag used as context when executing a dry run. Defaults\
          \ to the default branch of the project. Only used when dry_run is true"
        required: false
        type: "string"
        x-exportParamName: "DryRunRef"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Validates a CI YAML configuration with a namespace"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Lint_Result"
        "404":
          description: "Not found"
    post:
      tags:
      - "ci_lint"
      summary: "Validate a CI YAML configuration with a namespace"
      description: "Checks if CI/CD YAML configuration is valid. This endpoint has\
        \ namespace specific context"
      operationId: "postApiV4ProjectsIdCiLint"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdCiLint"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdCiLint"
        x-exportParamName: "PostApiV4ProjectsIdCiLint"
      responses:
        "200":
          description: "Validate a CI YAML configuration with a namespace"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Lint_Result"
  /api/v4/projects/{id}/packages/maven/*path/{file_name}:
    get:
      tags:
      - "maven_packages"
      summary: "Download the maven package file at a project level"
      description: "This feature was introduced in GitLab 11.3"
      operationId: "getApiV4ProjectsIdPackagesMaven*pathFileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "path"
        in: "query"
        description: "Package path"
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download the maven package file at a project level"
        "302":
          description: "Download the maven package file at a project level"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    put:
      tags:
      - "maven_packages"
      summary: "Upload the maven package file"
      description: "This feature was introduced in GitLab 11.3"
      operationId: "putApiV4ProjectsIdPackagesMaven*pathFileName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesMaven*pathFileName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesMaven*pathFileName"
        x-exportParamName: "PutApiV4ProjectsIdPackagesMavenpathFileName"
      responses:
        "200":
          description: "Upload the maven package file"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "422":
          description: "Unprocessable Entity"
  /api/v4/projects/{id}/packages/maven/*path/{file_name}/authorize:
    put:
      tags:
      - "maven_packages"
      summary: "Workhorse authorize the maven package file upload"
      description: "This feature was introduced in GitLab 11.3"
      operationId: "putApiV4ProjectsIdPackagesMaven*pathFileNameAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesMaven*pathFileNameAuthorize"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesMaven*pathFileNameAuthorize"
        x-exportParamName: "PutApiV4ProjectsIdPackagesMavenpathFileNameAuthorize"
      responses:
        "200":
          description: "Workhorse authorize the maven package file upload"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/members:
    get:
      tags:
      - "members"
      description: "Gets a list of group or project members viewable by the authenticated\
        \ user."
      operationId: "getApiV4ProjectsIdMembers"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "query"
        in: "query"
        description: "A query string to search for members"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "user_ids"
        in: "query"
        description: "Array of user ids to look up for membership"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "UserIds"
      - name: "skip_users"
        in: "query"
        description: "Array of user ids to be skipped for membership"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "SkipUsers"
      - name: "show_seat_info"
        in: "query"
        description: "Show seat information for members"
        required: false
        type: "boolean"
        x-exportParamName: "ShowSeatInfo"
        x-optionalDataType: "Bool"
      - name: "with_saml_identity"
        in: "query"
        description: "List only members with linked SAML identity"
        required: false
        type: "boolean"
        x-exportParamName: "WithSamlIdentity"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Gets a list of group or project members viewable by the authenticated\
            \ user."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Member"
    post:
      tags:
      - "members"
      description: "Adds a member to a group or project."
      operationId: "postApiV4ProjectsIdMembers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdMembers"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdMembers"
        x-exportParamName: "PostApiV4ProjectsIdMembers"
      responses:
        "201":
          description: "Adds a member to a group or project."
          schema:
            $ref: "#/definitions/API_Entities_Member"
  /api/v4/projects/{id}/members/all:
    get:
      tags:
      - "members"
      description: "Gets a list of group or project members viewable by the authenticated\
        \ user, including those who gained membership through ancestor group."
      operationId: "getApiV4ProjectsIdMembersAll"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "query"
        in: "query"
        description: "A query string to search for members"
        required: false
        type: "string"
        x-exportParamName: "Query"
        x-optionalDataType: "String"
      - name: "user_ids"
        in: "query"
        description: "Array of user ids to look up for membership"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "UserIds"
      - name: "show_seat_info"
        in: "query"
        description: "Show seat information for members"
        required: false
        type: "boolean"
        x-exportParamName: "ShowSeatInfo"
        x-optionalDataType: "Bool"
      - name: "state"
        in: "query"
        description: "Filter results by member state"
        required: false
        type: "string"
        enum:
        - "awaiting"
        - "active"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Gets a list of group or project members viewable by the authenticated\
            \ user, including those who gained membership through ancestor group."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Member"
  /api/v4/projects/{id}/members/{user_id}:
    get:
      tags:
      - "members"
      description: "Gets a member of a group or project."
      operationId: "getApiV4ProjectsIdMembersUserId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "Gets a member of a group or project."
          schema:
            $ref: "#/definitions/API_Entities_Member"
    put:
      tags:
      - "members"
      description: "Updates a member of a group or project."
      operationId: "putApiV4ProjectsIdMembersUserId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the new member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - in: "body"
        name: "putApiV4ProjectsIdMembersUserId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdMembersUserId"
        x-exportParamName: "PutApiV4ProjectsIdMembersUserId"
      responses:
        "200":
          description: "Updates a member of a group or project."
          schema:
            $ref: "#/definitions/API_Entities_Member"
    delete:
      tags:
      - "members"
      description: "Removes a user from a group or project."
      operationId: "deleteApiV4ProjectsIdMembersUserId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - name: "skip_subresources"
        in: "query"
        description: "Flag indicating if the deletion of direct memberships of the\
          \ removed member in subgroups and projects should be skipped"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "SkipSubresources"
        x-optionalDataType: "Bool"
      - name: "unassign_issuables"
        in: "query"
        description: "Flag indicating if the removed member should be unassigned from\
          \ any issues or merge requests within given group or project"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "UnassignIssuables"
        x-optionalDataType: "Bool"
      responses:
        "204":
          description: "Removes a user from a group or project."
  /api/v4/projects/{id}/members/all/{user_id}:
    get:
      tags:
      - "members"
      description: "Gets a member of a group or project, including those who gained\
        \ membership through ancestor group"
      operationId: "getApiV4ProjectsIdMembersAllUserId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "user_id"
        in: "path"
        description: "The user ID of the member"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "Gets a member of a group or project, including those who gained\
            \ membership through ancestor group"
          schema:
            $ref: "#/definitions/API_Entities_Member"
  /api/v4/projects/{id}/create_ci_config:
    post:
      tags:
      - "projects"
      description: "Creates merge request for missing ci config in project"
      operationId: "postApiV4ProjectsIdCreateCiConfig"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Creates merge request for missing ci config in project"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/time_estimate:
    post:
      tags:
      - "merge_requests"
      summary: "Set a time estimate for a merge_request"
      description: "Sets an estimated time of work for this merge_request."
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidTimeEstimate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The internal ID of the merge_request."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - in: "body"
        name: "postApiV4ProjectsIdMergeRequestsMergeRequestIidTimeEstimate"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidTimeEstimate"
        x-exportParamName: "PostApiV4ProjectsIdMergeRequestsMergeRequestIidTimeEstimate"
      responses:
        "201":
          description: "Set a time estimate for a merge_request"
          schema:
            $ref: "#/definitions/API_Entities_IssuableTimeStats"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_time_estimate:
    post:
      tags:
      - "merge_requests"
      summary: "Reset the time estimate for a project merge_request"
      description: "Resets the estimated time for this merge_request to 0 seconds."
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidResetTimeEstimate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The internal ID of the merge_request."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "201":
          description: "Reset the time estimate for a project merge_request"
          schema:
            $ref: "#/definitions/API_Entities_IssuableTimeStats"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/add_spent_time:
    post:
      tags:
      - "merge_requests"
      summary: "Add spent time for a merge_request"
      description: "Adds spent time for this merge_request."
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidAddSpentTime"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The internal ID of the merge_request."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - in: "body"
        name: "postApiV4ProjectsIdMergeRequestsMergeRequestIidAddSpentTime"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidAddSpentTime"
        x-exportParamName: "PostApiV4ProjectsIdMergeRequestsMergeRequestIidAddSpentTime"
      responses:
        "201":
          description: "Add spent time for a merge_request"
          schema:
            $ref: "#/definitions/API_Entities_IssuableTimeStats"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_spent_time:
    post:
      tags:
      - "merge_requests"
      summary: "Reset spent time for a merge_request"
      description: "Resets the total spent time for this merge_request to 0 seconds."
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidResetSpentTime"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The internal ID of the merge_request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "201":
          description: "Reset spent time for a merge_request"
          schema:
            $ref: "#/definitions/API_Entities_IssuableTimeStats"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/time_stats:
    get:
      tags:
      - "merge_requests"
      summary: "Get time tracking stats"
      description: "Get time tracking stats"
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidTimeStats"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The internal ID of the merge_request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Get time tracking stats"
          schema:
            $ref: "#/definitions/API_Entities_IssuableTimeStats"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests:
    get:
      tags:
      - "merge_requests"
      summary: "List project merge requests"
      description: "Get all merge requests for this project."
      operationId: "getApiV4ProjectsIdMergeRequests"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "author_id"
        in: "query"
        description: "Returns merge requests created by the given user `id`. Mutually\
          \ exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "AuthorId"
        x-optionalDataType: "Int32"
      - name: "author_username"
        in: "query"
        description: "Returns merge requests created by the given `username`. Mutually\
          \ exclusive with `author_id`."
        required: false
        type: "string"
        x-exportParamName: "AuthorUsername"
        x-optionalDataType: "String"
      - name: "assignee_id"
        in: "query"
        description: "Returns merge requests assigned to the given user `id`. `None`\
          \ returns unassigned merge requests. `Any` returns merge requests with an\
          \ assignee."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "AssigneeId"
        x-optionalDataType: "Int32"
      - name: "assignee_username"
        in: "query"
        description: "Returns merge requests created by the given `username`. Mutually\
          \ exclusive with `author_id`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "AssigneeUsername"
      - name: "reviewer_username"
        in: "query"
        description: "Returns merge requests which have the user as a reviewer with\
          \ the given `username`. `None` returns merge requests with no reviewers.\
          \ `Any` returns merge requests with any reviewer. Mutually exclusive with\
          \ `reviewer_id`. Introduced in GitLab 13.8."
        required: false
        type: "string"
        x-exportParamName: "ReviewerUsername"
        x-optionalDataType: "String"
      - name: "labels"
        in: "query"
        description: "Returns merge requests matching a comma-separated list of labels.\
          \ `None` lists all merge requests with no labels. `Any` lists all merge\
          \ requests with at least one label. Predefined names are case-insensitive."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Labels"
      - name: "milestone"
        in: "query"
        description: "Returns merge requests for a specific milestone. `None` returns\
          \ merge requests with no milestone. `Any` returns merge requests that have\
          \ an assigned milestone."
        required: false
        type: "string"
        x-exportParamName: "Milestone"
        x-optionalDataType: "String"
      - name: "my_reaction_emoji"
        in: "query"
        description: "Returns merge requests reacted by the authenticated user by\
          \ the given `emoji`. `None` returns issues not given a reaction. `Any` returns\
          \ issues given at least one reaction."
        required: false
        type: "string"
        x-exportParamName: "MyReactionEmoji"
        x-optionalDataType: "String"
      - name: "reviewer_id"
        in: "query"
        description: "Returns merge requests which have the user as a reviewer with\
          \ the given user `id`. `None` returns merge requests with no reviewers.\
          \ `Any` returns merge requests with any reviewer. Mutually exclusive with\
          \ `reviewer_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ReviewerId"
        x-optionalDataType: "Int32"
      - name: "state"
        in: "query"
        description: "Returns `all` merge requests or just those that are `opened`,\
          \ `closed`, `locked`, or `merged`."
        required: false
        type: "string"
        default: "all"
        enum:
        - "opened"
        - "closed"
        - "locked"
        - "merged"
        - "all"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "order_by"
        in: "query"
        description: "Returns merge requests ordered by `created_at`, `label_priority`,\
          \ `milestone_due`, `popularity`, `priority`, `title` or `updated_at` fields.\
          \ Introduced in GitLab 14.8."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "created_at"
        - "label_priority"
        - "milestone_due"
        - "popularity"
        - "priority"
        - "title"
        - "updated_at"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Returns merge requests sorted in `asc` or `desc` order."
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "with_labels_details"
        in: "query"
        description: "If `true`, response returns more details for each label in labels\
          \ field: `:name`,`:color`, `:description`, `:description_html`, `:text_color`"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithLabelsDetails"
        x-optionalDataType: "Bool"
      - name: "with_merge_status_recheck"
        in: "query"
        description: "If `true`, this projection requests (but does not guarantee)\
          \ that the `merge_status` field be recalculated asynchronously. Introduced\
          \ in GitLab 13.0."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithMergeStatusRecheck"
        x-optionalDataType: "Bool"
      - name: "created_after"
        in: "query"
        description: "Returns merge requests created on or after the given time. Expected\
          \ in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Returns merge requests created on or before the given time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "updated_after"
        in: "query"
        description: "Returns merge requests updated on or after the given time. Expected\
          \ in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      - name: "updated_before"
        in: "query"
        description: "Returns merge requests updated on or before the given time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "view"
        in: "query"
        description: "If simple, returns the `iid`, URL, title, description, and basic\
          \ state of merge request"
        required: false
        type: "string"
        enum:
        - "simple"
        x-exportParamName: "View"
        x-optionalDataType: "String"
      - name: "scope"
        in: "query"
        description: "Returns merge requests for the given scope: `created_by_me`,\
          \ `assigned_to_me` or `all`"
        required: false
        type: "string"
        enum:
        - "created-by-me"
        - "assigned-to-me"
        - "created_by_me"
        - "assigned_to_me"
        - "all"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "source_branch"
        in: "query"
        description: "Returns merge requests with the given source branch"
        required: false
        type: "string"
        x-exportParamName: "SourceBranch"
        x-optionalDataType: "String"
      - name: "source_project_id"
        in: "query"
        description: "Returns merge requests with the given source project id"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SourceProjectId"
        x-optionalDataType: "Int32"
      - name: "target_branch"
        in: "query"
        description: "Returns merge requests with the given target branch"
        required: false
        type: "string"
        x-exportParamName: "TargetBranch"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Search merge requests against their `title` and `description`."
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "in"
        in: "query"
        description: "Modify the scope of the search attribute. `title`, `description`,\
          \ or a string joining them with comma."
        required: false
        type: "string"
        x-exportParamName: "In"
        x-optionalDataType: "String"
      - name: "wip"
        in: "query"
        description: "Filter merge requests against their `wip` status. `yes` to return\
          \ only draft merge requests, `no` to return non-draft merge requests."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Wip"
        x-optionalDataType: "String"
      - name: "not[author_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given user\
          \ `id`. Mutually exclusive with `author_username`. Combine with `scope=all`\
          \ or `scope=assigned_to_me`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotAuthorId"
        x-optionalDataType: "Int32"
      - name: "not[author_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given `username`.\
          \ Mutually exclusive with `author_id`."
        required: false
        type: "string"
        x-exportParamName: "NotAuthorUsername"
        x-optionalDataType: "String"
      - name: "not[assignee_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests assigned to the given user\
          \ `id`. `None` returns unassigned merge requests. `Any` returns merge requests\
          \ with an assignee."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotAssigneeId"
        x-optionalDataType: "Int32"
      - name: "not[assignee_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given `username`.\
          \ Mutually exclusive with `author_id`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "NotAssigneeUsername"
      - name: "not[reviewer_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests which have the user as a\
          \ reviewer with the given `username`. `None` returns merge requests with\
          \ no reviewers. `Any` returns merge requests with any reviewer. Mutually\
          \ exclusive with `reviewer_id`. Introduced in GitLab 13.8."
        required: false
        type: "string"
        x-exportParamName: "NotReviewerUsername"
        x-optionalDataType: "String"
      - name: "not[labels]"
        in: "query"
        description: "`<Negated>` Returns merge requests matching a comma-separated\
          \ list of labels. `None` lists all merge requests with no labels. `Any`\
          \ lists all merge requests with at least one label. Predefined names are\
          \ case-insensitive."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "NotLabels"
      - name: "not[milestone]"
        in: "query"
        description: "`<Negated>` Returns merge requests for a specific milestone.\
          \ `None` returns merge requests with no milestone. `Any` returns merge requests\
          \ that have an assigned milestone."
        required: false
        type: "string"
        x-exportParamName: "NotMilestone"
        x-optionalDataType: "String"
      - name: "not[my_reaction_emoji]"
        in: "query"
        description: "`<Negated>` Returns merge requests reacted by the authenticated\
          \ user by the given `emoji`. `None` returns issues not given a reaction.\
          \ `Any` returns issues given at least one reaction."
        required: false
        type: "string"
        x-exportParamName: "NotMyReactionEmoji"
        x-optionalDataType: "String"
      - name: "not[reviewer_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests which have the user as a\
          \ reviewer with the given user `id`. `None` returns merge requests with\
          \ no reviewers. `Any` returns merge requests with any reviewer. Mutually\
          \ exclusive with `reviewer_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotReviewerId"
        x-optionalDataType: "Int32"
      - name: "deployed_before"
        in: "query"
        description: "Returns merge requests deployed before the given date/time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        x-exportParamName: "DeployedBefore"
        x-optionalDataType: "String"
      - name: "deployed_after"
        in: "query"
        description: "Returns merge requests deployed after the given date/time. Expected\
          \ in ISO 8601 format"
        required: false
        type: "string"
        x-exportParamName: "DeployedAfter"
        x-optionalDataType: "String"
      - name: "environment"
        in: "query"
        description: "Returns merge requests deployed to the given environment"
        required: false
        type: "string"
        x-exportParamName: "Environment"
        x-optionalDataType: "String"
      - name: "approved"
        in: "query"
        description: "Filters merge requests by their `approved` status. `yes` returns\
          \ only approved merge requests. `no` returns only non-approved merge requests."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Approved"
        x-optionalDataType: "String"
      - name: "merge_user_id"
        in: "query"
        description: "Returns merge requests which have been merged by the user with\
          \ the given user `id`. Mutually exclusive with `merge_user_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeUserId"
        x-optionalDataType: "Int32"
      - name: "merge_user_username"
        in: "query"
        description: "Returns merge requests which have been merged by the user with\
          \ the given `username`. Mutually exclusive with `merge_user_id`."
        required: false
        type: "string"
        x-exportParamName: "MergeUserUsername"
        x-optionalDataType: "String"
      - name: "approver_ids"
        in: "query"
        description: "Return merge requests which have specified the users with the\
          \ given IDs as an individual approver"
        required: false
        type: "string"
        x-exportParamName: "ApproverIds"
        x-optionalDataType: "String"
      - name: "approved_by_ids"
        in: "query"
        description: "Return merge requests which have been approved by the specified\
          \ users with the given IDs"
        required: false
        type: "string"
        x-exportParamName: "ApprovedByIds"
        x-optionalDataType: "String"
      - name: "approved_by_usernames"
        in: "query"
        description: "Return merge requests which have been approved by the specified\
          \ users with the given\n            usernames"
        required: false
        type: "string"
        x-exportParamName: "ApprovedByUsernames"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "iids"
        in: "query"
        description: "Returns the request having the given `iid`."
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "Iids"
      responses:
        "200":
          description: "List project merge requests"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequestBasic"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
    post:
      tags:
      - "merge_requests"
      summary: "Create merge request"
      description: "Create a new merge request."
      operationId: "postApiV4ProjectsIdMergeRequests"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdMergeRequests"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdMergeRequests"
        x-exportParamName: "PostApiV4ProjectsIdMergeRequests"
      responses:
        "201":
          description: "Create merge request"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequest"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "409":
          description: "Conflict"
        "422":
          description: "Unprocessable entity"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}:
    get:
      tags:
      - "merge_requests"
      summary: "Get single merge request"
      description: "Shows information about a single merge request. Note: the `changes_count`\
        \ value in the response is a string, not an integer. This is because when\
        \ an merge request has too many changes to display and store, it is capped\
        \ at 1,000. In that case, the API returns the string `\"1000+\"` for the changes\
        \ count."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIid"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The internal ID of the merge request."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - name: "render_html"
        in: "query"
        description: "If `true`, response includes rendered HTML for title and description."
        required: false
        type: "boolean"
        x-exportParamName: "RenderHtml"
        x-optionalDataType: "Bool"
      - name: "include_diverged_commits_count"
        in: "query"
        description: "If `true`, response includes the commits behind the target branch."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeDivergedCommitsCount"
        x-optionalDataType: "Bool"
      - name: "include_rebase_in_progress"
        in: "query"
        description: "If `true`, response includes whether a rebase operation is in\
          \ progress."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeRebaseInProgress"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get single merge request"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequest"
        "404":
          description: "Not found"
    put:
      tags:
      - "merge_requests"
      summary: "Update merge request"
      description: "Updates an existing merge request. You can change the target branch,\
        \ title, or even close the merge request."
      operationId: "putApiV4ProjectsIdMergeRequestsMergeRequestIid"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - in: "body"
        name: "putApiV4ProjectsIdMergeRequestsMergeRequestIid"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdMergeRequestsMergeRequestIid"
        x-exportParamName: "PutApiV4ProjectsIdMergeRequestsMergeRequestIid"
      responses:
        "200":
          description: "Update merge request"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequest"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
        "409":
          description: "Conflict"
        "422":
          description: "Unprocessable entity"
    delete:
      tags:
      - "merge_requests"
      summary: "Delete a merge request"
      description: "Only for administrators and project owners. Deletes the merge\
        \ request in question. "
      operationId: "deleteApiV4ProjectsIdMergeRequestsMergeRequestIid"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The internal ID of the merge request."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "204":
          description: "Delete a merge request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "412":
          description: "Precondition failed"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/participants:
    get:
      tags:
      - "merge_requests"
      summary: "Get single merge request participants"
      description: "Get a list of merge request participants."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidParticipants"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Get single merge request participants"
          schema:
            $ref: "#/definitions/API_Entities_UserBasic"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reviewers:
    get:
      tags:
      - "merge_requests"
      summary: "Get single merge request reviewers"
      description: "Get a list of merge request reviewers."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidReviewers"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Get single merge request reviewers"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequestReviewer"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/commits:
    get:
      tags:
      - "merge_requests"
      summary: "Get single merge request commits"
      description: "Get a list of merge request commits."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidCommits"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Get single merge request commits"
          schema:
            $ref: "#/definitions/API_Entities_Commit"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/context_commits:
    get:
      tags:
      - "merge_requests"
      summary: "List merge request context commits"
      description: "Get a list of merge request context commits."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "List merge request context commits"
          schema:
            $ref: "#/definitions/API_Entities_Commit"
        "404":
          description: "Not found"
    post:
      tags:
      - "merge_requests"
      summary: "Create merge request context commits"
      description: "Create a list of merge request context commits."
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - in: "body"
        name: "postApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits"
        x-exportParamName: "PostApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits"
      responses:
        "201":
          description: "Create merge request context commits"
          schema:
            $ref: "#/definitions/API_Entities_Commit"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "merge_requests"
      summary: "Delete merge request context commits"
      description: "Delete a list of merge request context commits."
      operationId: "deleteApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "commits"
        in: "query"
        description: "The context commits’ SHA."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Commits"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "204":
          description: "Delete merge request context commits"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/changes:
    get:
      tags:
      - "merge_requests"
      summary: "Get single merge request changes"
      description: "Shows information about the merge request including its files\
        \ and changes."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidChanges"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "unidiff"
        in: "query"
        description: "A diff in a Unified diff format"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Unidiff"
        x-optionalDataType: "Bool"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Get single merge request changes"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequestChanges"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/diffs:
    get:
      tags:
      - "merge_requests"
      summary: "Get the merge request diffs"
      description: "Get a list of merge request diffs."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidDiffs"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "unidiff"
        in: "query"
        description: "A diff in a Unified diff format"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Unidiff"
        x-optionalDataType: "Bool"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Get the merge request diffs"
          schema:
            $ref: "#/definitions/API_Entities_Diff"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/pipelines:
    get:
      tags:
      - "merge_requests"
      summary: "Get single merge request pipelines"
      description: "Get a list of merge request pipelines."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidPipelines"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Get single merge request pipelines"
          schema:
            $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
        "404":
          description: "Not found"
    post:
      tags:
      - "merge_requests"
      summary: "Create merge request pipeline"
      description: "Create a new pipeline for a merge request. A pipeline created\
        \ via this endpoint doesn’t run a regular branch/tag pipeline. It requires\
        \ `.gitlab-ci.yml` to be configured with `only: [merge_requests]` to create\
        \ jobs."
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidPipelines"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "201":
          description: "Create merge request pipeline"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Pipeline"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
        "405":
          description: "Method not allowed"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/merge:
    put:
      tags:
      - "merge_requests"
      summary: "Merge a merge request"
      description: "Accept and merge changes submitted with the merge request using\
        \ this API."
      operationId: "putApiV4ProjectsIdMergeRequestsMergeRequestIidMerge"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - in: "body"
        name: "putApiV4ProjectsIdMergeRequestsMergeRequestIidMerge"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdMergeRequestsMergeRequestIidMerge"
        x-exportParamName: "PutApiV4ProjectsIdMergeRequestsMergeRequestIidMerge"
      responses:
        "200":
          description: "Merge a merge request"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequest"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "405":
          description: "Method not allowed"
        "409":
          description: "Conflict"
        "422":
          description: "Unprocessable entity"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/merge_ref:
    get:
      tags:
      - "merge_requests"
      summary: "Returns the up to date merge-ref HEAD commit"
      description: "Returns the up to date merge-ref HEAD commit"
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidMergeRef"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Returns the up to date merge-ref HEAD commit"
        "400":
          description: "Bad request"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/cancel_merge_when_pipeline_succeeds:
    post:
      tags:
      - "merge_requests"
      summary: "Cancel Merge When Pipeline Succeeds"
      description: "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled"
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidCancelMergeWhenPipelineSucceeds"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "201":
          description: "Cancel Merge When Pipeline Succeeds"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequest"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "405":
          description: "Method not allowed"
        "406":
          description: "Not acceptable"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/rebase:
    put:
      tags:
      - "merge_requests"
      summary: "Rebase a merge request"
      description: "Automatically rebase the `source_branch` of the merge request\
        \ against its `target_branch`. This feature was added in GitLab 11.6"
      operationId: "putApiV4ProjectsIdMergeRequestsMergeRequestIidRebase"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - in: "body"
        name: "putApiV4ProjectsIdMergeRequestsMergeRequestIidRebase"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdMergeRequestsMergeRequestIidRebase"
        x-exportParamName: "PutApiV4ProjectsIdMergeRequestsMergeRequestIidRebase"
      responses:
        "200":
          description: "Rebase a merge request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "409":
          description: "Conflict"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/closes_issues:
    get:
      tags:
      - "merge_requests"
      summary: "List issues that close on merge"
      description: "Get all the issues that would be closed by merging the provided\
        \ merge request."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidClosesIssues"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "List issues that close on merge"
          schema:
            $ref: "#/definitions/API_Entities_MRNote"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/versions:
    get:
      tags:
      - "merge_requests"
      summary: "Get a list of merge request diff versions"
      description: "This feature was introduced in GitLab 8.12."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidVersions"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The internal ID of the merge request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a list of merge request diff versions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_MergeRequestDiff"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/versions/{version_id}:
    get:
      tags:
      - "merge_requests"
      summary: "Get a single merge request diff version"
      description: "This feature was introduced in GitLab 8.12."
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidVersionsVersionId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The internal ID of the merge request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - name: "version_id"
        in: "path"
        description: "The ID of the merge request diff version"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "VersionId"
      - name: "unidiff"
        in: "query"
        description: "A diff in a Unified diff format"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Unidiff"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a single merge request diff version"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequestDiffFull"
  /api/v4/projects/{id}/packages/{package_id}/package_files:
    get:
      tags:
      - "package_files"
      summary: "List package files"
      description: "Get a list of package files of a single package"
      operationId: "getApiV4ProjectsIdPackagesPackageIdPackageFiles"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_id"
        in: "path"
        description: "ID of a package"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PackageId"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List package files"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_PackageFile"
  /api/v4/projects/{id}/packages/{package_id}/package_files/{package_file_id}:
    delete:
      tags:
      - "package_files"
      summary: "Delete a package file"
      description: "This feature was introduced in GitLab 13.12"
      operationId: "deleteApiV4ProjectsIdPackagesPackageIdPackageFilesPackageFileId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_id"
        in: "path"
        description: "ID of a package"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PackageId"
      - name: "package_file_id"
        in: "path"
        description: "ID of a package file"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PackageFileId"
      responses:
        "204":
          description: "Delete a package file"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/pages:
    get:
      tags:
      - "pages"
      summary: "Get pages settings"
      description: "Get pages URL and other settings. This feature was introduced\
        \ in Gitlab 16.8"
      operationId: "getApiV4ProjectsIdPages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get pages settings"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "pages"
      summary: "Unpublish pages"
      description: "Remove pages. The user must have administrator access. This feature\
        \ was introduced in GitLab 12.6"
      operationId: "deleteApiV4ProjectsIdPages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Unpublish pages"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
    patch:
      tags:
      - "pages"
      summary: "Update pages settings"
      description: "Update page settings for a project. User must have administrative\
        \ access."
      operationId: "patchApiV4ProjectsIdPages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "patchApiV4ProjectsIdPages"
        required: true
        schema:
          $ref: "#/definitions/patchApiV4ProjectsIdPages"
        x-exportParamName: "PatchApiV4ProjectsIdPages"
      responses:
        "200":
          description: "Update pages settings"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/pages/domains:
    get:
      tags:
      - "pages_domains"
      description: "Get all pages domains"
      operationId: "getApiV4ProjectsIdPagesDomains"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get all pages domains"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_PagesDomain"
    post:
      tags:
      - "projects"
      description: "Create a new pages domain"
      operationId: "postApiV4ProjectsIdPagesDomains"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdPagesDomains"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdPagesDomains"
        x-exportParamName: "PostApiV4ProjectsIdPagesDomains"
      responses:
        "201":
          description: "Create a new pages domain"
          schema:
            $ref: "#/definitions/API_Entities_PagesDomain"
  /api/v4/projects/{id}/pages/domains/{domain}:
    get:
      tags:
      - "projects"
      description: "Get a single pages domain"
      operationId: "getApiV4ProjectsIdPagesDomainsDomain"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "domain"
        in: "path"
        description: "The domain"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      responses:
        "200":
          description: "Get a single pages domain"
          schema:
            $ref: "#/definitions/API_Entities_PagesDomain"
    put:
      tags:
      - "projects"
      description: "Updates a pages domain"
      operationId: "putApiV4ProjectsIdPagesDomainsDomain"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "domain"
        in: "path"
        description: "The domain"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - in: "body"
        name: "putApiV4ProjectsIdPagesDomainsDomain"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPagesDomainsDomain"
        x-exportParamName: "PutApiV4ProjectsIdPagesDomainsDomain"
      responses:
        "200":
          description: "Updates a pages domain"
    delete:
      tags:
      - "projects"
      description: "Delete a pages domain"
      operationId: "deleteApiV4ProjectsIdPagesDomainsDomain"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "domain"
        in: "path"
        description: "The domain"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      responses:
        "204":
          description: "Delete a pages domain"
  /api/v4/projects/{id}/avatar:
    get:
      tags:
      - "project_avatar"
      summary: "Download a project avatar"
      description: "This feature was introduced in GitLab 16.9"
      operationId: "getApiV4ProjectsIdAvatar"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Download a project avatar"
  /api/v4/projects/{id}/clusters:
    get:
      tags:
      - "clusters"
      summary: "List project clusters"
      description: "This feature was introduced in GitLab 11.7. Returns a list of\
        \ project clusters."
      operationId: "getApiV4ProjectsIdClusters"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List project clusters"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Cluster"
        "403":
          description: "Forbidden"
  /api/v4/projects/{id}/clusters/{cluster_id}:
    get:
      tags:
      - "clusters"
      summary: "Get a single project cluster"
      description: "This feature was introduced in GitLab 11.7. Gets a single project\
        \ cluster."
      operationId: "getApiV4ProjectsIdClustersClusterId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "cluster_id"
        in: "path"
        description: "The cluster ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClusterId"
      responses:
        "200":
          description: "Get a single project cluster"
          schema:
            $ref: "#/definitions/API_Entities_ClusterProject"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    put:
      tags:
      - "clusters"
      summary: "Edit project cluster"
      description: "This feature was introduced in GitLab 11.7. Updates an existing\
        \ project cluster."
      operationId: "putApiV4ProjectsIdClustersClusterId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "cluster_id"
        in: "path"
        description: "The cluster ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClusterId"
      - in: "body"
        name: "putApiV4ProjectsIdClustersClusterId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdClustersClusterId"
        x-exportParamName: "PutApiV4ProjectsIdClustersClusterId"
      responses:
        "200":
          description: "Edit project cluster"
          schema:
            $ref: "#/definitions/API_Entities_ClusterProject"
        "400":
          description: "Validation error"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "clusters"
      summary: "Delete project cluster"
      description: "This feature was introduced in GitLab 11.7. Deletes an existing\
        \ project cluster. Does not remove existing resources within the connected\
        \ Kubernetes cluster."
      operationId: "deleteApiV4ProjectsIdClustersClusterId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "cluster_id"
        in: "path"
        description: "The Cluster ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClusterId"
      responses:
        "204":
          description: "Delete project cluster"
          schema:
            $ref: "#/definitions/API_Entities_ClusterProject"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/clusters/user:
    post:
      tags:
      - "clusters"
      summary: "Add existing cluster to project"
      description: "This feature was introduced in GitLab 11.7. Adds an existing Kubernetes\
        \ cluster to the project."
      operationId: "postApiV4ProjectsIdClustersUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdClustersUser"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdClustersUser"
        x-exportParamName: "PostApiV4ProjectsIdClustersUser"
      responses:
        "201":
          description: "Add existing cluster to project"
          schema:
            $ref: "#/definitions/API_Entities_ClusterProject"
        "400":
          description: "Validation error"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/registry/repositories:
    get:
      tags:
      - "container_registry"
      summary: "List container repositories within a project"
      description: "This feature was introduced in GitLab 11.8."
      operationId: "getApiV4ProjectsIdRegistryRepositories"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "tags"
        in: "query"
        description: "Determines if tags should be included"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Tags"
        x-optionalDataType: "Bool"
      - name: "tags_count"
        in: "query"
        description: "Determines if the tags count should be included"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "TagsCount"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "List container repositories within a project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ContainerRegistry_Repository"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/registry/repositories/{repository_id}:
    delete:
      tags:
      - "container_registry"
      summary: "Delete repository"
      description: "This feature was introduced in GitLab 11.8."
      operationId: "deleteApiV4ProjectsIdRegistryRepositoriesRepositoryId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "repository_id"
        in: "path"
        description: "The ID of the repository"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RepositoryId"
      responses:
        "204":
          description: "Success"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/registry/repositories/{repository_id}/tags:
    get:
      tags:
      - "container_registry"
      summary: "List tags of a repository"
      description: "This feature was introduced in GitLab 11.8."
      operationId: "getApiV4ProjectsIdRegistryRepositoriesRepositoryIdTags"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "repository_id"
        in: "path"
        description: "The ID of the repository"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RepositoryId"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List tags of a repository"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ContainerRegistry_Tag"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
        "405":
          description: "Method Not Allowed"
    delete:
      tags:
      - "container_registry"
      summary: "Delete repository tags (in bulk)"
      description: "This feature was introduced in GitLab 11.8."
      operationId: "deleteApiV4ProjectsIdRegistryRepositoriesRepositoryIdTags"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "repository_id"
        in: "path"
        description: "The ID of the repository"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RepositoryId"
      - name: "name_regex_delete"
        in: "query"
        description: "The tag name regexp to delete, specify .* to delete all"
        required: false
        type: "string"
        x-exportParamName: "NameRegexDelete"
        x-optionalDataType: "String"
      - name: "name_regex"
        in: "query"
        description: "The tag name regexp to delete, specify .* to delete all"
        required: false
        type: "string"
        x-exportParamName: "NameRegex"
        x-optionalDataType: "String"
      - name: "name_regex_keep"
        in: "query"
        description: "The tag name regexp to retain"
        required: false
        type: "string"
        x-exportParamName: "NameRegexKeep"
        x-optionalDataType: "String"
      - name: "keep_n"
        in: "query"
        description: "Keep n of latest tags with matching name"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "KeepN"
        x-optionalDataType: "Int32"
      - name: "older_than"
        in: "query"
        description: "Delete older than: 1h, 1d, 1month"
        required: false
        type: "string"
        x-exportParamName: "OlderThan"
        x-optionalDataType: "String"
      responses:
        "204":
          description: "Success"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}:
    get:
      tags:
      - "container_registry"
      summary: "Get details about a repository tag"
      description: "This feature was introduced in GitLab 11.8."
      operationId: "getApiV4ProjectsIdRegistryRepositoriesRepositoryIdTagsTagName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "repository_id"
        in: "path"
        description: "The ID of the repository"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RepositoryId"
      - name: "tag_name"
        in: "path"
        description: "The name of the tag"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      responses:
        "200":
          description: "Get details about a repository tag"
          schema:
            $ref: "#/definitions/API_Entities_ContainerRegistry_TagDetails"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "container_registry"
      summary: "Delete repository tag"
      description: "This feature was introduced in GitLab 11.8."
      operationId: "deleteApiV4ProjectsIdRegistryRepositoriesRepositoryIdTagsTagName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "repository_id"
        in: "path"
        description: "The ID of the repository"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RepositoryId"
      - name: "tag_name"
        in: "path"
        description: "The name of the tag"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      responses:
        "204":
          description: "Success"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/events:
    get:
      tags:
      - "projects"
      description: "List a project's visible events"
      operationId: "getApiV4ProjectsIdEvents"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "action"
        in: "query"
        description: "Event action to filter on"
        required: false
        type: "string"
        x-exportParamName: "Action"
        x-optionalDataType: "String"
      - name: "target_type"
        in: "query"
        description: "Event target type to filter on"
        required: false
        type: "string"
        enum:
        - "issue"
        - "milestone"
        - "merge_request"
        - "note"
        - "project"
        - "snippet"
        - "user"
        - "wiki"
        - "design"
        x-exportParamName: "TargetType"
        x-optionalDataType: "String"
      - name: "before"
        in: "query"
        description: "Include only events created before this date"
        required: false
        type: "string"
        format: "date"
        x-exportParamName: "Before"
        x-optionalDataType: "String"
      - name: "after"
        in: "query"
        description: "Include only events created after this date"
        required: false
        type: "string"
        format: "date"
        x-exportParamName: "After"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return events sorted in ascending and descending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List a project's visible events"
          schema:
            $ref: "#/definitions/API_Entities_Event"
  /api/v4/projects/{id}/export:
    get:
      tags:
      - "project_export"
      summary: "Get export status"
      description: "This feature was introduced in GitLab 10.6."
      operationId: "getApiV4ProjectsIdExport"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get export status"
          schema:
            $ref: "#/definitions/API_Entities_ProjectExportStatus"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
    post:
      tags:
      - "project_export"
      summary: "Start export"
      description: "This feature was introduced in GitLab 10.6."
      operationId: "postApiV4ProjectsIdExport"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdExport"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdExport"
        x-exportParamName: "PostApiV4ProjectsIdExport"
      responses:
        "202":
          description: "Start export"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "429":
          description: "Too many requests"
        "503":
          description: "Service unavailable"
  /api/v4/projects/{id}/export/download:
    get:
      tags:
      - "project_export"
      summary: "Download export"
      description: "This feature was introduced in GitLab 10.6."
      operationId: "getApiV4ProjectsIdExportDownload"
      produces:
      - "application/octet-stream"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Download export"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/projects/{id}/export_relations:
    post:
      tags:
      - "project_export"
      summary: "Start relations export"
      description: "This feature was introduced in GitLab 14.4"
      operationId: "postApiV4ProjectsIdExportRelations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdExportRelations"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdExportRelations"
        x-exportParamName: "PostApiV4ProjectsIdExportRelations"
      responses:
        "202":
          description: "Start relations export"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/projects/{id}/export_relations/download:
    get:
      tags:
      - "project_export"
      summary: "Download relations export"
      description: "This feature was introduced in GitLab 14.4"
      operationId: "getApiV4ProjectsIdExportRelationsDownload"
      produces:
      - "application/octet-stream"
      - "application/gzip"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "relation"
        in: "query"
        description: "Project relation name"
        required: true
        type: "string"
        x-exportParamName: "Relation"
      - name: "batched"
        in: "query"
        description: "Whether to download in batches"
        required: false
        type: "boolean"
        x-exportParamName: "Batched"
        x-optionalDataType: "Bool"
      - name: "batch_number"
        in: "query"
        description: "Batch number to download"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BatchNumber"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Download relations export"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "500":
          description: "Internal Server Error"
        "503":
          description: "Service unavailable"
  /api/v4/projects/{id}/export_relations/status:
    get:
      tags:
      - "project_export"
      summary: "Relations export status"
      description: "This feature was introduced in GitLab 14.4"
      operationId: "getApiV4ProjectsIdExportRelationsStatus"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "relation"
        in: "query"
        description: "Project relation name"
        required: false
        type: "string"
        x-exportParamName: "Relation"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Relations export status"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BulkImports_ExportStatus"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/projects/{id}/hooks:
    get:
      tags:
      - "project_hooks"
      summary: "List project hooks"
      description: "Get a list of project hooks"
      operationId: "getApiV4ProjectsIdHooks"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List project hooks"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ProjectHook"
    post:
      tags:
      - "project_hooks"
      summary: "Add project hook"
      description: "Adds a hook to a specified project"
      operationId: "postApiV4ProjectsIdHooks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdHooks"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdHooks"
        x-exportParamName: "PostApiV4ProjectsIdHooks"
      responses:
        "201":
          description: "Add project hook"
          schema:
            $ref: "#/definitions/API_Entities_ProjectHook"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
  /api/v4/projects/{id}/hooks/{hook_id}:
    get:
      tags:
      - "project_hooks"
      summary: "Get project hook"
      description: "Get a specific hook for a project"
      operationId: "getApiV4ProjectsIdHooksHookId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "hook_id"
        in: "path"
        description: "The ID of a project hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      responses:
        "200":
          description: "Get project hook"
          schema:
            $ref: "#/definitions/API_Entities_ProjectHook"
        "404":
          description: "Not found"
    put:
      tags:
      - "project_hooks"
      summary: "Edit project hook"
      description: "Edits a hook for a specified project."
      operationId: "putApiV4ProjectsIdHooksHookId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "hook_id"
        in: "path"
        description: "The ID of the project hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      - in: "body"
        name: "putApiV4ProjectsIdHooksHookId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdHooksHookId"
        x-exportParamName: "PutApiV4ProjectsIdHooksHookId"
      responses:
        "200":
          description: "Edit project hook"
          schema:
            $ref: "#/definitions/API_Entities_ProjectHook"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
    delete:
      tags:
      - "project_hooks"
      summary: "Delete a project hook"
      description: "Removes a hook from a project. This is an idempotent method and\
        \ can be called multiple times. Either the hook is available or not."
      operationId: "deleteApiV4ProjectsIdHooksHookId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "hook_id"
        in: "path"
        description: "The ID of the project hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      responses:
        "204":
          description: "Delete a project hook"
          schema:
            $ref: "#/definitions/API_Entities_ProjectHook"
        "404":
          description: "Not found"
  /api/v4/projects/import/authorize:
    post:
      tags:
      - "project_import"
      summary: "Workhorse authorize the project import upload"
      description: "This feature was introduced in GitLab 12.9"
      operationId: "postApiV4ProjectsImportAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "201":
          description: "Workhorse authorize the project import upload"
  /api/v4/projects/import:
    post:
      tags:
      - "project_import"
      summary: "Create a new project import"
      description: "This feature was introduced in GitLab 10.6."
      operationId: "postApiV4ProjectsImport"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "path"
        in: "formData"
        description: "The new project path and name"
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "file"
        in: "formData"
        description: "The project export file to be imported"
        required: true
        type: "file"
        x-exportParamName: "File"
      - name: "name"
        in: "formData"
        description: "The name of the project to be imported. Defaults to the path\
          \ of the project if not provided."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "namespace"
        in: "formData"
        description: "The ID or name of the namespace that the project will be imported\
          \ into. Defaults to the current user's namespace."
        required: false
        type: "string"
        x-exportParamName: "Namespace"
        x-optionalDataType: "String"
      - name: "overwrite"
        in: "formData"
        description: "If there is a project in the same namespace and with the same\
          \ name overwrite it"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Overwrite"
        x-optionalDataType: "Bool"
      - name: "override_params[description]"
        in: "formData"
        description: "The description of the project"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsDescription"
        x-optionalDataType: "String"
      - name: "override_params[build_git_strategy]"
        in: "formData"
        description: "The Git strategy. Defaults to `fetch`"
        required: false
        type: "string"
        enum:
        - "fetch"
        - "clone"
        x-exportParamName: "OverrideParamsBuildGitStrategy"
        x-optionalDataType: "String"
      - name: "override_params[build_timeout]"
        in: "formData"
        description: "Build timeout"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OverrideParamsBuildTimeout"
        x-optionalDataType: "Int32"
      - name: "override_params[auto_cancel_pending_pipelines]"
        in: "formData"
        description: "Auto-cancel pending pipelines"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "enabled"
        x-exportParamName: "OverrideParamsAutoCancelPendingPipelines"
        x-optionalDataType: "String"
      - name: "override_params[ci_config_path]"
        in: "formData"
        description: "The path to CI config file. Defaults to `.gitlab-ci.yml`"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsCiConfigPath"
        x-optionalDataType: "String"
      - name: "override_params[service_desk_enabled]"
        in: "formData"
        description: "Disable or enable the service desk"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsServiceDeskEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[issues_enabled]"
        in: "formData"
        description: "Flag indication if the issue tracker is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsIssuesEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[merge_requests_enabled]"
        in: "formData"
        description: "Flag indication if merge requests are enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMergeRequestsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[wiki_enabled]"
        in: "formData"
        description: "Flag indication if the wiki is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsWikiEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[jobs_enabled]"
        in: "formData"
        description: "Flag indication if jobs are enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsJobsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[snippets_enabled]"
        in: "formData"
        description: "Flag indication if snippets are enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsSnippetsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[issues_access_level]"
        in: "formData"
        description: "Issues access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsIssuesAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[repository_access_level]"
        in: "formData"
        description: "Repository access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsRepositoryAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[merge_requests_access_level]"
        in: "formData"
        description: "Merge requests access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsMergeRequestsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[forking_access_level]"
        in: "formData"
        description: "Forks access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsForkingAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[wiki_access_level]"
        in: "formData"
        description: "Wiki access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsWikiAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[builds_access_level]"
        in: "formData"
        description: "Builds access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsBuildsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[snippets_access_level]"
        in: "formData"
        description: "Snippets access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsSnippetsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[pages_access_level]"
        in: "formData"
        description: "Pages access level. One of `disabled`, `private`, `enabled`\
          \ or `public`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        - "public"
        x-exportParamName: "OverrideParamsPagesAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[analytics_access_level]"
        in: "formData"
        description: "Analytics access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsAnalyticsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[container_registry_access_level]"
        in: "formData"
        description: "Controls visibility of the container registry. One of `disabled`,\
          \ `private` or `enabled`. `private` will make the container registry accessible\
          \ only to project members (reporter role and above). `enabled` will make\
          \ the container registry accessible to everyone who has access to the project.\
          \ `disabled` will disable the container registry"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsContainerRegistryAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[security_and_compliance_access_level]"
        in: "formData"
        description: "Security and compliance access level. One of `disabled`, `private`\
          \ or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsSecurityAndComplianceAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[releases_access_level]"
        in: "formData"
        description: "Releases access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsReleasesAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[environments_access_level]"
        in: "formData"
        description: "Environments access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsEnvironmentsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[feature_flags_access_level]"
        in: "formData"
        description: "Feature flags access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsFeatureFlagsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[infrastructure_access_level]"
        in: "formData"
        description: "Infrastructure access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsInfrastructureAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[monitor_access_level]"
        in: "formData"
        description: "Monitor access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsMonitorAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[model_experiments_access_level]"
        in: "formData"
        description: "Model experiments access level. One of `disabled`, `private`\
          \ or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsModelExperimentsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[model_registry_access_level]"
        in: "formData"
        description: "Model registry access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsModelRegistryAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[emails_disabled]"
        in: "formData"
        description: "Deprecated: Use emails_enabled instead."
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsEmailsDisabled"
        x-optionalDataType: "Bool"
      - name: "override_params[emails_enabled]"
        in: "formData"
        description: "Enable email notifications"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsEmailsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[show_default_award_emojis]"
        in: "formData"
        description: "Show default award emojis"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsShowDefaultAwardEmojis"
        x-optionalDataType: "Bool"
      - name: "override_params[show_diff_preview_in_email]"
        in: "formData"
        description: "Include the code diff preview in merge request notification\
          \ emails"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsShowDiffPreviewInEmail"
        x-optionalDataType: "Bool"
      - name: "override_params[warn_about_potentially_unwanted_characters]"
        in: "formData"
        description: "Warn about potentially unwanted characters"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsWarnAboutPotentiallyUnwantedCharacters"
        x-optionalDataType: "Bool"
      - name: "override_params[enforce_auth_checks_on_uploads]"
        in: "formData"
        description: "Enforce auth check on uploads"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsEnforceAuthChecksOnUploads"
        x-optionalDataType: "Bool"
      - name: "override_params[shared_runners_enabled]"
        in: "formData"
        description: "Flag indication if shared runners are enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsSharedRunnersEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[group_runners_enabled]"
        in: "formData"
        description: "Flag indication if group runners are enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsGroupRunnersEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[resolve_outdated_diff_discussions]"
        in: "formData"
        description: "Automatically resolve merge request diff threads on lines changed\
          \ with a push"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsResolveOutdatedDiffDiscussions"
        x-optionalDataType: "Bool"
      - name: "override_params[remove_source_branch_after_merge]"
        in: "formData"
        description: "Remove the source branch by default after merge"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsRemoveSourceBranchAfterMerge"
        x-optionalDataType: "Bool"
      - name: "override_params[container_registry_enabled]"
        in: "formData"
        description: "Deprecated: Use :container_registry_access_level instead. Flag\
          \ indication if the container registry is enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsContainerRegistryEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[container_expiration_policy_attributes][cadence]"
        in: "formData"
        description: "Container expiration policy cadence for recurring job"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesCadence"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][keep_n]"
        in: "formData"
        description: "Container expiration policy number of images to keep"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesKeepN"
        x-optionalDataType: "Int32"
      - name: "override_params[container_expiration_policy_attributes][older_than]"
        in: "formData"
        description: "Container expiration policy remove images older than value"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesOlderThan"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][name_regex]"
        in: "formData"
        description: "Container expiration policy regex for image removal"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesNameRegex"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][name_regex_keep]"
        in: "formData"
        description: "Container expiration policy regex for image retention"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesNameRegexKeep"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][enabled]"
        in: "formData"
        description: "Flag indication if container expiration policy is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[lfs_enabled]"
        in: "formData"
        description: "Flag indication if Git LFS is enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsLfsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[visibility]"
        in: "formData"
        description: "The visibility of the project."
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "OverrideParamsVisibility"
        x-optionalDataType: "String"
      - name: "override_params[public_builds]"
        in: "formData"
        description: "Deprecated: Use public_jobs instead."
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPublicBuilds"
        x-optionalDataType: "Bool"
      - name: "override_params[public_jobs]"
        in: "formData"
        description: "Perform public builds"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPublicJobs"
        x-optionalDataType: "Bool"
      - name: "override_params[request_access_enabled]"
        in: "formData"
        description: "Allow users to request member access"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsRequestAccessEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[only_allow_merge_if_pipeline_succeeds]"
        in: "formData"
        description: "Only allow to merge if builds succeed"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsOnlyAllowMergeIfPipelineSucceeds"
        x-optionalDataType: "Bool"
      - name: "override_params[allow_merge_on_skipped_pipeline]"
        in: "formData"
        description: "Allow to merge if pipeline is skipped"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsAllowMergeOnSkippedPipeline"
        x-optionalDataType: "Bool"
      - name: "override_params[only_allow_merge_if_all_discussions_are_resolved]"
        in: "formData"
        description: "Only allow to merge if all threads are resolved"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsOnlyAllowMergeIfAllDiscussionsAreResolved"
        x-optionalDataType: "Bool"
      - name: "override_params[tag_list]"
        in: "formData"
        description: "Deprecated: Use :topics instead"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "OverrideParamsTagList"
      - name: "override_params[topics]"
        in: "formData"
        description: "The list of topics for a project"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "OverrideParamsTopics"
      - name: "override_params[avatar]"
        in: "formData"
        description: "Avatar image for project"
        required: false
        type: "file"
        x-exportParamName: "OverrideParamsAvatar"
      - name: "override_params[printing_merge_request_link_enabled]"
        in: "formData"
        description: "Show link to create/view merge request when pushing from the\
          \ command line"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPrintingMergeRequestLinkEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[merge_method]"
        in: "formData"
        description: "The merge method used when merging merge requests"
        required: false
        type: "string"
        enum:
        - "ff"
        - "rebase_merge"
        - "merge"
        x-exportParamName: "OverrideParamsMergeMethod"
        x-optionalDataType: "String"
      - name: "override_params[suggestion_commit_message]"
        in: "formData"
        description: "The commit message used to apply merge request suggestions"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsSuggestionCommitMessage"
        x-optionalDataType: "String"
      - name: "override_params[merge_commit_template]"
        in: "formData"
        description: "Template used to create merge commit message"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsMergeCommitTemplate"
        x-optionalDataType: "String"
      - name: "override_params[squash_commit_template]"
        in: "formData"
        description: "Template used to create squash commit message"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsSquashCommitTemplate"
        x-optionalDataType: "String"
      - name: "override_params[issue_branch_template]"
        in: "formData"
        description: "Template used to create a branch from an issue"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsIssueBranchTemplate"
        x-optionalDataType: "String"
      - name: "override_params[initialize_with_readme]"
        in: "formData"
        description: "Initialize a project with a README.md"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsInitializeWithReadme"
        x-optionalDataType: "Bool"
      - name: "override_params[auto_devops_enabled]"
        in: "formData"
        description: "Flag indication if Auto DevOps is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsAutoDevopsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[auto_devops_deploy_strategy]"
        in: "formData"
        description: "Auto Deploy strategy"
        required: false
        type: "string"
        enum:
        - "continuous"
        - "manual"
        - "timed_incremental"
        x-exportParamName: "OverrideParamsAutoDevopsDeployStrategy"
        x-optionalDataType: "String"
      - name: "override_params[autoclose_referenced_issues]"
        in: "formData"
        description: "Flag indication if referenced issues auto-closing is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsAutocloseReferencedIssues"
        x-optionalDataType: "Bool"
      - name: "override_params[repository_storage]"
        in: "formData"
        description: "Which storage shard the repository is on. Available only to\
          \ admins"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsRepositoryStorage"
        x-optionalDataType: "String"
      - name: "override_params[packages_enabled]"
        in: "formData"
        description: "Enable project packages feature"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPackagesEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[squash_option]"
        in: "formData"
        description: "Squash default for project. One of `never`, `always`, `default_on`,\
          \ or `default_off`."
        required: false
        type: "string"
        enum:
        - "never"
        - "always"
        - "default_on"
        - "default_off"
        x-exportParamName: "OverrideParamsSquashOption"
        x-optionalDataType: "String"
      - name: "override_params[mr_default_target_self]"
        in: "formData"
        description: "Merge requests of this forked project targets itself by default"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMrDefaultTargetSelf"
        x-optionalDataType: "Bool"
      - name: "override_params[only_allow_merge_if_all_status_checks_passed]"
        in: "formData"
        description: "Blocks merge requests from merging unless all status checks\
          \ have passed"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsOnlyAllowMergeIfAllStatusChecksPassed"
        x-optionalDataType: "Bool"
      - name: "override_params[approvals_before_merge]"
        in: "formData"
        description: "How many approvers should approve merge request by default"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OverrideParamsApprovalsBeforeMerge"
        x-optionalDataType: "Int32"
      - name: "override_params[mirror]"
        in: "formData"
        description: "Enables pull mirroring in a project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMirror"
        x-optionalDataType: "Bool"
      - name: "override_params[mirror_trigger_builds]"
        in: "formData"
        description: "Pull mirroring triggers builds"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMirrorTriggerBuilds"
        x-optionalDataType: "Bool"
      - name: "override_params[external_authorization_classification_label]"
        in: "formData"
        description: "The classification label for the project"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsExternalAuthorizationClassificationLabel"
        x-optionalDataType: "String"
      - name: "override_params[requirements_access_level]"
        in: "formData"
        description: "Requirements feature access level. One of `disabled`, `private`\
          \ or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsRequirementsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[prevent_merge_without_jira_issue]"
        in: "formData"
        description: "Require an associated issue from Jira"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPreventMergeWithoutJiraIssue"
        x-optionalDataType: "Bool"
      - name: "file.path"
        in: "formData"
        description: "Path to locally stored body (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FilePath"
        x-optionalDataType: "String"
      - name: "file.name"
        in: "formData"
        description: "Real filename as send in Content-Disposition (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileName"
        x-optionalDataType: "String"
      - name: "file.type"
        in: "formData"
        description: "Real content type as send in Content-Type (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileType"
        x-optionalDataType: "String"
      - name: "file.size"
        in: "formData"
        description: "Real size of file (generated by Workhorse)"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "FileSize"
        x-optionalDataType: "Int32"
      - name: "file.md5"
        in: "formData"
        description: "MD5 checksum of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileMd5"
        x-optionalDataType: "String"
      - name: "file.sha1"
        in: "formData"
        description: "SHA1 checksum of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileSha1"
        x-optionalDataType: "String"
      - name: "file.sha256"
        in: "formData"
        description: "SHA256 checksum of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileSha256"
        x-optionalDataType: "String"
      - name: "file.etag"
        in: "formData"
        description: "Etag of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileEtag"
        x-optionalDataType: "String"
      - name: "file.remote_id"
        in: "formData"
        description: "Remote_id of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileRemoteId"
        x-optionalDataType: "String"
      - name: "file.remote_url"
        in: "formData"
        description: "Remote_url of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileRemoteUrl"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Create a new project import"
          schema:
            $ref: "#/definitions/API_Entities_ProjectImportStatus"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/projects/{id}/import:
    get:
      tags:
      - "project_import"
      summary: "Get a project import status"
      description: "This feature was introduced in GitLab 10.6."
      operationId: "getApiV4ProjectsIdImport"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a project import status"
          schema:
            $ref: "#/definitions/API_Entities_ProjectImportStatus"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/projects/remote-import:
    post:
      tags:
      - "project_import"
      summary: "Create a new project import using a remote object storage path"
      description: "This feature was introduced in GitLab 13.2."
      operationId: "postApiV4ProjectsRemoteImport"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "url"
        in: "formData"
        description: "The URL for the file."
        required: true
        type: "string"
        x-exportParamName: "Url"
      - name: "path"
        in: "formData"
        description: "The new project path and name"
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "name"
        in: "formData"
        description: "The name of the project to be imported. Defaults to the path\
          \ of the project if not provided."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "namespace"
        in: "formData"
        description: "The ID or name of the namespace that the project will be imported\
          \ into. Defaults to the current user's namespace."
        required: false
        type: "string"
        x-exportParamName: "Namespace"
        x-optionalDataType: "String"
      - name: "overwrite"
        in: "formData"
        description: "If there is a project in the same namespace and with the same\
          \ name overwrite it"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Overwrite"
        x-optionalDataType: "Bool"
      - name: "override_params[description]"
        in: "formData"
        description: "The description of the project"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsDescription"
        x-optionalDataType: "String"
      - name: "override_params[build_git_strategy]"
        in: "formData"
        description: "The Git strategy. Defaults to `fetch`"
        required: false
        type: "string"
        enum:
        - "fetch"
        - "clone"
        x-exportParamName: "OverrideParamsBuildGitStrategy"
        x-optionalDataType: "String"
      - name: "override_params[build_timeout]"
        in: "formData"
        description: "Build timeout"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OverrideParamsBuildTimeout"
        x-optionalDataType: "Int32"
      - name: "override_params[auto_cancel_pending_pipelines]"
        in: "formData"
        description: "Auto-cancel pending pipelines"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "enabled"
        x-exportParamName: "OverrideParamsAutoCancelPendingPipelines"
        x-optionalDataType: "String"
      - name: "override_params[ci_config_path]"
        in: "formData"
        description: "The path to CI config file. Defaults to `.gitlab-ci.yml`"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsCiConfigPath"
        x-optionalDataType: "String"
      - name: "override_params[service_desk_enabled]"
        in: "formData"
        description: "Disable or enable the service desk"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsServiceDeskEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[issues_enabled]"
        in: "formData"
        description: "Flag indication if the issue tracker is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsIssuesEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[merge_requests_enabled]"
        in: "formData"
        description: "Flag indication if merge requests are enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMergeRequestsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[wiki_enabled]"
        in: "formData"
        description: "Flag indication if the wiki is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsWikiEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[jobs_enabled]"
        in: "formData"
        description: "Flag indication if jobs are enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsJobsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[snippets_enabled]"
        in: "formData"
        description: "Flag indication if snippets are enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsSnippetsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[issues_access_level]"
        in: "formData"
        description: "Issues access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsIssuesAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[repository_access_level]"
        in: "formData"
        description: "Repository access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsRepositoryAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[merge_requests_access_level]"
        in: "formData"
        description: "Merge requests access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsMergeRequestsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[forking_access_level]"
        in: "formData"
        description: "Forks access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsForkingAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[wiki_access_level]"
        in: "formData"
        description: "Wiki access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsWikiAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[builds_access_level]"
        in: "formData"
        description: "Builds access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsBuildsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[snippets_access_level]"
        in: "formData"
        description: "Snippets access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsSnippetsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[pages_access_level]"
        in: "formData"
        description: "Pages access level. One of `disabled`, `private`, `enabled`\
          \ or `public`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        - "public"
        x-exportParamName: "OverrideParamsPagesAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[analytics_access_level]"
        in: "formData"
        description: "Analytics access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsAnalyticsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[container_registry_access_level]"
        in: "formData"
        description: "Controls visibility of the container registry. One of `disabled`,\
          \ `private` or `enabled`. `private` will make the container registry accessible\
          \ only to project members (reporter role and above). `enabled` will make\
          \ the container registry accessible to everyone who has access to the project.\
          \ `disabled` will disable the container registry"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsContainerRegistryAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[security_and_compliance_access_level]"
        in: "formData"
        description: "Security and compliance access level. One of `disabled`, `private`\
          \ or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsSecurityAndComplianceAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[releases_access_level]"
        in: "formData"
        description: "Releases access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsReleasesAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[environments_access_level]"
        in: "formData"
        description: "Environments access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsEnvironmentsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[feature_flags_access_level]"
        in: "formData"
        description: "Feature flags access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsFeatureFlagsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[infrastructure_access_level]"
        in: "formData"
        description: "Infrastructure access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsInfrastructureAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[monitor_access_level]"
        in: "formData"
        description: "Monitor access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsMonitorAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[model_experiments_access_level]"
        in: "formData"
        description: "Model experiments access level. One of `disabled`, `private`\
          \ or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsModelExperimentsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[model_registry_access_level]"
        in: "formData"
        description: "Model registry access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsModelRegistryAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[emails_disabled]"
        in: "formData"
        description: "Deprecated: Use emails_enabled instead."
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsEmailsDisabled"
        x-optionalDataType: "Bool"
      - name: "override_params[emails_enabled]"
        in: "formData"
        description: "Enable email notifications"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsEmailsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[show_default_award_emojis]"
        in: "formData"
        description: "Show default award emojis"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsShowDefaultAwardEmojis"
        x-optionalDataType: "Bool"
      - name: "override_params[show_diff_preview_in_email]"
        in: "formData"
        description: "Include the code diff preview in merge request notification\
          \ emails"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsShowDiffPreviewInEmail"
        x-optionalDataType: "Bool"
      - name: "override_params[warn_about_potentially_unwanted_characters]"
        in: "formData"
        description: "Warn about potentially unwanted characters"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsWarnAboutPotentiallyUnwantedCharacters"
        x-optionalDataType: "Bool"
      - name: "override_params[enforce_auth_checks_on_uploads]"
        in: "formData"
        description: "Enforce auth check on uploads"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsEnforceAuthChecksOnUploads"
        x-optionalDataType: "Bool"
      - name: "override_params[shared_runners_enabled]"
        in: "formData"
        description: "Flag indication if shared runners are enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsSharedRunnersEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[group_runners_enabled]"
        in: "formData"
        description: "Flag indication if group runners are enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsGroupRunnersEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[resolve_outdated_diff_discussions]"
        in: "formData"
        description: "Automatically resolve merge request diff threads on lines changed\
          \ with a push"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsResolveOutdatedDiffDiscussions"
        x-optionalDataType: "Bool"
      - name: "override_params[remove_source_branch_after_merge]"
        in: "formData"
        description: "Remove the source branch by default after merge"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsRemoveSourceBranchAfterMerge"
        x-optionalDataType: "Bool"
      - name: "override_params[container_registry_enabled]"
        in: "formData"
        description: "Deprecated: Use :container_registry_access_level instead. Flag\
          \ indication if the container registry is enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsContainerRegistryEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[container_expiration_policy_attributes][cadence]"
        in: "formData"
        description: "Container expiration policy cadence for recurring job"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesCadence"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][keep_n]"
        in: "formData"
        description: "Container expiration policy number of images to keep"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesKeepN"
        x-optionalDataType: "Int32"
      - name: "override_params[container_expiration_policy_attributes][older_than]"
        in: "formData"
        description: "Container expiration policy remove images older than value"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesOlderThan"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][name_regex]"
        in: "formData"
        description: "Container expiration policy regex for image removal"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesNameRegex"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][name_regex_keep]"
        in: "formData"
        description: "Container expiration policy regex for image retention"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesNameRegexKeep"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][enabled]"
        in: "formData"
        description: "Flag indication if container expiration policy is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[lfs_enabled]"
        in: "formData"
        description: "Flag indication if Git LFS is enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsLfsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[visibility]"
        in: "formData"
        description: "The visibility of the project."
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "OverrideParamsVisibility"
        x-optionalDataType: "String"
      - name: "override_params[public_builds]"
        in: "formData"
        description: "Deprecated: Use public_jobs instead."
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPublicBuilds"
        x-optionalDataType: "Bool"
      - name: "override_params[public_jobs]"
        in: "formData"
        description: "Perform public builds"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPublicJobs"
        x-optionalDataType: "Bool"
      - name: "override_params[request_access_enabled]"
        in: "formData"
        description: "Allow users to request member access"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsRequestAccessEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[only_allow_merge_if_pipeline_succeeds]"
        in: "formData"
        description: "Only allow to merge if builds succeed"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsOnlyAllowMergeIfPipelineSucceeds"
        x-optionalDataType: "Bool"
      - name: "override_params[allow_merge_on_skipped_pipeline]"
        in: "formData"
        description: "Allow to merge if pipeline is skipped"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsAllowMergeOnSkippedPipeline"
        x-optionalDataType: "Bool"
      - name: "override_params[only_allow_merge_if_all_discussions_are_resolved]"
        in: "formData"
        description: "Only allow to merge if all threads are resolved"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsOnlyAllowMergeIfAllDiscussionsAreResolved"
        x-optionalDataType: "Bool"
      - name: "override_params[tag_list]"
        in: "formData"
        description: "Deprecated: Use :topics instead"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "OverrideParamsTagList"
      - name: "override_params[topics]"
        in: "formData"
        description: "The list of topics for a project"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "OverrideParamsTopics"
      - name: "override_params[avatar]"
        in: "formData"
        description: "Avatar image for project"
        required: false
        type: "file"
        x-exportParamName: "OverrideParamsAvatar"
      - name: "override_params[printing_merge_request_link_enabled]"
        in: "formData"
        description: "Show link to create/view merge request when pushing from the\
          \ command line"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPrintingMergeRequestLinkEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[merge_method]"
        in: "formData"
        description: "The merge method used when merging merge requests"
        required: false
        type: "string"
        enum:
        - "ff"
        - "rebase_merge"
        - "merge"
        x-exportParamName: "OverrideParamsMergeMethod"
        x-optionalDataType: "String"
      - name: "override_params[suggestion_commit_message]"
        in: "formData"
        description: "The commit message used to apply merge request suggestions"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsSuggestionCommitMessage"
        x-optionalDataType: "String"
      - name: "override_params[merge_commit_template]"
        in: "formData"
        description: "Template used to create merge commit message"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsMergeCommitTemplate"
        x-optionalDataType: "String"
      - name: "override_params[squash_commit_template]"
        in: "formData"
        description: "Template used to create squash commit message"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsSquashCommitTemplate"
        x-optionalDataType: "String"
      - name: "override_params[issue_branch_template]"
        in: "formData"
        description: "Template used to create a branch from an issue"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsIssueBranchTemplate"
        x-optionalDataType: "String"
      - name: "override_params[initialize_with_readme]"
        in: "formData"
        description: "Initialize a project with a README.md"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsInitializeWithReadme"
        x-optionalDataType: "Bool"
      - name: "override_params[auto_devops_enabled]"
        in: "formData"
        description: "Flag indication if Auto DevOps is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsAutoDevopsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[auto_devops_deploy_strategy]"
        in: "formData"
        description: "Auto Deploy strategy"
        required: false
        type: "string"
        enum:
        - "continuous"
        - "manual"
        - "timed_incremental"
        x-exportParamName: "OverrideParamsAutoDevopsDeployStrategy"
        x-optionalDataType: "String"
      - name: "override_params[autoclose_referenced_issues]"
        in: "formData"
        description: "Flag indication if referenced issues auto-closing is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsAutocloseReferencedIssues"
        x-optionalDataType: "Bool"
      - name: "override_params[repository_storage]"
        in: "formData"
        description: "Which storage shard the repository is on. Available only to\
          \ admins"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsRepositoryStorage"
        x-optionalDataType: "String"
      - name: "override_params[packages_enabled]"
        in: "formData"
        description: "Enable project packages feature"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPackagesEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[squash_option]"
        in: "formData"
        description: "Squash default for project. One of `never`, `always`, `default_on`,\
          \ or `default_off`."
        required: false
        type: "string"
        enum:
        - "never"
        - "always"
        - "default_on"
        - "default_off"
        x-exportParamName: "OverrideParamsSquashOption"
        x-optionalDataType: "String"
      - name: "override_params[mr_default_target_self]"
        in: "formData"
        description: "Merge requests of this forked project targets itself by default"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMrDefaultTargetSelf"
        x-optionalDataType: "Bool"
      - name: "override_params[only_allow_merge_if_all_status_checks_passed]"
        in: "formData"
        description: "Blocks merge requests from merging unless all status checks\
          \ have passed"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsOnlyAllowMergeIfAllStatusChecksPassed"
        x-optionalDataType: "Bool"
      - name: "override_params[approvals_before_merge]"
        in: "formData"
        description: "How many approvers should approve merge request by default"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OverrideParamsApprovalsBeforeMerge"
        x-optionalDataType: "Int32"
      - name: "override_params[mirror]"
        in: "formData"
        description: "Enables pull mirroring in a project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMirror"
        x-optionalDataType: "Bool"
      - name: "override_params[mirror_trigger_builds]"
        in: "formData"
        description: "Pull mirroring triggers builds"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMirrorTriggerBuilds"
        x-optionalDataType: "Bool"
      - name: "override_params[external_authorization_classification_label]"
        in: "formData"
        description: "The classification label for the project"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsExternalAuthorizationClassificationLabel"
        x-optionalDataType: "String"
      - name: "override_params[requirements_access_level]"
        in: "formData"
        description: "Requirements feature access level. One of `disabled`, `private`\
          \ or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsRequirementsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[prevent_merge_without_jira_issue]"
        in: "formData"
        description: "Require an associated issue from Jira"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPreventMergeWithoutJiraIssue"
        x-optionalDataType: "Bool"
      responses:
        "201":
          description: "Create a new project import using a remote object storage\
            \ path"
          schema:
            $ref: "#/definitions/API_Entities_ProjectImportStatus"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "429":
          description: "Too many requests"
        "503":
          description: "Service unavailable"
  /api/v4/projects/import-relation/authorize:
    post:
      tags:
      - "project_import"
      summary: "Workhorse authorize the project relation import upload"
      description: "This feature was introduced in GitLab 16.11"
      operationId: "postApiV4ProjectsImportRelationAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "201":
          description: "Workhorse authorize the project relation import upload"
  /api/v4/projects/import-relation:
    post:
      tags:
      - "project_import"
      summary: "Re-import a relation into a project"
      description: "This feature was introduced in GitLab 16.11."
      operationId: "postApiV4ProjectsImportRelation"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "path"
        in: "formData"
        description: "The project path and name"
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "file"
        in: "formData"
        description: "The project export file from which to extract the relation."
        required: true
        type: "file"
        x-exportParamName: "File"
      - name: "relation"
        in: "formData"
        description: "The relation to import. Must be one of issues, merge_requests,\
          \ ci_pipelines, or milestones."
        required: true
        type: "string"
        x-exportParamName: "Relation"
      - name: "file.path"
        in: "formData"
        description: "Path to locally stored body (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FilePath"
        x-optionalDataType: "String"
      - name: "file.name"
        in: "formData"
        description: "Real filename as sent in Content-Disposition (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileName"
        x-optionalDataType: "String"
      - name: "file.type"
        in: "formData"
        description: "Real content type as send in Content-Type (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileType"
        x-optionalDataType: "String"
      - name: "file.size"
        in: "formData"
        description: "Real size of file (generated by Workhorse)"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "FileSize"
        x-optionalDataType: "Int32"
      - name: "file.md5"
        in: "formData"
        description: "MD5 checksum of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileMd5"
        x-optionalDataType: "String"
      - name: "file.sha1"
        in: "formData"
        description: "SHA1 checksum of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileSha1"
        x-optionalDataType: "String"
      - name: "file.sha256"
        in: "formData"
        description: "SHA256 checksum of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileSha256"
        x-optionalDataType: "String"
      - name: "file.etag"
        in: "formData"
        description: "Etag of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileEtag"
        x-optionalDataType: "String"
      - name: "file.remote_id"
        in: "formData"
        description: "Remote_id of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileRemoteId"
        x-optionalDataType: "String"
      - name: "file.remote_url"
        in: "formData"
        description: "Remote_url of the file (generated by Workhorse)"
        required: false
        type: "string"
        x-exportParamName: "FileRemoteUrl"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Re-import a relation into a project"
          schema:
            $ref: "#/definitions/API_Entities_RelationImportTracker"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/projects/{id}/relation-imports:
    get:
      tags:
      - "project_import"
      summary: "Get the statuses of relation imports for specified project"
      description: "This feature was introduced in GitLab 16.11."
      operationId: "getApiV4ProjectsIdRelationImports"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get the statuses of relation imports for specified project"
          schema:
            $ref: "#/definitions/API_Entities_ProjectImportStatus"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/projects/remote-import-s3:
    post:
      tags:
      - "project_import"
      summary: "Create a new project import using a file from AWS S3"
      description: "This feature was introduced in GitLab 14.9."
      operationId: "postApiV4ProjectsRemoteImportS3"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "region"
        in: "formData"
        description: "AWS region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "bucket_name"
        in: "formData"
        description: "Bucket name"
        required: true
        type: "string"
        x-exportParamName: "BucketName"
      - name: "file_key"
        in: "formData"
        description: "File key"
        required: true
        type: "string"
        x-exportParamName: "FileKey"
      - name: "access_key_id"
        in: "formData"
        description: "Access key id"
        required: true
        type: "string"
        x-exportParamName: "AccessKeyId"
      - name: "secret_access_key"
        in: "formData"
        description: "Secret access key"
        required: true
        type: "string"
        x-exportParamName: "SecretAccessKey"
      - name: "path"
        in: "formData"
        description: "The new project path and name"
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "name"
        in: "formData"
        description: "The name of the project to be imported. Defaults to the path\
          \ of the project if not provided."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "namespace"
        in: "formData"
        description: "The ID or name of the namespace that the project will be imported\
          \ into. Defaults to the current user's namespace."
        required: false
        type: "string"
        x-exportParamName: "Namespace"
        x-optionalDataType: "String"
      - name: "overwrite"
        in: "formData"
        description: "If there is a project in the same namespace and with the same\
          \ name overwrite it"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Overwrite"
        x-optionalDataType: "Bool"
      - name: "override_params[description]"
        in: "formData"
        description: "The description of the project"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsDescription"
        x-optionalDataType: "String"
      - name: "override_params[build_git_strategy]"
        in: "formData"
        description: "The Git strategy. Defaults to `fetch`"
        required: false
        type: "string"
        enum:
        - "fetch"
        - "clone"
        x-exportParamName: "OverrideParamsBuildGitStrategy"
        x-optionalDataType: "String"
      - name: "override_params[build_timeout]"
        in: "formData"
        description: "Build timeout"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OverrideParamsBuildTimeout"
        x-optionalDataType: "Int32"
      - name: "override_params[auto_cancel_pending_pipelines]"
        in: "formData"
        description: "Auto-cancel pending pipelines"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "enabled"
        x-exportParamName: "OverrideParamsAutoCancelPendingPipelines"
        x-optionalDataType: "String"
      - name: "override_params[ci_config_path]"
        in: "formData"
        description: "The path to CI config file. Defaults to `.gitlab-ci.yml`"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsCiConfigPath"
        x-optionalDataType: "String"
      - name: "override_params[service_desk_enabled]"
        in: "formData"
        description: "Disable or enable the service desk"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsServiceDeskEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[issues_enabled]"
        in: "formData"
        description: "Flag indication if the issue tracker is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsIssuesEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[merge_requests_enabled]"
        in: "formData"
        description: "Flag indication if merge requests are enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMergeRequestsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[wiki_enabled]"
        in: "formData"
        description: "Flag indication if the wiki is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsWikiEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[jobs_enabled]"
        in: "formData"
        description: "Flag indication if jobs are enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsJobsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[snippets_enabled]"
        in: "formData"
        description: "Flag indication if snippets are enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsSnippetsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[issues_access_level]"
        in: "formData"
        description: "Issues access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsIssuesAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[repository_access_level]"
        in: "formData"
        description: "Repository access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsRepositoryAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[merge_requests_access_level]"
        in: "formData"
        description: "Merge requests access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsMergeRequestsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[forking_access_level]"
        in: "formData"
        description: "Forks access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsForkingAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[wiki_access_level]"
        in: "formData"
        description: "Wiki access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsWikiAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[builds_access_level]"
        in: "formData"
        description: "Builds access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsBuildsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[snippets_access_level]"
        in: "formData"
        description: "Snippets access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsSnippetsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[pages_access_level]"
        in: "formData"
        description: "Pages access level. One of `disabled`, `private`, `enabled`\
          \ or `public`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        - "public"
        x-exportParamName: "OverrideParamsPagesAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[analytics_access_level]"
        in: "formData"
        description: "Analytics access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsAnalyticsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[container_registry_access_level]"
        in: "formData"
        description: "Controls visibility of the container registry. One of `disabled`,\
          \ `private` or `enabled`. `private` will make the container registry accessible\
          \ only to project members (reporter role and above). `enabled` will make\
          \ the container registry accessible to everyone who has access to the project.\
          \ `disabled` will disable the container registry"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsContainerRegistryAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[security_and_compliance_access_level]"
        in: "formData"
        description: "Security and compliance access level. One of `disabled`, `private`\
          \ or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsSecurityAndComplianceAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[releases_access_level]"
        in: "formData"
        description: "Releases access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsReleasesAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[environments_access_level]"
        in: "formData"
        description: "Environments access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsEnvironmentsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[feature_flags_access_level]"
        in: "formData"
        description: "Feature flags access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsFeatureFlagsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[infrastructure_access_level]"
        in: "formData"
        description: "Infrastructure access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsInfrastructureAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[monitor_access_level]"
        in: "formData"
        description: "Monitor access level. One of `disabled`, `private` or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsMonitorAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[model_experiments_access_level]"
        in: "formData"
        description: "Model experiments access level. One of `disabled`, `private`\
          \ or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsModelExperimentsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[model_registry_access_level]"
        in: "formData"
        description: "Model registry access level. One of `disabled`, `private` or\
          \ `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsModelRegistryAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[emails_disabled]"
        in: "formData"
        description: "Deprecated: Use emails_enabled instead."
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsEmailsDisabled"
        x-optionalDataType: "Bool"
      - name: "override_params[emails_enabled]"
        in: "formData"
        description: "Enable email notifications"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsEmailsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[show_default_award_emojis]"
        in: "formData"
        description: "Show default award emojis"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsShowDefaultAwardEmojis"
        x-optionalDataType: "Bool"
      - name: "override_params[show_diff_preview_in_email]"
        in: "formData"
        description: "Include the code diff preview in merge request notification\
          \ emails"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsShowDiffPreviewInEmail"
        x-optionalDataType: "Bool"
      - name: "override_params[warn_about_potentially_unwanted_characters]"
        in: "formData"
        description: "Warn about potentially unwanted characters"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsWarnAboutPotentiallyUnwantedCharacters"
        x-optionalDataType: "Bool"
      - name: "override_params[enforce_auth_checks_on_uploads]"
        in: "formData"
        description: "Enforce auth check on uploads"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsEnforceAuthChecksOnUploads"
        x-optionalDataType: "Bool"
      - name: "override_params[shared_runners_enabled]"
        in: "formData"
        description: "Flag indication if shared runners are enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsSharedRunnersEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[group_runners_enabled]"
        in: "formData"
        description: "Flag indication if group runners are enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsGroupRunnersEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[resolve_outdated_diff_discussions]"
        in: "formData"
        description: "Automatically resolve merge request diff threads on lines changed\
          \ with a push"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsResolveOutdatedDiffDiscussions"
        x-optionalDataType: "Bool"
      - name: "override_params[remove_source_branch_after_merge]"
        in: "formData"
        description: "Remove the source branch by default after merge"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsRemoveSourceBranchAfterMerge"
        x-optionalDataType: "Bool"
      - name: "override_params[container_registry_enabled]"
        in: "formData"
        description: "Deprecated: Use :container_registry_access_level instead. Flag\
          \ indication if the container registry is enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsContainerRegistryEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[container_expiration_policy_attributes][cadence]"
        in: "formData"
        description: "Container expiration policy cadence for recurring job"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesCadence"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][keep_n]"
        in: "formData"
        description: "Container expiration policy number of images to keep"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesKeepN"
        x-optionalDataType: "Int32"
      - name: "override_params[container_expiration_policy_attributes][older_than]"
        in: "formData"
        description: "Container expiration policy remove images older than value"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesOlderThan"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][name_regex]"
        in: "formData"
        description: "Container expiration policy regex for image removal"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesNameRegex"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][name_regex_keep]"
        in: "formData"
        description: "Container expiration policy regex for image retention"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesNameRegexKeep"
        x-optionalDataType: "String"
      - name: "override_params[container_expiration_policy_attributes][enabled]"
        in: "formData"
        description: "Flag indication if container expiration policy is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsContainerExpirationPolicyAttributesEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[lfs_enabled]"
        in: "formData"
        description: "Flag indication if Git LFS is enabled for that project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsLfsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[visibility]"
        in: "formData"
        description: "The visibility of the project."
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "OverrideParamsVisibility"
        x-optionalDataType: "String"
      - name: "override_params[public_builds]"
        in: "formData"
        description: "Deprecated: Use public_jobs instead."
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPublicBuilds"
        x-optionalDataType: "Bool"
      - name: "override_params[public_jobs]"
        in: "formData"
        description: "Perform public builds"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPublicJobs"
        x-optionalDataType: "Bool"
      - name: "override_params[request_access_enabled]"
        in: "formData"
        description: "Allow users to request member access"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsRequestAccessEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[only_allow_merge_if_pipeline_succeeds]"
        in: "formData"
        description: "Only allow to merge if builds succeed"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsOnlyAllowMergeIfPipelineSucceeds"
        x-optionalDataType: "Bool"
      - name: "override_params[allow_merge_on_skipped_pipeline]"
        in: "formData"
        description: "Allow to merge if pipeline is skipped"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsAllowMergeOnSkippedPipeline"
        x-optionalDataType: "Bool"
      - name: "override_params[only_allow_merge_if_all_discussions_are_resolved]"
        in: "formData"
        description: "Only allow to merge if all threads are resolved"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsOnlyAllowMergeIfAllDiscussionsAreResolved"
        x-optionalDataType: "Bool"
      - name: "override_params[tag_list]"
        in: "formData"
        description: "Deprecated: Use :topics instead"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "OverrideParamsTagList"
      - name: "override_params[topics]"
        in: "formData"
        description: "The list of topics for a project"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "OverrideParamsTopics"
      - name: "override_params[avatar]"
        in: "formData"
        description: "Avatar image for project"
        required: false
        type: "file"
        x-exportParamName: "OverrideParamsAvatar"
      - name: "override_params[printing_merge_request_link_enabled]"
        in: "formData"
        description: "Show link to create/view merge request when pushing from the\
          \ command line"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPrintingMergeRequestLinkEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[merge_method]"
        in: "formData"
        description: "The merge method used when merging merge requests"
        required: false
        type: "string"
        enum:
        - "ff"
        - "rebase_merge"
        - "merge"
        x-exportParamName: "OverrideParamsMergeMethod"
        x-optionalDataType: "String"
      - name: "override_params[suggestion_commit_message]"
        in: "formData"
        description: "The commit message used to apply merge request suggestions"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsSuggestionCommitMessage"
        x-optionalDataType: "String"
      - name: "override_params[merge_commit_template]"
        in: "formData"
        description: "Template used to create merge commit message"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsMergeCommitTemplate"
        x-optionalDataType: "String"
      - name: "override_params[squash_commit_template]"
        in: "formData"
        description: "Template used to create squash commit message"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsSquashCommitTemplate"
        x-optionalDataType: "String"
      - name: "override_params[issue_branch_template]"
        in: "formData"
        description: "Template used to create a branch from an issue"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsIssueBranchTemplate"
        x-optionalDataType: "String"
      - name: "override_params[initialize_with_readme]"
        in: "formData"
        description: "Initialize a project with a README.md"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsInitializeWithReadme"
        x-optionalDataType: "Bool"
      - name: "override_params[auto_devops_enabled]"
        in: "formData"
        description: "Flag indication if Auto DevOps is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsAutoDevopsEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[auto_devops_deploy_strategy]"
        in: "formData"
        description: "Auto Deploy strategy"
        required: false
        type: "string"
        enum:
        - "continuous"
        - "manual"
        - "timed_incremental"
        x-exportParamName: "OverrideParamsAutoDevopsDeployStrategy"
        x-optionalDataType: "String"
      - name: "override_params[autoclose_referenced_issues]"
        in: "formData"
        description: "Flag indication if referenced issues auto-closing is enabled"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsAutocloseReferencedIssues"
        x-optionalDataType: "Bool"
      - name: "override_params[repository_storage]"
        in: "formData"
        description: "Which storage shard the repository is on. Available only to\
          \ admins"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsRepositoryStorage"
        x-optionalDataType: "String"
      - name: "override_params[packages_enabled]"
        in: "formData"
        description: "Enable project packages feature"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPackagesEnabled"
        x-optionalDataType: "Bool"
      - name: "override_params[squash_option]"
        in: "formData"
        description: "Squash default for project. One of `never`, `always`, `default_on`,\
          \ or `default_off`."
        required: false
        type: "string"
        enum:
        - "never"
        - "always"
        - "default_on"
        - "default_off"
        x-exportParamName: "OverrideParamsSquashOption"
        x-optionalDataType: "String"
      - name: "override_params[mr_default_target_self]"
        in: "formData"
        description: "Merge requests of this forked project targets itself by default"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMrDefaultTargetSelf"
        x-optionalDataType: "Bool"
      - name: "override_params[only_allow_merge_if_all_status_checks_passed]"
        in: "formData"
        description: "Blocks merge requests from merging unless all status checks\
          \ have passed"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsOnlyAllowMergeIfAllStatusChecksPassed"
        x-optionalDataType: "Bool"
      - name: "override_params[approvals_before_merge]"
        in: "formData"
        description: "How many approvers should approve merge request by default"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OverrideParamsApprovalsBeforeMerge"
        x-optionalDataType: "Int32"
      - name: "override_params[mirror]"
        in: "formData"
        description: "Enables pull mirroring in a project"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMirror"
        x-optionalDataType: "Bool"
      - name: "override_params[mirror_trigger_builds]"
        in: "formData"
        description: "Pull mirroring triggers builds"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsMirrorTriggerBuilds"
        x-optionalDataType: "Bool"
      - name: "override_params[external_authorization_classification_label]"
        in: "formData"
        description: "The classification label for the project"
        required: false
        type: "string"
        x-exportParamName: "OverrideParamsExternalAuthorizationClassificationLabel"
        x-optionalDataType: "String"
      - name: "override_params[requirements_access_level]"
        in: "formData"
        description: "Requirements feature access level. One of `disabled`, `private`\
          \ or `enabled`"
        required: false
        type: "string"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        x-exportParamName: "OverrideParamsRequirementsAccessLevel"
        x-optionalDataType: "String"
      - name: "override_params[prevent_merge_without_jira_issue]"
        in: "formData"
        description: "Require an associated issue from Jira"
        required: false
        type: "boolean"
        x-exportParamName: "OverrideParamsPreventMergeWithoutJiraIssue"
        x-optionalDataType: "Bool"
      responses:
        "201":
          description: "Create a new project import using a file from AWS S3"
          schema:
            $ref: "#/definitions/API_Entities_ProjectImportStatus"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "429":
          description: "Too many requests"
        "503":
          description: "Service unavailable"
  /api/v4/projects/{id}/job_token_scope:
    get:
      tags:
      - "projects_job_token_scope"
      description: "Fetch CI_JOB_TOKEN access settings."
      operationId: "getApiV4ProjectsIdJobTokenScope"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Fetch CI_JOB_TOKEN access settings."
          schema:
            $ref: "#/definitions/API_Entities_ProjectJobTokenScope"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    patch:
      tags:
      - "projects_job_token_scope"
      description: "Patch CI_JOB_TOKEN access settings."
      operationId: "patchApiV4ProjectsIdJobTokenScope"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "patchApiV4ProjectsIdJobTokenScope"
        required: true
        schema:
          $ref: "#/definitions/patchApiV4ProjectsIdJobTokenScope"
        x-exportParamName: "PatchApiV4ProjectsIdJobTokenScope"
      responses:
        "204":
          description: "Patch CI_JOB_TOKEN access settings."
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/job_token_scope/allowlist:
    get:
      tags:
      - "projects_job_token_scope"
      description: "Fetch project inbound allowlist for CI_JOB_TOKEN access settings."
      operationId: "getApiV4ProjectsIdJobTokenScopeAllowlist"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Fetch project inbound allowlist for CI_JOB_TOKEN access settings."
          schema:
            $ref: "#/definitions/API_Entities_BasicProjectDetails"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    post:
      tags:
      - "projects_job_token_scope"
      description: "Add target project to allowlist."
      operationId: "postApiV4ProjectsIdJobTokenScopeAllowlist"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of user project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdJobTokenScopeAllowlist"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdJobTokenScopeAllowlist"
        x-exportParamName: "PostApiV4ProjectsIdJobTokenScopeAllowlist"
      responses:
        "201":
          description: "Add target project to allowlist."
          schema:
            $ref: "#/definitions/API_Entities_BasicProjectDetails"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
  /api/v4/projects/{id}/job_token_scope/groups_allowlist:
    get:
      tags:
      - "projects_job_token_scope"
      description: "Fetch project groups allowlist for CI_JOB_TOKEN access settings."
      operationId: "getApiV4ProjectsIdJobTokenScopeGroupsAllowlist"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Fetch project groups allowlist for CI_JOB_TOKEN access settings."
          schema:
            $ref: "#/definitions/API_Entities_BasicProjectDetails"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    post:
      tags:
      - "projects_job_token_scope"
      description: "Add target group to allowlist."
      operationId: "postApiV4ProjectsIdJobTokenScopeGroupsAllowlist"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of user project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdJobTokenScopeGroupsAllowlist"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdJobTokenScopeGroupsAllowlist"
        x-exportParamName: "PostApiV4ProjectsIdJobTokenScopeGroupsAllowlist"
      responses:
        "201":
          description: "Add target group to allowlist."
          schema:
            $ref: "#/definitions/API_Entities_BasicGroupDetails"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
  /api/v4/projects/{id}/job_token_scope/groups_allowlist/{target_group_id}:
    delete:
      tags:
      - "projects_job_token_scope"
      description: "Delete target group from allowlist."
      operationId: "deleteApiV4ProjectsIdJobTokenScopeGroupsAllowlistTargetGroupId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of user project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "target_group_id"
        in: "path"
        description: "ID of the group to be removed from the allowlist"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TargetGroupId"
      responses:
        "204":
          description: "Delete target group from allowlist."
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/job_token_scope/allowlist/{target_project_id}:
    delete:
      tags:
      - "projects_job_token_scope"
      description: "Delete project from allowlist."
      operationId: "deleteApiV4ProjectsIdJobTokenScopeAllowlistTargetProjectId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of user project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "target_project_id"
        in: "path"
        description: "ID of the project to be removed from the allowlist"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TargetProjectId"
      responses:
        "204":
          description: "Delete project from allowlist."
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/packages:
    get:
      tags:
      - "project_packages"
      summary: "Get a list of project packages"
      description: "This feature was introduced in GitLab 11.8"
      operationId: "getApiV4ProjectsIdPackages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "order_by"
        in: "query"
        description: "Return packages ordered by `created_at`, `name`, `version` or\
          \ `type` fields."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "created_at"
        - "name"
        - "version"
        - "type"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return packages sorted in `asc` or `desc` order."
        required: false
        type: "string"
        default: "asc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "package_type"
        in: "query"
        description: "Return packages of a certain type"
        required: false
        type: "string"
        enum:
        - "maven"
        - "npm"
        - "conan"
        - "nuget"
        - "pypi"
        - "composer"
        - "generic"
        - "golang"
        - "debian"
        - "rubygems"
        - "helm"
        - "terraform_module"
        - "rpm"
        - "ml_model"
        x-exportParamName: "PackageType"
        x-optionalDataType: "String"
      - name: "package_name"
        in: "query"
        description: "Return packages with this name"
        required: false
        type: "string"
        x-exportParamName: "PackageName"
        x-optionalDataType: "String"
      - name: "package_version"
        in: "query"
        description: "Return packages with this version"
        required: false
        type: "string"
        x-exportParamName: "PackageVersion"
        x-optionalDataType: "String"
      - name: "include_versionless"
        in: "query"
        description: "Returns packages without a version"
        required: false
        type: "boolean"
        x-exportParamName: "IncludeVersionless"
        x-optionalDataType: "Bool"
      - name: "status"
        in: "query"
        description: "Return packages with specified status"
        required: false
        type: "string"
        enum:
        - "default"
        - "hidden"
        - "processing"
        - "error"
        - "pending_destruction"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get a list of project packages"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Package"
        "403":
          description: "Forbidden"
        "404":
          description: "Project Not Found"
  /api/v4/projects/{id}/packages/{package_id}:
    get:
      tags:
      - "project_packages"
      summary: "Get a single project package"
      description: "This feature was introduced in GitLab 11.9"
      operationId: "getApiV4ProjectsIdPackagesPackageId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_id"
        in: "path"
        description: "The ID of a package"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PackageId"
      responses:
        "200":
          description: "Get a single project package"
          schema:
            $ref: "#/definitions/API_Entities_Package"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "project_packages"
      summary: "Delete a project package"
      description: "This feature was introduced in GitLab 11.9"
      operationId: "deleteApiV4ProjectsIdPackagesPackageId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_id"
        in: "path"
        description: "The ID of a package"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PackageId"
      responses:
        "204":
          description: "Delete a project package"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/{package_id}/pipelines:
    get:
      tags:
      - "project_packages"
      summary: "Get the pipelines for a single project package"
      description: "This feature was introduced in GitLab 16.1"
      operationId: "getApiV4ProjectsIdPackagesPackageIdPipelines"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        maximum: 20
        minimum: 1
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "package_id"
        in: "path"
        description: "The ID of a package"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PackageId"
      - name: "cursor"
        in: "query"
        description: "Cursor for obtaining the next set of records"
        required: false
        type: "string"
        x-exportParamName: "Cursor"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get the pipelines for a single project package"
          schema:
            $ref: "#/definitions/API_Entities_Package_Pipeline"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/repository_storage_moves:
    get:
      tags:
      - "projects"
      summary: "Get a list of all project repository storage moves"
      description: "This feature was introduced in GitLab 13.1."
      operationId: "getApiV4ProjectsIdRepositoryStorageMoves"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a list of all project repository storage moves"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Projects_RepositoryStorageMove"
    post:
      tags:
      - "projects"
      summary: "Schedule a project repository storage move"
      description: "This feature was introduced in GitLab 13.1."
      operationId: "postApiV4ProjectsIdRepositoryStorageMoves"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdRepositoryStorageMoves"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRepositoryStorageMoves"
        x-exportParamName: "PostApiV4ProjectsIdRepositoryStorageMoves"
      responses:
        "201":
          description: "Schedule a project repository storage move"
          schema:
            $ref: "#/definitions/API_Entities_Projects_RepositoryStorageMove"
  /api/v4/projects/{id}/repository_storage_moves/{repository_storage_move_id}:
    get:
      tags:
      - "projects"
      summary: "Get a project repository storage move"
      description: "This feature was introduced in GitLab 13.1."
      operationId: "getApiV4ProjectsIdRepositoryStorageMovesRepositoryStorageMoveId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "repository_storage_move_id"
        in: "path"
        description: "The ID of a project repository storage move"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RepositoryStorageMoveId"
      responses:
        "200":
          description: "Get a project repository storage move"
          schema:
            $ref: "#/definitions/API_Entities_Projects_RepositoryStorageMove"
  /api/v4/projects/{id}/snippets:
    get:
      tags:
      - "project_snippets"
      description: "Get all project snippets"
      operationId: "getApiV4ProjectsIdSnippets"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get all project snippets"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ProjectSnippet"
        "404":
          description: "Not found"
    post:
      tags:
      - "project_snippets"
      description: "Create a new project snippet"
      operationId: "postApiV4ProjectsIdSnippets"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdSnippets"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdSnippets"
        x-exportParamName: "PostApiV4ProjectsIdSnippets"
      responses:
        "201":
          description: "Create a new project snippet"
          schema:
            $ref: "#/definitions/API_Entities_ProjectSnippet"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
  /api/v4/projects/{id}/snippets/{snippet_id}:
    get:
      tags:
      - "project_snippets"
      description: "Get a single project snippet"
      operationId: "getApiV4ProjectsIdSnippetsSnippetId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "snippet_id"
        in: "path"
        description: "The ID of a project snippet"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SnippetId"
      responses:
        "200":
          description: "Get a single project snippet"
          schema:
            $ref: "#/definitions/API_Entities_ProjectSnippet"
        "404":
          description: "Not found"
    put:
      tags:
      - "project_snippets"
      description: "Update an existing project snippet"
      operationId: "putApiV4ProjectsIdSnippetsSnippetId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "snippet_id"
        in: "path"
        description: "The ID of a project snippet"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SnippetId"
      - in: "body"
        name: "putApiV4ProjectsIdSnippetsSnippetId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdSnippetsSnippetId"
        x-exportParamName: "PutApiV4ProjectsIdSnippetsSnippetId"
      responses:
        "200":
          description: "Update an existing project snippet"
          schema:
            $ref: "#/definitions/API_Entities_ProjectSnippet"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
    delete:
      tags:
      - "project_snippets"
      description: "Delete a project snippet"
      operationId: "deleteApiV4ProjectsIdSnippetsSnippetId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "snippet_id"
        in: "path"
        description: "The ID of a project snippet"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SnippetId"
      responses:
        "204":
          description: "Delete a project snippet"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/snippets/{snippet_id}/raw:
    get:
      tags:
      - "project_snippets"
      description: "Get a raw project snippet"
      operationId: "getApiV4ProjectsIdSnippetsSnippetIdRaw"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "snippet_id"
        in: "path"
        description: "The ID of a project snippet"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SnippetId"
      responses:
        "200":
          description: "Get a raw project snippet"
          schema:
            $ref: "#/definitions/API_Entities_ProjectSnippet"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/snippets/{snippet_id}/files/{ref}/{file_path}/raw:
    get:
      tags:
      - "project_snippets"
      description: "Get raw project snippet file contents from the repository"
      operationId: "getApiV4ProjectsIdSnippetsSnippetIdFilesRefFilePathRaw"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_path"
        in: "path"
        description: "The url encoded path to the file, e.g. lib%2Fclass%2Erb"
        required: true
        type: "string"
        x-exportParamName: "FilePath"
      - name: "ref"
        in: "path"
        description: "The name of branch, tag or commit"
        required: true
        type: "string"
        x-exportParamName: "Ref"
      - name: "snippet_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SnippetId"
      responses:
        "200":
          description: "Get raw project snippet file contents from the repository"
          schema:
            $ref: "#/definitions/API_Entities_ProjectSnippet"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/snippets/{snippet_id}/user_agent_detail:
    get:
      tags:
      - "project_snippets"
      description: "Get the user agent details for a project snippet"
      operationId: "getApiV4ProjectsIdSnippetsSnippetIdUserAgentDetail"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "snippet_id"
        in: "path"
        description: "The ID of a project snippet"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SnippetId"
      responses:
        "200":
          description: "Get the user agent details for a project snippet"
          schema:
            $ref: "#/definitions/API_Entities_UserAgentDetail"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/snapshot:
    get:
      tags:
      - "projects"
      summary: "Download a (possibly inconsistent) snapshot of a repository"
      description: "This feature was introduced in GitLab 10.7"
      operationId: "getApiV4ProjectsIdSnapshot"
      produces:
      - "application/x-tar"
      parameters:
      - name: "wiki"
        in: "query"
        description: "Set to true to receive the wiki repository"
        required: false
        type: "boolean"
        x-exportParamName: "Wiki"
        x-optionalDataType: "Bool"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Download a (possibly inconsistent) snapshot of a repository"
          schema:
            type: "file"
        "401":
          description: "Unauthorized"
  /api/v4/projects/{id}/statistics:
    get:
      tags:
      - "projects"
      description: "Get the list of project fetch statistics for the last 30 days"
      operationId: "getApiV4ProjectsIdStatistics"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get the list of project fetch statistics for the last 30 days"
          schema:
            $ref: "#/definitions/API_Entities_ProjectDailyStatistics"
        "401":
          description: "401 Unauthorized"
        "404":
          description: "404 Project Not Found"
  /api/v4/projects/{id}/templates/{type}:
    get:
      tags:
      - "projects"
      summary: "Get a list of templates available to this project"
      description: "This endpoint was introduced in GitLab 11.4"
      operationId: "getApiV4ProjectsIdTemplatesType"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "type"
        in: "path"
        description: "The type (dockerfiles|gitignores|gitlab_ci_ymls|licenses|issues|merge_requests)\
          \ of the template"
        required: true
        type: "string"
        enum:
        - "dockerfiles"
        - "gitignores"
        - "gitlab_ci_ymls"
        - "licenses"
        - "issues"
        - "merge_requests"
        x-exportParamName: "Type_"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a list of templates available to this project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_TemplatesList"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/templates/{type}/{name}:
    get:
      tags:
      - "projects"
      summary: "Download a template available to this project"
      description: "This endpoint was introduced in GitLab 11.4"
      operationId: "getApiV4ProjectsIdTemplatesTypeName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "type"
        in: "path"
        description: "The type (dockerfiles|gitignores|gitlab_ci_ymls|licenses|issues|merge_requests)\
          \ of the template"
        required: true
        type: "string"
        enum:
        - "dockerfiles"
        - "gitignores"
        - "gitlab_ci_ymls"
        - "licenses"
        - "issues"
        - "merge_requests"
        x-exportParamName: "Type_"
      - name: "name"
        in: "path"
        description: "The key of the template, as obtained from the collection endpoint."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "source_template_project_id"
        in: "query"
        description: "The project id where a given template is being stored. This\
          \ is useful when multiple templates from different projects have the same\
          \ name"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SourceTemplateProjectId"
        x-optionalDataType: "Int32"
      - name: "project"
        in: "query"
        description: "The project name to use when expanding placeholders in the template.\
          \ Only affects licenses"
        required: false
        type: "string"
        x-exportParamName: "Project"
        x-optionalDataType: "String"
      - name: "fullname"
        in: "query"
        description: "The full name of the copyright holder to use when expanding\
          \ placeholders in the template. Only affects licenses"
        required: false
        type: "string"
        x-exportParamName: "Fullname"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Download a template available to this project"
          schema:
            $ref: "#/definitions/API_Entities_License"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/custom_attributes:
    get:
      tags:
      - "projects"
      description: "Get all custom attributes on a project"
      operationId: "getApiV4ProjectsIdCustomAttributes"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get all custom attributes on a project"
          schema:
            $ref: "#/definitions/API_Entities_CustomAttribute"
  /api/v4/projects/{id}/custom_attributes/{key}:
    get:
      tags:
      - "projects"
      description: "Get a custom attribute on a project"
      operationId: "getApiV4ProjectsIdCustomAttributesKey"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the custom attribute"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a custom attribute on a project"
          schema:
            $ref: "#/definitions/API_Entities_CustomAttribute"
    put:
      tags:
      - "projects"
      description: "Set a custom attribute on a project"
      operationId: "putApiV4ProjectsIdCustomAttributesKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the custom attribute"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdCustomAttributesKey"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdCustomAttributesKey"
        x-exportParamName: "PutApiV4ProjectsIdCustomAttributesKey"
      responses:
        "200":
          description: "Set a custom attribute on a project"
    delete:
      tags:
      - "projects"
      description: "Delete a custom attribute on a project"
      operationId: "deleteApiV4ProjectsIdCustomAttributesKey"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the custom attribute"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Delete a custom attribute on a project"
  /api/v4/projects:
    get:
      tags:
      - "projects"
      description: "Get a list of visible projects for authenticated user"
      operationId: "getApiV4Projects"
      produces:
      - "application/json"
      parameters:
      - name: "order_by"
        in: "query"
        description: "Return projects ordered by field. storage_size, repository_size,\
          \ wiki_size, packages_size are only available to admins. Similarity is available\
          \ when searching and is limited to projects the user has access to."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "id"
        - "name"
        - "path"
        - "created_at"
        - "updated_at"
        - "last_activity_at"
        - "similarity"
        - "storage_size"
        - "repository_size"
        - "wiki_size"
        - "packages_size"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return projects sorted in ascending and descending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "archived"
        in: "query"
        description: "Limit by archived status"
        required: false
        type: "boolean"
        x-exportParamName: "Archived"
        x-optionalDataType: "Bool"
      - name: "visibility"
        in: "query"
        description: "Limit by visibility"
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "Visibility"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Return list of projects matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "search_namespaces"
        in: "query"
        description: "Include ancestor namespaces when matching search criteria"
        required: false
        type: "boolean"
        x-exportParamName: "SearchNamespaces"
        x-optionalDataType: "Bool"
      - name: "owned"
        in: "query"
        description: "Limit by owned by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Owned"
        x-optionalDataType: "Bool"
      - name: "starred"
        in: "query"
        description: "Limit by starred status"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Starred"
        x-optionalDataType: "Bool"
      - name: "imported"
        in: "query"
        description: "Limit by imported by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Imported"
        x-optionalDataType: "Bool"
      - name: "membership"
        in: "query"
        description: "Limit by projects that the current user is a member of"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Membership"
        x-optionalDataType: "Bool"
      - name: "with_issues_enabled"
        in: "query"
        description: "Limit by enabled issues feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithIssuesEnabled"
        x-optionalDataType: "Bool"
      - name: "with_merge_requests_enabled"
        in: "query"
        description: "Limit by enabled merge requests feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithMergeRequestsEnabled"
        x-optionalDataType: "Bool"
      - name: "with_programming_language"
        in: "query"
        description: "Limit to repositories which use the given programming language"
        required: false
        type: "string"
        x-exportParamName: "WithProgrammingLanguage"
        x-optionalDataType: "String"
      - name: "min_access_level"
        in: "query"
        description: "Limit by minimum access level of authenticated user"
        required: false
        type: "integer"
        format: "int32"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        x-exportParamName: "MinAccessLevel"
        x-optionalDataType: "Int32"
      - name: "id_after"
        in: "query"
        description: "Limit results to projects with IDs greater than the specified\
          \ ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "IdAfter"
        x-optionalDataType: "Int32"
      - name: "id_before"
        in: "query"
        description: "Limit results to projects with IDs less than the specified ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "IdBefore"
        x-optionalDataType: "Int32"
      - name: "last_activity_after"
        in: "query"
        description: "Limit results to projects with last_activity after specified\
          \ time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastActivityAfter"
        x-optionalDataType: "Time"
      - name: "last_activity_before"
        in: "query"
        description: "Limit results to projects with last_activity before specified\
          \ time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastActivityBefore"
        x-optionalDataType: "Time"
      - name: "repository_storage"
        in: "query"
        description: "Which storage shard the repository is on. Available only to\
          \ admins"
        required: false
        type: "string"
        x-exportParamName: "RepositoryStorage"
        x-optionalDataType: "String"
      - name: "topic"
        in: "query"
        description: "Comma-separated list of topics. Limit results to projects having\
          \ all topics"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Topic"
      - name: "topic_id"
        in: "query"
        description: "Limit results to projects with the assigned topic given by the\
          \ topic ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "TopicId"
        x-optionalDataType: "Int32"
      - name: "updated_before"
        in: "query"
        description: "Return projects updated before the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "updated_after"
        in: "query"
        description: "Return projects updated after the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      - name: "include_pending_delete"
        in: "query"
        description: "Include projects in pending delete state. Can only be set by\
          \ admins"
        required: false
        type: "boolean"
        x-exportParamName: "IncludePendingDelete"
        x-optionalDataType: "Bool"
      - name: "wiki_checksum_failed"
        in: "query"
        description: "Limit by projects where wiki checksum is failed"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WikiChecksumFailed"
        x-optionalDataType: "Bool"
      - name: "repository_checksum_failed"
        in: "query"
        description: "Limit by projects where repository checksum is failed"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "RepositoryChecksumFailed"
        x-optionalDataType: "Bool"
      - name: "include_hidden"
        in: "query"
        description: "Include hidden projects. Can only be set by admins"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeHidden"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "simple"
        in: "query"
        description: "Return only the ID, URL, name, and path of each project"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Simple"
        x-optionalDataType: "Bool"
      - name: "statistics"
        in: "query"
        description: "Include project statistics"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Statistics"
        x-optionalDataType: "Bool"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a list of visible projects for authenticated user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BasicProjectDetails"
        "400":
          description: "Bad request"
    post:
      tags:
      - "projects"
      description: "Create new project"
      operationId: "postApiV4Projects"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4Projects"
        required: true
        schema:
          $ref: "#/definitions/postApiV4Projects"
        x-exportParamName: "PostApiV4Projects"
      responses:
        "201":
          description: "Create new project"
          schema:
            $ref: "#/definitions/API_Entities_Project"
        "400":
          description: "Bad request"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/user/{user_id}:
    post:
      tags:
      - "projects"
      description: "Create new project for a specified user. Only available to admin\
        \ users."
      operationId: "postApiV4ProjectsUserUserId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID of a user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - in: "body"
        name: "postApiV4ProjectsUserUserId"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsUserUserId"
        x-exportParamName: "PostApiV4ProjectsUserUserId"
      responses:
        "201":
          description: "Create new project for a specified user. Only available to\
            \ admin users."
          schema:
            $ref: "#/definitions/API_Entities_Project"
        "400":
          description: "Bad request"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/share_locations:
    get:
      tags:
      - "projects"
      description: "Returns group that can be shared with the given project"
      operationId: "getApiV4ProjectsIdShareLocations"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "search"
        in: "query"
        description: "Return list of groups matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Returns group that can be shared with the given project"
          schema:
            $ref: "#/definitions/API_Entities_Group"
  /api/v4/projects/{id}:
    get:
      tags:
      - "projects"
      description: "Get a single project"
      operationId: "getApiV4ProjectsId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "statistics"
        in: "query"
        description: "Include project statistics"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Statistics"
        x-optionalDataType: "Bool"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      - name: "license"
        in: "query"
        description: "Include project license data"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "License"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a single project"
          schema:
            $ref: "#/definitions/API_Entities_ProjectWithAccess"
    put:
      tags:
      - "projects"
      description: "Update an existing project"
      operationId: "putApiV4ProjectsId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsId"
        x-exportParamName: "PutApiV4ProjectsId"
      responses:
        "200":
          description: "Update an existing project"
          schema:
            $ref: "#/definitions/API_Entities_Project"
        "400":
          description: "Bad request"
        "403":
          description: "Unauthenticated"
    delete:
      tags:
      - "projects"
      description: "Delete a project"
      operationId: "deleteApiV4ProjectsId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "202":
          description: "Delete a project"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/fork:
    post:
      tags:
      - "projects"
      description: "Fork new project for the current user or provided namespace."
      operationId: "postApiV4ProjectsIdFork"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdFork"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdFork"
        x-exportParamName: "PostApiV4ProjectsIdFork"
      responses:
        "201":
          description: "Fork new project for the current user or provided namespace."
          schema:
            $ref: "#/definitions/API_Entities_Project"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
        "409":
          description: "Conflict"
    delete:
      tags:
      - "projects"
      description: "Remove a forked_from relationship"
      operationId: "deleteApiV4ProjectsIdFork"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Remove a forked_from relationship"
        "304":
          description: "Not modified"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/forks:
    get:
      tags:
      - "projects"
      description: "List forks of this project"
      operationId: "getApiV4ProjectsIdForks"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "order_by"
        in: "query"
        description: "Return projects ordered by field. storage_size, repository_size,\
          \ wiki_size, packages_size are only available to admins. Similarity is available\
          \ when searching and is limited to projects the user has access to."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "id"
        - "name"
        - "path"
        - "created_at"
        - "updated_at"
        - "last_activity_at"
        - "similarity"
        - "storage_size"
        - "repository_size"
        - "wiki_size"
        - "packages_size"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return projects sorted in ascending and descending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "archived"
        in: "query"
        description: "Limit by archived status"
        required: false
        type: "boolean"
        x-exportParamName: "Archived"
        x-optionalDataType: "Bool"
      - name: "visibility"
        in: "query"
        description: "Limit by visibility"
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "Visibility"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Return list of projects matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "search_namespaces"
        in: "query"
        description: "Include ancestor namespaces when matching search criteria"
        required: false
        type: "boolean"
        x-exportParamName: "SearchNamespaces"
        x-optionalDataType: "Bool"
      - name: "owned"
        in: "query"
        description: "Limit by owned by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Owned"
        x-optionalDataType: "Bool"
      - name: "starred"
        in: "query"
        description: "Limit by starred status"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Starred"
        x-optionalDataType: "Bool"
      - name: "imported"
        in: "query"
        description: "Limit by imported by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Imported"
        x-optionalDataType: "Bool"
      - name: "membership"
        in: "query"
        description: "Limit by projects that the current user is a member of"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Membership"
        x-optionalDataType: "Bool"
      - name: "with_issues_enabled"
        in: "query"
        description: "Limit by enabled issues feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithIssuesEnabled"
        x-optionalDataType: "Bool"
      - name: "with_merge_requests_enabled"
        in: "query"
        description: "Limit by enabled merge requests feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithMergeRequestsEnabled"
        x-optionalDataType: "Bool"
      - name: "with_programming_language"
        in: "query"
        description: "Limit to repositories which use the given programming language"
        required: false
        type: "string"
        x-exportParamName: "WithProgrammingLanguage"
        x-optionalDataType: "String"
      - name: "min_access_level"
        in: "query"
        description: "Limit by minimum access level of authenticated user"
        required: false
        type: "integer"
        format: "int32"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        x-exportParamName: "MinAccessLevel"
        x-optionalDataType: "Int32"
      - name: "id_after"
        in: "query"
        description: "Limit results to projects with IDs greater than the specified\
          \ ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "IdAfter"
        x-optionalDataType: "Int32"
      - name: "id_before"
        in: "query"
        description: "Limit results to projects with IDs less than the specified ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "IdBefore"
        x-optionalDataType: "Int32"
      - name: "last_activity_after"
        in: "query"
        description: "Limit results to projects with last_activity after specified\
          \ time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastActivityAfter"
        x-optionalDataType: "Time"
      - name: "last_activity_before"
        in: "query"
        description: "Limit results to projects with last_activity before specified\
          \ time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastActivityBefore"
        x-optionalDataType: "Time"
      - name: "repository_storage"
        in: "query"
        description: "Which storage shard the repository is on. Available only to\
          \ admins"
        required: false
        type: "string"
        x-exportParamName: "RepositoryStorage"
        x-optionalDataType: "String"
      - name: "topic"
        in: "query"
        description: "Comma-separated list of topics. Limit results to projects having\
          \ all topics"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Topic"
      - name: "topic_id"
        in: "query"
        description: "Limit results to projects with the assigned topic given by the\
          \ topic ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "TopicId"
        x-optionalDataType: "Int32"
      - name: "updated_before"
        in: "query"
        description: "Return projects updated before the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "updated_after"
        in: "query"
        description: "Return projects updated after the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      - name: "include_pending_delete"
        in: "query"
        description: "Include projects in pending delete state. Can only be set by\
          \ admins"
        required: false
        type: "boolean"
        x-exportParamName: "IncludePendingDelete"
        x-optionalDataType: "Bool"
      - name: "wiki_checksum_failed"
        in: "query"
        description: "Limit by projects where wiki checksum is failed"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WikiChecksumFailed"
        x-optionalDataType: "Bool"
      - name: "repository_checksum_failed"
        in: "query"
        description: "Limit by projects where repository checksum is failed"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "RepositoryChecksumFailed"
        x-optionalDataType: "Bool"
      - name: "include_hidden"
        in: "query"
        description: "Include hidden projects. Can only be set by admins"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeHidden"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "simple"
        in: "query"
        description: "Return only the ID, URL, name, and path of each project"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Simple"
        x-optionalDataType: "Bool"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "List forks of this project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Project"
  /api/v4/projects/{id}/pages_access:
    get:
      tags:
      - "projects"
      description: "Check pages access of this project"
      operationId: "getApiV4ProjectsIdPagesAccess"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Check pages access of this project"
        "403":
          description: "Unauthenticated"
  /api/v4/projects/{id}/archive:
    post:
      tags:
      - "projects"
      description: "Archive a project"
      operationId: "postApiV4ProjectsIdArchive"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Archive a project"
          schema:
            $ref: "#/definitions/API_Entities_Project"
        "403":
          description: "Unauthenticated"
  /api/v4/projects/{id}/unarchive:
    post:
      tags:
      - "projects"
      description: "Unarchive a project"
      operationId: "postApiV4ProjectsIdUnarchive"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Unarchive a project"
          schema:
            $ref: "#/definitions/API_Entities_Project"
        "403":
          description: "Unauthenticated"
  /api/v4/projects/{id}/star:
    post:
      tags:
      - "projects"
      description: "Star a project"
      operationId: "postApiV4ProjectsIdStar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Star a project"
          schema:
            $ref: "#/definitions/API_Entities_Project"
        "304":
          description: "Not modified"
        "403":
          description: "Unauthenticated"
  /api/v4/projects/{id}/unstar:
    post:
      tags:
      - "projects"
      description: "Unstar a project"
      operationId: "postApiV4ProjectsIdUnstar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Unstar a project"
          schema:
            $ref: "#/definitions/API_Entities_Project"
        "304":
          description: "Not modified"
        "403":
          description: "Unauthenticated"
  /api/v4/projects/{id}/starrers:
    get:
      tags:
      - "projects"
      description: "Get the users who starred a project"
      operationId: "getApiV4ProjectsIdStarrers"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "search"
        in: "query"
        description: "Return list of users matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the users who starred a project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_UserBasic"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/languages:
    get:
      tags:
      - "projects"
      description: "Get languages in project repository"
      operationId: "getApiV4ProjectsIdLanguages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get languages in project repository"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/fork/{forked_from_id}:
    post:
      tags:
      - "projects"
      description: "Mark this project as forked from another"
      operationId: "postApiV4ProjectsIdForkForkedFromId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "forked_from_id"
        in: "path"
        description: "The ID of the project it was forked from"
        required: true
        type: "string"
        x-exportParamName: "ForkedFromId"
      responses:
        "201":
          description: "Mark this project as forked from another"
          schema:
            $ref: "#/definitions/API_Entities_Project"
        "401":
          description: "Unauthorized"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/share:
    post:
      tags:
      - "projects"
      description: "Share the project with a group"
      operationId: "postApiV4ProjectsIdShare"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdShare"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdShare"
        x-exportParamName: "PostApiV4ProjectsIdShare"
      responses:
        "201":
          description: "Share the project with a group"
          schema:
            $ref: "#/definitions/API_Entities_ProjectGroupLink"
        "400":
          description: "Bad request"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/share/{group_id}:
    delete:
      tags:
      - "projects"
      description: "Remove a group share"
      operationId: "deleteApiV4ProjectsIdShareGroupId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "group_id"
        in: "path"
        description: "The ID of the group"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "GroupId"
      responses:
        "204":
          description: "Remove a group share"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/import_project_members/{project_id}:
    post:
      tags:
      - "projects"
      summary: "Import members from another project"
      description: "This feature was introduced in GitLab 14.2"
      operationId: "postApiV4ProjectsIdImportProjectMembersProjectId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "project_id"
        in: "path"
        description: "The ID of the source project to import the members from."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "Import members from another project"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Project Not Found"
        "422":
          description: "Import failed"
  /api/v4/projects/{id}/uploads/authorize:
    post:
      tags:
      - "projects"
      summary: "Workhorse authorize the file upload"
      description: "This feature was introduced in GitLab 13.11"
      operationId: "postApiV4ProjectsIdUploadsAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Workhorse authorize the file upload"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/uploads:
    post:
      tags:
      - "projects"
      description: "Upload a file"
      operationId: "postApiV4ProjectsIdUploads"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdUploads"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdUploads"
        x-exportParamName: "PostApiV4ProjectsIdUploads"
      responses:
        "201":
          description: "Upload a file"
          schema:
            $ref: "#/definitions/API_Entities_ProjectUpload"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/users:
    get:
      tags:
      - "projects"
      description: "Get the users list of a project"
      operationId: "getApiV4ProjectsIdUsers"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "search"
        in: "query"
        description: "Return list of users matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "skip_users"
        in: "query"
        description: "Filter out users with the specified IDs"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "SkipUsers"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the users list of a project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_UserBasic"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/groups:
    get:
      tags:
      - "projects"
      description: "Get ancestor and shared groups for a project"
      operationId: "getApiV4ProjectsIdGroups"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "search"
        in: "query"
        description: "Return list of groups matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "skip_groups"
        in: "query"
        description: "Array of group ids to exclude from list"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "SkipGroups"
      - name: "with_shared"
        in: "query"
        description: "Include shared groups"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithShared"
        x-optionalDataType: "Bool"
      - name: "shared_visible_only"
        in: "query"
        description: "Limit to shared groups user has access to"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "SharedVisibleOnly"
        x-optionalDataType: "Bool"
      - name: "shared_min_access_level"
        in: "query"
        description: "Limit returned shared groups by minimum access level to the\
          \ project"
        required: false
        type: "integer"
        format: "int32"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        x-exportParamName: "SharedMinAccessLevel"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get ancestor and shared groups for a project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_PublicGroupDetails"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/housekeeping:
    post:
      tags:
      - "projects"
      summary: "Start the housekeeping task for a project"
      description: "This feature was introduced in GitLab 9.0."
      operationId: "postApiV4ProjectsIdHousekeeping"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdHousekeeping"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdHousekeeping"
        x-exportParamName: "PostApiV4ProjectsIdHousekeeping"
      responses:
        "201":
          description: "Start the housekeeping task for a project"
        "401":
          description: "Unauthorized"
        "403":
          description: "Unauthenticated"
        "409":
          description: "Conflict"
  /api/v4/projects/{id}/repository_size:
    post:
      tags:
      - "projects"
      summary: "Start a task to recalculate repository size for a project"
      description: "This feature was introduced in GitLab 15.0."
      operationId: "postApiV4ProjectsIdRepositorySize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Start a task to recalculate repository size for a project"
        "401":
          description: "Unauthorized"
        "403":
          description: "Unauthenticated"
  /api/v4/projects/{id}/transfer:
    put:
      tags:
      - "projects"
      description: "Transfer a project to a new namespace"
      operationId: "putApiV4ProjectsIdTransfer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdTransfer"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdTransfer"
        x-exportParamName: "PutApiV4ProjectsIdTransfer"
      responses:
        "200":
          description: "Transfer a project to a new namespace"
          schema:
            $ref: "#/definitions/API_Entities_Project"
        "400":
          description: "Bad request"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/transfer_locations:
    get:
      tags:
      - "projects"
      description: "Get the namespaces to where the project can be transferred"
      operationId: "getApiV4ProjectsIdTransferLocations"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "search"
        in: "query"
        description: "Return list of namespaces matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the namespaces to where the project can be transferred"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_PublicGroupDetails"
        "403":
          description: "Unauthenticated"
  /api/v4/projects/{id}/storage:
    get:
      tags:
      - "projects"
      description: "Show the storage information"
      operationId: "getApiV4ProjectsIdStorage"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Show the storage information"
          schema:
            $ref: "#/definitions/API_Entities_ProjectRepositoryStorage"
        "403":
          description: "Unauthenticated"
  /api/v4/projects/{id}/restore:
    post:
      tags:
      - "projects"
      description: "Restore a project"
      operationId: "postApiV4ProjectsIdRestore"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Restore a project"
          schema:
            $ref: "#/definitions/API_Entities_Project"
  /api/v4/projects/{id}/protected_branches:
    get:
      tags:
      - "projects"
      description: "Get a project's protected branches"
      operationId: "getApiV4ProjectsIdProtectedBranches"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "search"
        in: "query"
        description: "Search for a protected branch by name"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get a project's protected branches"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ProtectedBranch"
        "401":
          description: "401 Unauthorized"
        "404":
          description: "404 Project Not Found"
    post:
      tags:
      - "projects"
      description: "Protect a single branch"
      operationId: "postApiV4ProjectsIdProtectedBranches"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdProtectedBranches"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdProtectedBranches"
        x-exportParamName: "PostApiV4ProjectsIdProtectedBranches"
      responses:
        "201":
          description: "Protect a single branch"
          schema:
            $ref: "#/definitions/API_Entities_ProtectedBranch"
        "401":
          description: "401 Unauthorized"
        "404":
          description: "404 Project Not Found"
        "409":
          description: "Protected branch 'main' already exists"
        "422":
          description: "name is missing"
  /api/v4/projects/{id}/protected_branches/{name}:
    get:
      tags:
      - "projects"
      description: "Get a single protected branch"
      operationId: "getApiV4ProjectsIdProtectedBranchesName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        description: "The name of the branch or wildcard"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        "200":
          description: "Get a single protected branch"
          schema:
            $ref: "#/definitions/API_Entities_ProtectedBranch"
        "401":
          description: "401 Unauthorized"
        "404":
          description: "404 Project Not Found"
    delete:
      tags:
      - "projects"
      description: "Unprotect a single branch"
      operationId: "deleteApiV4ProjectsIdProtectedBranchesName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        description: "The name of the protected branch"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        "204":
          description: "Unprotect a single branch"
        "401":
          description: "401 Unauthorized"
        "404":
          description: "404 Project Not Found"
    patch:
      tags:
      - "projects"
      description: "Update a protected branch"
      operationId: "patchApiV4ProjectsIdProtectedBranchesName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        description: "The name of the branch"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "patchApiV4ProjectsIdProtectedBranchesName"
        required: true
        schema:
          $ref: "#/definitions/patchApiV4ProjectsIdProtectedBranchesName"
        x-exportParamName: "PatchApiV4ProjectsIdProtectedBranchesName"
      responses:
        "200":
          description: "Update a protected branch"
          schema:
            $ref: "#/definitions/API_Entities_ProtectedBranch"
        "400":
          description: "400 Bad request"
        "401":
          description: "401 Unauthorized"
        "404":
          description: "404 Project Not Found"
        "422":
          description: "Push access levels access level has already been taken"
  /api/v4/projects/{id}/protected_tags:
    get:
      tags:
      - "protected_tags"
      summary: "Get a project's protected tags"
      description: "This feature was introduced in GitLab 11.3."
      operationId: "getApiV4ProjectsIdProtectedTags"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a project's protected tags"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ProtectedTag"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
    post:
      tags:
      - "protected_tags"
      summary: "Protect a single tag or wildcard"
      description: "This feature was introduced in GitLab 11.3."
      operationId: "postApiV4ProjectsIdProtectedTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdProtectedTags"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdProtectedTags"
        x-exportParamName: "PostApiV4ProjectsIdProtectedTags"
      responses:
        "201":
          description: "Protect a single tag or wildcard"
          schema:
            $ref: "#/definitions/API_Entities_ProtectedTag"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
  /api/v4/projects/{id}/protected_tags/{name}:
    get:
      tags:
      - "protected_tags"
      summary: "Get a single protected tag"
      description: "This feature was introduced in GitLab 11.3."
      operationId: "getApiV4ProjectsIdProtectedTagsName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        description: "The name of the tag or wildcard"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        "200":
          description: "Get a single protected tag"
          schema:
            $ref: "#/definitions/API_Entities_ProtectedTag"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
    delete:
      tags:
      - "protected_tags"
      summary: "Unprotect a single tag"
      description: "This feature was introduced in GitLab 11.3."
      operationId: "deleteApiV4ProjectsIdProtectedTagsName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        description: "The name of the protected tag"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        "204":
          description: "Unprotect a single tag"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
        "412":
          description: "Precondition Failed"
  /api/v4/projects/{id}/releases:
    get:
      tags:
      - "releases"
      summary: "List Releases"
      description: "Returns a paginated list of releases. This feature was introduced\
        \ in GitLab 11.7."
      operationId: "getApiV4ProjectsIdReleases"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "order_by"
        in: "query"
        description: "The field to use as order. Either `released_at` (default) or\
          \ `created_at`"
        required: false
        type: "string"
        default: "released_at"
        enum:
        - "released_at"
        - "created_at"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "The direction of the order. Either `desc` (default) for descending\
          \ order or `asc` for ascending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "include_html_description"
        in: "query"
        description: "If `true`, a response includes HTML rendered markdown of the\
          \ release description"
        required: false
        type: "boolean"
        x-exportParamName: "IncludeHtmlDescription"
        x-optionalDataType: "Bool"
      - name: "updated_before"
        in: "query"
        description: "Return releases updated before the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "updated_after"
        in: "query"
        description: "Return releases updated after the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      responses:
        "200":
          description: "List Releases"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Release"
    post:
      tags:
      - "releases"
      summary: "Create a release"
      description: "Creates a release. Developer level access to the project is required\
        \ to create a release. This feature was introduced in GitLab 11.7."
      operationId: "postApiV4ProjectsIdReleases"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdReleases"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdReleases"
        x-exportParamName: "PostApiV4ProjectsIdReleases"
      responses:
        "201":
          description: "Create a release"
          schema:
            $ref: "#/definitions/API_Entities_Release"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "409":
          description: "Conflict"
        "422":
          description: "Unprocessable entity"
  /api/v4/projects/{id}/releases/{tag_name}:
    get:
      tags:
      - "releases"
      summary: "Get a release by a tag name"
      description: "Gets a release for the given tag. This feature was introduced\
        \ in GitLab 11.7."
      operationId: "getApiV4ProjectsIdReleasesTagName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The Git tag the release is associated with"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      - name: "include_html_description"
        in: "query"
        description: "If `true`, a response includes HTML rendered markdown of the\
          \ release description"
        required: false
        type: "boolean"
        x-exportParamName: "IncludeHtmlDescription"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a release by a tag name"
          schema:
            $ref: "#/definitions/API_Entities_Release"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "releases"
      summary: "Update a release"
      description: "Updates a release. Developer level access to the project is required\
        \ to update a release. This feature was introduced in GitLab 11.7."
      operationId: "putApiV4ProjectsIdReleasesTagName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The Git tag the release is associated with"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      - in: "body"
        name: "putApiV4ProjectsIdReleasesTagName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdReleasesTagName"
        x-exportParamName: "PutApiV4ProjectsIdReleasesTagName"
      responses:
        "200":
          description: "Update a release"
          schema:
            $ref: "#/definitions/API_Entities_Release"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "releases"
      summary: "Delete a release"
      description: "Delete a release. Deleting a release doesn't delete the associated\
        \ tag. Maintainer level access to the project is required to delete a release.\
        \ This feature was introduced in GitLab 11.7."
      operationId: "deleteApiV4ProjectsIdReleasesTagName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The Git tag the release is associated with"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      responses:
        "204":
          description: "Delete a release"
          schema:
            $ref: "#/definitions/API_Entities_Release"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/releases/{tag_name}/downloads/*direct_asset_path:
    get:
      tags:
      - "releases"
      summary: "Download a project release asset file"
      description: "This feature was introduced in GitLab 15.4."
      operationId: "getApiV4ProjectsIdReleasesTagNameDownloads*directAssetPath"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The Git tag the release is associated with"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      - name: "direct_asset_path"
        in: "query"
        description: "The path to the file to download, as specified when creating\
          \ the release asset"
        required: true
        type: "string"
        x-exportParamName: "DirectAssetPath"
      responses:
        "200":
          description: "Download a project release asset file"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/releases/permalink/latest(/)(*suffix_path):
    get:
      tags:
      - "releases"
      summary: "Get the latest project release"
      description: "This feature was introduced in GitLab 15.4."
      operationId: "getApiV4ProjectsIdReleasesPermalinkLatest()(*suffixPath)"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "suffix_path"
        in: "query"
        description: "The path to be suffixed to the latest release"
        required: true
        type: "string"
        x-exportParamName: "SuffixPath"
      responses:
        "200":
          description: "Get the latest project release"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/releases/{tag_name}/evidence:
    post:
      tags:
      - "releases"
      summary: "Collect release evidence"
      description: "Creates an evidence for an existing Release. This feature was\
        \ introduced in GitLab 12.10."
      operationId: "postApiV4ProjectsIdReleasesTagNameEvidence"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "tag_name"
        in: "path"
        description: "The Git tag the release is associated with"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Collect release evidence"
          schema:
            $ref: "#/definitions/API_Entities_Release"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/remote_mirrors:
    get:
      tags:
      - "remote_mirrors"
      description: "List the project's remote mirrors"
      operationId: "getApiV4ProjectsIdRemoteMirrors"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List the project's remote mirrors"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_RemoteMirror"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "remote_mirrors"
      description: "Create remote mirror for a project"
      operationId: "postApiV4ProjectsIdRemoteMirrors"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdRemoteMirrors"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRemoteMirrors"
        x-exportParamName: "PostApiV4ProjectsIdRemoteMirrors"
      responses:
        "201":
          description: "Create remote mirror for a project"
          schema:
            $ref: "#/definitions/API_Entities_RemoteMirror"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/remote_mirrors/{mirror_id}:
    get:
      tags:
      - "remote_mirrors"
      description: "Get a single remote mirror"
      operationId: "getApiV4ProjectsIdRemoteMirrorsMirrorId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "mirror_id"
        in: "path"
        description: "The ID of a remote mirror"
        required: true
        type: "string"
        x-exportParamName: "MirrorId"
      responses:
        "200":
          description: "Get a single remote mirror"
          schema:
            $ref: "#/definitions/API_Entities_RemoteMirror"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "remote_mirrors"
      description: "Update the attributes of a single remote mirror"
      operationId: "putApiV4ProjectsIdRemoteMirrorsMirrorId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "mirror_id"
        in: "path"
        description: "The ID of a remote mirror"
        required: true
        type: "string"
        x-exportParamName: "MirrorId"
      - in: "body"
        name: "putApiV4ProjectsIdRemoteMirrorsMirrorId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdRemoteMirrorsMirrorId"
        x-exportParamName: "PutApiV4ProjectsIdRemoteMirrorsMirrorId"
      responses:
        "200":
          description: "Update the attributes of a single remote mirror"
          schema:
            $ref: "#/definitions/API_Entities_RemoteMirror"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "remote_mirrors"
      summary: "Delete a single remote mirror"
      description: "This feature was introduced in GitLab 14.10"
      operationId: "deleteApiV4ProjectsIdRemoteMirrorsMirrorId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "mirror_id"
        in: "path"
        description: "The ID of a remote mirror"
        required: true
        type: "string"
        x-exportParamName: "MirrorId"
      responses:
        "204":
          description: "Delete a single remote mirror"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/remote_mirrors/{mirror_id}/sync:
    post:
      tags:
      - "remote_mirrors"
      description: "Triggers a push mirror operation"
      operationId: "postApiV4ProjectsIdRemoteMirrorsMirrorIdSync"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "mirror_id"
        in: "path"
        description: "The ID of a remote mirror"
        required: true
        type: "string"
        x-exportParamName: "MirrorId"
      responses:
        "204":
          description: "Triggers a push mirror operation"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/tree:
    get:
      tags:
      - "projects"
      description: "Get a project repository tree"
      operationId: "getApiV4ProjectsIdRepositoryTree"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "ref"
        in: "query"
        description: "The name of a repository branch or tag, if not given the default\
          \ branch is used"
        required: false
        type: "string"
        x-exportParamName: "Ref"
        x-optionalDataType: "String"
      - name: "path"
        in: "query"
        description: "The path of the tree"
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      - name: "recursive"
        in: "query"
        description: "Used to get a recursive tree"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Recursive"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "pagination"
        in: "query"
        description: "Specify the pagination method (\"none\" is only valid if \"\
          recursive\" is true)"
        required: false
        type: "string"
        default: "legacy"
        enum:
        - "legacy"
        - "keyset"
        - "none"
        x-exportParamName: "Pagination"
        x-optionalDataType: "String"
      - name: "page_token"
        in: "query"
        description: "Record from which to start the keyset pagination"
        required: false
        type: "string"
        x-exportParamName: "PageToken"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get a project repository tree"
          schema:
            $ref: "#/definitions/API_Entities_TreeObject"
  /api/v4/projects/{id}/repository/blobs/{sha}/raw:
    get:
      tags:
      - "projects"
      description: "Get raw blob contents from the repository"
      operationId: "getApiV4ProjectsIdRepositoryBlobsShaRaw"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "The commit hash"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      responses:
        "200":
          description: "Get raw blob contents from the repository"
  /api/v4/projects/{id}/repository/blobs/{sha}:
    get:
      tags:
      - "projects"
      description: "Get a blob from the repository"
      operationId: "getApiV4ProjectsIdRepositoryBlobsSha"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "The commit hash"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      responses:
        "200":
          description: "Get a blob from the repository"
  /api/v4/projects/{id}/repository/archive:
    get:
      tags:
      - "projects"
      description: "Get an archive of the repository"
      operationId: "getApiV4ProjectsIdRepositoryArchive"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "query"
        description: "The commit sha of the archive to be downloaded"
        required: false
        type: "string"
        x-exportParamName: "Sha"
        x-optionalDataType: "String"
      - name: "format"
        in: "query"
        description: "The archive format"
        required: false
        type: "string"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      - name: "path"
        in: "query"
        description: "Subfolder of the repository to be downloaded"
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get an archive of the repository"
  /api/v4/projects/{id}/repository/compare:
    get:
      tags:
      - "projects"
      description: "Compare two branches, tags, or commits"
      operationId: "getApiV4ProjectsIdRepositoryCompare"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "from"
        in: "query"
        description: "The commit, branch name, or tag name to start comparison"
        required: true
        type: "string"
        x-exportParamName: "From"
      - name: "to"
        in: "query"
        description: "The commit, branch name, or tag name to stop comparison"
        required: true
        type: "string"
        x-exportParamName: "To"
      - name: "from_project_id"
        in: "query"
        description: "The project to compare from"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "FromProjectId"
        x-optionalDataType: "Int32"
      - name: "straight"
        in: "query"
        description: "Comparison method, `true` for direct comparison between `from`\
          \ and `to` (`from`..`to`), `false` to compare using merge base (`from`...`to`)"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Straight"
        x-optionalDataType: "Bool"
      - name: "unidiff"
        in: "query"
        description: "A diff in a Unified diff format"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Unidiff"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Compare two branches, tags, or commits"
          schema:
            $ref: "#/definitions/API_Entities_Compare"
  /api/v4/projects/{id}/repository/contributors:
    get:
      tags:
      - "projects"
      description: "Get repository contributors"
      operationId: "getApiV4ProjectsIdRepositoryContributors"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "order_by"
        in: "query"
        description: "Return contributors ordered by `name` or `email` or `commits`"
        required: false
        type: "string"
        default: "commits"
        enum:
        - "email"
        - "name"
        - "commits"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Sort by asc (ascending) or desc (descending)"
        required: false
        type: "string"
        default: "asc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get repository contributors"
          schema:
            $ref: "#/definitions/API_Entities_Contributor"
  /api/v4/projects/{id}/repository/merge_base:
    get:
      tags:
      - "projects"
      description: "Get the common ancestor between commits"
      operationId: "getApiV4ProjectsIdRepositoryMergeBase"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "refs"
        in: "query"
        description: "The refs to find the common ancestor of, multiple refs can be\
          \ passed"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Refs"
      responses:
        "200":
          description: "Get the common ancestor between commits"
          schema:
            $ref: "#/definitions/API_Entities_Commit"
  /api/v4/projects/{id}/repository/changelog:
    get:
      tags:
      - "projects"
      summary: "Generates a changelog section for a release and returns it"
      description: "This feature was introduced in GitLab 14.6"
      operationId: "getApiV4ProjectsIdRepositoryChangelog"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "version"
        in: "query"
        description: "The version of the release, using the semantic versioning format"
        required: true
        type: "string"
        x-exportParamName: "Version"
      - name: "from"
        in: "query"
        description: "The first commit in the range of commits to use for the changelog"
        required: false
        type: "string"
        x-exportParamName: "From"
        x-optionalDataType: "String"
      - name: "to"
        in: "query"
        description: "The last commit in the range of commits to use for the changelog"
        required: false
        type: "string"
        x-exportParamName: "To"
        x-optionalDataType: "String"
      - name: "date"
        in: "query"
        description: "The date and time of the release"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "Date"
        x-optionalDataType: "Time"
      - name: "trailer"
        in: "query"
        description: "The Git trailer to use for determining if commits are to be\
          \ included in the changelog"
        required: false
        type: "string"
        default: "Changelog"
        x-exportParamName: "Trailer"
        x-optionalDataType: "String"
      - name: "config_file"
        in: "query"
        description: "The file path to the configuration file as stored in the project's\
          \ Git repository. Defaults to '.gitlab/changelog_config.yml'"
        required: false
        type: "string"
        x-exportParamName: "ConfigFile"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Generates a changelog section for a release and returns it"
          schema:
            $ref: "#/definitions/API_Entities_Changelog"
    post:
      tags:
      - "projects"
      summary: "Generates a changelog section for a release and commits it in a changelog\
        \ file"
      description: "This feature was introduced in GitLab 13.9"
      operationId: "postApiV4ProjectsIdRepositoryChangelog"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdRepositoryChangelog"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRepositoryChangelog"
        x-exportParamName: "PostApiV4ProjectsIdRepositoryChangelog"
      responses:
        "200":
          description: "Generates a changelog section for a release and commits it\
            \ in a changelog file"
  /api/v4/projects/{id}/access_tokens:
    get:
      tags:
      - "project_access_tokens"
      summary: "Get list of all access tokens for the specified resource"
      description: "This feature was introduced in GitLab 13.9."
      operationId: "getApiV4ProjectsIdAccessTokens"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get list of all access tokens for the specified resource"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ResourceAccessToken"
    post:
      tags:
      - "project_access_tokens"
      summary: "Create a resource access token"
      description: "This feature was introduced in GitLab 13.9."
      operationId: "postApiV4ProjectsIdAccessTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdAccessTokens"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdAccessTokens"
        x-exportParamName: "PostApiV4ProjectsIdAccessTokens"
      responses:
        "201":
          description: "Create a resource access token"
          schema:
            $ref: "#/definitions/API_Entities_ResourceAccessTokenWithToken"
  /api/v4/projects/{id}/access_tokens/{token_id}:
    get:
      tags:
      - "project_access_tokens"
      summary: "Get an access token for the specified resource by ID"
      description: "This feature was introduced in GitLab 14.10."
      operationId: "getApiV4ProjectsIdAccessTokensTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "token_id"
        in: "path"
        description: "The ID of the token"
        required: true
        type: "string"
        x-exportParamName: "TokenId"
      responses:
        "200":
          description: "Get an access token for the specified resource by ID"
          schema:
            $ref: "#/definitions/API_Entities_ResourceAccessToken"
    delete:
      tags:
      - "project_access_tokens"
      summary: "Revoke a resource access token"
      description: "This feature was introduced in GitLab 13.9."
      operationId: "deleteApiV4ProjectsIdAccessTokensTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "token_id"
        in: "path"
        description: "The ID of the token"
        required: true
        type: "string"
        x-exportParamName: "TokenId"
      responses:
        "204":
          description: "Revoke a resource access token"
        "400":
          description: "Bad Request"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/access_tokens/{token_id}/rotate:
    post:
      tags:
      - "project_access_tokens"
      summary: "Rotate a resource access token"
      description: "This feature was introduced in GitLab 16.0."
      operationId: "postApiV4ProjectsIdAccessTokensTokenIdRotate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "token_id"
        in: "path"
        description: "The ID of the token"
        required: true
        type: "string"
        x-exportParamName: "TokenId"
      - in: "body"
        name: "postApiV4ProjectsIdAccessTokensTokenIdRotate"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdAccessTokensTokenIdRotate"
        x-exportParamName: "PostApiV4ProjectsIdAccessTokensTokenIdRotate"
      responses:
        "201":
          description: "Rotate a resource access token"
          schema:
            $ref: "#/definitions/API_Entities_ResourceAccessTokenWithToken"
  /api/v4/projects/{id}/issues/{eventable_id}/resource_milestone_events:
    get:
      tags:
      - "resource_milestone_events"
      summary: "List project Issue milestone events"
      description: "Gets a list of all milestone events for a single Issue"
      operationId: "getApiV4ProjectsIdIssuesEventableIdResourceMilestoneEvents"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "eventable_id"
        in: "path"
        description: "The ID of the eventable"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EventableId"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List project Issue milestone events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ResourceMilestoneEvent"
  /api/v4/projects/{id}/issues/{eventable_id}/resource_milestone_events/{event_id}:
    get:
      tags:
      - "resource_milestone_events"
      summary: "Get single Issue milestone event"
      description: "Returns a single milestone event for a specific project Issue"
      operationId: "getApiV4ProjectsIdIssuesEventableIdResourceMilestoneEventsEventId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "event_id"
        in: "path"
        description: "The ID of a resource milestone event"
        required: true
        type: "string"
        x-exportParamName: "EventId"
      - name: "eventable_id"
        in: "path"
        description: "The ID of the eventable"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EventableId"
      responses:
        "200":
          description: "Get single Issue milestone event"
          schema:
            $ref: "#/definitions/API_Entities_ResourceMilestoneEvent"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{eventable_id}/resource_milestone_events:
    get:
      tags:
      - "resource_milestone_events"
      summary: "List project Merge request milestone events"
      description: "Gets a list of all milestone events for a single Merge request"
      operationId: "getApiV4ProjectsIdMergeRequestsEventableIdResourceMilestoneEvents"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "eventable_id"
        in: "path"
        description: "The ID of the eventable"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EventableId"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List project Merge request milestone events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ResourceMilestoneEvent"
  /api/v4/projects/{id}/merge_requests/{eventable_id}/resource_milestone_events/{event_id}:
    get:
      tags:
      - "resource_milestone_events"
      summary: "Get single Merge request milestone event"
      description: "Returns a single milestone event for a specific project Merge\
        \ request"
      operationId: "getApiV4ProjectsIdMergeRequestsEventableIdResourceMilestoneEventsEventId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "event_id"
        in: "path"
        description: "The ID of a resource milestone event"
        required: true
        type: "string"
        x-exportParamName: "EventId"
      - name: "eventable_id"
        in: "path"
        description: "The ID of the eventable"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EventableId"
      responses:
        "200":
          description: "Get single Merge request milestone event"
          schema:
            $ref: "#/definitions/API_Entities_ResourceMilestoneEvent"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/submodules/{submodule}:
    put:
      tags:
      - "projects"
      description: "Update existing submodule reference in repository"
      operationId: "putApiV4ProjectsIdRepositorySubmodulesSubmodule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "submodule"
        in: "path"
        description: "Url encoded full path to submodule."
        required: true
        type: "string"
        x-exportParamName: "Submodule"
      - in: "body"
        name: "putApiV4ProjectsIdRepositorySubmodulesSubmodule"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdRepositorySubmodulesSubmodule"
        x-exportParamName: "PutApiV4ProjectsIdRepositorySubmodulesSubmodule"
      responses:
        "200":
          description: "Update existing submodule reference in repository"
          schema:
            $ref: "#/definitions/API_Entities_CommitDetail"
        "400":
          description: "The repository is empty"
        "401":
          description: "401 Unauthorized"
        "404":
          description: "404 Project Not Found"
  /api/v4/projects/{id}/repository/tags:
    get:
      tags:
      - "tags"
      description: "Get a project repository tags"
      operationId: "getApiV4ProjectsIdRepositoryTags"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sort"
        in: "query"
        description: "Return tags sorted in updated by `asc` or `desc` order."
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "order_by"
        in: "query"
        description: "Return tags ordered by `name`, `updated`, `version` fields."
        required: false
        type: "string"
        default: "updated"
        enum:
        - "name"
        - "updated"
        - "version"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Return list of tags matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "page_token"
        in: "query"
        description: "Name of tag to start the paginaition from"
        required: false
        type: "string"
        x-exportParamName: "PageToken"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a project repository tags"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Tag"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
        "503":
          description: "Service unavailable"
    post:
      tags:
      - "tags"
      description: "Create a new repository tag"
      operationId: "postApiV4ProjectsIdRepositoryTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdRepositoryTags"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdRepositoryTags"
        x-exportParamName: "PostApiV4ProjectsIdRepositoryTags"
      responses:
        "201":
          description: "Create a new repository tag"
          schema:
            $ref: "#/definitions/API_Entities_Tag"
        "400":
          description: "Bad request"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/repository/tags/{tag_name}:
    get:
      tags:
      - "tags"
      description: "Get a single repository tag"
      operationId: "getApiV4ProjectsIdRepositoryTagsTagName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The name of the tag"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      responses:
        "200":
          description: "Get a single repository tag"
          schema:
            $ref: "#/definitions/API_Entities_Tag"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
    delete:
      tags:
      - "tags"
      description: "Delete a repository tag"
      operationId: "deleteApiV4ProjectsIdRepositoryTagsTagName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The name of the tag"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      responses:
        "204":
          description: "Delete a repository tag"
        "403":
          description: "Unauthenticated"
        "404":
          description: "Not found"
        "412":
          description: "Precondition failed"
  /api/v4/projects/{id}/repository/tags/{tag_name}/signature:
    get:
      tags:
      - "tags"
      description: "Get a tag's signature"
      operationId: "getApiV4ProjectsIdRepositoryTagsTagNameSignature"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The name of the tag"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      responses:
        "200":
          description: "Get a tag's signature"
          schema:
            $ref: "#/definitions/API_Entities_TagSignature"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/wikis:
    get:
      tags:
      - "wikis"
      description: "Get a list of wiki pages"
      operationId: "getApiV4ProjectsIdWikis"
      produces:
      - "application/json"
      parameters:
      - name: "with_content"
        in: "query"
        description: "Include pages' content"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithContent"
        x-optionalDataType: "Bool"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a list of wiki pages"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_WikiPageBasic"
        "404":
          description: "Not found"
    post:
      tags:
      - "wikis"
      description: "Create a wiki page"
      operationId: "postApiV4ProjectsIdWikis"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdWikis"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdWikis"
        x-exportParamName: "PostApiV4ProjectsIdWikis"
      responses:
        "201":
          description: "Create a wiki page"
          schema:
            $ref: "#/definitions/API_Entities_WikiPage"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
  /api/v4/projects/{id}/wikis/{slug}:
    get:
      tags:
      - "wikis"
      description: "Get a wiki page"
      operationId: "getApiV4ProjectsIdWikisSlug"
      produces:
      - "application/json"
      parameters:
      - name: "slug"
        in: "path"
        description: "The slug of a wiki page"
        required: true
        type: "string"
        x-exportParamName: "Slug"
      - name: "version"
        in: "query"
        description: "The version hash of a wiki page"
        required: false
        type: "string"
        x-exportParamName: "Version"
        x-optionalDataType: "String"
      - name: "render_html"
        in: "query"
        description: "Render content to HTML"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "RenderHtml"
        x-optionalDataType: "Bool"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a wiki page"
          schema:
            $ref: "#/definitions/API_Entities_WikiPage"
        "404":
          description: "Not found"
    put:
      tags:
      - "wikis"
      description: "Update a wiki page"
      operationId: "putApiV4ProjectsIdWikisSlug"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "slug"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Slug"
      - in: "body"
        name: "putApiV4ProjectsIdWikisSlug"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdWikisSlug"
        x-exportParamName: "PutApiV4ProjectsIdWikisSlug"
      responses:
        "200":
          description: "Update a wiki page"
          schema:
            $ref: "#/definitions/API_Entities_WikiPage"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
    delete:
      tags:
      - "wikis"
      description: "Delete a wiki page"
      operationId: "deleteApiV4ProjectsIdWikisSlug"
      produces:
      - "application/json"
      parameters:
      - name: "slug"
        in: "path"
        description: "The slug of a wiki page"
        required: true
        type: "string"
        x-exportParamName: "Slug"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Delete a wiki page"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/wikis/attachments:
    post:
      tags:
      - "wikis"
      summary: "Upload an attachment to the wiki repository"
      description: "This feature was introduced in GitLab 11.3."
      operationId: "postApiV4ProjectsIdWikisAttachments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdWikisAttachments"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdWikisAttachments"
        x-exportParamName: "PostApiV4ProjectsIdWikisAttachments"
      responses:
        "201":
          description: "Upload an attachment to the wiki repository"
          schema:
            $ref: "#/definitions/API_Entities_WikiAttachment"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/authorize:
    post:
      tags:
      - "alert_management"
      description: "Workhorse authorize metric image file upload"
      operationId: "postApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImagesAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "alert_iid"
        in: "path"
        description: "The IID of the Alert"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AlertIid"
      responses:
        "200":
          description: "Workhorse authorize metric image file upload"
        "403":
          description: "Forbidden"
  /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images:
    get:
      tags:
      - "alert_management"
      description: "Metric Images for alert"
      operationId: "getApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "alert_iid"
        in: "path"
        description: "The IID of the Alert"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AlertIid"
      responses:
        "200":
          description: "Metric Images for alert"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_MetricImage"
        "404":
          description: "Not found"
    post:
      tags:
      - "alert_management"
      description: "Upload a metric image for an alert"
      operationId: "postApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImages"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "alert_iid"
        in: "path"
        description: "The IID of the Alert"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AlertIid"
      - name: "file"
        in: "formData"
        description: "The image file to be uploaded"
        required: true
        type: "file"
        x-exportParamName: "File"
      - name: "url"
        in: "formData"
        description: "The url to view more metric info"
        required: false
        type: "string"
        x-exportParamName: "Url"
        x-optionalDataType: "String"
      - name: "url_text"
        in: "formData"
        description: "A description of the image or URL"
        required: false
        type: "string"
        x-exportParamName: "UrlText"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Upload a metric image for an alert"
          schema:
            $ref: "#/definitions/API_Entities_MetricImage"
        "403":
          description: "Forbidden"
  /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/{metric_image_id}:
    put:
      tags:
      - "alert_management"
      description: "Update a metric image for an alert"
      operationId: "putApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImagesMetricImageId"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "alert_iid"
        in: "path"
        description: "The IID of the Alert"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AlertIid"
      - name: "metric_image_id"
        in: "path"
        description: "The ID of metric image"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MetricImageId"
      - name: "url"
        in: "formData"
        description: "The url to view more metric info"
        required: false
        type: "string"
        x-exportParamName: "Url"
        x-optionalDataType: "String"
      - name: "url_text"
        in: "formData"
        description: "A description of the image or URL"
        required: false
        type: "string"
        x-exportParamName: "UrlText"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Update a metric image for an alert"
          schema:
            $ref: "#/definitions/API_Entities_MetricImage"
        "403":
          description: "Forbidden"
        "422":
          description: "Unprocessable entity"
    delete:
      tags:
      - "alert_management"
      description: "Remove a metric image for an alert"
      operationId: "deleteApiV4ProjectsIdAlertManagementAlertsAlertIidMetricImagesMetricImageId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "alert_iid"
        in: "path"
        description: "The IID of the Alert"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AlertIid"
      - name: "metric_image_id"
        in: "path"
        description: "The ID of metric image"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MetricImageId"
      responses:
        "204":
          description: "Remove a metric image for an alert"
          schema:
            $ref: "#/definitions/API_Entities_MetricImage"
        "403":
          description: "Forbidden"
        "422":
          description: "Unprocessable entity"
  /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens:
    get:
      tags:
      - "cluster_agents"
      summary: "List tokens for an agent"
      description: "This feature was introduced in GitLab 15.0. Returns a list of\
        \ tokens for an agent."
      operationId: "getApiV4ProjectsIdClusterAgentsAgentIdTokens"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "agent_id"
        in: "path"
        description: "The ID of an agent"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AgentId"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List tokens for an agent"
          schema:
            $ref: "#/definitions/API_Entities_Clusters_AgentTokenBasic"
    post:
      tags:
      - "cluster_agents"
      summary: "Create an agent token"
      description: "This feature was introduced in GitLab 15.0. Creates a new token\
        \ for an agent."
      operationId: "postApiV4ProjectsIdClusterAgentsAgentIdTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "agent_id"
        in: "path"
        description: "The ID of an agent"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AgentId"
      - in: "body"
        name: "postApiV4ProjectsIdClusterAgentsAgentIdTokens"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdClusterAgentsAgentIdTokens"
        x-exportParamName: "PostApiV4ProjectsIdClusterAgentsAgentIdTokens"
      responses:
        "201":
          description: "Create an agent token"
          schema:
            $ref: "#/definitions/API_Entities_Clusters_AgentTokenWithToken"
  /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}:
    get:
      tags:
      - "cluster_agents"
      summary: "Get a single agent token"
      description: "This feature was introduced in GitLab 15.0. Gets a single agent\
        \ token."
      operationId: "getApiV4ProjectsIdClusterAgentsAgentIdTokensTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "agent_id"
        in: "path"
        description: "The ID of an agent"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AgentId"
      - name: "token_id"
        in: "path"
        description: "The ID of the agent token"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TokenId"
      responses:
        "200":
          description: "Get a single agent token"
          schema:
            $ref: "#/definitions/API_Entities_Clusters_AgentToken"
    delete:
      tags:
      - "cluster_agents"
      summary: "Revoke an agent token"
      description: "This feature was introduced in GitLab 15.0. Revokes an agent token."
      operationId: "deleteApiV4ProjectsIdClusterAgentsAgentIdTokensTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "agent_id"
        in: "path"
        description: "The ID of an agent"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AgentId"
      - name: "token_id"
        in: "path"
        description: "The ID of the agent token"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TokenId"
      responses:
        "204":
          description: "Revoke an agent token"
  /api/v4/projects/{id}/packages/composer:
    post:
      tags:
      - "composer_packages"
      summary: "Composer packages endpoint for registering packages"
      description: "This feature was introduced in GitLab 13.1"
      operationId: "postApiV4ProjectsIdPackagesComposer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdPackagesComposer"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdPackagesComposer"
        x-exportParamName: "PostApiV4ProjectsIdPackagesComposer"
      responses:
        "201":
          description: "Composer packages endpoint for registering packages"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/composer/archives/*package_name:
    get:
      tags:
      - "composer_packages"
      summary: "Composer package endpoint to download a package archive"
      description: "This feature was introduced in GitLab 13.1"
      operationId: "getApiV4ProjectsIdPackagesComposerArchives*packageName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "query"
        description: "Shasum of current json"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      - name: "package_name"
        in: "query"
        description: "The Composer package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "Composer package endpoint to download a package archive"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/conan/v1/ping:
    get:
      tags:
      - "conan_packages"
      summary: "Ping the Conan API"
      description: "This feature was introduced in GitLab 12.2"
      operationId: "getApiV4ProjectsIdPackagesConanV1Ping"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Ping the Conan API"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/conan/v1/conans/search:
    get:
      tags:
      - "conan_packages"
      summary: "Search for packages"
      description: "This feature was introduced in GitLab 12.4"
      operationId: "getApiV4ProjectsIdPackagesConanV1ConansSearch"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "q"
        in: "query"
        description: "Search query"
        required: true
        type: "string"
        x-exportParamName: "Q"
      responses:
        "200":
          description: "Search for packages"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/conan/v1/users/authenticate:
    get:
      tags:
      - "conan_packages"
      summary: "Authenticate user against conan CLI"
      description: "This feature was introduced in GitLab 12.2"
      operationId: "getApiV4ProjectsIdPackagesConanV1UsersAuthenticate"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Authenticate user against conan CLI"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/conan/v1/users/check_credentials:
    get:
      tags:
      - "conan_packages"
      summary: "Check for valid user credentials per conan CLI"
      description: "This feature was introduced in GitLab 12.4"
      operationId: "getApiV4ProjectsIdPackagesConanV1UsersCheckCredentials"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Check for valid user credentials per conan CLI"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}
  : get:
      tags:
      - "conan_packages"
      summary: "Package Snapshot"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReference"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      responses:
        "200":
          description: "Package Snapshot"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanPackageSnapshot"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}:
    get:
      tags:
      - "conan_packages"
      summary: "Recipe Snapshot"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannel"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      responses:
        "200":
          description: "Recipe Snapshot"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanRecipeSnapshot"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "conan_packages"
      summary: "Delete Package"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "deleteApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannel"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      responses:
        "204":
          description: "Delete Package"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/digest
  : get:
      tags:
      - "conan_packages"
      summary: "Package Digest"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceDigest"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      responses:
        "200":
          description: "Package Digest"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanPackageManifest"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/digest:
    get:
      tags:
      - "conan_packages"
      summary: "Recipe Digest"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelDigest"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      responses:
        "200":
          description: "Recipe Digest"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanRecipeManifest"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/download_urls
  : get:
      tags:
      - "conan_packages"
      summary: "Package Download Urls"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceDownloadUrls"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      responses:
        "200":
          description: "Package Download Urls"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanPackageManifest"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/download_urls
  : get:
      tags:
      - "conan_packages"
      summary: "Recipe Download Urls"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelDownloadUrls"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      responses:
        "200":
          description: "Recipe Download Urls"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanRecipeManifest"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/upload_urls
  : post:
      tags:
      - "conan_packages"
      summary: "Package Upload Urls"
      description: "This feature was introduced in GitLab 12.4"
      operationId: "postApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceUploadUrls"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      responses:
        "200":
          description: "Package Upload Urls"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanUploadUrls"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/upload_urls
  : post:
      tags:
      - "conan_packages"
      summary: "Recipe Upload Urls"
      description: "This feature was introduced in GitLab 12.4"
      operationId: "postApiV4ProjectsIdPackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelUploadUrls"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      responses:
        "200":
          description: "Recipe Upload Urls"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanUploadUrls"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}
  : get:
      tags:
      - "conan_packages"
      summary: "Download recipe files"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "getApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download recipe files"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    put:
      tags:
      - "conan_packages"
      summary: "Upload recipe package files"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName"
        x-exportParamName: "PutApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName"
      responses:
        "200":
          description: "Upload recipe package files"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}/authorize
  : put:
      tags:
      - "conan_packages"
      summary: "Workhorse authorize the conan recipe file"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileNameAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Workhorse authorize the conan recipe file"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}
  : get:
      tags:
      - "conan_packages"
      summary: "Download package files"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan Package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      - name: "package_revision"
        in: "path"
        description: "Conan Package Revision"
        required: true
        type: "string"
        x-exportParamName: "PackageRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download package files"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    put:
      tags:
      - "conan_packages"
      summary: "Upload package files"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan Package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      - name: "package_revision"
        in: "path"
        description: "Conan Package Revision"
        required: true
        type: "string"
        x-exportParamName: "PackageRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName"
        x-exportParamName: "PutApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName"
      responses:
        "200":
          description: "Upload package files"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}/authorize
  : put:
      tags:
      - "conan_packages"
      summary: "Workhorse authorize the conan package file"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileNameAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan Package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      - name: "package_revision"
        in: "path"
        description: "Conan Package Revision"
        required: true
        type: "string"
        x-exportParamName: "PackageRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Workhorse authorize the conan package file"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/dists/*distribution/Release.gpg:
    get:
      tags:
      - "debian_packages"
      summary: "The Release file signature"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "getApiV4ProjectsIdPackagesDebianDists*distributionReleaseGpg"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      responses:
        "200":
          description: "The Release file signature"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/dists/*distribution/Release:
    get:
      tags:
      - "debian_packages"
      summary: "The unsigned Release file"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "getApiV4ProjectsIdPackagesDebianDists*distributionRelease"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      responses:
        "200":
          description: "The unsigned Release file"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/dists/*distribution/InRelease:
    get:
      tags:
      - "debian_packages"
      summary: "The signed Release file"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "getApiV4ProjectsIdPackagesDebianDists*distributionInrelease"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      responses:
        "200":
          description: "The signed Release file"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/Packages:
    get:
      tags:
      - "debian_packages"
      summary: "The installer (udeb) binary files index"
      description: "This feature was introduced in GitLab 15.4"
      operationId: "getApiV4ProjectsIdPackagesDebianDists*distributionComponentDebianInstallerBinaryArchitecturePackages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      - name: "architecture"
        in: "path"
        description: "The Debian Architecture"
        required: true
        type: "string"
        x-exportParamName: "Architecture"
      responses:
        "200":
          description: "The installer (udeb) binary files index"
        "202":
          description: "The installer (udeb) binary files index"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/by-hash/SHA256/{file_sha256}
  : get:
      tags:
      - "debian_packages"
      summary: "The installer (udeb) binary files index by hash"
      description: "This feature was introduced in GitLab 15.4"
      operationId: "getApiV4ProjectsIdPackagesDebianDists*distributionComponentDebianInstallerBinaryArchitectureByHashSha256FileSha256"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      - name: "architecture"
        in: "path"
        description: "The Debian Architecture"
        required: true
        type: "string"
        x-exportParamName: "Architecture"
      - name: "file_sha256"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FileSha256"
      responses:
        "200":
          description: "The installer (udeb) binary files index by hash"
        "202":
          description: "The installer (udeb) binary files index by hash"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/source/Sources:
    get:
      tags:
      - "debian_packages"
      summary: "The source files index"
      description: "This feature was introduced in GitLab 15.4"
      operationId: "getApiV4ProjectsIdPackagesDebianDists*distributionComponentSourceSources"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      responses:
        "200":
          description: "The source files index"
        "202":
          description: "The source files index"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/source/by-hash/SHA256/{file_sha256}:
    get:
      tags:
      - "debian_packages"
      summary: "The source files index by hash"
      description: "This feature was introduced in GitLab 15.4"
      operationId: "getApiV4ProjectsIdPackagesDebianDists*distributionComponentSourceByHashSha256FileSha256"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      - name: "file_sha256"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FileSha256"
      responses:
        "200":
          description: "The source files index by hash"
        "202":
          description: "The source files index by hash"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/binary-{architecture}/Packages:
    get:
      tags:
      - "debian_packages"
      summary: "The binary files index"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "getApiV4ProjectsIdPackagesDebianDists*distributionComponentBinary-ArchitecturePackages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      - name: "architecture"
        in: "path"
        description: "The Debian Architecture"
        required: true
        type: "string"
        x-exportParamName: "Architecture"
      responses:
        "200":
          description: "The binary files index"
        "202":
          description: "The binary files index"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/binary-{architecture}/by-hash/SHA256/{file_sha256}:
    get:
      tags:
      - "debian_packages"
      summary: "The binary files index by hash"
      description: "This feature was introduced in GitLab 15.4"
      operationId: "getApiV4ProjectsIdPackagesDebianDists*distributionComponentBinaryArchitectureByHashSha256FileSha256"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "query"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "component"
        in: "path"
        description: "The Debian Component"
        required: true
        type: "string"
        x-exportParamName: "Component"
      - name: "architecture"
        in: "path"
        description: "The Debian Architecture"
        required: true
        type: "string"
        x-exportParamName: "Architecture"
      - name: "file_sha256"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FileSha256"
      responses:
        "200":
          description: "The binary files index by hash"
        "202":
          description: "The binary files index by hash"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/pool/{distribution}/{letter}/{package_name}/{package_version}/{file_name}:
    get:
      tags:
      - "debian_packages"
      summary: "Download Debian package"
      description: "This feature was introduced in GitLab 14.2"
      operationId: "getApiV4ProjectsIdPackagesDebianPoolDistributionLetterPackageNamePackageVersionFileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "distribution"
        in: "path"
        description: "The Debian Codename or Suite"
        required: true
        type: "string"
        x-exportParamName: "Distribution"
      - name: "letter"
        in: "path"
        description: "The Debian Classification (first-letter or lib-first-letter)"
        required: true
        type: "string"
        x-exportParamName: "Letter"
      - name: "package_name"
        in: "path"
        description: "The Debian Source Package Name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "The Debian Source Package Version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "file_name"
        in: "path"
        description: "The Debian File Name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download Debian package"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/{file_name}:
    put:
      tags:
      - "debian_packages"
      summary: "Upload Debian package"
      description: "This feature was introduced in GitLab 14.0"
      operationId: "putApiV4ProjectsIdPackagesDebianFileName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_name"
        in: "path"
        description: "The filename"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesDebianFileName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesDebianFileName"
        x-exportParamName: "PutApiV4ProjectsIdPackagesDebianFileName"
      responses:
        "201":
          description: "Upload Debian package"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/debian/{file_name}/authorize:
    put:
      tags:
      - "debian_packages"
      summary: "Authorize Debian package upload"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "putApiV4ProjectsIdPackagesDebianFileNameAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_name"
        in: "path"
        description: "The filename"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesDebianFileNameAuthorize"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesDebianFileNameAuthorize"
        x-exportParamName: "PutApiV4ProjectsIdPackagesDebianFileNameAuthorize"
      responses:
        "200":
          description: "Authorize Debian package upload"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/error_tracking/client_keys:
    get:
      tags:
      - "error_tracking_client_keys"
      summary: "List project client keys"
      description: "List all client keys. This feature was introduced in GitLab 14.3."
      operationId: "getApiV4ProjectsIdErrorTrackingClientKeys"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "List project client keys"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_ErrorTracking_ClientKey"
    post:
      tags:
      - "error_tracking_client_keys"
      summary: "Create a client key"
      description: "Creates a new client key for a project. The public key attribute\
        \ is generated automatically.This feature was introduced in GitLab 14.3."
      operationId: "postApiV4ProjectsIdErrorTrackingClientKeys"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Create a client key"
          schema:
            $ref: "#/definitions/API_Entities_ErrorTracking_ClientKey"
  /api/v4/projects/{id}/error_tracking/client_keys/{key_id}:
    delete:
      tags:
      - "error_tracking_client_keys"
      summary: "Delete a client key"
      description: "Removes a client key from the project. This feature was introduced\
        \ in GitLab 14.3."
      operationId: "deleteApiV4ProjectsIdErrorTrackingClientKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project owned by the authenticated\
          \ user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "key_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "204":
          description: "Delete a client key"
          schema:
            $ref: "#/definitions/API_Entities_ErrorTracking_ClientKey"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/feature_flags:
    get:
      tags:
      - "feature_flags"
      summary: "List feature flags for a project"
      description: "Gets all feature flags of the requested project. This feature\
        \ was introduced in GitLab 12.5."
      operationId: "getApiV4ProjectsIdFeatureFlags"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "scope"
        in: "query"
        description: "The scope of feature flags, one of: `enabled`, `disabled`"
        required: false
        type: "string"
        enum:
        - "enabled"
        - "disabled"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List feature flags for a project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_FeatureFlag"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "feature_flags"
      summary: "Create a new feature flag"
      description: "Creates a new feature flag. This feature was introduced in GitLab\
        \ 12.5."
      operationId: "postApiV4ProjectsIdFeatureFlags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdFeatureFlags"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdFeatureFlags"
        x-exportParamName: "PostApiV4ProjectsIdFeatureFlags"
      responses:
        "201":
          description: "Create a new feature flag"
          schema:
            $ref: "#/definitions/API_Entities_FeatureFlag"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
  /api/v4/projects/{id}/feature_flags/{feature_flag_name}:
    get:
      tags:
      - "feature_flags"
      summary: "Get a single feature flag"
      description: "Gets a single feature flag. This feature was introduced in GitLab\
        \ 12.5."
      operationId: "getApiV4ProjectsIdFeatureFlagsFeatureFlagName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "feature_flag_name"
        in: "path"
        description: "The name of the feature flag"
        required: true
        type: "string"
        x-exportParamName: "FeatureFlagName"
      responses:
        "200":
          description: "Get a single feature flag"
          schema:
            $ref: "#/definitions/API_Entities_FeatureFlag"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "feature_flags"
      summary: "Update a feature flag"
      description: "Updates a feature flag. This feature was introduced in GitLab\
        \ 13.2."
      operationId: "putApiV4ProjectsIdFeatureFlagsFeatureFlagName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "feature_flag_name"
        in: "path"
        description: "The name of the feature flag"
        required: true
        type: "string"
        x-exportParamName: "FeatureFlagName"
      - in: "body"
        name: "putApiV4ProjectsIdFeatureFlagsFeatureFlagName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdFeatureFlagsFeatureFlagName"
        x-exportParamName: "PutApiV4ProjectsIdFeatureFlagsFeatureFlagName"
      responses:
        "200":
          description: "Update a feature flag"
          schema:
            $ref: "#/definitions/API_Entities_FeatureFlag"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
    delete:
      tags:
      - "feature_flags"
      summary: "Delete a feature flag"
      description: "Deletes a feature flag. This feature was introduced in GitLab\
        \ 12.5."
      operationId: "deleteApiV4ProjectsIdFeatureFlagsFeatureFlagName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "feature_flag_name"
        in: "path"
        description: "The name of the feature flag"
        required: true
        type: "string"
        x-exportParamName: "FeatureFlagName"
      responses:
        "204":
          description: "Delete a feature flag"
          schema:
            $ref: "#/definitions/API_Entities_FeatureFlag"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/feature_flags_user_lists:
    get:
      tags:
      - "feature_flags_user_lists"
      summary: "List all feature flag user lists for a project"
      description: "Gets all feature flag user lists for the requested project. This\
        \ feature was introduced in GitLab 12.10."
      operationId: "getApiV4ProjectsIdFeatureFlagsUserLists"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "search"
        in: "query"
        description: "Return user lists matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List all feature flag user lists for a project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_FeatureFlag_UserList"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "feature_flags_user_lists"
      summary: "Create a feature flag user list"
      description: "Creates a feature flag user list. This feature was introduced\
        \ in GitLab 12.10."
      operationId: "postApiV4ProjectsIdFeatureFlagsUserLists"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdFeatureFlagsUserLists"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdFeatureFlagsUserLists"
        x-exportParamName: "PostApiV4ProjectsIdFeatureFlagsUserLists"
      responses:
        "201":
          description: "Create a feature flag user list"
          schema:
            $ref: "#/definitions/API_Entities_FeatureFlag_UserList"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/feature_flags_user_lists/{iid}:
    get:
      tags:
      - "feature_flags_user_lists"
      summary: "Get a feature flag user list"
      description: "Gets a feature flag user list. This feature was introduced in\
        \ GitLab 12.10."
      operationId: "getApiV4ProjectsIdFeatureFlagsUserListsIid"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "iid"
        in: "path"
        description: "The internal ID of the project's feature flag user list"
        required: true
        type: "string"
        x-exportParamName: "Iid"
      responses:
        "200":
          description: "Get a feature flag user list"
          schema:
            $ref: "#/definitions/API_Entities_FeatureFlag_UserList"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "feature_flags_user_lists"
      summary: "Update a feature flag user list"
      description: "Updates a feature flag user list. This feature was introduced\
        \ in GitLab 12.10."
      operationId: "putApiV4ProjectsIdFeatureFlagsUserListsIid"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "iid"
        in: "path"
        description: "The internal ID of the project's feature flag user list"
        required: true
        type: "string"
        x-exportParamName: "Iid"
      - in: "body"
        name: "putApiV4ProjectsIdFeatureFlagsUserListsIid"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdFeatureFlagsUserListsIid"
        x-exportParamName: "PutApiV4ProjectsIdFeatureFlagsUserListsIid"
      responses:
        "200":
          description: "Update a feature flag user list"
          schema:
            $ref: "#/definitions/API_Entities_FeatureFlag_UserList"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "feature_flags_user_lists"
      summary: "Delete feature flag user list"
      description: "Deletes a feature flag user list. This feature was introduced\
        \ in GitLab 12.10."
      operationId: "deleteApiV4ProjectsIdFeatureFlagsUserListsIid"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "iid"
        in: "path"
        description: "The internal ID of the project's feature flag user list"
        required: true
        type: "string"
        x-exportParamName: "Iid"
      responses:
        "204":
          description: "Delete feature flag user list"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "409":
          description: "Conflict"
  /api/v4/projects/{id}/packages/generic/{package_name}/*package_version/(*path/){file_name}/authorize:
    put:
      tags:
      - "generic_packages"
      summary: "Workhorse authorize generic package file"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileNameAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileNameAuthorize"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileNameAuthorize"
        x-exportParamName: "PutApiV4ProjectsIdPackagesGenericPackageNamepackageVersionPathFileNameAuthorize"
      responses:
        "200":
          description: "Workhorse authorize generic package file"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/generic/{package_name}/*package_version/(*path/){file_name}:
    get:
      tags:
      - "generic_packages"
      summary: "Download package file"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "getApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "query"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "path"
        in: "query"
        description: "File directory path"
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download package file"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    put:
      tags:
      - "generic_packages"
      summary: "Upload package file"
      description: "This feature was introduced in GitLab 13.5"
      operationId: "putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileName"
        x-exportParamName: "PutApiV4ProjectsIdPackagesGenericPackageNamepackageVersionPathFileName"
      responses:
        "200":
          description: "Upload package file"
        "201":
          description: "Upload package file"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/go/*module_name/@v/list:
    get:
      tags:
      - "go_proxy"
      summary: "List"
      description: "Get all tagged versions for a given Go module.See `go help goproxy`,\
        \ GET $GOPROXY/<module>/@v/list. This feature was introduced in GitLab 13.1."
      operationId: "getApiV4ProjectsIdPackagesGo*moduleName@vList"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or full path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "module_name"
        in: "query"
        description: "The name of the Go module"
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      responses:
        "200":
          description: "List"
  /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.info:
    get:
      tags:
      - "go_proxy"
      summary: "Version metadata"
      description: "Get all tagged versions for a given Go module.See `go help goproxy`,\
        \ GET $GOPROXY/<module>/@v/<version>.info. This feature was introduced in\
        \ GitLab 13.1"
      operationId: "getApiV4ProjectsIdPackagesGo*moduleName@vModuleVersionInfo"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or full path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "module_name"
        in: "query"
        description: "The name of the Go module"
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_version"
        in: "path"
        description: "The version of the Go module"
        required: true
        type: "string"
        x-exportParamName: "ModuleVersion"
      responses:
        "200":
          description: "Version metadata"
          schema:
            $ref: "#/definitions/API_Entities_GoModuleVersion"
  /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.mod:
    get:
      tags:
      - "go_proxy"
      summary: "Download module file"
      description: "Get the module file of a given module version.See `go help goproxy`,\
        \ GET $GOPROXY/<module>/@v/<version>.mod. This feature was introduced in GitLab\
        \ 13.1."
      operationId: "getApiV4ProjectsIdPackagesGo*moduleName@vModuleVersionMod"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or full path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "module_name"
        in: "query"
        description: "The name of the Go module"
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_version"
        in: "path"
        description: "The version of the Go module"
        required: true
        type: "string"
        x-exportParamName: "ModuleVersion"
      responses:
        "200":
          description: "Download module file"
  /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.zip:
    get:
      tags:
      - "go_proxy"
      summary: "Download module source"
      description: "Get a zip of the source of the given module version.See `go help\
        \ goproxy`, GET $GOPROXY/<module>/@v/<version>.zip. This feature was introduced\
        \ in GitLab 13.1."
      operationId: "getApiV4ProjectsIdPackagesGo*moduleName@vModuleVersionZip"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The project ID or full path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "module_name"
        in: "query"
        description: "The name of the Go module"
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_version"
        in: "path"
        description: "The version of the Go module"
        required: true
        type: "string"
        x-exportParamName: "ModuleVersion"
      responses:
        "200":
          description: "Download module source"
  /api/v4/projects/{id}/packages/helm/{channel}/index.yaml:
    get:
      tags:
      - "helm_packages"
      summary: "Download a chart index"
      description: "This feature was introduced in GitLab 14.0"
      operationId: "getApiV4ProjectsIdPackagesHelmChannelIndexYaml"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of a project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "channel"
        in: "path"
        description: "Helm channel"
        required: true
        type: "string"
        x-exportParamName: "Channel"
      responses:
        "200":
          description: "Download a chart index"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
  /api/v4/projects/{id}/packages/helm/{channel}/charts/{file_name}.tgz:
    get:
      tags:
      - "helm_packages"
      summary: "Download a chart"
      description: "This feature was introduced in GitLab 14.0"
      operationId: "getApiV4ProjectsIdPackagesHelmChannelChartsFileNameTgz"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of a project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "channel"
        in: "path"
        description: "Helm channel"
        required: true
        type: "string"
        x-exportParamName: "Channel"
      - name: "file_name"
        in: "path"
        description: "Helm package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download a chart"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/helm/api/{channel}/charts/authorize:
    post:
      tags:
      - "helm_packages"
      summary: "Authorize a chart upload from workhorse"
      description: "This feature was introduced in GitLab 14.0"
      operationId: "postApiV4ProjectsIdPackagesHelmApiChannelChartsAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of a project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "channel"
        in: "path"
        description: "Helm channel"
        required: true
        type: "string"
        x-exportParamName: "Channel"
      responses:
        "200":
          description: "Authorize a chart upload from workhorse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/helm/api/{channel}/charts:
    post:
      tags:
      - "helm_packages"
      summary: "Upload a chart"
      description: "This feature was introduced in GitLab 14.0"
      operationId: "postApiV4ProjectsIdPackagesHelmApiChannelCharts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of a project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "channel"
        in: "path"
        description: "Helm channel"
        required: true
        type: "string"
        x-exportParamName: "Channel"
      - in: "body"
        name: "postApiV4ProjectsIdPackagesHelmApiChannelCharts"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdPackagesHelmApiChannelCharts"
        x-exportParamName: "PostApiV4ProjectsIdPackagesHelmApiChannelCharts"
      responses:
        "201":
          description: "Upload a chart"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approvals:
    get:
      tags:
      - "projects"
      description: "List approvals for merge request"
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "List approvals for merge request"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequestApprovals"
        "404":
          description: "Not found"
    post:
      tags:
      - "projects"
      summary: "Deprecated in 16.0: Use the merge request approvals API instead. Change\
        \ approval-related configuration"
      description: "This feature was introduced in 10.6 and deprecated in 16.0"
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The IID of a merge request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - in: "body"
        name: "postApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals"
        x-exportParamName: "PostApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals"
      deprecated: true
      responses:
        "201":
          description: "Deprecated in 16.0: Use the merge request approvals API instead.\
            \ Change approval-related configuration"
          schema:
            $ref: "#/definitions/EE_API_Entities_ApprovalState"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approve:
    post:
      tags:
      - "projects"
      description: "Approve a merge request"
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidApprove"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      - in: "body"
        name: "postApiV4ProjectsIdMergeRequestsMergeRequestIidApprove"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidApprove"
        x-exportParamName: "PostApiV4ProjectsIdMergeRequestsMergeRequestIidApprove"
      responses:
        "201":
          description: "Approve a merge request"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequestApprovals"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/unapprove:
    post:
      tags:
      - "projects"
      description: "Remove an approval from a merge request"
      operationId: "postApiV4ProjectsIdMergeRequestsMergeRequestIidUnapprove"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "201":
          description: "Remove an approval from a merge request"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequestApprovals"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_approvals:
    put:
      tags:
      - "merge_requests"
      summary: "Remove all merge request approvals"
      description: "Clear all approvals of merge request. This feature was added in\
        \ GitLab 15.4"
      operationId: "putApiV4ProjectsIdMergeRequestsMergeRequestIidResetApprovals"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Remove all merge request approvals"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approval_state:
    get:
      tags:
      - "projects"
      description: "Get approval state of merge request"
      operationId: "getApiV4ProjectsIdMergeRequestsMergeRequestIidApprovalState"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "merge_request_iid"
        in: "path"
        description: "The IID of a merge request"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeRequestIid"
      responses:
        "200":
          description: "Get approval state of merge request"
          schema:
            $ref: "#/definitions/EE_API_Entities_MergeRequestApprovalState"
  /api/v4/projects/{id}/packages/ml_models/{model_version_id}/files/(*path/){file_name}/authorize:
    put:
      tags:
      - "ml_model_registry"
      summary: "Workhorse authorize model package file"
      description: "Introduced in GitLab 16.8"
      operationId: "putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileNameAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "model_version_id"
        in: "path"
        description: "Model version id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ModelVersionId"
      - name: "file_name"
        in: "path"
        description: "File name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileNameAuthorize"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileNameAuthorize"
        x-exportParamName: "PutApiV4ProjectsIdPackagesMlModelsModelVersionIdFilesPathFileNameAuthorize"
      responses:
        "200":
          description: "Workhorse authorize model package file"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/ml_models/{model_version_id}/files/(*path/){file_name}:
    get:
      tags:
      - "ml_model_registry"
      summary: "Download an ml_model package file"
      description: "This feature was introduced in GitLab 16.8"
      operationId: "getApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "model_version_id"
        in: "path"
        description: "Model version id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ModelVersionId"
      - name: "file_name"
        in: "path"
        description: "File name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - name: "path"
        in: "query"
        description: "File directory path"
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Package status"
        required: false
        type: "string"
        enum:
        - "default"
        - "hidden"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Download an ml_model package file"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    put:
      tags:
      - "ml_model_registry"
      summary: "Workhorse upload model package file"
      description: "Introduced in GitLab 16.8"
      operationId: "putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "model_version_id"
        in: "path"
        description: "Model version id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ModelVersionId"
      - name: "file_name"
        in: "path"
        description: "File name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileName"
        x-exportParamName: "PutApiV4ProjectsIdPackagesMlModelsModelVersionIdFilesPathFileName"
      responses:
        "201":
          description: "Workhorse upload model package file"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/npm/*package_name/-/*file_name:
    get:
      tags:
      - "npm_packages"
      summary: "Download the NPM tarball"
      description: "This feature was introduced in GitLab 11.8"
      operationId: "getApiV4ProjectsIdPackagesNpm*packageName-*fileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "file_name"
        in: "query"
        description: "Package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download the NPM tarball"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/npm/{package_name}:
    put:
      tags:
      - "npm_packages"
      summary: "Create or deprecate NPM package"
      description: "Create was introduced in GitLab 11.8 & deprecate suppport was\
        \ added in 16.0"
      operationId: "putApiV4ProjectsIdPackagesNpmPackageName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesNpmPackageName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesNpmPackageName"
        x-exportParamName: "PutApiV4ProjectsIdPackagesNpmPackageName"
      responses:
        "200":
          description: "Create or deprecate NPM package"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/npm/*package_name:
    get:
      tags:
      - "npm_packages"
      summary: "NPM registry metadata endpoint"
      description: "This feature was introduced in GitLab 11.8"
      operationId: "getApiV4ProjectsIdPackagesNpm*packageName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/API_Entities_NpmPackage"
        "302":
          description: "Found (redirect)"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/npm/-/npm/v1/security/advisories/bulk:
    post:
      tags:
      - "npm_packages"
      summary: "NPM registry bulk advisory endpoint"
      description: "This feature was introduced in GitLab 15.6"
      operationId: "postApiV4ProjectsIdPackagesNpmNpmV1SecurityAdvisoriesBulk"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Ok"
        "307":
          description: "Temporary Redirect"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/npm/-/npm/v1/security/audits/quick:
    post:
      tags:
      - "npm_packages"
      summary: "NPM registry quick audit endpoint"
      description: "This feature was introduced in GitLab 15.6"
      operationId: "postApiV4ProjectsIdPackagesNpmNpmV1SecurityAuditsQuick"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Ok"
        "307":
          description: "Temporary Redirect"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/npm/-/package/*package_name/dist-tags:
    get:
      tags:
      - "npm_packages"
      summary: "Get all tags for a given an NPM package"
      description: "This feature was introduced in GitLab 12.7"
      operationId: "getApiV4ProjectsIdPackagesNpmPackage*packageNameDistTags"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "Get all tags for a given an NPM package"
          schema:
            $ref: "#/definitions/API_Entities_NpmPackageTag"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/npm/-/package/*package_name/dist-tags/{tag}:
    put:
      tags:
      - "npm_packages"
      summary: "Create or Update the given tag for the given NPM package and version"
      description: "This feature was introduced in GitLab 12.7"
      operationId: "putApiV4ProjectsIdPackagesNpmPackage*packageNameDistTagsTag"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag"
        in: "path"
        description: "Package dist-tag"
        required: true
        type: "string"
        x-exportParamName: "Tag"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesNpmPackage*packageNameDistTagsTag"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesNpmPackage*packageNameDistTagsTag"
        x-exportParamName: "PutApiV4ProjectsIdPackagesNpmPackagepackageNameDistTagsTag"
      responses:
        "204":
          description: "Create or Update the given tag for the given NPM package and\
            \ version"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "npm_packages"
      summary: "Deletes the given tag"
      description: "This feature was introduced in GitLab 12.7"
      operationId: "deleteApiV4ProjectsIdPackagesNpmPackage*packageNameDistTagsTag"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "tag"
        in: "path"
        description: "Package dist-tag"
        required: true
        type: "string"
        x-exportParamName: "Tag"
      responses:
        "204":
          description: "Deletes the given tag"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/index:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet V3 Feed Service Index"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "getApiV4ProjectsIdPackagesNugetIndex"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The NuGet V3 Feed Service Index"
          schema:
            $ref: "#/definitions/API_Entities_Nuget_ServiceIndex"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget:
    put:
      tags:
      - "nuget_packages"
      summary: "The NuGet V3 Feed Package Publish endpoint"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "putApiV4ProjectsIdPackagesNuget"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesNuget"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesNuget"
        x-exportParamName: "PutApiV4ProjectsIdPackagesNuget"
      responses:
        "201":
          description: "The NuGet V3 Feed Package Publish endpoint"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/authorize:
    put:
      tags:
      - "nuget_packages"
      summary: "The NuGet Package Authorize endpoint"
      description: "This feature was introduced in GitLab 14.1"
      operationId: "putApiV4ProjectsIdPackagesNugetAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The NuGet Package Authorize endpoint"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/symbolpackage:
    put:
      tags:
      - "nuget_packages"
      summary: "The NuGet Symbol Package Publish endpoint"
      description: "This feature was introduced in GitLab 14.1"
      operationId: "putApiV4ProjectsIdPackagesNugetSymbolpackage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesNugetSymbolpackage"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesNugetSymbolpackage"
        x-exportParamName: "PutApiV4ProjectsIdPackagesNugetSymbolpackage"
      responses:
        "201":
          description: "The NuGet Symbol Package Publish endpoint"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/symbolpackage/authorize:
    put:
      tags:
      - "nuget_packages"
      summary: "The NuGet Symbol Package Authorize endpoint"
      description: "This feature was introduced in GitLab 14.1"
      operationId: "putApiV4ProjectsIdPackagesNugetSymbolpackageAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The NuGet Symbol Package Authorize endpoint"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/*package_name/*package_version:
    delete:
      tags:
      - "nuget_packages"
      summary: "The NuGet Package Delete endpoint"
      description: "This feature was introduced in GitLab 16.5"
      operationId: "deleteApiV4ProjectsIdPackagesNuget*packageName*packageVersion"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The NuGet package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "query"
        description: "The NuGet package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      responses:
        "204":
          description: "The NuGet Package Delete endpoint"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/symbolfiles/*file_name/*signature/*same_file_name:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet Symbol File Download Endpoint"
      description: "This feature was introduced in GitLab 16.7"
      operationId: "getApiV4ProjectsIdPackagesNugetSymbolfiles*fileName*signature*sameFileName"
      produces:
      - "application/json"
      parameters:
      - name: "Symbolchecksum"
        in: "header"
        required: true
        type: "string"
        x-exportParamName: "Symbolchecksum"
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_name"
        in: "query"
        description: "The symbol file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      - name: "signature"
        in: "query"
        description: "The symbol file signature"
        required: true
        type: "string"
        x-exportParamName: "Signature"
      - name: "same_file_name"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "SameFileName"
      responses:
        "200":
          description: "The NuGet Symbol File Download Endpoint"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/v2:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet V2 Feed Service Index"
      description: "This feature was introduced in GitLab 16.2"
      operationId: "getApiV4ProjectsIdPackagesNugetV2"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The NuGet V2 Feed Service Index"
        "404":
          description: "Not Found"
    put:
      tags:
      - "nuget_packages"
      summary: "The NuGet V2 Feed Package Publish endpoint"
      description: "This feature was introduced in GitLab 16.2"
      operationId: "putApiV4ProjectsIdPackagesNugetV2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesNugetV2"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesNugetV2"
        x-exportParamName: "PutApiV4ProjectsIdPackagesNugetV2"
      responses:
        "201":
          description: "The NuGet V2 Feed Package Publish endpoint"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/v2/$metadata:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet V2 Feed Package $metadata endpoint"
      description: "This feature was introduced in GitLab 16.3"
      operationId: "getApiV4ProjectsIdPackagesNugetV2$metadata"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The NuGet V2 Feed Package $metadata endpoint"
  /api/v4/projects/{id}/packages/nuget/v2/authorize:
    put:
      tags:
      - "nuget_packages"
      summary: "The NuGet V2 Feed Package Authorize endpoint"
      description: "This feature was introduced in GitLab 16.2"
      operationId: "putApiV4ProjectsIdPackagesNugetV2Authorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The NuGet V2 Feed Package Authorize endpoint"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/metadata/*package_name/index:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet Metadata Service - Package name level"
      description: "This feature was introduced in GitLab 12.8"
      operationId: "getApiV4ProjectsIdPackagesNugetMetadata*packageNameIndex"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The NuGet package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "The NuGet Metadata Service - Package name level"
          schema:
            $ref: "#/definitions/API_Entities_Nuget_PackagesMetadata"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/metadata/*package_name/*package_version:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet Metadata Service - Package name and version level"
      description: "This feature was introduced in GitLab 12.8"
      operationId: "getApiV4ProjectsIdPackagesNugetMetadata*packageName*packageVersion"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The NuGet package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "query"
        description: "The NuGet package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      responses:
        "200":
          description: "The NuGet Metadata Service - Package name and version level"
          schema:
            $ref: "#/definitions/API_Entities_Nuget_PackageMetadata"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/query:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet Search Service"
      description: "This feature was introduced in GitLab 12.8"
      operationId: "getApiV4ProjectsIdPackagesNugetQuery"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "q"
        in: "query"
        description: "The search term"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "skip"
        in: "query"
        description: "The number of results to skip"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "take"
        in: "query"
        description: "The number of results to return"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Take"
        x-optionalDataType: "Int32"
      - name: "prerelease"
        in: "query"
        description: "Include prerelease versions"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "Prerelease"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "The NuGet Search Service"
          schema:
            $ref: "#/definitions/API_Entities_Nuget_SearchResults"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/download/*package_name/index:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet Content Service - index request"
      description: "This feature was introduced in GitLab 12.8"
      operationId: "getApiV4ProjectsIdPackagesNugetDownload*packageNameIndex"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The NuGet package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "The NuGet Content Service - index request"
          schema:
            $ref: "#/definitions/API_Entities_Nuget_PackagesVersions"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/nuget/download/*package_name/*package_version/*package_filename:
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet Content Service - content request"
      description: "This feature was introduced in GitLab 12.8"
      operationId: "getApiV4ProjectsIdPackagesNugetDownload*packageName*packageVersion*packageFilename"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The NuGet package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "query"
        description: "The NuGet package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_filename"
        in: "query"
        description: "The NuGet package filename"
        required: true
        type: "string"
        x-exportParamName: "PackageFilename"
      responses:
        "200":
          description: "The NuGet Content Service - content request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{project_id}/packages/nuget/v2/FindPackagesById\(\):
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet V2 Feed Find Packages by ID endpoint"
      description: "This feature was introduced in GitLab 16.4"
      operationId: "getApiV4ProjectsProjectIdPackagesNugetV2Findpackagesbyid\\(\\)"
      produces:
      - "application/json"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "id"
        in: "query"
        description: "The NuGet package name"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The NuGet V2 Feed Find Packages by ID endpoint"
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
  /api/v4/projects/{project_id}/packages/nuget/v2/Packages\(\):
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet V2 Feed Enumerate Packages endpoint"
      description: "This feature was introduced in GitLab 16.4"
      operationId: "getApiV4ProjectsProjectIdPackagesNugetV2Packages\\(\\)"
      produces:
      - "application/json"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "$filter"
        in: "query"
        description: "The NuGet package name"
        required: true
        type: "string"
        x-exportParamName: "Filter"
      responses:
        "200":
          description: "The NuGet V2 Feed Enumerate Packages endpoint"
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
  /api/v4/projects/{project_id}/packages/nuget/v2/Packages\(Id='*package_name',Version='*package_version'\):
    get:
      tags:
      - "nuget_packages"
      summary: "The NuGet V2 Feed Single Package Metadata endpoint"
      description: "This feature was introduced in GitLab 16.4"
      operationId: "getApiV4ProjectsProjectIdPackagesNugetV2Packages\\(id='*packageName',version='*packageVersion'\\\
        )"
      produces:
      - "application/json"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "package_name"
        in: "query"
        description: "The NuGet package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "query"
        description: "The NuGet package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      responses:
        "200":
          description: "The NuGet V2 Feed Single Package Metadata endpoint"
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/debian_distributions:
    get:
      tags:
      - "debian_distribution"
      summary: "Get a list of Debian Distributions"
      description: "This feature was introduced in 14.0"
      operationId: "getApiV4ProjectsIdDebianDistributions"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "codename"
        in: "query"
        description: "The Debian Codename"
        required: false
        type: "string"
        x-exportParamName: "Codename"
        x-optionalDataType: "String"
      - name: "suite"
        in: "query"
        description: "The Debian Suite"
        required: false
        type: "string"
        x-exportParamName: "Suite"
        x-optionalDataType: "String"
      - name: "origin"
        in: "query"
        description: "The Debian Origin"
        required: false
        type: "string"
        x-exportParamName: "Origin"
        x-optionalDataType: "String"
      - name: "label"
        in: "query"
        description: "The Debian Label"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "version"
        in: "query"
        description: "The Debian Version"
        required: false
        type: "string"
        x-exportParamName: "Version"
        x-optionalDataType: "String"
      - name: "description"
        in: "query"
        description: "The Debian Description"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "valid_time_duration_seconds"
        in: "query"
        description: "The duration before the Release file should be considered expired\
          \ by the client"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ValidTimeDurationSeconds"
        x-optionalDataType: "Int32"
      - name: "components"
        in: "query"
        description: "The list of Components"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Components"
      - name: "architectures"
        in: "query"
        description: "The list of Architectures"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Architectures"
      responses:
        "200":
          description: "Get a list of Debian Distributions"
          schema:
            $ref: "#/definitions/API_Entities_Packages_Debian_Distribution"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    post:
      tags:
      - "debian_distribution"
      summary: "Create a Debian Distribution"
      description: "This feature was introduced in 14.0"
      operationId: "postApiV4ProjectsIdDebianDistributions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdDebianDistributions"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdDebianDistributions"
        x-exportParamName: "PostApiV4ProjectsIdDebianDistributions"
      responses:
        "201":
          description: "Create a Debian Distribution"
          schema:
            $ref: "#/definitions/API_Entities_Packages_Debian_Distribution"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/debian_distributions/{codename}:
    get:
      tags:
      - "debian_distribution"
      summary: "Get a Debian Distribution"
      description: "This feature was introduced in 14.0"
      operationId: "getApiV4ProjectsIdDebianDistributionsCodename"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "codename"
        in: "path"
        description: "The Debian Codename"
        required: true
        type: "string"
        x-exportParamName: "Codename"
      responses:
        "200":
          description: "Get a Debian Distribution"
          schema:
            $ref: "#/definitions/API_Entities_Packages_Debian_Distribution"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    put:
      tags:
      - "debian_distribution"
      summary: "Update a Debian Distribution"
      description: "This feature was introduced in 14.0"
      operationId: "putApiV4ProjectsIdDebianDistributionsCodename"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "codename"
        in: "path"
        description: "The Debian Codename"
        required: true
        type: "string"
        x-exportParamName: "Codename"
      - in: "body"
        name: "putApiV4ProjectsIdDebianDistributionsCodename"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdDebianDistributionsCodename"
        x-exportParamName: "PutApiV4ProjectsIdDebianDistributionsCodename"
      responses:
        "200":
          description: "Update a Debian Distribution"
          schema:
            $ref: "#/definitions/API_Entities_Packages_Debian_Distribution"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "debian_distribution"
      summary: "Delete a Debian Distribution"
      description: "This feature was introduced in 14.0"
      operationId: "deleteApiV4ProjectsIdDebianDistributionsCodename"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "codename"
        in: "path"
        description: "The Debian Codename"
        required: true
        type: "string"
        x-exportParamName: "Codename"
      - name: "suite"
        in: "query"
        description: "The Debian Suite"
        required: false
        type: "string"
        x-exportParamName: "Suite"
        x-optionalDataType: "String"
      - name: "origin"
        in: "query"
        description: "The Debian Origin"
        required: false
        type: "string"
        x-exportParamName: "Origin"
        x-optionalDataType: "String"
      - name: "label"
        in: "query"
        description: "The Debian Label"
        required: false
        type: "string"
        x-exportParamName: "Label"
        x-optionalDataType: "String"
      - name: "version"
        in: "query"
        description: "The Debian Version"
        required: false
        type: "string"
        x-exportParamName: "Version"
        x-optionalDataType: "String"
      - name: "description"
        in: "query"
        description: "The Debian Description"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "valid_time_duration_seconds"
        in: "query"
        description: "The duration before the Release file should be considered expired\
          \ by the client"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ValidTimeDurationSeconds"
        x-optionalDataType: "Int32"
      - name: "components"
        in: "query"
        description: "The list of Components"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Components"
      - name: "architectures"
        in: "query"
        description: "The list of Architectures"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Architectures"
      responses:
        "202":
          description: "Delete a Debian Distribution"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/debian_distributions/{codename}/key.asc:
    get:
      tags:
      - "debian_distribution"
      summary: "Get a Debian Distribution Key"
      description: "This feature was introduced in 14.4"
      operationId: "getApiV4ProjectsIdDebianDistributionsCodenameKeyAsc"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "codename"
        in: "path"
        description: "The Debian Codename"
        required: true
        type: "string"
        x-exportParamName: "Codename"
      responses:
        "200":
          description: "Get a Debian Distribution Key"
          schema:
            $ref: "#/definitions/API_Entities_Packages_Debian_Distribution"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/hooks/{hook_id}/test/{trigger}:
    post:
      tags:
      - "projects"
      summary: "Triggers a hook test"
      description: "Triggers a hook test"
      operationId: "postApiV4ProjectsIdHooksHookIdTestTrigger"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "hook_id"
        in: "path"
        description: "The ID of the hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      - name: "trigger"
        in: "path"
        description: "The type of trigger hook"
        required: true
        type: "string"
        enum:
        - "push_events"
        - "tag_push_events"
        - "issues_events"
        - "confidential_issues_events"
        - "note_events"
        - "confidential_note_events"
        - "merge_requests_events"
        - "job_events"
        - "pipeline_events"
        - "wiki_page_events"
        - "deployment_events"
        - "feature_flag_events"
        - "releases_events"
        - "emoji_events"
        - "resource_access_token_events"
        x-exportParamName: "Trigger"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Triggers a hook test"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
        "429":
          description: "Too many requests"
  /api/v4/projects/{id}/audit_events:
    get:
      tags:
      - "projects"
      description: "Get a list of audit events in this project."
      operationId: "getApiV4ProjectsIdAuditEvents"
      produces:
      - "application/json"
      parameters:
      - name: "created_after"
        in: "query"
        description: "Return audit events created after the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Return audit events created before the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a list of audit events in this project."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EE_API_Entities_AuditEvent"
  /api/v4/projects/{id}/audit_events/{audit_event_id}:
    get:
      tags:
      - "projects"
      description: "Get a specific audit event in this project."
      operationId: "getApiV4ProjectsIdAuditEventsAuditEventId"
      produces:
      - "application/json"
      parameters:
      - name: "audit_event_id"
        in: "path"
        description: "The ID of the audit event"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AuditEventId"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a specific audit event in this project."
          schema:
            $ref: "#/definitions/EE_API_Entities_AuditEvent"
  /api/v4/projects/{id}/packages/pypi/files/{sha256}/*file_identifier:
    get:
      tags:
      - "pypi_packages"
      summary: "The PyPi package download endpoint"
      description: "This feature was introduced in GitLab 12.10"
      operationId: "getApiV4ProjectsIdPackagesPypiFilesSha256*fileIdentifier"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_identifier"
        in: "query"
        description: "The PyPi package file identifier"
        required: true
        type: "string"
        x-exportParamName: "FileIdentifier"
      - name: "sha256"
        in: "path"
        description: "The PyPi package sha256 check sum"
        required: true
        type: "string"
        x-exportParamName: "Sha256"
      responses:
        "200":
          description: "The PyPi package download endpoint"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/pypi/simple:
    get:
      tags:
      - "pypi_packages"
      summary: "The PyPi Simple Project Index Endpoint"
      description: "This feature was introduced in GitLab 15.1"
      operationId: "getApiV4ProjectsIdPackagesPypiSimple"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "The PyPi Simple Project Index Endpoint"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/pypi/simple/*package_name:
    get:
      tags:
      - "pypi_packages"
      summary: "The PyPi Simple Project Package Endpoint"
      description: "This feature was introduced in GitLab 12.10"
      operationId: "getApiV4ProjectsIdPackagesPypiSimple*packageName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The PyPi package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "The PyPi Simple Project Package Endpoint"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/pypi:
    post:
      tags:
      - "pypi_packages"
      summary: "The PyPi Package upload endpoint"
      description: "This feature was introduced in GitLab 12.10"
      operationId: "postApiV4ProjectsIdPackagesPypi"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdPackagesPypi"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdPackagesPypi"
        x-exportParamName: "PostApiV4ProjectsIdPackagesPypi"
      responses:
        "201":
          description: "The PyPi Package upload endpoint"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "422":
          description: "Unprocessable Entity"
  /api/v4/projects/{id}/packages/pypi/authorize:
    post:
      tags:
      - "pypi_packages"
      summary: "Authorize the PyPi package upload from workhorse"
      description: "This feature was introduced in GitLab 12.10"
      operationId: "postApiV4ProjectsIdPackagesPypiAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Authorize the PyPi package upload from workhorse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/releases/{tag_name}/assets/links:
    get:
      tags:
      - "release_links"
      summary: "List links of a release"
      description: "Get assets as links from a release. This feature was introduced\
        \ in GitLab 11.7."
      operationId: "getApiV4ProjectsIdReleasesTagNameAssetsLinks"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The tag associated with the release"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List links of a release"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Releases_Link"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    post:
      tags:
      - "release_links"
      summary: "Create a release link"
      description: "Create an asset as a link from a release. This feature was introduced\
        \ in GitLab 11.7."
      operationId: "postApiV4ProjectsIdReleasesTagNameAssetsLinks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The tag associated with the release"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      - in: "body"
        name: "postApiV4ProjectsIdReleasesTagNameAssetsLinks"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdReleasesTagNameAssetsLinks"
        x-exportParamName: "PostApiV4ProjectsIdReleasesTagNameAssetsLinks"
      responses:
        "201":
          description: "Create a release link"
          schema:
            $ref: "#/definitions/API_Entities_Releases_Link"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
  /api/v4/projects/{id}/releases/{tag_name}/assets/links/{link_id}:
    get:
      tags:
      - "release_links"
      summary: "Get a release link"
      description: "Get an asset as a link from a release. This feature was introduced\
        \ in GitLab 11.7."
      operationId: "getApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The tag associated with the release"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      - name: "link_id"
        in: "path"
        description: "The ID of the link"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "LinkId"
      responses:
        "200":
          description: "Get a release link"
          schema:
            $ref: "#/definitions/API_Entities_Releases_Link"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "release_links"
      summary: "Update a release link"
      description: "Update an asset as a link from a release. This feature was introduced\
        \ in GitLab 11.7."
      operationId: "putApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The tag associated with the release"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      - name: "link_id"
        in: "path"
        description: "The ID of the link"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "LinkId"
      - in: "body"
        name: "putApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId"
        x-exportParamName: "PutApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId"
      responses:
        "200":
          description: "Update a release link"
          schema:
            $ref: "#/definitions/API_Entities_Releases_Link"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
    delete:
      tags:
      - "release_links"
      summary: "Delete a release link"
      description: "Deletes an asset as a link from a release. This feature was introduced\
        \ in GitLab 11.7."
      operationId: "deleteApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag_name"
        in: "path"
        description: "The tag associated with the release"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      - name: "link_id"
        in: "path"
        description: "The ID of the link"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "LinkId"
      responses:
        "204":
          description: "Delete a release link"
          schema:
            $ref: "#/definitions/API_Entities_Releases_Link"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
  /api/v4/projects/{id}/packages/rpm/repodata/*file_name:
    get:
      tags:
      - "rpm_packages"
      summary: "Download repository metadata files"
      description: "This feature was introduced in GitLab 15.7"
      operationId: "getApiV4ProjectsIdPackagesRpmRepodata*fileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "file_name"
        in: "query"
        description: "Repository metadata file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download repository metadata files"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/rpm/*package_file_id/*file_name:
    get:
      tags:
      - "rpm_packages"
      summary: "Download RPM package files"
      description: "This feature was introduced in GitLab 15.7"
      operationId: "getApiV4ProjectsIdPackagesRpm*packageFileId*fileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_file_id"
        in: "query"
        description: "RPM package file id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PackageFileId"
      - name: "file_name"
        in: "query"
        description: "RPM package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download RPM package files"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/rpm:
    post:
      tags:
      - "rpm_packages"
      summary: "Upload a RPM package"
      description: "This feature was introduced in GitLab 15.7"
      operationId: "postApiV4ProjectsIdPackagesRpm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Upload a RPM package"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/rpm/authorize:
    post:
      tags:
      - "rpm_packages"
      summary: "Authorize package upload from workhorse"
      description: "This feature was introduced in GitLab 15.7"
      operationId: "postApiV4ProjectsIdPackagesRpmAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Authorize package upload from workhorse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/rubygems/{file_name}:
    get:
      tags:
      - "rubygem_packages"
      summary: "Download the spec index file"
      description: "This feature was introduced in GitLab 13.9"
      operationId: "getApiV4ProjectsIdPackagesRubygemsFileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "file_name"
        in: "path"
        description: "Spec file name"
        required: true
        type: "file"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download the spec index file"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/rubygems/quick/Marshal.4.8/{file_name}:
    get:
      tags:
      - "rubygem_packages"
      summary: "Download the gemspec file"
      description: "This feature was introduced in GitLab 13.9"
      operationId: "getApiV4ProjectsIdPackagesRubygemsQuickMarshal48FileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "file_name"
        in: "path"
        description: "Gemspec file name"
        required: true
        type: "file"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download the gemspec file"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/rubygems/gems/{file_name}:
    get:
      tags:
      - "rubygem_packages"
      summary: "Download the .gem package"
      description: "This feature was introduced in GitLab 13.9"
      operationId: "getApiV4ProjectsIdPackagesRubygemsGemsFileName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "file"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download the .gem package"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/rubygems/api/v1/gems/authorize:
    post:
      tags:
      - "rubygem_packages"
      summary: "Authorize a gem upload from workhorse"
      description: "This feature was introduced in GitLab 13.9"
      operationId: "postApiV4ProjectsIdPackagesRubygemsApiV1GemsAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Authorize a gem upload from workhorse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
  /api/v4/projects/{id}/packages/rubygems/api/v1/gems:
    post:
      tags:
      - "rubygem_packages"
      summary: "Upload a gem"
      description: "This feature was introduced in GitLab 13.9"
      operationId: "postApiV4ProjectsIdPackagesRubygemsApiV1Gems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4ProjectsIdPackagesRubygemsApiV1Gems"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdPackagesRubygemsApiV1Gems"
        x-exportParamName: "PostApiV4ProjectsIdPackagesRubygemsApiV1Gems"
      responses:
        "201":
          description: "Upload a gem"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/rubygems/api/v1/dependencies:
    get:
      tags:
      - "rubygem_packages"
      summary: "Fetch a list of dependencies"
      description: "This feature was introduced in GitLab 13.9"
      operationId: "getApiV4ProjectsIdPackagesRubygemsApiV1Dependencies"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "gems"
        in: "query"
        description: "Comma delimited gem names"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Gems"
      responses:
        "200":
          description: "Fetch a list of dependencies"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}:
    get:
      tags:
      - "terraform_registry"
      summary: "Download the latest version of a module"
      description: "This feature was introduced in GitLab 16.7"
      operationId: "getApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "module_name"
        in: "path"
        description: "Module name"
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_system"
        in: "path"
        description: "Module system"
        required: true
        type: "string"
        x-exportParamName: "ModuleSystem"
      - name: "terraform-get"
        in: "query"
        description: "Terraform get redirection flag"
        required: false
        type: "string"
        enum:
        - "1"
        x-exportParamName: "TerraformGet"
        x-optionalDataType: "String"
      responses:
        "204":
          description: "Download the latest version of a module"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version:
    get:
      tags:
      - "terraform_registry"
      summary: "Download a specific version of a module"
      description: "This feature was introduced in GitLab 16.7"
      operationId: "getApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersion"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "module_name"
        in: "path"
        description: "Module name"
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_system"
        in: "path"
        description: "Module system"
        required: true
        type: "string"
        x-exportParamName: "ModuleSystem"
      - name: "module_version"
        in: "query"
        description: "Module version"
        required: true
        type: "string"
        x-exportParamName: "ModuleVersion"
      - name: "terraform-get"
        in: "query"
        description: "Terraform get redirection flag"
        required: false
        type: "string"
        enum:
        - "1"
        x-exportParamName: "TerraformGet"
        x-optionalDataType: "String"
      responses:
        "204":
          description: "Download a specific version of a module"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version/file/authorize:
    put:
      tags:
      - "terraform_registry"
      summary: "Workhorse authorize Terraform Module package file"
      description: "This feature was introduced in GitLab 13.11"
      operationId: "putApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersionFileAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "module_name"
        in: "path"
        description: "Module name"
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_system"
        in: "path"
        description: "Module system"
        required: true
        type: "string"
        x-exportParamName: "ModuleSystem"
      - in: "body"
        name: "putApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersionFileAuthorize"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersionFileAuthorize"
        x-exportParamName: "PutApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystemmoduleVersionFileAuthorize"
      responses:
        "200":
          description: "Workhorse authorize Terraform Module package file"
        "403":
          description: "Forbidden"
  /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version/file:
    put:
      tags:
      - "terraform_registry"
      summary: "Upload Terraform Module package file"
      description: "This feature was introduced in GitLab 13.11"
      operationId: "putApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersionFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or full path of a project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "module_name"
        in: "path"
        description: "Module name"
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_system"
        in: "path"
        description: "Module system"
        required: true
        type: "string"
        x-exportParamName: "ModuleSystem"
      - name: "module_version"
        in: "formData"
        description: "Module version"
        required: true
        type: "string"
        x-exportParamName: "ModuleVersion"
      - name: "file"
        in: "formData"
        description: "The package file to be published (generated by Multipart middleware)"
        required: true
        type: "file"
        x-exportParamName: "File"
      responses:
        "201":
          description: "Upload Terraform Module package file"
        "400":
          description: "Invalid file"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/terraform/state/{name}:
    get:
      tags:
      - "terraform_state"
      summary: "Get a Terraform state by its name"
      description: "Get a Terraform state by its name"
      operationId: "getApiV4ProjectsIdTerraformStateName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        description: "The name of a Terraform state"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ID"
        in: "query"
        description: "Terraform state lock ID"
        required: false
        type: "string"
        x-exportParamName: "ID"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get a Terraform state by its name"
        "204":
          description: "Empty state"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "422":
          description: "Validation failure"
    post:
      tags:
      - "terraform_state"
      summary: "Add a new Terraform state or update an existing one"
      description: "Add a new Terraform state or update an existing one"
      operationId: "postApiV4ProjectsIdTerraformStateName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Name"
      responses:
        "200":
          description: "Add a new Terraform state or update an existing one"
        "204":
          description: "No data provided"
        "403":
          description: "Forbidden"
        "413":
          description: "Request Entity Too Large"
        "422":
          description: "Validation failure"
    delete:
      tags:
      - "terraform_state"
      summary: "Delete a Terraform state of a certain name"
      description: "Delete a Terraform state of a certain name"
      operationId: "deleteApiV4ProjectsIdTerraformStateName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Name"
      responses:
        "204":
          description: "Delete a Terraform state of a certain name"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "422":
          description: "Validation failure"
  /api/v4/projects/{id}/terraform/state/{name}/lock:
    post:
      tags:
      - "terraform_state"
      summary: "Lock a Terraform state of a certain name"
      description: "Lock a Terraform state of a certain name"
      operationId: "postApiV4ProjectsIdTerraformStateNameLock"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Name"
      - in: "body"
        name: "postApiV4ProjectsIdTerraformStateNameLock"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectsIdTerraformStateNameLock"
        x-exportParamName: "PostApiV4ProjectsIdTerraformStateNameLock"
      responses:
        "200":
          description: "Lock a Terraform state of a certain name"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "409":
          description: "Conflict"
        "422":
          description: "Validation failure"
    delete:
      tags:
      - "terraform_state"
      summary: "Unlock a Terraform state of a certain name"
      description: "Unlock a Terraform state of a certain name"
      operationId: "deleteApiV4ProjectsIdTerraformStateNameLock"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "ID"
        in: "query"
        description: "Terraform state lock ID"
        required: false
        type: "string"
        x-exportParamName: "ID"
        x-optionalDataType: "String"
      - name: "name"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Name"
      responses:
        "204":
          description: "Unlock a Terraform state of a certain name"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "409":
          description: "Conflict"
        "422":
          description: "Validation failure"
  /api/v4/projects/{id}/terraform/state/{name}/versions/{serial}:
    get:
      tags:
      - "terraform_state"
      summary: "Get a Terraform state version"
      description: "Get a Terraform state version"
      operationId: "getApiV4ProjectsIdTerraformStateNameVersionsSerial"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        description: "The name of a Terraform state"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "serial"
        in: "path"
        description: "The version number of the state"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Serial"
      responses:
        "200":
          description: "Get a Terraform state version"
          schema:
            type: "file"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "terraform_state"
      summary: "Delete a Terraform state version"
      description: "Delete a Terraform state version"
      operationId: "deleteApiV4ProjectsIdTerraformStateNameVersionsSerial"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of the project"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "name"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Name"
      - name: "serial"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Serial"
      responses:
        "204":
          description: "Delete a Terraform state version"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/projects/{id}/hooks/{hook_id}/url_variables/{key}:
    put:
      tags:
      - "projects"
      description: "Set a url variable"
      operationId: "putApiV4ProjectsIdHooksHookIdUrlVariablesKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "hook_id"
        in: "path"
        description: "The ID of the hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      - name: "key"
        in: "path"
        description: "The key of the variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4ProjectsIdHooksHookIdUrlVariablesKey"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ProjectsIdHooksHookIdUrlVariablesKey"
        x-exportParamName: "PutApiV4ProjectsIdHooksHookIdUrlVariablesKey"
      responses:
        "200":
          description: "Set a url variable"
    delete:
      tags:
      - "projects"
      description: "Un-Set a url variable"
      operationId: "deleteApiV4ProjectsIdHooksHookIdUrlVariablesKey"
      produces:
      - "application/json"
      parameters:
      - name: "hook_id"
        in: "path"
        description: "The ID of the hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      - name: "key"
        in: "path"
        description: "The key of the variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Un-Set a url variable"
  /api/v4/admin/batched_background_migrations/{id}:
    get:
      tags:
      - "batched_background_migrations"
      description: "Retrieve a batched background migration"
      operationId: "getApiV4AdminBatchedBackgroundMigrationsId"
      produces:
      - "application/json"
      parameters:
      - name: "database"
        in: "query"
        description: "The name of the database"
        required: false
        type: "string"
        default: "main"
        enum:
        - "main"
        - "ci"
        - "main_clusterwide"
        - "embedding"
        - "geo"
        x-exportParamName: "Database"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        description: "The batched background migration id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Retrieve a batched background migration"
          schema:
            $ref: "#/definitions/API_Entities_BatchedBackgroundMigration"
        "401":
          description: "401 Unauthorized"
        "403":
          description: "403 Forbidden"
        "404":
          description: "404 Not found"
  /api/v4/admin/batched_background_migrations:
    get:
      tags:
      - "batched_background_migrations"
      description: "Get the list of batched background migrations"
      operationId: "getApiV4AdminBatchedBackgroundMigrations"
      produces:
      - "application/json"
      parameters:
      - name: "database"
        in: "query"
        description: "The name of the database, the default `main`"
        required: false
        type: "string"
        default: "main"
        enum:
        - "main"
        - "ci"
        - "main_clusterwide"
        - "embedding"
        - "geo"
        x-exportParamName: "Database"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get the list of batched background migrations"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BatchedBackgroundMigration"
        "401":
          description: "401 Unauthorized"
        "403":
          description: "403 Forbidden"
  /api/v4/admin/batched_background_migrations/{id}/resume:
    put:
      tags:
      - "batched_background_migrations"
      description: "Resume a batched background migration"
      operationId: "putApiV4AdminBatchedBackgroundMigrationsIdResume"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The batched background migration id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4AdminBatchedBackgroundMigrationsIdResume"
        required: true
        schema:
          $ref: "#/definitions/putApiV4AdminBatchedBackgroundMigrationsIdResume"
        x-exportParamName: "PutApiV4AdminBatchedBackgroundMigrationsIdResume"
      responses:
        "200":
          description: "Resume a batched background migration"
          schema:
            $ref: "#/definitions/API_Entities_BatchedBackgroundMigration"
        "401":
          description: "401 Unauthorized"
        "403":
          description: "403 Forbidden"
        "404":
          description: "404 Not found"
        "422":
          description: "You can resume only `paused` batched background migrations."
  /api/v4/admin/batched_background_migrations/{id}/pause:
    put:
      tags:
      - "batched_background_migrations"
      description: "Pause a batched background migration"
      operationId: "putApiV4AdminBatchedBackgroundMigrationsIdPause"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The batched background migration id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4AdminBatchedBackgroundMigrationsIdPause"
        required: true
        schema:
          $ref: "#/definitions/putApiV4AdminBatchedBackgroundMigrationsIdPause"
        x-exportParamName: "PutApiV4AdminBatchedBackgroundMigrationsIdPause"
      responses:
        "200":
          description: "Pause a batched background migration"
          schema:
            $ref: "#/definitions/API_Entities_BatchedBackgroundMigration"
        "401":
          description: "401 Unauthorized"
        "403":
          description: "403 Forbidden"
        "404":
          description: "404 Not found"
        "422":
          description: "You can pause only `active` batched background migrations."
  /api/v4/admin/ci/variables:
    get:
      tags:
      - "ci_variables"
      description: "List all instance-level variables"
      operationId: "getApiV4AdminCiVariables"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List all instance-level variables"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
    post:
      tags:
      - "ci_variables"
      description: "Create a new instance-level variable"
      operationId: "postApiV4AdminCiVariables"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4AdminCiVariables"
        required: true
        schema:
          $ref: "#/definitions/postApiV4AdminCiVariables"
        x-exportParamName: "PostApiV4AdminCiVariables"
      responses:
        "201":
          description: "Create a new instance-level variable"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "400":
          description: "400 Bad Request"
  /api/v4/admin/ci/variables/{key}:
    get:
      tags:
      - "ci_variables"
      description: "Get the details of a specific instance-level variable"
      operationId: "getApiV4AdminCiVariablesKey"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of a variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        "200":
          description: "Get the details of a specific instance-level variable"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "404":
          description: "Instance Variable Not Found"
    put:
      tags:
      - "ci_variables"
      description: "Update an instance-level variable"
      operationId: "putApiV4AdminCiVariablesKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of a variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - in: "body"
        name: "putApiV4AdminCiVariablesKey"
        required: true
        schema:
          $ref: "#/definitions/putApiV4AdminCiVariablesKey"
        x-exportParamName: "PutApiV4AdminCiVariablesKey"
      responses:
        "200":
          description: "Update an instance-level variable"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "404":
          description: "Instance Variable Not Found"
    delete:
      tags:
      - "ci_variables"
      description: "Delete an existing instance-level variable"
      operationId: "deleteApiV4AdminCiVariablesKey"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of a variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        "204":
          description: "Delete an existing instance-level variable"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Variable"
        "404":
          description: "Instance Variable Not Found"
  /api/v4/admin/databases/{database_name}/dictionary/tables/{table_name}:
    get:
      tags:
      - "admin"
      description: "Retrieve dictionary details"
      operationId: "getApiV4AdminDatabasesDatabaseNameDictionaryTablesTableName"
      produces:
      - "application/json"
      parameters:
      - name: "database_name"
        in: "path"
        description: "The database name"
        required: true
        type: "string"
        enum:
        - "main"
        - "ci"
        x-exportParamName: "DatabaseName"
      - name: "table_name"
        in: "path"
        description: "The table name"
        required: true
        type: "string"
        x-exportParamName: "TableName"
      responses:
        "200":
          description: "Retrieve dictionary details"
          schema:
            $ref: "#/definitions/API_Entities_Dictionary_Table"
        "401":
          description: "401 Unauthorized"
        "403":
          description: "403 Forbidden"
        "404":
          description: "404 Not found"
  /api/v4/admin/clusters:
    get:
      tags:
      - "clusters"
      summary: "List instance clusters"
      description: "This feature was introduced in GitLab 13.2. Returns a list of\
        \ instance clusters."
      operationId: "getApiV4AdminClusters"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "List instance clusters"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Cluster"
        "403":
          description: "Forbidden"
  /api/v4/admin/clusters/{cluster_id}:
    get:
      tags:
      - "clusters"
      summary: "Get a single instance cluster"
      description: "This feature was introduced in GitLab 13.2. Returns a single instance\
        \ cluster."
      operationId: "getApiV4AdminClustersClusterId"
      produces:
      - "application/json"
      parameters:
      - name: "cluster_id"
        in: "path"
        description: "The cluster ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClusterId"
      responses:
        "200":
          description: "Get a single instance cluster"
          schema:
            $ref: "#/definitions/API_Entities_Cluster"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    put:
      tags:
      - "clusters"
      summary: "Edit instance cluster"
      description: "This feature was introduced in GitLab 13.2. Updates an existing\
        \ instance cluster."
      operationId: "putApiV4AdminClustersClusterId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cluster_id"
        in: "path"
        description: "The cluster ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClusterId"
      - in: "body"
        name: "putApiV4AdminClustersClusterId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4AdminClustersClusterId"
        x-exportParamName: "PutApiV4AdminClustersClusterId"
      responses:
        "200":
          description: "Edit instance cluster"
          schema:
            $ref: "#/definitions/API_Entities_Cluster"
        "400":
          description: "Validation error"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "clusters"
      summary: "Delete instance cluster"
      description: "This feature was introduced in GitLab 13.2. Deletes an existing\
        \ instance cluster. Does not remove existing resources within the connected\
        \ Kubernetes cluster."
      operationId: "deleteApiV4AdminClustersClusterId"
      produces:
      - "application/json"
      parameters:
      - name: "cluster_id"
        in: "path"
        description: "The cluster ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClusterId"
      responses:
        "204":
          description: "Delete instance cluster"
          schema:
            $ref: "#/definitions/API_Entities_Cluster"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/admin/clusters/add:
    post:
      tags:
      - "clusters"
      summary: "Add existing instance cluster"
      description: "This feature was introduced in GitLab 13.2. Adds an existing Kubernetes\
        \ instance cluster."
      operationId: "postApiV4AdminClustersAdd"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4AdminClustersAdd"
        required: true
        schema:
          $ref: "#/definitions/postApiV4AdminClustersAdd"
        x-exportParamName: "PostApiV4AdminClustersAdd"
      responses:
        "201":
          description: "Add existing instance cluster"
          schema:
            $ref: "#/definitions/API_Entities_Cluster"
        "400":
          description: "Validation error"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/admin/migrations/{timestamp}/mark:
    post:
      tags:
      - "migrations"
      description: "Mark the migration as successfully executed"
      operationId: "postApiV4AdminMigrationsTimestampMark"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "timestamp"
        in: "path"
        description: "The migration version timestamp"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Timestamp"
      - in: "body"
        name: "postApiV4AdminMigrationsTimestampMark"
        required: true
        schema:
          $ref: "#/definitions/postApiV4AdminMigrationsTimestampMark"
        x-exportParamName: "PostApiV4AdminMigrationsTimestampMark"
      responses:
        "201":
          description: "201 Created"
        "401":
          description: "401 Unauthorized"
        "403":
          description: "403 Forbidden"
        "404":
          description: "404 Not found"
        "422":
          description: "You can mark only pending migrations"
  /api/v4/broadcast_messages:
    get:
      tags:
      - "broadcast_messages"
      summary: "Get all broadcast messages"
      description: "This feature was introduced in GitLab 8.12."
      operationId: "getApiV4BroadcastMessages"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get all broadcast messages"
          schema:
            $ref: "#/definitions/API_Entities_System_BroadcastMessage"
    post:
      tags:
      - "broadcast_messages"
      summary: "Create a broadcast message"
      description: "This feature was introduced in GitLab 8.12."
      operationId: "postApiV4BroadcastMessages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4BroadcastMessages"
        required: true
        schema:
          $ref: "#/definitions/postApiV4BroadcastMessages"
        x-exportParamName: "PostApiV4BroadcastMessages"
      responses:
        "201":
          description: "Create a broadcast message"
          schema:
            $ref: "#/definitions/API_Entities_System_BroadcastMessage"
  /api/v4/broadcast_messages/{id}:
    get:
      tags:
      - "broadcast_messages"
      summary: "Get a specific broadcast message"
      description: "This feature was introduced in GitLab 8.12."
      operationId: "getApiV4BroadcastMessagesId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Broadcast message ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a specific broadcast message"
          schema:
            $ref: "#/definitions/API_Entities_System_BroadcastMessage"
    put:
      tags:
      - "broadcast_messages"
      summary: "Update a broadcast message"
      description: "This feature was introduced in GitLab 8.12."
      operationId: "putApiV4BroadcastMessagesId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Broadcast message ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4BroadcastMessagesId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4BroadcastMessagesId"
        x-exportParamName: "PutApiV4BroadcastMessagesId"
      responses:
        "200":
          description: "Update a broadcast message"
          schema:
            $ref: "#/definitions/API_Entities_System_BroadcastMessage"
    delete:
      tags:
      - "broadcast_messages"
      summary: "Delete a broadcast message"
      description: "This feature was introduced in GitLab 8.12."
      operationId: "deleteApiV4BroadcastMessagesId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Broadcast message ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Delete a broadcast message"
          schema:
            $ref: "#/definitions/API_Entities_System_BroadcastMessage"
  /api/v4/applications:
    get:
      tags:
      - "applications"
      summary: "Get applications"
      description: "List all registered applications"
      operationId: "getApiV4Applications"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get applications"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Application"
    post:
      tags:
      - "applications"
      summary: "Create a new application"
      description: "This feature was introduced in GitLab 10.5"
      operationId: "postApiV4Applications"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4Applications"
        required: true
        schema:
          $ref: "#/definitions/postApiV4Applications"
        x-exportParamName: "PostApiV4Applications"
      responses:
        "200":
          description: "Create a new application"
          schema:
            $ref: "#/definitions/API_Entities_ApplicationWithSecret"
  /api/v4/applications/{id}:
    delete:
      tags:
      - "applications"
      summary: "Delete an application"
      description: "Delete a specific application"
      operationId: "deleteApiV4ApplicationsId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the application (not the application_id)"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Delete an application"
  /api/v4/applications/{id}/renew-secret:
    post:
      tags:
      - "applications"
      summary: "Renew an application secret"
      description: "Renew the secret of a specific application"
      operationId: "postApiV4ApplicationsIdRenewSecret"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the application (not the application_id)"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Renew an application secret"
          schema:
            $ref: "#/definitions/API_Entities_ApplicationWithSecret"
  /api/v4/avatar:
    get:
      tags:
      - "avatar"
      description: "Return avatar url for a user"
      operationId: "getApiV4Avatar"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "query"
        description: "Public email address of the user"
        required: true
        type: "string"
        x-exportParamName: "Email"
      - name: "size"
        in: "query"
        description: "Single pixel dimension for Gravatar images"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Size"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Return avatar url for a user"
          schema:
            $ref: "#/definitions/API_Entities_Avatar"
  /api/v4/bulk_imports:
    get:
      tags:
      - "bulk_imports"
      summary: "List all GitLab Migrations"
      description: "This feature was introduced in GitLab 14.1."
      operationId: "getApiV4BulkImports"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "Return GitLab Migrations sorted in created by `asc` or `desc`\
          \ order."
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Return GitLab Migrations with specified status"
        required: false
        type: "string"
        enum:
        - "created"
        - "started"
        - "finished"
        - "timeout"
        - "failed"
        - "canceled"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List all GitLab Migrations"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BulkImport"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
    post:
      tags:
      - "bulk_imports"
      summary: "Start a new GitLab Migration"
      description: "This feature was introduced in GitLab 14.2."
      operationId: "postApiV4BulkImports"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "configuration[url]"
        in: "formData"
        description: "Source GitLab instance URL"
        required: true
        type: "string"
        x-exportParamName: "ConfigurationUrl"
      - name: "configuration[access_token]"
        in: "formData"
        description: "Access token to the source GitLab instance"
        required: true
        type: "string"
        x-exportParamName: "ConfigurationAccessToken"
      - name: "entities[source_type]"
        in: "formData"
        description: "Source entity type"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "group_entity"
          - "project_entity"
        collectionFormat: "multi"
        x-exportParamName: "EntitiesSourceType"
      - name: "entities[source_full_path]"
        in: "formData"
        description: "Relative path of the source entity to import"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "EntitiesSourceFullPath"
      - name: "entities[destination_namespace]"
        in: "formData"
        description: "Destination namespace for the entity"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "EntitiesDestinationNamespace"
      - name: "entities[destination_slug]"
        in: "formData"
        description: "Destination slug for the entity"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "EntitiesDestinationSlug"
      - name: "entities[destination_name]"
        in: "formData"
        description: "Deprecated: Use :destination_slug instead. Destination slug\
          \ for the entity"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "EntitiesDestinationName"
      - name: "entities[migrate_projects]"
        in: "formData"
        description: "Indicates group migration should include nested projects"
        required: false
        type: "array"
        items:
          type: "boolean"
        collectionFormat: "multi"
        default: "true"
        x-exportParamName: "EntitiesMigrateProjects"
      responses:
        "200":
          description: "Start a new GitLab Migration"
          schema:
            $ref: "#/definitions/API_Entities_BulkImport"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
        "503":
          description: "Service unavailable"
  /api/v4/bulk_imports/entities:
    get:
      tags:
      - "bulk_imports"
      summary: "List all GitLab Migrations' entities"
      description: "This feature was introduced in GitLab 14.1."
      operationId: "getApiV4BulkImportsEntities"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "Return GitLab Migrations sorted in created by `asc` or `desc`\
          \ order."
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Return all GitLab Migrations' entities with specified status"
        required: false
        type: "string"
        enum:
        - "created"
        - "started"
        - "finished"
        - "timeout"
        - "failed"
        - "canceled"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List all GitLab Migrations' entities"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BulkImports"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/bulk_imports/{import_id}:
    get:
      tags:
      - "bulk_imports"
      summary: "Get GitLab Migration details"
      description: "This feature was introduced in GitLab 14.1."
      operationId: "getApiV4BulkImportsImportId"
      produces:
      - "application/json"
      parameters:
      - name: "import_id"
        in: "path"
        description: "The ID of user's GitLab Migration"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ImportId"
      responses:
        "200":
          description: "Get GitLab Migration details"
          schema:
            $ref: "#/definitions/API_Entities_BulkImport"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/bulk_imports/{import_id}/entities:
    get:
      tags:
      - "bulk_imports"
      summary: "List GitLab Migration entities"
      description: "This feature was introduced in GitLab 14.1."
      operationId: "getApiV4BulkImportsImportIdEntities"
      produces:
      - "application/json"
      parameters:
      - name: "import_id"
        in: "path"
        description: "The ID of user's GitLab Migration"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ImportId"
      - name: "status"
        in: "query"
        description: "Return import entities with specified status"
        required: false
        type: "string"
        enum:
        - "created"
        - "started"
        - "finished"
        - "timeout"
        - "failed"
        - "canceled"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List GitLab Migration entities"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BulkImports"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/bulk_imports/{import_id}/entities/{entity_id}:
    get:
      tags:
      - "bulk_imports"
      summary: "Get GitLab Migration entity details"
      description: "This feature was introduced in GitLab 14.1."
      operationId: "getApiV4BulkImportsImportIdEntitiesEntityId"
      produces:
      - "application/json"
      parameters:
      - name: "import_id"
        in: "path"
        description: "The ID of user's GitLab Migration"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ImportId"
      - name: "entity_id"
        in: "path"
        description: "The ID of GitLab Migration entity"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EntityId"
      responses:
        "200":
          description: "Get GitLab Migration entity details"
          schema:
            $ref: "#/definitions/API_Entities_BulkImports"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/bulk_imports/{import_id}/entities/{entity_id}/failures:
    get:
      tags:
      - "bulk_imports"
      summary: "Get GitLab Migration entity failures"
      description: "This feature was introduced in GitLab 16.6"
      operationId: "getApiV4BulkImportsImportIdEntitiesEntityIdFailures"
      produces:
      - "application/json"
      parameters:
      - name: "import_id"
        in: "path"
        description: "The ID of user's GitLab Migration"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ImportId"
      - name: "entity_id"
        in: "path"
        description: "The ID of GitLab Migration entity"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EntityId"
      responses:
        "200":
          description: "Get GitLab Migration entity failures"
          schema:
            $ref: "#/definitions/API_Entities_BulkImports_EntityFailure"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/bulk_imports/{import_id}/cancel:
    post:
      tags:
      - "bulk_imports"
      summary: "Cancel GitLab Migration"
      description: "This feature was introduced in GitLab 17.1"
      operationId: "postApiV4BulkImportsImportIdCancel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "import_id"
        in: "path"
        description: "The ID of user's GitLab Migration"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ImportId"
      responses:
        "200":
          description: "Cancel GitLab Migration"
          schema:
            $ref: "#/definitions/API_Entities_BulkImport"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/job:
    get:
      tags:
      - "job"
      description: "Get current job using job token"
      operationId: "getApiV4Job"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get current job using job token"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Job"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/job/allowed_agents:
    get:
      tags:
      - "job"
      summary: "Get current agents"
      description: "Retrieves a list of agents for the given job token"
      operationId: "getApiV4JobAllowedAgents"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get current agents"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Job"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
  /api/v4/runners:
    get:
      tags:
      - "runners"
      summary: "List owned runners"
      description: "Get runners available for user"
      operationId: "getApiV4Runners"
      produces:
      - "application/json"
      parameters:
      - name: "scope"
        in: "query"
        description: "Deprecated: Use `type` or `status` instead. The scope of runners\
          \ to return"
        required: false
        type: "string"
        enum:
        - "specific"
        - "shared"
        - "instance_type"
        - "group_type"
        - "project_type"
        - "active"
        - "paused"
        - "online"
        - "offline"
        - "never_contacted"
        - "stale"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "The type of runners to return"
        required: false
        type: "string"
        enum:
        - "instance_type"
        - "group_type"
        - "project_type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "paused"
        in: "query"
        description: "Whether to include only runners that are accepting or ignoring\
          \ new jobs"
        required: false
        type: "boolean"
        x-exportParamName: "Paused"
        x-optionalDataType: "Bool"
      - name: "status"
        in: "query"
        description: "The status of runners to return"
        required: false
        type: "string"
        enum:
        - "active"
        - "paused"
        - "online"
        - "offline"
        - "never_contacted"
        - "stale"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "tag_list"
        in: "query"
        description: "A list of runner tags"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TagList"
      - name: "version_prefix"
        in: "query"
        description: "The version prefix of runners to return"
        required: false
        type: "string"
        x-exportParamName: "VersionPrefix"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get runners available for user"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Runner"
        "400":
          description: "Scope contains invalid value"
        "401":
          description: "Unauthorized"
    post:
      tags:
      - "runners"
      summary: "Register a new runner"
      description: "Register a new runner for the instance"
      operationId: "postApiV4Runners"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4Runners"
        required: true
        schema:
          $ref: "#/definitions/postApiV4Runners"
        x-exportParamName: "PostApiV4Runners"
      responses:
        "201":
          description: "Register a new runner"
          schema:
            $ref: "#/definitions/API_Entities_Ci_RunnerRegistrationDetails"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "410":
          description: "Gone"
    delete:
      tags:
      - "runners"
      summary: "Delete a runner by authentication token"
      description: "Delete a registered runner"
      operationId: "deleteApiV4Runners"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "query"
        description: "The runner's authentication token"
        required: true
        type: "string"
        x-exportParamName: "Token"
      responses:
        "204":
          description: "Delete a registered runner"
        "403":
          description: "Forbidden"
  /api/v4/runners/managers:
    delete:
      tags:
      - "runners"
      summary: "Internal endpoint that deletes a runner manager by authentication\
        \ token and system ID."
      description: "Delete a registered runner manager"
      operationId: "deleteApiV4RunnersManagers"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "query"
        description: "The runner's authentication token"
        required: true
        type: "string"
        x-exportParamName: "Token"
      - name: "system_id"
        in: "query"
        description: "The runner's system identifier."
        required: true
        type: "string"
        x-exportParamName: "SystemId"
      responses:
        "204":
          description: "Runner manager was deleted"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/runners/verify:
    post:
      tags:
      - "runners"
      summary: "Verify authentication for a registered runner"
      description: "Validate authentication credentials"
      operationId: "postApiV4RunnersVerify"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4RunnersVerify"
        required: true
        schema:
          $ref: "#/definitions/postApiV4RunnersVerify"
        x-exportParamName: "PostApiV4RunnersVerify"
      responses:
        "200":
          description: "Credentials are valid"
        "403":
          description: "Forbidden"
  /api/v4/runners/reset_authentication_token:
    post:
      tags:
      - "runners"
      description: "Reset runner authentication token with current token"
      operationId: "postApiV4RunnersResetAuthenticationToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4RunnersResetAuthenticationToken"
        required: true
        schema:
          $ref: "#/definitions/postApiV4RunnersResetAuthenticationToken"
        x-exportParamName: "PostApiV4RunnersResetAuthenticationToken"
      responses:
        "201":
          description: "Reset runner authentication token with current token"
          schema:
            $ref: "#/definitions/API_Entities_Ci_ResetTokenResult"
        "403":
          description: "Forbidden"
  /api/v4/runners/all:
    get:
      tags:
      - "runners"
      summary: "List all runners"
      description: "Get a list of all runners in the GitLab instance (shared and project).\
        \ Access is restricted to users with administrator access."
      operationId: "getApiV4RunnersAll"
      produces:
      - "application/json"
      parameters:
      - name: "scope"
        in: "query"
        description: "Deprecated: Use `type` or `status` instead. The scope of runners\
          \ to return"
        required: false
        type: "string"
        enum:
        - "specific"
        - "shared"
        - "instance_type"
        - "group_type"
        - "project_type"
        - "active"
        - "paused"
        - "online"
        - "offline"
        - "never_contacted"
        - "stale"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "The type of runners to return"
        required: false
        type: "string"
        enum:
        - "instance_type"
        - "group_type"
        - "project_type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "paused"
        in: "query"
        description: "Whether to include only runners that are accepting or ignoring\
          \ new jobs"
        required: false
        type: "boolean"
        x-exportParamName: "Paused"
        x-optionalDataType: "Bool"
      - name: "status"
        in: "query"
        description: "The status of runners to return"
        required: false
        type: "string"
        enum:
        - "active"
        - "paused"
        - "online"
        - "offline"
        - "never_contacted"
        - "stale"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "tag_list"
        in: "query"
        description: "A list of runner tags"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TagList"
      - name: "version_prefix"
        in: "query"
        description: "The version prefix of runners to return"
        required: false
        type: "string"
        x-exportParamName: "VersionPrefix"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get all runners - shared and project"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Runner"
        "400":
          description: "Scope contains invalid value"
        "401":
          description: "Unauthorized"
  /api/v4/runners/{id}:
    get:
      tags:
      - "runners"
      summary: "Get runner's details"
      description: "At least the Maintainer role is required to get runner details\
        \ at the project and group level. Instance-level runner details via this endpoint\
        \ are available to all signed in users."
      operationId: "getApiV4RunnersId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a runner"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get runner's details"
          schema:
            $ref: "#/definitions/API_Entities_Ci_RunnerDetails"
        "401":
          description: "Unauthorized"
        "403":
          description: "No access granted"
        "404":
          description: "Runner not found"
    put:
      tags:
      - "runners"
      summary: "Update details of a runner"
      description: "Update runner's details"
      operationId: "putApiV4RunnersId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a runner"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4RunnersId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4RunnersId"
        x-exportParamName: "PutApiV4RunnersId"
      responses:
        "200":
          description: "Update runner's details"
          schema:
            $ref: "#/definitions/API_Entities_Ci_RunnerDetails"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "No access granted"
        "404":
          description: "Runner not found"
    delete:
      tags:
      - "runners"
      summary: "Delete a runner"
      description: "Remove a runner"
      operationId: "deleteApiV4RunnersId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a runner"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Remove a runner"
          schema:
            $ref: "#/definitions/API_Entities_Ci_Runner"
        "401":
          description: "Unauthorized"
        "403":
          description: "No access granted"
        "404":
          description: "Runner not found"
        "412":
          description: "Precondition Failed"
  /api/v4/runners/{id}/jobs:
    get:
      tags:
      - "runners"
      - "jobs"
      summary: "List runner's jobs"
      description: "List jobs that are being processed or were processed by the specified\
        \ runner. The list of jobs is limited to projects where the user has at least\
        \ the Reporter role."
      operationId: "getApiV4RunnersIdJobs"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a runner"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "system_id"
        in: "query"
        description: "System ID associated with the runner manager"
        required: false
        type: "string"
        x-exportParamName: "SystemId"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Status of the job"
        required: false
        type: "string"
        enum:
        - "created"
        - "waiting_for_resource"
        - "preparing"
        - "waiting_for_callback"
        - "pending"
        - "running"
        - "success"
        - "failed"
        - "canceling"
        - "canceled"
        - "skipped"
        - "manual"
        - "scheduled"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "order_by"
        in: "query"
        description: "Order by `id`"
        required: false
        type: "string"
        enum:
        - "id"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Sort by `asc` or `desc` order. Specify `order_by` as well, including\
          \ for `id`"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "cursor"
        in: "query"
        description: "Cursor for obtaining the next set of records"
        required: false
        type: "string"
        x-exportParamName: "Cursor"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List jobs running on a runner"
          schema:
            $ref: "#/definitions/API_Entities_Ci_JobBasicWithProject"
        "401":
          description: "Unauthorized"
        "403":
          description: "No access granted"
        "404":
          description: "Runner not found"
  /api/v4/runners/{id}/reset_authentication_token:
    post:
      tags:
      - "runners"
      summary: "Reset runner's authentication token"
      description: "Reset runner authentication token"
      operationId: "postApiV4RunnersIdResetAuthenticationToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the runner"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Reset runner authentication token"
          schema:
            $ref: "#/definitions/API_Entities_Ci_ResetTokenResult"
        "403":
          description: "No access granted"
        "404":
          description: "Runner not found"
  /api/v4/runners/reset_registration_token:
    post:
      tags:
      - "runners"
      - "groups"
      summary: "Reset instance's runner registration token"
      description: "Reset runner registration token"
      operationId: "postApiV4RunnersResetRegistrationToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "201":
          description: "Reset runner registration token"
          schema:
            $ref: "#/definitions/API_Entities_Ci_ResetTokenResult"
        "403":
          description: "Forbidden"
  /api/v4/jobs/request:
    post:
      tags:
      - "jobs"
      description: "Request a job"
      operationId: "postApiV4JobsRequest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4JobsRequest"
        required: true
        schema:
          $ref: "#/definitions/postApiV4JobsRequest"
        x-exportParamName: "PostApiV4JobsRequest"
      responses:
        "201":
          description: "Job was scheduled"
        "204":
          description: "No job for Runner"
        "403":
          description: "Forbidden"
        "409":
          description: "Conflict"
  /api/v4/jobs/{id}:
    put:
      tags:
      - "jobs"
      description: "Update a job"
      operationId: "putApiV4JobsId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job's ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4JobsId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4JobsId"
        x-exportParamName: "PutApiV4JobsId"
      responses:
        "200":
          description: "Job was updated"
        "202":
          description: "Update accepted"
        "400":
          description: "Unknown parameters"
        "403":
          description: "Forbidden"
  /api/v4/jobs/{id}/trace:
    patch:
      tags:
      - "jobs"
      description: "Append a patch to the job trace"
      operationId: "patchApiV4JobsIdTrace"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job's ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "patchApiV4JobsIdTrace"
        required: true
        schema:
          $ref: "#/definitions/patchApiV4JobsIdTrace"
        x-exportParamName: "PatchApiV4JobsIdTrace"
      responses:
        "202":
          description: "Trace was patched"
        "400":
          description: "Missing Content-Range header"
        "403":
          description: "Forbidden"
        "416":
          description: "Range not satisfiable"
  /api/v4/jobs/{id}/artifacts/authorize:
    post:
      tags:
      - "jobs"
      description: "Authorize uploading job artifact"
      operationId: "postApiV4JobsIdArtifactsAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job's ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4JobsIdArtifactsAuthorize"
        required: true
        schema:
          $ref: "#/definitions/postApiV4JobsIdArtifactsAuthorize"
        x-exportParamName: "PostApiV4JobsIdArtifactsAuthorize"
      responses:
        "200":
          description: "Upload allowed"
        "403":
          description: "Forbidden"
        "405":
          description: "Artifacts support not enabled"
        "413":
          description: "File too large"
  /api/v4/jobs/{id}/artifacts:
    get:
      tags:
      - "jobs"
      description: "Download the artifacts file for job"
      operationId: "getApiV4JobsIdArtifacts"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job's ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "token"
        in: "query"
        description: "Job's authentication token"
        required: false
        type: "string"
        x-exportParamName: "Token"
        x-optionalDataType: "String"
      - name: "direct_download"
        in: "query"
        description: "Perform direct download from remote storage instead of proxying\
          \ artifacts"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "DirectDownload"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Download allowed"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Artifact not found"
    post:
      tags:
      - "jobs"
      description: "Upload a job artifact"
      operationId: "postApiV4JobsIdArtifacts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Job's ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4JobsIdArtifacts"
        required: true
        schema:
          $ref: "#/definitions/postApiV4JobsIdArtifacts"
        x-exportParamName: "PostApiV4JobsIdArtifacts"
      responses:
        "201":
          description: "Artifact uploaded"
        "400":
          description: "Bad request"
        "403":
          description: "Forbidden"
        "405":
          description: "Artifacts support not enabled"
        "413":
          description: "File too large"
  /api/v4/group/{id}/-/packages/composer/packages:
    get:
      tags:
      - "composer_packages"
      summary: "Composer packages endpoint at group level"
      description: "This feature was introduced in GitLab 13.1"
      operationId: "getApiV4GroupIdPackagesComposerPackages"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Composer packages endpoint at group level"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/group/{id}/-/packages/composer/p/{sha}:
    get:
      tags:
      - "composer_packages"
      summary: "Composer packages endpoint at group level for packages list"
      description: "This feature was introduced in GitLab 13.1"
      operationId: "getApiV4GroupIdPackagesComposerPSha"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "sha"
        in: "path"
        description: "Shasum of current json"
        required: true
        type: "string"
        x-exportParamName: "Sha"
      responses:
        "200":
          description: "Composer packages endpoint at group level for packages list"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/group/{id}/-/packages/composer/p2/*package_name:
    get:
      tags:
      - "composer_packages"
      summary: "Composer v2 packages p2 endpoint at group level for package versions\
        \ metadata"
      description: "This feature was introduced in GitLab 13.1"
      operationId: "getApiV4GroupIdPackagesComposerP2*packageName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The Composer package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "Composer v2 packages p2 endpoint at group level for package\
            \ versions metadata"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/group/{id}/-/packages/composer/*package_name:
    get:
      tags:
      - "composer_packages"
      summary: "Composer packages endpoint at group level for package versions metadata"
      description: "This feature was introduced in GitLab 12.1"
      operationId: "getApiV4GroupIdPackagesComposer*packageName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or URL-encoded path of a group"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "package_name"
        in: "query"
        description: "The Composer package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "Composer packages endpoint at group level for package versions\
            \ metadata"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/packages/conan/v1/ping:
    get:
      tags:
      - "conan_packages"
      summary: "Ping the Conan API"
      description: "This feature was introduced in GitLab 12.2"
      operationId: "getApiV4PackagesConanV1Ping"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Ping the Conan API"
        "404":
          description: "Not Found"
  /api/v4/packages/conan/v1/conans/search:
    get:
      tags:
      - "conan_packages"
      summary: "Search for packages"
      description: "This feature was introduced in GitLab 12.4"
      operationId: "getApiV4PackagesConanV1ConansSearch"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Search query"
        required: true
        type: "string"
        x-exportParamName: "Q"
      responses:
        "200":
          description: "Search for packages"
        "404":
          description: "Not Found"
  /api/v4/packages/conan/v1/users/authenticate:
    get:
      tags:
      - "conan_packages"
      summary: "Authenticate user against conan CLI"
      description: "This feature was introduced in GitLab 12.2"
      operationId: "getApiV4PackagesConanV1UsersAuthenticate"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Authenticate user against conan CLI"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  /api/v4/packages/conan/v1/users/check_credentials:
    get:
      tags:
      - "conan_packages"
      summary: "Check for valid user credentials per conan CLI"
      description: "This feature was introduced in GitLab 12.4"
      operationId: "getApiV4PackagesConanV1UsersCheckCredentials"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Check for valid user credentials per conan CLI"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  ? /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}
  : get:
      tags:
      - "conan_packages"
      summary: "Package Snapshot"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReference"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      responses:
        "200":
          description: "Package Snapshot"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanPackageSnapshot"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}:
    get:
      tags:
      - "conan_packages"
      summary: "Recipe Snapshot"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannel"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      responses:
        "200":
          description: "Recipe Snapshot"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanRecipeSnapshot"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "conan_packages"
      summary: "Delete Package"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "deleteApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannel"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      responses:
        "204":
          description: "Delete Package"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/digest
  : get:
      tags:
      - "conan_packages"
      summary: "Package Digest"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceDigest"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      responses:
        "200":
          description: "Package Digest"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanPackageManifest"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/digest:
    get:
      tags:
      - "conan_packages"
      summary: "Recipe Digest"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelDigest"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      responses:
        "200":
          description: "Recipe Digest"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanRecipeManifest"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/download_urls
  : get:
      tags:
      - "conan_packages"
      summary: "Package Download Urls"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceDownloadUrls"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      responses:
        "200":
          description: "Package Download Urls"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanPackageManifest"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/download_urls:
    get:
      tags:
      - "conan_packages"
      summary: "Recipe Download Urls"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelDownloadUrls"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      responses:
        "200":
          description: "Recipe Download Urls"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanRecipeManifest"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/upload_urls
  : post:
      tags:
      - "conan_packages"
      summary: "Package Upload Urls"
      description: "This feature was introduced in GitLab 12.4"
      operationId: "postApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelPackagesConanPackageReferenceUploadUrls"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      responses:
        "200":
          description: "Package Upload Urls"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanUploadUrls"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/upload_urls:
    post:
      tags:
      - "conan_packages"
      summary: "Recipe Upload Urls"
      description: "This feature was introduced in GitLab 12.4"
      operationId: "postApiV4PackagesConanV1ConansPackageNamePackageVersionPackageUsernamePackageChannelUploadUrls"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      responses:
        "200":
          description: "Recipe Upload Urls"
          schema:
            $ref: "#/definitions/API_Entities_ConanPackage_ConanUploadUrls"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}
  : get:
      tags:
      - "conan_packages"
      summary: "Download recipe files"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "getApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download recipe files"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    put:
      tags:
      - "conan_packages"
      summary: "Upload recipe package files"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName"
        x-exportParamName: "PutApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName"
      responses:
        "200":
          description: "Upload recipe package files"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}/authorize
  : put:
      tags:
      - "conan_packages"
      summary: "Workhorse authorize the conan recipe file"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileNameAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Workhorse authorize the conan recipe file"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}
  : get:
      tags:
      - "conan_packages"
      summary: "Download package files"
      description: "This feature was introduced in GitLab 12.5"
      operationId: "getApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan Package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      - name: "package_revision"
        in: "path"
        description: "Conan Package Revision"
        required: true
        type: "string"
        x-exportParamName: "PackageRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download package files"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    put:
      tags:
      - "conan_packages"
      summary: "Upload package files"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan Package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      - name: "package_revision"
        in: "path"
        description: "Conan Package Revision"
        required: true
        type: "string"
        x-exportParamName: "PackageRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      - in: "body"
        name: "putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName"
        required: true
        schema:
          $ref: "#/definitions/putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName"
        x-exportParamName: "PutApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName"
      responses:
        "200":
          description: "Upload package files"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  ? /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}/authorize
  : put:
      tags:
      - "conan_packages"
      summary: "Workhorse authorize the conan package file"
      description: "This feature was introduced in GitLab 12.6"
      operationId: "putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileNameAuthorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "path"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "package_version"
        in: "path"
        description: "Package version"
        required: true
        type: "string"
        x-exportParamName: "PackageVersion"
      - name: "package_username"
        in: "path"
        description: "Package username"
        required: true
        type: "string"
        x-exportParamName: "PackageUsername"
      - name: "package_channel"
        in: "path"
        description: "Package channel"
        required: true
        type: "string"
        x-exportParamName: "PackageChannel"
      - name: "recipe_revision"
        in: "path"
        description: "Conan Recipe Revision"
        required: true
        type: "string"
        x-exportParamName: "RecipeRevision"
      - name: "conan_package_reference"
        in: "path"
        description: "Conan Package ID"
        required: true
        type: "string"
        x-exportParamName: "ConanPackageReference"
      - name: "package_revision"
        in: "path"
        description: "Conan Package Revision"
        required: true
        type: "string"
        x-exportParamName: "PackageRevision"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        enum:
        - "conanfile.py"
        - "conanmanifest.txt"
        - "conan_sources.tgz"
        - "conan_export.tgz"
        - "conaninfo.txt"
        - "conan_package.tgz"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Workhorse authorize the conan package file"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/maven/*path/{file_name}:
    get:
      tags:
      - "maven_packages"
      summary: "Download the maven package file at instance level"
      description: "This feature was introduced in GitLab 11.6"
      operationId: "getApiV4PackagesMaven*pathFileName"
      produces:
      - "application/json"
      parameters:
      - name: "path"
        in: "query"
        description: "Package path"
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "file_name"
        in: "path"
        description: "Package file name"
        required: true
        type: "string"
        x-exportParamName: "FileName"
      responses:
        "200":
          description: "Download the maven package file at instance level"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/npm/-/package/*package_name/dist-tags:
    get:
      tags:
      - "npm_packages"
      summary: "Get all tags for a given an NPM package"
      description: "This feature was introduced in GitLab 12.7"
      operationId: "getApiV4PackagesNpmPackage*packageNameDistTags"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "query"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "Get all tags for a given an NPM package"
          schema:
            $ref: "#/definitions/API_Entities_NpmPackageTag"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/npm/-/package/*package_name/dist-tags/{tag}:
    put:
      tags:
      - "npm_packages"
      summary: "Create or Update the given tag for the given NPM package and version"
      description: "This feature was introduced in GitLab 12.7"
      operationId: "putApiV4PackagesNpmPackage*packageNameDistTagsTag"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "tag"
        in: "path"
        description: "Package dist-tag"
        required: true
        type: "string"
        x-exportParamName: "Tag"
      - in: "body"
        name: "putApiV4PackagesNpmPackage*packageNameDistTagsTag"
        required: true
        schema:
          $ref: "#/definitions/putApiV4PackagesNpmPackage*packageNameDistTagsTag"
        x-exportParamName: "PutApiV4PackagesNpmPackagepackageNameDistTagsTag"
      responses:
        "204":
          description: "Create or Update the given tag for the given NPM package and\
            \ version"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
    delete:
      tags:
      - "npm_packages"
      summary: "Deletes the given tag"
      description: "This feature was introduced in GitLab 12.7"
      operationId: "deleteApiV4PackagesNpmPackage*packageNameDistTagsTag"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "query"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "tag"
        in: "path"
        description: "Package dist-tag"
        required: true
        type: "string"
        x-exportParamName: "Tag"
      responses:
        "204":
          description: "Deletes the given tag"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/npm/*package_name:
    get:
      tags:
      - "npm_packages"
      summary: "NPM registry metadata endpoint"
      description: "This feature was introduced in GitLab 11.8"
      operationId: "getApiV4PackagesNpm*packageName"
      produces:
      - "application/json"
      parameters:
      - name: "package_name"
        in: "query"
        description: "Package name"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/API_Entities_NpmPackage"
        "302":
          description: "Found (redirect)"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/npm/-/npm/v1/security/advisories/bulk:
    post:
      tags:
      - "npm_packages"
      summary: "NPM registry bulk advisory endpoint"
      description: "This feature was introduced in GitLab 15.6"
      operationId: "postApiV4PackagesNpmNpmV1SecurityAdvisoriesBulk"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Ok"
        "307":
          description: "Temporary Redirect"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/npm/-/npm/v1/security/audits/quick:
    post:
      tags:
      - "npm_packages"
      summary: "NPM registry quick audit endpoint"
      description: "This feature was introduced in GitLab 15.6"
      operationId: "postApiV4PackagesNpmNpmV1SecurityAuditsQuick"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Ok"
        "307":
          description: "Temporary Redirect"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/versions:
    get:
      tags:
      - "terraform_registry"
      summary: "List versions for a module"
      description: "List versions for a module"
      operationId: "getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystemVersions"
      produces:
      - "application/json"
      parameters:
      - name: "module_namespace"
        in: "path"
        description: "Group's ID or slug"
        required: true
        type: "string"
        x-exportParamName: "ModuleNamespace"
      - name: "module_name"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_system"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ModuleSystem"
      responses:
        "200":
          description: "List versions for a module"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Terraform_ModuleVersions"
        "403":
          description: "Forbidden"
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/download:
    get:
      tags:
      - "terraform_registry"
      summary: "Get download location for the latest version of a module"
      description: "Download the latest version of a module"
      operationId: "getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystemDownload"
      produces:
      - "application/json"
      parameters:
      - name: "module_namespace"
        in: "path"
        description: "Group's ID or slug"
        required: true
        type: "string"
        x-exportParamName: "ModuleNamespace"
      - name: "module_name"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_system"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ModuleSystem"
      responses:
        "302":
          description: "Get download location for the latest version of a module"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}:
    get:
      tags:
      - "terraform_registry"
      summary: "Get details about the latest version of a module"
      description: "Get details about the latest version of a module"
      operationId: "getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystem"
      produces:
      - "application/json"
      parameters:
      - name: "module_namespace"
        in: "path"
        description: "Group's ID or slug"
        required: true
        type: "string"
        x-exportParamName: "ModuleNamespace"
      - name: "module_name"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_system"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ModuleSystem"
      responses:
        "200":
          description: "Get details about the latest version of a module"
          schema:
            $ref: "#/definitions/API_Entities_Terraform_ModuleVersion"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version/download:
    get:
      tags:
      - "terraform_registry"
      summary: "Get download location for specific version of a module"
      description: "Download specific version of a module"
      operationId: "getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystem*moduleVersionDownload"
      produces:
      - "application/json"
      parameters:
      - name: "module_namespace"
        in: "path"
        description: "Group's ID or slug"
        required: true
        type: "string"
        x-exportParamName: "ModuleNamespace"
      - name: "module_name"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_system"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ModuleSystem"
      - name: "module_version"
        in: "query"
        description: "Module version"
        required: true
        type: "string"
        x-exportParamName: "ModuleVersion"
      responses:
        "204":
          description: "Get download location for specific version of a module"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version/file:
    get:
      tags:
      - "terraform_registry"
      summary: "Download specific version of a module"
      description: "Download specific version of a module"
      operationId: "getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystem*moduleVersionFile"
      produces:
      - "application/json"
      parameters:
      - name: "module_namespace"
        in: "path"
        description: "Group's ID or slug"
        required: true
        type: "string"
        x-exportParamName: "ModuleNamespace"
      - name: "module_name"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_system"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ModuleSystem"
      - name: "module_version"
        in: "query"
        description: "Module version"
        required: true
        type: "string"
        x-exportParamName: "ModuleVersion"
      responses:
        "200":
          description: "Download specific version of a module"
          schema:
            type: "file"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version:
    get:
      tags:
      - "terraform_registry"
      summary: "Get details about specific version of a module"
      description: "Get details about specific version of a module"
      operationId: "getApiV4PackagesTerraformModulesV1ModuleNamespaceModuleNameModuleSystem*moduleVersion"
      produces:
      - "application/json"
      parameters:
      - name: "module_namespace"
        in: "path"
        description: "Group's ID or slug"
        required: true
        type: "string"
        x-exportParamName: "ModuleNamespace"
      - name: "module_name"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "ModuleName"
      - name: "module_system"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ModuleSystem"
      - name: "module_version"
        in: "query"
        description: "Module version"
        required: true
        type: "string"
        x-exportParamName: "ModuleVersion"
      responses:
        "200":
          description: "Get details about specific version of a module"
          schema:
            $ref: "#/definitions/API_Entities_Terraform_ModuleVersion"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/container_registry_event/events:
    post:
      tags:
      - "container_registry_event"
      summary: "Receives notifications from the container registry when an operation\
        \ occurs"
      description: "This feature was introduced in GitLab 12.10"
      operationId: "postApiV4ContainerRegistryEventEvents"
      consumes:
      - "application/json"
      - "application/vnd.docker.distribution.events.v1+json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Success"
        "401":
          description: "Invalid Token"
  /api/v4/registry/repositories/{id}:
    get:
      tags:
      - "container_registry"
      summary: "Get a container repository"
      description: "This feature was introduced in GitLab 13.6."
      operationId: "getApiV4RegistryRepositoriesId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the repository"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tags"
        in: "query"
        description: "Determines if tags should be included"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Tags"
        x-optionalDataType: "Bool"
      - name: "tags_count"
        in: "query"
        description: "Determines if the tags count should be included"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "TagsCount"
        x-optionalDataType: "Bool"
      - name: "size"
        in: "query"
        description: "Determines if the size should be included"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Size"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a container repository"
          schema:
            $ref: "#/definitions/API_Entities_ContainerRegistry_Repository"
        "401":
          description: "Unauthorized"
        "404":
          description: "Repository Not Found"
  /api/v4/events:
    get:
      tags:
      - "events"
      summary: "List currently authenticated user's events"
      description: "This feature was introduced in GitLab 9.3."
      operationId: "getApiV4Events"
      produces:
      - "application/json"
      parameters:
      - name: "scope"
        in: "query"
        description: "Include all events across a user’s projects"
        required: false
        type: "string"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "action"
        in: "query"
        description: "Event action to filter on"
        required: false
        type: "string"
        x-exportParamName: "Action"
        x-optionalDataType: "String"
      - name: "target_type"
        in: "query"
        description: "Event target type to filter on"
        required: false
        type: "string"
        enum:
        - "issue"
        - "milestone"
        - "merge_request"
        - "note"
        - "project"
        - "snippet"
        - "user"
        - "wiki"
        - "design"
        x-exportParamName: "TargetType"
        x-optionalDataType: "String"
      - name: "before"
        in: "query"
        description: "Include only events created before this date"
        required: false
        type: "string"
        format: "date"
        x-exportParamName: "Before"
        x-optionalDataType: "String"
      - name: "after"
        in: "query"
        description: "Include only events created after this date"
        required: false
        type: "string"
        format: "date"
        x-exportParamName: "After"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return events sorted in ascending and descending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List currently authenticated user's events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Event"
        "401":
          description: "Unauthorized"
  /api/v4/users/{id}/events:
    get:
      tags:
      - "events"
      summary: "Get the contribution events of a specified user"
      description: "This feature was introduced in GitLab 8.13."
      operationId: "getApiV4UsersIdEvents"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID or username of the user"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "action"
        in: "query"
        description: "Event action to filter on"
        required: false
        type: "string"
        x-exportParamName: "Action"
        x-optionalDataType: "String"
      - name: "target_type"
        in: "query"
        description: "Event target type to filter on"
        required: false
        type: "string"
        enum:
        - "issue"
        - "milestone"
        - "merge_request"
        - "note"
        - "project"
        - "snippet"
        - "user"
        - "wiki"
        - "design"
        x-exportParamName: "TargetType"
        x-optionalDataType: "String"
      - name: "before"
        in: "query"
        description: "Include only events created before this date"
        required: false
        type: "string"
        format: "date"
        x-exportParamName: "Before"
        x-optionalDataType: "String"
      - name: "after"
        in: "query"
        description: "Include only events created after this date"
        required: false
        type: "string"
        format: "date"
        x-exportParamName: "After"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return events sorted in ascending and descending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get the contribution events of a specified user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Event"
        "404":
          description: "Not found"
  /api/v4/users/{user_id}/projects:
    get:
      tags:
      - "projects"
      description: "Get a user projects"
      operationId: "getApiV4UsersUserIdProjects"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID or username of the user"
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "order_by"
        in: "query"
        description: "Return projects ordered by field. storage_size, repository_size,\
          \ wiki_size, packages_size are only available to admins. Similarity is available\
          \ when searching and is limited to projects the user has access to."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "id"
        - "name"
        - "path"
        - "created_at"
        - "updated_at"
        - "last_activity_at"
        - "similarity"
        - "storage_size"
        - "repository_size"
        - "wiki_size"
        - "packages_size"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return projects sorted in ascending and descending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "archived"
        in: "query"
        description: "Limit by archived status"
        required: false
        type: "boolean"
        x-exportParamName: "Archived"
        x-optionalDataType: "Bool"
      - name: "visibility"
        in: "query"
        description: "Limit by visibility"
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "Visibility"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Return list of projects matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "search_namespaces"
        in: "query"
        description: "Include ancestor namespaces when matching search criteria"
        required: false
        type: "boolean"
        x-exportParamName: "SearchNamespaces"
        x-optionalDataType: "Bool"
      - name: "owned"
        in: "query"
        description: "Limit by owned by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Owned"
        x-optionalDataType: "Bool"
      - name: "starred"
        in: "query"
        description: "Limit by starred status"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Starred"
        x-optionalDataType: "Bool"
      - name: "imported"
        in: "query"
        description: "Limit by imported by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Imported"
        x-optionalDataType: "Bool"
      - name: "membership"
        in: "query"
        description: "Limit by projects that the current user is a member of"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Membership"
        x-optionalDataType: "Bool"
      - name: "with_issues_enabled"
        in: "query"
        description: "Limit by enabled issues feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithIssuesEnabled"
        x-optionalDataType: "Bool"
      - name: "with_merge_requests_enabled"
        in: "query"
        description: "Limit by enabled merge requests feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithMergeRequestsEnabled"
        x-optionalDataType: "Bool"
      - name: "with_programming_language"
        in: "query"
        description: "Limit to repositories which use the given programming language"
        required: false
        type: "string"
        x-exportParamName: "WithProgrammingLanguage"
        x-optionalDataType: "String"
      - name: "min_access_level"
        in: "query"
        description: "Limit by minimum access level of authenticated user"
        required: false
        type: "integer"
        format: "int32"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        x-exportParamName: "MinAccessLevel"
        x-optionalDataType: "Int32"
      - name: "id_after"
        in: "query"
        description: "Limit results to projects with IDs greater than the specified\
          \ ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "IdAfter"
        x-optionalDataType: "Int32"
      - name: "id_before"
        in: "query"
        description: "Limit results to projects with IDs less than the specified ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "IdBefore"
        x-optionalDataType: "Int32"
      - name: "last_activity_after"
        in: "query"
        description: "Limit results to projects with last_activity after specified\
          \ time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastActivityAfter"
        x-optionalDataType: "Time"
      - name: "last_activity_before"
        in: "query"
        description: "Limit results to projects with last_activity before specified\
          \ time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastActivityBefore"
        x-optionalDataType: "Time"
      - name: "repository_storage"
        in: "query"
        description: "Which storage shard the repository is on. Available only to\
          \ admins"
        required: false
        type: "string"
        x-exportParamName: "RepositoryStorage"
        x-optionalDataType: "String"
      - name: "topic"
        in: "query"
        description: "Comma-separated list of topics. Limit results to projects having\
          \ all topics"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Topic"
      - name: "topic_id"
        in: "query"
        description: "Limit results to projects with the assigned topic given by the\
          \ topic ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "TopicId"
        x-optionalDataType: "Int32"
      - name: "updated_before"
        in: "query"
        description: "Return projects updated before the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "updated_after"
        in: "query"
        description: "Return projects updated after the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      - name: "include_pending_delete"
        in: "query"
        description: "Include projects in pending delete state. Can only be set by\
          \ admins"
        required: false
        type: "boolean"
        x-exportParamName: "IncludePendingDelete"
        x-optionalDataType: "Bool"
      - name: "wiki_checksum_failed"
        in: "query"
        description: "Limit by projects where wiki checksum is failed"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WikiChecksumFailed"
        x-optionalDataType: "Bool"
      - name: "repository_checksum_failed"
        in: "query"
        description: "Limit by projects where repository checksum is failed"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "RepositoryChecksumFailed"
        x-optionalDataType: "Bool"
      - name: "include_hidden"
        in: "query"
        description: "Include hidden projects. Can only be set by admins"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeHidden"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "simple"
        in: "query"
        description: "Return only the ID, URL, name, and path of each project"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Simple"
        x-optionalDataType: "Bool"
      - name: "statistics"
        in: "query"
        description: "Include project statistics"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Statistics"
        x-optionalDataType: "Bool"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a user projects"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BasicProjectDetails"
        "404":
          description: "404 User Not Found"
  /api/v4/users/{user_id}/contributed_projects:
    get:
      tags:
      - "projects"
      description: "Get projects that a user has contributed to"
      operationId: "getApiV4UsersUserIdContributedProjects"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID or username of the user"
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "order_by"
        in: "query"
        description: "Return projects ordered by field. storage_size, repository_size,\
          \ wiki_size, packages_size are only available to admins. Similarity is available\
          \ when searching and is limited to projects the user has access to."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "id"
        - "name"
        - "path"
        - "created_at"
        - "updated_at"
        - "last_activity_at"
        - "similarity"
        - "storage_size"
        - "repository_size"
        - "wiki_size"
        - "packages_size"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return projects sorted in ascending and descending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "simple"
        in: "query"
        description: "Return only the ID, URL, name, and path of each project"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Simple"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get projects that a user has contributed to"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BasicProjectDetails"
        "404":
          description: "404 User Not Found"
  /api/v4/users/{user_id}/starred_projects:
    get:
      tags:
      - "projects"
      description: "Get projects starred by a user"
      operationId: "getApiV4UsersUserIdStarredProjects"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID or username of the user"
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "order_by"
        in: "query"
        description: "Return projects ordered by field. storage_size, repository_size,\
          \ wiki_size, packages_size are only available to admins. Similarity is available\
          \ when searching and is limited to projects the user has access to."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "id"
        - "name"
        - "path"
        - "created_at"
        - "updated_at"
        - "last_activity_at"
        - "similarity"
        - "storage_size"
        - "repository_size"
        - "wiki_size"
        - "packages_size"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return projects sorted in ascending and descending order"
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "archived"
        in: "query"
        description: "Limit by archived status"
        required: false
        type: "boolean"
        x-exportParamName: "Archived"
        x-optionalDataType: "Bool"
      - name: "visibility"
        in: "query"
        description: "Limit by visibility"
        required: false
        type: "string"
        enum:
        - "private"
        - "internal"
        - "public"
        x-exportParamName: "Visibility"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Return list of projects matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "search_namespaces"
        in: "query"
        description: "Include ancestor namespaces when matching search criteria"
        required: false
        type: "boolean"
        x-exportParamName: "SearchNamespaces"
        x-optionalDataType: "Bool"
      - name: "owned"
        in: "query"
        description: "Limit by owned by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Owned"
        x-optionalDataType: "Bool"
      - name: "starred"
        in: "query"
        description: "Limit by starred status"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Starred"
        x-optionalDataType: "Bool"
      - name: "imported"
        in: "query"
        description: "Limit by imported by authenticated user"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Imported"
        x-optionalDataType: "Bool"
      - name: "membership"
        in: "query"
        description: "Limit by projects that the current user is a member of"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Membership"
        x-optionalDataType: "Bool"
      - name: "with_issues_enabled"
        in: "query"
        description: "Limit by enabled issues feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithIssuesEnabled"
        x-optionalDataType: "Bool"
      - name: "with_merge_requests_enabled"
        in: "query"
        description: "Limit by enabled merge requests feature"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithMergeRequestsEnabled"
        x-optionalDataType: "Bool"
      - name: "with_programming_language"
        in: "query"
        description: "Limit to repositories which use the given programming language"
        required: false
        type: "string"
        x-exportParamName: "WithProgrammingLanguage"
        x-optionalDataType: "String"
      - name: "min_access_level"
        in: "query"
        description: "Limit by minimum access level of authenticated user"
        required: false
        type: "integer"
        format: "int32"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        x-exportParamName: "MinAccessLevel"
        x-optionalDataType: "Int32"
      - name: "id_after"
        in: "query"
        description: "Limit results to projects with IDs greater than the specified\
          \ ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "IdAfter"
        x-optionalDataType: "Int32"
      - name: "id_before"
        in: "query"
        description: "Limit results to projects with IDs less than the specified ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "IdBefore"
        x-optionalDataType: "Int32"
      - name: "last_activity_after"
        in: "query"
        description: "Limit results to projects with last_activity after specified\
          \ time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastActivityAfter"
        x-optionalDataType: "Time"
      - name: "last_activity_before"
        in: "query"
        description: "Limit results to projects with last_activity before specified\
          \ time. Format: ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastActivityBefore"
        x-optionalDataType: "Time"
      - name: "repository_storage"
        in: "query"
        description: "Which storage shard the repository is on. Available only to\
          \ admins"
        required: false
        type: "string"
        x-exportParamName: "RepositoryStorage"
        x-optionalDataType: "String"
      - name: "topic"
        in: "query"
        description: "Comma-separated list of topics. Limit results to projects having\
          \ all topics"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Topic"
      - name: "topic_id"
        in: "query"
        description: "Limit results to projects with the assigned topic given by the\
          \ topic ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "TopicId"
        x-optionalDataType: "Int32"
      - name: "updated_before"
        in: "query"
        description: "Return projects updated before the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "updated_after"
        in: "query"
        description: "Return projects updated after the specified datetime. Format:\
          \ ISO 8601 YYYY-MM-DDTHH:MM:SSZ"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      - name: "include_pending_delete"
        in: "query"
        description: "Include projects in pending delete state. Can only be set by\
          \ admins"
        required: false
        type: "boolean"
        x-exportParamName: "IncludePendingDelete"
        x-optionalDataType: "Bool"
      - name: "wiki_checksum_failed"
        in: "query"
        description: "Limit by projects where wiki checksum is failed"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WikiChecksumFailed"
        x-optionalDataType: "Bool"
      - name: "repository_checksum_failed"
        in: "query"
        description: "Limit by projects where repository checksum is failed"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "RepositoryChecksumFailed"
        x-optionalDataType: "Bool"
      - name: "include_hidden"
        in: "query"
        description: "Include hidden projects. Can only be set by admins"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeHidden"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "simple"
        in: "query"
        description: "Return only the ID, URL, name, and path of each project"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Simple"
        x-optionalDataType: "Bool"
      - name: "statistics"
        in: "query"
        description: "Include project statistics"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Statistics"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get projects starred by a user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_BasicProjectDetails"
        "404":
          description: "404 User Not Found"
  /api/v4/users/{id}/custom_attributes:
    get:
      tags:
      - "users"
      description: "Get all custom attributes on a user"
      operationId: "getApiV4UsersIdCustomAttributes"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get all custom attributes on a user"
          schema:
            $ref: "#/definitions/API_Entities_CustomAttribute"
  /api/v4/users/{id}/custom_attributes/{key}:
    get:
      tags:
      - "users"
      description: "Get a custom attribute on a user"
      operationId: "getApiV4UsersIdCustomAttributesKey"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the custom attribute"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a custom attribute on a user"
          schema:
            $ref: "#/definitions/API_Entities_CustomAttribute"
    put:
      tags:
      - "users"
      description: "Set a custom attribute on a user"
      operationId: "putApiV4UsersIdCustomAttributesKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the custom attribute"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4UsersIdCustomAttributesKey"
        required: true
        schema:
          $ref: "#/definitions/putApiV4UsersIdCustomAttributesKey"
        x-exportParamName: "PutApiV4UsersIdCustomAttributesKey"
      responses:
        "200":
          description: "Set a custom attribute on a user"
    delete:
      tags:
      - "users"
      description: "Delete a custom attribute on a user"
      operationId: "deleteApiV4UsersIdCustomAttributesKey"
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the custom attribute"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Delete a custom attribute on a user"
  /api/v4/users:
    get:
      tags:
      - "users"
      description: "Get the list of users"
      operationId: "getApiV4Users"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "Get a single user with a specific username"
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "extern_uid"
        in: "query"
        description: "Get a single user with a specific external authentication provider\
          \ UID"
        required: false
        type: "string"
        x-exportParamName: "ExternUid"
        x-optionalDataType: "String"
      - name: "provider"
        in: "query"
        description: "The external provider"
        required: false
        type: "string"
        x-exportParamName: "Provider"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Search for a username"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "active"
        in: "query"
        description: "Filters only active users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Active"
        x-optionalDataType: "Bool"
      - name: "external"
        in: "query"
        description: "Filters only external users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "External"
        x-optionalDataType: "Bool"
      - name: "exclude_external"
        in: "query"
        description: "Filters only non external users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExcludeExternal"
        x-optionalDataType: "Bool"
      - name: "blocked"
        in: "query"
        description: "Filters only blocked users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Blocked"
        x-optionalDataType: "Bool"
      - name: "created_after"
        in: "query"
        description: "Return users created after the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Return users created before the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "without_projects"
        in: "query"
        description: "Filters only users without projects"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithoutProjects"
        x-optionalDataType: "Bool"
      - name: "exclude_internal"
        in: "query"
        description: "Filters only non internal users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExcludeInternal"
        x-optionalDataType: "Bool"
      - name: "without_project_bots"
        in: "query"
        description: "Filters users without project bots"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithoutProjectBots"
        x-optionalDataType: "Bool"
      - name: "admins"
        in: "query"
        description: "Filters only admin users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Admins"
        x-optionalDataType: "Bool"
      - name: "two_factor"
        in: "query"
        description: "Filter users by Two-factor authentication."
        required: false
        type: "string"
        x-exportParamName: "TwoFactor"
        x-optionalDataType: "String"
      - name: "order_by"
        in: "query"
        description: "Return users ordered by a field"
        required: false
        type: "string"
        enum:
        - "id"
        - "name"
        - "username"
        - "created_at"
        - "updated_at"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Return users sorted in ascending and descending order"
        required: false
        type: "string"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      - name: "skip_ldap"
        in: "query"
        description: "Skip LDAP users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "SkipLdap"
        x-optionalDataType: "Bool"
      - name: "saml_provider_id"
        in: "query"
        description: "Return only users from the specified SAML provider Id"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SamlProviderId"
        x-optionalDataType: "Int32"
      - name: "auditors"
        in: "query"
        description: "Filters only auditor users"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Auditors"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get the list of users"
          schema:
            $ref: "#/definitions/API_Entities_UserBasic"
    post:
      tags:
      - "users"
      description: "Create a user. Available only for admins."
      operationId: "postApiV4Users"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4Users"
        required: true
        schema:
          $ref: "#/definitions/postApiV4Users"
        x-exportParamName: "PostApiV4Users"
      responses:
        "201":
          description: "Create a user. Available only for admins."
          schema:
            $ref: "#/definitions/API_Entities_UserWithAdmin"
  /api/v4/users/{id}:
    get:
      tags:
      - "users"
      description: "Get a single user"
      operationId: "getApiV4UsersId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "with_custom_attributes"
        in: "query"
        description: "Include custom attributes in the response"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithCustomAttributes"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Get a single user"
          schema:
            $ref: "#/definitions/API_Entities_User"
    put:
      tags:
      - "users"
      description: "Update a user. Available only for admins."
      operationId: "putApiV4UsersId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4UsersId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4UsersId"
        x-exportParamName: "PutApiV4UsersId"
      responses:
        "200":
          description: "Update a user. Available only for admins."
          schema:
            $ref: "#/definitions/API_Entities_UserWithAdmin"
    delete:
      tags:
      - "users"
      description: "Delete a user. Available only for admins."
      operationId: "deleteApiV4UsersId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "hard_delete"
        in: "query"
        description: "Whether to remove a user's contributions"
        required: false
        type: "boolean"
        x-exportParamName: "HardDelete"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Delete a user. Available only for admins."
          schema:
            $ref: "#/definitions/API_Entities_Email"
  /api/v4/users/{user_id}/status:
    get:
      tags:
      - "users"
      description: "Get the status of a user"
      operationId: "getApiV4UsersUserIdStatus"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID or username of the user"
        required: true
        type: "string"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "Get the status of a user"
  /api/v4/users/{id}/follow:
    post:
      tags:
      - "users"
      description: "Follow a user"
      operationId: "postApiV4UsersIdFollow"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Follow a user"
          schema:
            $ref: "#/definitions/API_Entities_User"
  /api/v4/users/{id}/unfollow:
    post:
      tags:
      - "users"
      description: "Unfollow a user"
      operationId: "postApiV4UsersIdUnfollow"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Unfollow a user"
          schema:
            $ref: "#/definitions/API_Entities_User"
  /api/v4/users/{id}/following:
    get:
      tags:
      - "users"
      description: "Get the users who follow a user"
      operationId: "getApiV4UsersIdFollowing"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the users who follow a user"
          schema:
            $ref: "#/definitions/API_Entities_UserBasic"
  /api/v4/users/{id}/followers:
    get:
      tags:
      - "users"
      description: "Get the followers of a user"
      operationId: "getApiV4UsersIdFollowers"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the followers of a user"
          schema:
            $ref: "#/definitions/API_Entities_UserBasic"
  /api/v4/users/{id}/disable_two_factor:
    patch:
      tags:
      - "users"
      summary: "Disable two factor authentication for a user. Available only for admins"
      description: "This feature was added in GitLab 15.2"
      operationId: "patchApiV4UsersIdDisableTwoFactor"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Disable two factor authentication for a user. Available only\
            \ for admins"
          schema:
            $ref: "#/definitions/API_Entities_UserWithAdmin"
  /api/v4/users/{id}/identities/{provider}:
    delete:
      tags:
      - "users"
      description: "Delete a user's identity. Available only for admins"
      operationId: "deleteApiV4UsersIdIdentitiesProvider"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "provider"
        in: "path"
        description: "The external provider"
        required: true
        type: "string"
        x-exportParamName: "Provider"
      responses:
        "200":
          description: "Delete a user's identity. Available only for admins"
          schema:
            $ref: "#/definitions/API_Entities_UserWithAdmin"
  /api/v4/users/{user_id}/project_deploy_keys:
    get:
      tags:
      - "users"
      description: "Get the project-level Deploy keys that a specified user can access\
        \ to."
      operationId: "getApiV4UsersUserIdProjectDeployKeys"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID or username of the user"
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the project-level Deploy keys that a specified user can\
            \ access to."
          schema:
            $ref: "#/definitions/API_Entities_DeployKey"
  /api/v4/users/{user_id}/keys:
    get:
      tags:
      - "users"
      description: "Get the SSH keys of a specified user."
      operationId: "getApiV4UsersUserIdKeys"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID or username of the user"
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the SSH keys of a specified user."
          schema:
            $ref: "#/definitions/API_Entities_SSHKey"
    post:
      tags:
      - "users"
      description: "Add an SSH key to a specified user. Available only for admins."
      operationId: "postApiV4UsersUserIdKeys"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - in: "body"
        name: "postApiV4UsersUserIdKeys"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UsersUserIdKeys"
        x-exportParamName: "PostApiV4UsersUserIdKeys"
      responses:
        "201":
          description: "Add an SSH key to a specified user. Available only for admins."
          schema:
            $ref: "#/definitions/API_Entities_SSHKey"
  /api/v4/users/{id}/keys/{key_id}:
    get:
      tags:
      - "users"
      description: "Get a SSH key of a specified user."
      operationId: "getApiV4UsersIdKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "key_id"
        in: "path"
        description: "The ID of the SSH key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "200":
          description: "Get a SSH key of a specified user."
          schema:
            $ref: "#/definitions/API_Entities_SSHKey"
    delete:
      tags:
      - "users"
      description: "Delete an existing SSH key from a specified user. Available only\
        \ for admins."
      operationId: "deleteApiV4UsersIdKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "key_id"
        in: "path"
        description: "The ID of the SSH key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "200":
          description: "Delete an existing SSH key from a specified user. Available\
            \ only for admins."
          schema:
            $ref: "#/definitions/API_Entities_SSHKey"
  /api/v4/users/{id}/gpg_keys:
    get:
      tags:
      - "users"
      summary: "Get the GPG keys of a specified user."
      description: "This feature was added in GitLab 10.0"
      operationId: "getApiV4UsersIdGpgKeys"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the GPG keys of a specified user."
          schema:
            $ref: "#/definitions/API_Entities_GpgKey"
    post:
      tags:
      - "users"
      summary: "Add a GPG key to a specified user. Available only for admins."
      description: "This feature was added in GitLab 10.0"
      operationId: "postApiV4UsersIdGpgKeys"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4UsersIdGpgKeys"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UsersIdGpgKeys"
        x-exportParamName: "PostApiV4UsersIdGpgKeys"
      responses:
        "201":
          description: "Add a GPG key to a specified user. Available only for admins."
          schema:
            $ref: "#/definitions/API_Entities_GpgKey"
  /api/v4/users/{id}/gpg_keys/{key_id}:
    get:
      tags:
      - "users"
      summary: "Get a specific GPG key for a given user."
      description: "This feature was added in GitLab 13.5"
      operationId: "getApiV4UsersIdGpgKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "key_id"
        in: "path"
        description: "The ID of the GPG key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "200":
          description: "Get a specific GPG key for a given user."
          schema:
            $ref: "#/definitions/API_Entities_GpgKey"
    delete:
      tags:
      - "users"
      summary: "Delete an existing GPG key from a specified user. Available only for\
        \ admins."
      description: "This feature was added in GitLab 10.0"
      operationId: "deleteApiV4UsersIdGpgKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "key_id"
        in: "path"
        description: "The ID of the GPG key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "204":
          description: "Delete an existing GPG key from a specified user. Available\
            \ only for admins."
  /api/v4/users/{id}/gpg_keys/{key_id}/revoke:
    post:
      tags:
      - "users"
      summary: "Revokes an existing GPG key from a specified user. Available only\
        \ for admins."
      description: "This feature was added in GitLab 10.0"
      operationId: "postApiV4UsersIdGpgKeysKeyIdRevoke"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "key_id"
        in: "path"
        description: "The ID of the GPG key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "201":
          description: "Revokes an existing GPG key from a specified user. Available\
            \ only for admins."
  /api/v4/users/{id}/emails:
    get:
      tags:
      - "users"
      description: "Get the emails addresses of a specified user. Available only for\
        \ admins."
      operationId: "getApiV4UsersIdEmails"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the emails addresses of a specified user. Available only\
            \ for admins."
          schema:
            $ref: "#/definitions/API_Entities_Email"
    post:
      tags:
      - "users"
      description: "Add an email address to a specified user. Available only for admins."
      operationId: "postApiV4UsersIdEmails"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4UsersIdEmails"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UsersIdEmails"
        x-exportParamName: "PostApiV4UsersIdEmails"
      responses:
        "201":
          description: "Add an email address to a specified user. Available only for\
            \ admins."
          schema:
            $ref: "#/definitions/API_Entities_Email"
  /api/v4/users/{id}/emails/{email_id}:
    delete:
      tags:
      - "users"
      description: "Delete an email address of a specified user. Available only for\
        \ admins."
      operationId: "deleteApiV4UsersIdEmailsEmailId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - name: "email_id"
        in: "path"
        description: "The ID of the email"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailId"
      responses:
        "200":
          description: "Delete an email address of a specified user. Available only\
            \ for admins."
          schema:
            $ref: "#/definitions/API_Entities_Email"
  /api/v4/users/{id}/activate:
    post:
      tags:
      - "users"
      description: "Activate a deactivated user. Available only for admins."
      operationId: "postApiV4UsersIdActivate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Activate a deactivated user. Available only for admins."
  /api/v4/users/{id}/approve:
    post:
      tags:
      - "users"
      description: "Approve a pending user. Available only for admins."
      operationId: "postApiV4UsersIdApprove"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Approve a pending user. Available only for admins."
  /api/v4/users/{id}/reject:
    post:
      tags:
      - "users"
      description: "Reject a pending user. Available only for admins."
      operationId: "postApiV4UsersIdReject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Reject a pending user. Available only for admins."
  /api/v4/users/{id}/deactivate:
    post:
      tags:
      - "users"
      description: "Deactivate an active user. Available only for admins."
      operationId: "postApiV4UsersIdDeactivate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Deactivate an active user. Available only for admins."
  /api/v4/users/{id}/block:
    post:
      tags:
      - "users"
      description: "Block a user. Available only for admins."
      operationId: "postApiV4UsersIdBlock"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Block a user. Available only for admins."
  /api/v4/users/{id}/unblock:
    post:
      tags:
      - "users"
      description: "Unblock a user. Available only for admins."
      operationId: "postApiV4UsersIdUnblock"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Unblock a user. Available only for admins."
  /api/v4/users/{id}/ban:
    post:
      tags:
      - "users"
      description: "Ban a user. Available only for admins."
      operationId: "postApiV4UsersIdBan"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Ban a user. Available only for admins."
  /api/v4/users/{id}/unban:
    post:
      tags:
      - "users"
      description: "Unban a user. Available only for admins."
      operationId: "postApiV4UsersIdUnban"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Unban a user. Available only for admins."
  /api/v4/users/{user_id}/memberships:
    get:
      tags:
      - "users"
      description: "Get memberships"
      operationId: "getApiV4UsersUserIdMemberships"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - name: "type"
        in: "query"
        required: false
        type: "string"
        enum:
        - "Project"
        - "Namespace"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get memberships"
          schema:
            $ref: "#/definitions/API_Entities_Membership"
  /api/v4/users/{id}/associations_count:
    get:
      tags:
      - "users"
      description: "Returns a list of a specified user's count of projects, groups,\
        \ issues and merge requests."
      operationId: "getApiV4UsersIdAssociationsCount"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the user to query."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Returns a list of a specified user's count of projects, groups,\
            \ issues and merge requests."
  /api/v4/users/{user_id}/impersonation_tokens:
    get:
      tags:
      - "users"
      summary: "Retrieve impersonation tokens. Available only for admins."
      description: "This feature was introduced in GitLab 9.0"
      operationId: "getApiV4UsersUserIdImpersonationTokens"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "state"
        in: "query"
        description: "Filters (all|active|inactive) impersonation_tokens"
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "active"
        - "inactive"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Retrieve impersonation tokens. Available only for admins."
          schema:
            $ref: "#/definitions/API_Entities_ImpersonationToken"
    post:
      tags:
      - "users"
      summary: "Create a impersonation token. Available only for admins."
      description: "This feature was introduced in GitLab 9.0"
      operationId: "postApiV4UsersUserIdImpersonationTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - in: "body"
        name: "postApiV4UsersUserIdImpersonationTokens"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UsersUserIdImpersonationTokens"
        x-exportParamName: "PostApiV4UsersUserIdImpersonationTokens"
      responses:
        "201":
          description: "Create a impersonation token. Available only for admins."
          schema:
            $ref: "#/definitions/API_Entities_ImpersonationTokenWithToken"
  /api/v4/users/{user_id}/impersonation_tokens/{impersonation_token_id}:
    get:
      tags:
      - "users"
      summary: "Retrieve impersonation token. Available only for admins."
      description: "This feature was introduced in GitLab 9.0"
      operationId: "getApiV4UsersUserIdImpersonationTokensImpersonationTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - name: "impersonation_token_id"
        in: "path"
        description: "The ID of the impersonation token"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ImpersonationTokenId"
      responses:
        "200":
          description: "Retrieve impersonation token. Available only for admins."
          schema:
            $ref: "#/definitions/API_Entities_ImpersonationToken"
    delete:
      tags:
      - "users"
      summary: "Revoke a impersonation token. Available only for admins."
      description: "This feature was introduced in GitLab 9.0"
      operationId: "deleteApiV4UsersUserIdImpersonationTokensImpersonationTokenId"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - name: "impersonation_token_id"
        in: "path"
        description: "The ID of the impersonation token"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ImpersonationTokenId"
      responses:
        "204":
          description: "Revoke a impersonation token. Available only for admins."
  /api/v4/users/{user_id}/personal_access_tokens:
    post:
      tags:
      - "users"
      summary: "Create a personal access token. Available only for admins."
      description: "This feature was introduced in GitLab 13.6"
      operationId: "postApiV4UsersUserIdPersonalAccessTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID of the user"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
      - in: "body"
        name: "postApiV4UsersUserIdPersonalAccessTokens"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UsersUserIdPersonalAccessTokens"
        x-exportParamName: "PostApiV4UsersUserIdPersonalAccessTokens"
      responses:
        "201":
          description: "Create a personal access token. Available only for admins."
          schema:
            $ref: "#/definitions/API_Entities_PersonalAccessTokenWithToken"
  /api/v4/features:
    get:
      tags:
      - "features"
      summary: "List all features"
      description: "Get a list of all persisted features, with its gate values."
      operationId: "getApiV4Features"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "List all features"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Feature"
  /api/v4/features/definitions:
    get:
      tags:
      - "features"
      summary: "List all feature definitions"
      description: "Get a list of all feature definitions."
      operationId: "getApiV4FeaturesDefinitions"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "List all feature definitions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Feature_Definition"
  /api/v4/features/{name}:
    post:
      tags:
      - "features"
      summary: "Set or create a feature"
      description: "Set a feature's gate value. If a feature with the given name doesn't\
        \ exist yet, it's created. The value can be a boolean, or an integer to indicate\
        \ percentage of time."
      operationId: "postApiV4FeaturesName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Name"
      - in: "body"
        name: "postApiV4FeaturesName"
        required: true
        schema:
          $ref: "#/definitions/postApiV4FeaturesName"
        x-exportParamName: "PostApiV4FeaturesName"
      responses:
        "201":
          description: "Set or create a feature"
          schema:
            $ref: "#/definitions/API_Entities_Feature"
        "400":
          description: "Bad request"
    delete:
      tags:
      - "features"
      summary: "Delete a feature"
      description: "Removes a feature gate. Response is equal when the gate exists,\
        \ or doesn't."
      operationId: "deleteApiV4FeaturesName"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Name"
      responses:
        "204":
          description: "Delete a feature"
  /api/v4/geo/proxy:
    get:
      tags:
      - "geo"
      summary: "Determine if a Geo site should proxy requests"
      description: "Returns a Geo proxy response"
      operationId: "getApiV4GeoProxy"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Returns a Geo proxy response"
        "403":
          description: "Forbidden"
  /api/v4/geo/retrieve/{replicable_name}/{replicable_id}:
    get:
      tags:
      - "geo"
      summary: "Internal endpoint that returns a replicable file"
      description: "Returns a replicable file from store (via CDN or sendfile)"
      operationId: "getApiV4GeoRetrieveReplicableNameReplicableId"
      produces:
      - "application/json"
      parameters:
      - name: "replicable_name"
        in: "path"
        description: "The replicable name of a replicator instance"
        required: true
        type: "string"
        x-exportParamName: "ReplicableName"
      - name: "replicable_id"
        in: "path"
        description: "The replicable ID of a replicable instance"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReplicableId"
      responses:
        "200":
          description: "Returns a replicable file from store (via CDN or sendfile)"
        "401":
          description: "401 Unauthorized"
        "404":
          description: "404 Not found"
  /api/v4/geo/repositories/{gl_repository}/pipeline_refs:
    get:
      tags:
      - "geo"
      summary: "Used by secondary runners to verify the secondary instance has the\
        \ very latest version"
      description: "Returns the list of pipeline refs for the project"
      operationId: "getApiV4GeoRepositoriesGlRepositoryPipelineRefs"
      produces:
      - "application/json"
      parameters:
      - name: "gl_repository"
        in: "path"
        description: "The repository to check"
        required: true
        type: "string"
        x-exportParamName: "GlRepository"
      responses:
        "200":
          description: "Returns the list of pipeline refs for the project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EE_API_Entities_Geo_PipelineRefs"
        "401":
          description: "401 Unauthorized"
        "404":
          description: "404 Not found"
  /api/v4/geo/status:
    post:
      tags:
      - "geo"
      summary: "Internal endpoint that posts the current node status"
      description: "Posts the current node status to the primary site"
      operationId: "postApiV4GeoStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4GeoStatus"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GeoStatus"
        x-exportParamName: "PostApiV4GeoStatus"
      responses:
        "200":
          description: "Posts the current node status to the primary site"
          schema:
            $ref: "#/definitions/EE_API_Entities_GeoNodeStatus"
        "400":
          description: "400 Bad Request"
        "401":
          description: "401 Unauthorized"
  /api/v4/geo/proxy_git_ssh/info_refs_upload_pack:
    post:
      tags:
      - "geo"
      summary: "Internal endpoint that returns info refs upload pack for git clone/pull"
      description: "Responsible for making HTTP GET /repo.git/info/refs?service=git-upload-pack\n\
        \                  request from secondary gitlab-shell to primary"
      operationId: "postApiV4GeoProxyGitSshInfoRefsUploadPack"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4GeoProxyGitSshInfoRefsUploadPack"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GeoProxyGitSshInfoRefsUploadPack"
        x-exportParamName: "PostApiV4GeoProxyGitSshInfoRefsUploadPack"
      responses:
        "200":
          description: "Responsible for making HTTP GET /repo.git/info/refs?service=git-upload-pack\n\
            \                  request from secondary gitlab-shell to primary"
        "401":
          description: "401 Unauthorized"
  /api/v4/geo/proxy_git_ssh/upload_pack:
    post:
      tags:
      - "geo"
      summary: "Internal endpoint that posts git-upload-pack for git clone/pull"
      description: "Responsible for making HTTP POST /repo.git/git-upload-pack\n \
        \                 request from secondary gitlab-shell to primary"
      operationId: "postApiV4GeoProxyGitSshUploadPack"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4GeoProxyGitSshUploadPack"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GeoProxyGitSshUploadPack"
        x-exportParamName: "PostApiV4GeoProxyGitSshUploadPack"
      responses:
        "200":
          description: "Responsible for making HTTP POST /repo.git/git-upload-pack\n\
            \                  request from secondary gitlab-shell to primary"
        "401":
          description: "401 Unauthorized"
  /api/v4/geo/proxy_git_ssh/info_refs_receive_pack:
    post:
      tags:
      - "geo"
      summary: "Internal endpoint that returns git-received-pack output for git push"
      description: "Responsible for making HTTP GET /repo.git/info/refs?service=git-receive-pack\n\
        \                  request from secondary gitlab-shell to primary"
      operationId: "postApiV4GeoProxyGitSshInfoRefsReceivePack"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4GeoProxyGitSshInfoRefsReceivePack"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GeoProxyGitSshInfoRefsReceivePack"
        x-exportParamName: "PostApiV4GeoProxyGitSshInfoRefsReceivePack"
      responses:
        "200":
          description: "Responsible for making HTTP GET /repo.git/info/refs?service=git-receive-pack\n\
            \                  request from secondary gitlab-shell to primary"
        "401":
          description: "401 Unauthorized"
  /api/v4/geo/proxy_git_ssh/receive_pack:
    post:
      tags:
      - "geo"
      summary: "Internal endpoint that posts git-receive-pack for git push"
      description: "Responsible for making HTTP POST /repo.git/info/refs?service=git-receive-pack\n\
        \                  request from secondary gitlab-shell to primary"
      operationId: "postApiV4GeoProxyGitSshReceivePack"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4GeoProxyGitSshReceivePack"
        required: true
        schema:
          $ref: "#/definitions/postApiV4GeoProxyGitSshReceivePack"
        x-exportParamName: "PostApiV4GeoProxyGitSshReceivePack"
      responses:
        "200":
          description: "Responsible for making HTTP POST /repo.git/info/refs?service=git-receive-pack\n\
            \                  request from secondary gitlab-shell to primary"
        "401":
          description: "401 Unauthorized"
  /api/v4/geo/node_proxy/{id}/graphql:
    post:
      tags:
      - "geo"
      summary: "Query the GraphQL endpoint of an existing Geo node"
      description: "Query the GraphQL endpoint of an existing Geo node"
      operationId: "postApiV4GeoNodeProxyIdGraphql"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the Geo node"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Query the GraphQL endpoint of an existing Geo node"
        "404":
          description: "404 GeoNode Not Found"
  /api/v4/integrations/slack/events:
    post:
      tags:
      - "integrations"
      description: "Receive Slack events"
      operationId: "postApiV4IntegrationsSlackEvents"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4IntegrationsSlackEvents"
        required: true
        schema:
          $ref: "#/definitions/postApiV4IntegrationsSlackEvents"
        x-exportParamName: "PostApiV4IntegrationsSlackEvents"
      responses:
        "200":
          description: "Successfully processed event"
        "204":
          description: "Failed to process event"
        "401":
          description: "Unauthorized"
  /api/v4/integrations/slack/interactions:
    post:
      tags:
      - "integrations"
      operationId: "postApiV4IntegrationsSlackInteractions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "201":
          description: "created Interaction"
  /api/v4/integrations/slack/options:
    post:
      tags:
      - "integrations"
      operationId: "postApiV4IntegrationsSlackOptions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "201":
          description: "created Option"
  /api/v4/integrations/jira_connect/subscriptions:
    post:
      tags:
      - "jira_connect_subscriptions"
      summary: "Subscribe a namespace to a JiraConnectInstallation"
      description: "Subscribes the namespace to the JiraConnectInstallation"
      operationId: "postApiV4IntegrationsJiraConnectSubscriptions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4IntegrationsJiraConnectSubscriptions"
        required: true
        schema:
          $ref: "#/definitions/postApiV4IntegrationsJiraConnectSubscriptions"
        x-exportParamName: "PostApiV4IntegrationsJiraConnectSubscriptions"
      responses:
        "201":
          description: "Subscribe a namespace to a JiraConnectInstallation"
          schema:
            $ref: "#/definitions/API_Entities_BasicSuccess"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/keys/{id}:
    get:
      tags:
      - "keys"
      summary: "Get single ssh key by id. Only available to admin users"
      description: "Get SSH key with user by ID of an SSH key. Note only administrators\
        \ can lookup SSH key with user by ID\\\n        of an SSH key"
      operationId: "getApiV4KeysId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of an SSH key"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get single ssh key by id. Only available to admin users"
          schema:
            $ref: "#/definitions/API_Entities_SSHKeyWithUser"
  /api/v4/keys:
    get:
      tags:
      - "keys"
      summary: "Get user by fingerprint of SSH key"
      description: "You can search for a user that owns a specific SSH key. Note only\
        \ administrators can lookup SSH key\\\n        with the fingerprint of an\
        \ SSH key"
      operationId: "getApiV4Keys"
      produces:
      - "application/json"
      parameters:
      - name: "fingerprint"
        in: "query"
        description: "The fingerprint of an SSH key"
        required: true
        type: "string"
        x-exportParamName: "Fingerprint"
      responses:
        "200":
          description: "Get user by fingerprint of SSH key"
          schema:
            $ref: "#/definitions/API_Entities_UserWithAdmin"
  /api/v4/markdown:
    post:
      tags:
      - "markdown"
      summary: "Render an arbitrary Markdown document"
      description: "This feature was introduced in GitLab 11.0."
      operationId: "postApiV4Markdown"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4Markdown"
        required: true
        schema:
          $ref: "#/definitions/postApiV4Markdown"
        x-exportParamName: "PostApiV4Markdown"
      responses:
        "201":
          description: "Render an arbitrary Markdown document"
          schema:
            $ref: "#/definitions/API_Entities_Markdown"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
  /api/v4/merge_requests:
    get:
      tags:
      - "merge_requests"
      summary: "List merge requests"
      description: "Get all merge requests the authenticated user has access to. By\
        \ default it returns only merge requests created by the current user. To get\
        \ all merge requests, use parameter `scope=all`."
      operationId: "getApiV4MergeRequests"
      produces:
      - "application/json"
      parameters:
      - name: "author_id"
        in: "query"
        description: "Returns merge requests created by the given user `id`. Mutually\
          \ exclusive with `author_username`. Combine with `scope=all` or `scope=assigned_to_me`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "AuthorId"
        x-optionalDataType: "Int32"
      - name: "author_username"
        in: "query"
        description: "Returns merge requests created by the given `username`. Mutually\
          \ exclusive with `author_id`."
        required: false
        type: "string"
        x-exportParamName: "AuthorUsername"
        x-optionalDataType: "String"
      - name: "assignee_id"
        in: "query"
        description: "Returns merge requests assigned to the given user `id`. `None`\
          \ returns unassigned merge requests. `Any` returns merge requests with an\
          \ assignee."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "AssigneeId"
        x-optionalDataType: "Int32"
      - name: "assignee_username"
        in: "query"
        description: "Returns merge requests created by the given `username`. Mutually\
          \ exclusive with `author_id`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "AssigneeUsername"
      - name: "reviewer_username"
        in: "query"
        description: "Returns merge requests which have the user as a reviewer with\
          \ the given `username`. `None` returns merge requests with no reviewers.\
          \ `Any` returns merge requests with any reviewer. Mutually exclusive with\
          \ `reviewer_id`. Introduced in GitLab 13.8."
        required: false
        type: "string"
        x-exportParamName: "ReviewerUsername"
        x-optionalDataType: "String"
      - name: "labels"
        in: "query"
        description: "Returns merge requests matching a comma-separated list of labels.\
          \ `None` lists all merge requests with no labels. `Any` lists all merge\
          \ requests with at least one label. Predefined names are case-insensitive."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Labels"
      - name: "milestone"
        in: "query"
        description: "Returns merge requests for a specific milestone. `None` returns\
          \ merge requests with no milestone. `Any` returns merge requests that have\
          \ an assigned milestone."
        required: false
        type: "string"
        x-exportParamName: "Milestone"
        x-optionalDataType: "String"
      - name: "my_reaction_emoji"
        in: "query"
        description: "Returns merge requests reacted by the authenticated user by\
          \ the given `emoji`. `None` returns issues not given a reaction. `Any` returns\
          \ issues given at least one reaction."
        required: false
        type: "string"
        x-exportParamName: "MyReactionEmoji"
        x-optionalDataType: "String"
      - name: "reviewer_id"
        in: "query"
        description: "Returns merge requests which have the user as a reviewer with\
          \ the given user `id`. `None` returns merge requests with no reviewers.\
          \ `Any` returns merge requests with any reviewer. Mutually exclusive with\
          \ `reviewer_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ReviewerId"
        x-optionalDataType: "Int32"
      - name: "state"
        in: "query"
        description: "Returns `all` merge requests or just those that are `opened`,\
          \ `closed`, `locked`, or `merged`."
        required: false
        type: "string"
        default: "all"
        enum:
        - "opened"
        - "closed"
        - "locked"
        - "merged"
        - "all"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "order_by"
        in: "query"
        description: "Returns merge requests ordered by `created_at`, `label_priority`,\
          \ `milestone_due`, `popularity`, `priority`, `title` or `updated_at` fields.\
          \ Introduced in GitLab 14.8."
        required: false
        type: "string"
        default: "created_at"
        enum:
        - "created_at"
        - "label_priority"
        - "milestone_due"
        - "popularity"
        - "priority"
        - "title"
        - "updated_at"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Returns merge requests sorted in `asc` or `desc` order."
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "with_labels_details"
        in: "query"
        description: "If `true`, response returns more details for each label in labels\
          \ field: `:name`,`:color`, `:description`, `:description_html`, `:text_color`"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithLabelsDetails"
        x-optionalDataType: "Bool"
      - name: "with_merge_status_recheck"
        in: "query"
        description: "If `true`, this projection requests (but does not guarantee)\
          \ that the `merge_status` field be recalculated asynchronously. Introduced\
          \ in GitLab 13.0."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithMergeStatusRecheck"
        x-optionalDataType: "Bool"
      - name: "created_after"
        in: "query"
        description: "Returns merge requests created on or after the given time. Expected\
          \ in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Returns merge requests created on or before the given time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "updated_after"
        in: "query"
        description: "Returns merge requests updated on or after the given time. Expected\
          \ in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedAfter"
        x-optionalDataType: "Time"
      - name: "updated_before"
        in: "query"
        description: "Returns merge requests updated on or before the given time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedBefore"
        x-optionalDataType: "Time"
      - name: "view"
        in: "query"
        description: "If simple, returns the `iid`, URL, title, description, and basic\
          \ state of merge request"
        required: false
        type: "string"
        enum:
        - "simple"
        x-exportParamName: "View"
        x-optionalDataType: "String"
      - name: "scope"
        in: "query"
        description: "Returns merge requests for the given scope: `created_by_me`,\
          \ `assigned_to_me` or `all`"
        required: false
        type: "string"
        default: "created_by_me"
        enum:
        - "created-by-me"
        - "assigned-to-me"
        - "created_by_me"
        - "assigned_to_me"
        - "all"
        x-exportParamName: "Scope"
        x-optionalDataType: "String"
      - name: "source_branch"
        in: "query"
        description: "Returns merge requests with the given source branch"
        required: false
        type: "string"
        x-exportParamName: "SourceBranch"
        x-optionalDataType: "String"
      - name: "source_project_id"
        in: "query"
        description: "Returns merge requests with the given source project id"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SourceProjectId"
        x-optionalDataType: "Int32"
      - name: "target_branch"
        in: "query"
        description: "Returns merge requests with the given target branch"
        required: false
        type: "string"
        x-exportParamName: "TargetBranch"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        description: "Search merge requests against their `title` and `description`."
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "in"
        in: "query"
        description: "Modify the scope of the search attribute. `title`, `description`,\
          \ or a string joining them with comma."
        required: false
        type: "string"
        x-exportParamName: "In"
        x-optionalDataType: "String"
      - name: "wip"
        in: "query"
        description: "Filter merge requests against their `wip` status. `yes` to return\
          \ only draft merge requests, `no` to return non-draft merge requests."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Wip"
        x-optionalDataType: "String"
      - name: "not[author_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given user\
          \ `id`. Mutually exclusive with `author_username`. Combine with `scope=all`\
          \ or `scope=assigned_to_me`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotAuthorId"
        x-optionalDataType: "Int32"
      - name: "not[author_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given `username`.\
          \ Mutually exclusive with `author_id`."
        required: false
        type: "string"
        x-exportParamName: "NotAuthorUsername"
        x-optionalDataType: "String"
      - name: "not[assignee_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests assigned to the given user\
          \ `id`. `None` returns unassigned merge requests. `Any` returns merge requests\
          \ with an assignee."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotAssigneeId"
        x-optionalDataType: "Int32"
      - name: "not[assignee_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests created by the given `username`.\
          \ Mutually exclusive with `author_id`."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "NotAssigneeUsername"
      - name: "not[reviewer_username]"
        in: "query"
        description: "`<Negated>` Returns merge requests which have the user as a\
          \ reviewer with the given `username`. `None` returns merge requests with\
          \ no reviewers. `Any` returns merge requests with any reviewer. Mutually\
          \ exclusive with `reviewer_id`. Introduced in GitLab 13.8."
        required: false
        type: "string"
        x-exportParamName: "NotReviewerUsername"
        x-optionalDataType: "String"
      - name: "not[labels]"
        in: "query"
        description: "`<Negated>` Returns merge requests matching a comma-separated\
          \ list of labels. `None` lists all merge requests with no labels. `Any`\
          \ lists all merge requests with at least one label. Predefined names are\
          \ case-insensitive."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "NotLabels"
      - name: "not[milestone]"
        in: "query"
        description: "`<Negated>` Returns merge requests for a specific milestone.\
          \ `None` returns merge requests with no milestone. `Any` returns merge requests\
          \ that have an assigned milestone."
        required: false
        type: "string"
        x-exportParamName: "NotMilestone"
        x-optionalDataType: "String"
      - name: "not[my_reaction_emoji]"
        in: "query"
        description: "`<Negated>` Returns merge requests reacted by the authenticated\
          \ user by the given `emoji`. `None` returns issues not given a reaction.\
          \ `Any` returns issues given at least one reaction."
        required: false
        type: "string"
        x-exportParamName: "NotMyReactionEmoji"
        x-optionalDataType: "String"
      - name: "not[reviewer_id]"
        in: "query"
        description: "`<Negated>` Returns merge requests which have the user as a\
          \ reviewer with the given user `id`. `None` returns merge requests with\
          \ no reviewers. `Any` returns merge requests with any reviewer. Mutually\
          \ exclusive with `reviewer_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "NotReviewerId"
        x-optionalDataType: "Int32"
      - name: "deployed_before"
        in: "query"
        description: "Returns merge requests deployed before the given date/time.\
          \ Expected in ISO 8601 format."
        required: false
        type: "string"
        x-exportParamName: "DeployedBefore"
        x-optionalDataType: "String"
      - name: "deployed_after"
        in: "query"
        description: "Returns merge requests deployed after the given date/time. Expected\
          \ in ISO 8601 format"
        required: false
        type: "string"
        x-exportParamName: "DeployedAfter"
        x-optionalDataType: "String"
      - name: "environment"
        in: "query"
        description: "Returns merge requests deployed to the given environment"
        required: false
        type: "string"
        x-exportParamName: "Environment"
        x-optionalDataType: "String"
      - name: "approved"
        in: "query"
        description: "Filters merge requests by their `approved` status. `yes` returns\
          \ only approved merge requests. `no` returns only non-approved merge requests."
        required: false
        type: "string"
        enum:
        - "yes"
        - "no"
        x-exportParamName: "Approved"
        x-optionalDataType: "String"
      - name: "merge_user_id"
        in: "query"
        description: "Returns merge requests which have been merged by the user with\
          \ the given user `id`. Mutually exclusive with `merge_user_username`."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MergeUserId"
        x-optionalDataType: "Int32"
      - name: "merge_user_username"
        in: "query"
        description: "Returns merge requests which have been merged by the user with\
          \ the given `username`. Mutually exclusive with `merge_user_id`."
        required: false
        type: "string"
        x-exportParamName: "MergeUserUsername"
        x-optionalDataType: "String"
      - name: "approver_ids"
        in: "query"
        description: "Return merge requests which have specified the users with the\
          \ given IDs as an individual approver"
        required: false
        type: "string"
        x-exportParamName: "ApproverIds"
        x-optionalDataType: "String"
      - name: "approved_by_ids"
        in: "query"
        description: "Return merge requests which have been approved by the specified\
          \ users with the given IDs"
        required: false
        type: "string"
        x-exportParamName: "ApprovedByIds"
        x-optionalDataType: "String"
      - name: "approved_by_usernames"
        in: "query"
        description: "Return merge requests which have been approved by the specified\
          \ users with the given\n            usernames"
        required: false
        type: "string"
        x-exportParamName: "ApprovedByUsernames"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List merge requests"
          schema:
            $ref: "#/definitions/API_Entities_MergeRequestBasic"
        "401":
          description: "Unauthorized"
        "422":
          description: "Unprocessable entity"
  /api/v4/namespaces/{id}:
    get:
      tags:
      - "namespaces"
      summary: "Get namespace by ID"
      description: "Get a namespace by ID"
      operationId: "getApiV4NamespacesId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID or URL-encoded path of the namespace"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get namespace by ID"
          schema:
            $ref: "#/definitions/API_Entities_Namespace"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    put:
      tags:
      - "namespaces"
      description: "Update a namespace"
      operationId: "putApiV4NamespacesId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4NamespacesId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4NamespacesId"
        x-exportParamName: "PutApiV4NamespacesId"
      responses:
        "200":
          description: "Update a namespace"
          schema:
            $ref: "#/definitions/API_Entities_Namespace"
  /api/v4/namespaces/{id}/gitlab_subscription:
    get:
      tags:
      - "namespaces"
      description: "Returns the subscription for the namespace"
      operationId: "getApiV4NamespacesIdGitlabSubscription"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Returns the subscription for the namespace"
          schema:
            $ref: "#/definitions/API_Entities_GitlabSubscription"
    post:
      tags:
      - "namespaces"
      description: "Create a subscription for the namespace"
      operationId: "postApiV4NamespacesIdGitlabSubscription"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4NamespacesIdGitlabSubscription"
        required: true
        schema:
          $ref: "#/definitions/postApiV4NamespacesIdGitlabSubscription"
        x-exportParamName: "PostApiV4NamespacesIdGitlabSubscription"
      responses:
        "201":
          description: "Create a subscription for the namespace"
          schema:
            $ref: "#/definitions/API_Entities_GitlabSubscription"
    put:
      tags:
      - "namespaces"
      description: "Update the subscription for the namespace"
      operationId: "putApiV4NamespacesIdGitlabSubscription"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4NamespacesIdGitlabSubscription"
        required: true
        schema:
          $ref: "#/definitions/putApiV4NamespacesIdGitlabSubscription"
        x-exportParamName: "PutApiV4NamespacesIdGitlabSubscription"
      responses:
        "200":
          description: "Update the subscription for the namespace"
          schema:
            $ref: "#/definitions/API_Entities_GitlabSubscription"
  /api/v4/namespaces/{id}/storage/limit_exclusion:
    post:
      tags:
      - "namespaces"
      summary: "Creates a storage limit exclusion for a Namespace"
      description: "Creates a Namespaces::Storage::LimitExclusion"
      operationId: "postApiV4NamespacesIdStorageLimitExclusion"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4NamespacesIdStorageLimitExclusion"
        required: true
        schema:
          $ref: "#/definitions/postApiV4NamespacesIdStorageLimitExclusion"
        x-exportParamName: "PostApiV4NamespacesIdStorageLimitExclusion"
      responses:
        "201":
          description: "Creates a storage limit exclusion for a Namespace"
          schema:
            $ref: "#/definitions/API_Entities_Namespaces_Storage_LimitExclusion"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "namespaces"
      summary: "Removes a storage limit exclusion for a Namespace"
      description: "Removes a Namespaces::Storage::LimitExclusion"
      operationId: "deleteApiV4NamespacesIdStorageLimitExclusion"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Removes a storage limit exclusion for a Namespace"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "422":
          description: "Unprocessable entity"
  /api/v4/namespaces/storage/limit_exclusions:
    get:
      tags:
      - "namespaces"
      summary: "Retrieve all limit exclusions"
      description: "Gets all records for namespaces that have been excluded"
      operationId: "getApiV4NamespacesStorageLimitExclusions"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Retrieve all limit exclusions"
          schema:
            $ref: "#/definitions/API_Entities_Namespaces_Storage_LimitExclusion"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
  /api/v4/namespaces:
    get:
      tags:
      - "namespaces"
      summary: "List namespaces"
      description: "Get a list of the namespaces of the authenticated user. If the\
        \ user is an administrator, a list of all namespaces in the GitLab instance\
        \ is shown."
      operationId: "getApiV4Namespaces"
      produces:
      - "application/json"
      parameters:
      - name: "search"
        in: "query"
        description: "Returns a list of namespaces the user is authorized to view\
          \ based on the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "owned_only"
        in: "query"
        description: "In GitLab 14.2 and later, returns a list of owned namespaces\
          \ only"
        required: false
        type: "boolean"
        x-exportParamName: "OwnedOnly"
        x-optionalDataType: "Bool"
      - name: "top_level_only"
        in: "query"
        description: "Only include top level namespaces"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "TopLevelOnly"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "requested_hosted_plan"
        in: "query"
        description: "Name of the hosted plan requested by the customer"
        required: false
        type: "string"
        x-exportParamName: "RequestedHostedPlan"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List namespaces"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Namespace"
        "401":
          description: "Unauthorized"
  /api/v4/namespaces/{id}/exists:
    get:
      tags:
      - "namespaces"
      summary: "Get existence of a namespace"
      description: "Get existence of a namespace by path. Suggests a new namespace\
        \ path that does not already exist."
      operationId: "getApiV4NamespacesIdExists"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Namespace’s path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "parent_id"
        in: "query"
        description: "The ID of the parent namespace. If no ID is specified, only\
          \ top-level namespaces are considered."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "ParentId"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get existence of a namespace"
          schema:
            $ref: "#/definitions/API_Entities_NamespaceExistence"
        "401":
          description: "Unauthorized"
  /api/v4/pages/domains:
    get:
      tags:
      - "pages"
      description: "Get all pages domains"
      operationId: "getApiV4PagesDomains"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get all pages domains"
          schema:
            $ref: "#/definitions/API_Entities_PagesDomainBasic"
  /api/v4/personal_access_tokens/self:
    get:
      tags:
      - "personal_access_tokens"
      summary: "Get single personal access token"
      description: "Get the details of a personal access token by passing it to the\
        \ API in a header"
      operationId: "getApiV4PersonalAccessTokensSelf"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get single personal access token"
          schema:
            $ref: "#/definitions/API_Entities_PersonalAccessToken"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "personal_access_tokens"
      summary: "Revoke a personal access token"
      description: "Revoke a personal access token by passing it to the API in a header"
      operationId: "deleteApiV4PersonalAccessTokensSelf"
      produces:
      - "application/json"
      parameters: []
      responses:
        "204":
          description: "Revoke a personal access token"
        "400":
          description: "Bad Request"
  /api/v4/personal_access_tokens/self/rotate:
    post:
      tags:
      - "personal_access_tokens"
      summary: "Rotate a personal access token"
      description: "Rotates a personal access token by passing it to the API in a\
        \ header"
      operationId: "postApiV4PersonalAccessTokensSelfRotate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4PersonalAccessTokensSelfRotate"
        required: true
        schema:
          $ref: "#/definitions/postApiV4PersonalAccessTokensSelfRotate"
        x-exportParamName: "PostApiV4PersonalAccessTokensSelfRotate"
      responses:
        "200":
          description: "Rotate a personal access token"
          schema:
            $ref: "#/definitions/API_Entities_PersonalAccessTokenWithToken"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "405":
          description: "Method not allowed"
  /api/v4/personal_access_tokens:
    get:
      tags:
      - "personal_access_tokens"
      summary: "List personal access tokens"
      description: "Get all personal access tokens the authenticated user has access\
        \ to."
      operationId: "getApiV4PersonalAccessTokens"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "query"
        description: "Filter PATs by User ID"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "UserId"
        x-optionalDataType: "Int32"
      - name: "revoked"
        in: "query"
        description: "Filter PATs where revoked state matches parameter"
        required: false
        type: "boolean"
        x-exportParamName: "Revoked"
        x-optionalDataType: "Bool"
      - name: "state"
        in: "query"
        description: "Filter PATs which are either active or not"
        required: false
        type: "string"
        enum:
        - "active"
        - "inactive"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "created_before"
        in: "query"
        description: "Filter PATs which were created before given datetime"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "created_after"
        in: "query"
        description: "Filter PATs which were created after given datetime"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "last_used_before"
        in: "query"
        description: "Filter PATs which were used before given datetime"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastUsedBefore"
        x-optionalDataType: "Time"
      - name: "last_used_after"
        in: "query"
        description: "Filter PATs which were used after given datetime"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastUsedAfter"
        x-optionalDataType: "Time"
      - name: "search"
        in: "query"
        description: "Filters PATs by its name"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List personal access tokens"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_PersonalAccessToken"
        "401":
          description: "Unauthorized"
  /api/v4/personal_access_tokens/{id}:
    get:
      tags:
      - "personal_access_tokens"
      summary: "Get single personal access token"
      description: "Get a personal access token by using the ID of the personal access\
        \ token."
      operationId: "getApiV4PersonalAccessTokensId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get single personal access token"
          schema:
            $ref: "#/definitions/API_Entities_PersonalAccessToken"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not found"
    delete:
      tags:
      - "personal_access_tokens"
      summary: "Revoke a personal access token"
      description: "Revoke a personal access token by using the ID of the personal\
        \ access token."
      operationId: "deleteApiV4PersonalAccessTokensId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Revoke a personal access token"
        "400":
          description: "Bad Request"
  /api/v4/personal_access_tokens/{id}/rotate:
    post:
      tags:
      - "personal_access_tokens"
      summary: "Rotate personal access token"
      description: "Roates a personal access token."
      operationId: "postApiV4PersonalAccessTokensIdRotate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4PersonalAccessTokensIdRotate"
        required: true
        schema:
          $ref: "#/definitions/postApiV4PersonalAccessTokensIdRotate"
        x-exportParamName: "PostApiV4PersonalAccessTokensIdRotate"
      responses:
        "201":
          description: "Rotate personal access token"
          schema:
            $ref: "#/definitions/API_Entities_PersonalAccessTokenWithToken"
  /api/v4/project_repository_storage_moves:
    get:
      tags:
      - "project_repository_storage_moves"
      summary: "Get a list of all project repository storage moves"
      description: "This feature was introduced in GitLab 13.0."
      operationId: "getApiV4ProjectRepositoryStorageMoves"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a list of all project repository storage moves"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Projects_RepositoryStorageMove"
    post:
      tags:
      - "project_repository_storage_moves"
      summary: "Schedule bulk project repository storage moves"
      description: "This feature was introduced in GitLab 13.7."
      operationId: "postApiV4ProjectRepositoryStorageMoves"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4ProjectRepositoryStorageMoves"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ProjectRepositoryStorageMoves"
        x-exportParamName: "PostApiV4ProjectRepositoryStorageMoves"
      responses:
        "202":
          description: "Schedule bulk project repository storage moves"
  /api/v4/project_repository_storage_moves/{repository_storage_move_id}:
    get:
      tags:
      - "project_repository_storage_moves"
      summary: "Get a project repository storage move"
      description: "This feature was introduced in GitLab 13.0."
      operationId: "getApiV4ProjectRepositoryStorageMovesRepositoryStorageMoveId"
      produces:
      - "application/json"
      parameters:
      - name: "repository_storage_move_id"
        in: "path"
        description: "The ID of a project repository storage move"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RepositoryStorageMoveId"
      responses:
        "200":
          description: "Get a project repository storage move"
          schema:
            $ref: "#/definitions/API_Entities_Projects_RepositoryStorageMove"
  /api/v4/snippets:
    get:
      tags:
      - "snippets"
      summary: "Get a snippets list for an authenticated user"
      description: "This feature was introduced in GitLab 8.15."
      operationId: "getApiV4Snippets"
      produces:
      - "application/json"
      parameters:
      - name: "created_after"
        in: "query"
        description: "Return snippets created after the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Return snippets created before the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a snippets list for an authenticated user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Snippet"
        "404":
          description: "Not found"
    post:
      tags:
      - "snippets"
      summary: "Create new snippet"
      description: "This feature was introduced in GitLab 8.15."
      operationId: "postApiV4Snippets"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4Snippets"
        required: true
        schema:
          $ref: "#/definitions/postApiV4Snippets"
        x-exportParamName: "PostApiV4Snippets"
      responses:
        "201":
          description: "Create new snippet"
          schema:
            $ref: "#/definitions/API_Entities_PersonalSnippet"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
  /api/v4/snippets/public:
    get:
      tags:
      - "snippets"
      summary: "List all public personal snippets current_user has access to"
      description: "This feature was introduced in GitLab 8.15."
      operationId: "getApiV4SnippetsPublic"
      produces:
      - "application/json"
      parameters:
      - name: "created_after"
        in: "query"
        description: "Return snippets created after the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Return snippets created before the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List all public personal snippets current_user has access\
            \ to"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_PersonalSnippet"
        "404":
          description: "Not found"
  /api/v4/snippets/all:
    get:
      tags:
      - "snippets"
      summary: "List all snippets current_user has access to"
      description: "This feature was introduced in GitLab 16.3."
      operationId: "getApiV4SnippetsAll"
      produces:
      - "application/json"
      parameters:
      - name: "created_after"
        in: "query"
        description: "Return snippets created after the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "created_before"
        in: "query"
        description: "Return snippets created before the specified time"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "repository_storage"
        in: "query"
        description: "Filter by repository storage used by the snippet"
        required: false
        type: "string"
        x-exportParamName: "RepositoryStorage"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List all snippets current_user has access to"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Snippet"
        "404":
          description: "Not found"
  /api/v4/snippets/{id}:
    get:
      tags:
      - "snippets"
      summary: "Get a single snippet"
      description: "This feature was introduced in GitLab 8.15."
      operationId: "getApiV4SnippetsId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a snippet"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a single snippet"
          schema:
            $ref: "#/definitions/API_Entities_PersonalSnippet"
        "404":
          description: "Not found"
    put:
      tags:
      - "snippets"
      summary: "Update an existing snippet"
      description: "This feature was introduced in GitLab 8.15."
      operationId: "putApiV4SnippetsId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a snippet"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4SnippetsId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4SnippetsId"
        x-exportParamName: "PutApiV4SnippetsId"
      responses:
        "200":
          description: "Update an existing snippet"
          schema:
            $ref: "#/definitions/API_Entities_PersonalSnippet"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
    delete:
      tags:
      - "snippets"
      summary: "Remove snippet"
      description: "This feature was introduced in GitLab 8.15."
      operationId: "deleteApiV4SnippetsId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a snippet"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Remove snippet"
          schema:
            $ref: "#/definitions/API_Entities_PersonalSnippet"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
  /api/v4/snippets/{id}/raw:
    get:
      tags:
      - "snippets"
      summary: "Get a raw snippet"
      description: "This feature was introduced in GitLab 8.15."
      operationId: "getApiV4SnippetsIdRaw"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a snippet"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get a raw snippet"
        "404":
          description: "Not found"
  /api/v4/snippets/{id}/files/{ref}/{file_path}/raw:
    get:
      tags:
      - "snippets"
      description: "Get raw snippet file contents from the repository"
      operationId: "getApiV4SnippetsIdFilesRefFilePathRaw"
      produces:
      - "application/json"
      parameters:
      - name: "file_path"
        in: "path"
        description: "The url encoded path to the file, e.g. lib%2Fclass%2Erb"
        required: true
        type: "string"
        x-exportParamName: "FilePath"
      - name: "ref"
        in: "path"
        description: "The name of branch, tag or commit"
        required: true
        type: "string"
        x-exportParamName: "Ref"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get raw snippet file contents from the repository"
        "404":
          description: "Not found"
  /api/v4/snippets/{id}/user_agent_detail:
    get:
      tags:
      - "snippets"
      description: "Get the user agent details for a snippet"
      operationId: "getApiV4SnippetsIdUserAgentDetail"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a snippet"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get the user agent details for a snippet"
          schema:
            $ref: "#/definitions/API_Entities_UserAgentDetail"
        "404":
          description: "Not found"
  /api/v4/snippets/{id}/repository_storage_moves:
    get:
      tags:
      - "snippets"
      summary: "Get a list of all snippets repository storage moves"
      description: "This feature was introduced in GitLab 13.8."
      operationId: "getApiV4SnippetsIdRepositoryStorageMoves"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a snippet"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a list of all snippets repository storage moves"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Snippets_RepositoryStorageMove"
    post:
      tags:
      - "snippets"
      summary: "Schedule a snippet repository storage move"
      description: "This feature was introduced in GitLab 13.8."
      operationId: "postApiV4SnippetsIdRepositoryStorageMoves"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a snippet"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "postApiV4SnippetsIdRepositoryStorageMoves"
        required: true
        schema:
          $ref: "#/definitions/postApiV4SnippetsIdRepositoryStorageMoves"
        x-exportParamName: "PostApiV4SnippetsIdRepositoryStorageMoves"
      responses:
        "201":
          description: "Schedule a snippet repository storage move"
          schema:
            $ref: "#/definitions/API_Entities_Snippets_RepositoryStorageMove"
  /api/v4/snippets/{id}/repository_storage_moves/{repository_storage_move_id}:
    get:
      tags:
      - "snippets"
      summary: "Get a snippet repository storage move"
      description: "This feature was introduced in GitLab 13.8."
      operationId: "getApiV4SnippetsIdRepositoryStorageMovesRepositoryStorageMoveId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of a snippet"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "repository_storage_move_id"
        in: "path"
        description: "The ID of a snippet repository storage move"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RepositoryStorageMoveId"
      responses:
        "200":
          description: "Get a snippet repository storage move"
          schema:
            $ref: "#/definitions/API_Entities_Snippets_RepositoryStorageMove"
  /api/v4/snippet_repository_storage_moves:
    get:
      tags:
      - "snippet_repository_storage_moves"
      summary: "Get a list of all snippet repository storage moves"
      description: "This feature was introduced in GitLab 13.8."
      operationId: "getApiV4SnippetRepositoryStorageMoves"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a list of all snippet repository storage moves"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Snippets_RepositoryStorageMove"
    post:
      tags:
      - "snippet_repository_storage_moves"
      summary: "Schedule bulk snippet repository storage moves"
      description: "This feature was introduced in GitLab 13.8."
      operationId: "postApiV4SnippetRepositoryStorageMoves"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4SnippetRepositoryStorageMoves"
        required: true
        schema:
          $ref: "#/definitions/postApiV4SnippetRepositoryStorageMoves"
        x-exportParamName: "PostApiV4SnippetRepositoryStorageMoves"
      responses:
        "202":
          description: "Schedule bulk snippet repository storage moves"
  /api/v4/snippet_repository_storage_moves/{repository_storage_move_id}:
    get:
      tags:
      - "snippet_repository_storage_moves"
      summary: "Get a snippet repository storage move"
      description: "This feature was introduced in GitLab 13.8."
      operationId: "getApiV4SnippetRepositoryStorageMovesRepositoryStorageMoveId"
      produces:
      - "application/json"
      parameters:
      - name: "repository_storage_move_id"
        in: "path"
        description: "The ID of a snippet repository storage move"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RepositoryStorageMoveId"
      responses:
        "200":
          description: "Get a snippet repository storage move"
          schema:
            $ref: "#/definitions/API_Entities_Snippets_RepositoryStorageMove"
  /api/v4/suggestions/{id}/apply:
    put:
      tags:
      - "suggestions"
      description: "Apply suggestion patch in the Merge Request it was created"
      operationId: "putApiV4SuggestionsIdApply"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the suggestion"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4SuggestionsIdApply"
        required: true
        schema:
          $ref: "#/definitions/putApiV4SuggestionsIdApply"
        x-exportParamName: "PutApiV4SuggestionsIdApply"
      responses:
        "200":
          description: "Apply suggestion patch in the Merge Request it was created"
          schema:
            $ref: "#/definitions/API_Entities_Suggestion"
  /api/v4/suggestions/batch_apply:
    put:
      tags:
      - "suggestions"
      description: "Apply multiple suggestion patches in the Merge Request where they\
        \ were created"
      operationId: "putApiV4SuggestionsBatchApply"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "putApiV4SuggestionsBatchApply"
        required: true
        schema:
          $ref: "#/definitions/putApiV4SuggestionsBatchApply"
        x-exportParamName: "PutApiV4SuggestionsBatchApply"
      responses:
        "200":
          description: "Apply multiple suggestion patches in the Merge Request where\
            \ they were created"
          schema:
            $ref: "#/definitions/API_Entities_Suggestion"
  /api/v4/hooks:
    get:
      tags:
      - "system_hooks"
      summary: "List system hooks"
      description: "Get a list of all system hooks"
      operationId: "getApiV4Hooks"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List system hooks"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_Hook"
    post:
      tags:
      - "system_hooks"
      summary: "Add new system hook"
      description: "Add a new system hook"
      operationId: "postApiV4Hooks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4Hooks"
        required: true
        schema:
          $ref: "#/definitions/postApiV4Hooks"
        x-exportParamName: "PostApiV4Hooks"
      responses:
        "201":
          description: "Add new system hook"
          schema:
            $ref: "#/definitions/API_Entities_Hook"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
  /api/v4/hooks/{hook_id}:
    get:
      tags:
      - "system_hooks"
      summary: "Get system hook"
      description: "Get a system hook by its ID. Introduced in GitLab 14.9."
      operationId: "getApiV4HooksHookId"
      produces:
      - "application/json"
      parameters:
      - name: "hook_id"
        in: "path"
        description: "The ID of the system hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      responses:
        "200":
          description: "Get system hook"
          schema:
            $ref: "#/definitions/API_Entities_Hook"
        "404":
          description: "Not found"
    post:
      tags:
      - "hooks"
      operationId: "postApiV4HooksHookId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "hook_id"
        in: "path"
        description: "The ID of the hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      responses:
        "201":
          description: "created Hook"
    put:
      tags:
      - "system_hooks"
      summary: "Edit system hook"
      description: "Edits a system hook"
      operationId: "putApiV4HooksHookId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "hook_id"
        in: "path"
        description: "The ID of the system hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      - in: "body"
        name: "putApiV4HooksHookId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4HooksHookId"
        x-exportParamName: "PutApiV4HooksHookId"
      responses:
        "200":
          description: "Edit system hook"
          schema:
            $ref: "#/definitions/API_Entities_Hook"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "422":
          description: "Unprocessable entity"
    delete:
      tags:
      - "system_hooks"
      summary: "Delete system hook"
      description: "Deletes a system hook"
      operationId: "deleteApiV4HooksHookId"
      produces:
      - "application/json"
      parameters:
      - name: "hook_id"
        in: "path"
        description: "The ID of the system hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      responses:
        "204":
          description: "Delete system hook"
          schema:
            $ref: "#/definitions/API_Entities_Hook"
        "404":
          description: "Not found"
  /api/v4/hooks/{hook_id}/url_variables/{key}:
    put:
      tags:
      - "hooks"
      description: "Set a url variable"
      operationId: "putApiV4HooksHookIdUrlVariablesKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "hook_id"
        in: "path"
        description: "The ID of the hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      - name: "key"
        in: "path"
        description: "The key of the variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      - in: "body"
        name: "putApiV4HooksHookIdUrlVariablesKey"
        required: true
        schema:
          $ref: "#/definitions/putApiV4HooksHookIdUrlVariablesKey"
        x-exportParamName: "PutApiV4HooksHookIdUrlVariablesKey"
      responses:
        "200":
          description: "Set a url variable"
    delete:
      tags:
      - "hooks"
      description: "Un-Set a url variable"
      operationId: "deleteApiV4HooksHookIdUrlVariablesKey"
      produces:
      - "application/json"
      parameters:
      - name: "hook_id"
        in: "path"
        description: "The ID of the hook"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "HookId"
      - name: "key"
        in: "path"
        description: "The key of the variable"
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        "204":
          description: "Un-Set a url variable"
  /api/v4/feature_flags/unleash/{project_id}:
    get:
      tags:
      - "feature_flags"
      operationId: "getApiV4FeatureFlagsUnleashProjectId"
      produces:
      - "application/json"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "instance_id"
        in: "query"
        description: "The instance ID of Unleash Client"
        required: false
        type: "string"
        x-exportParamName: "InstanceId"
        x-optionalDataType: "String"
      - name: "app_name"
        in: "query"
        description: "The application name of Unleash Client"
        required: false
        type: "string"
        x-exportParamName: "AppName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "get Unleash(s)"
  /api/v4/feature_flags/unleash/{project_id}/features:
    get:
      tags:
      - "unleash_api"
      description: "Get a list of features (deprecated, v2 client support)"
      operationId: "getApiV4FeatureFlagsUnleashProjectIdFeatures"
      produces:
      - "application/json"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "instance_id"
        in: "query"
        description: "The instance ID of Unleash Client"
        required: false
        type: "string"
        x-exportParamName: "InstanceId"
        x-optionalDataType: "String"
      - name: "app_name"
        in: "query"
        description: "The application name of Unleash Client"
        required: false
        type: "string"
        x-exportParamName: "AppName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get a list of features (deprecated, v2 client support)"
  /api/v4/feature_flags/unleash/{project_id}/client/features:
    get:
      tags:
      - "unleash_api"
      description: "Get a list of features"
      operationId: "getApiV4FeatureFlagsUnleashProjectIdClientFeatures"
      produces:
      - "application/json"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - name: "instance_id"
        in: "query"
        description: "The instance ID of Unleash Client"
        required: false
        type: "string"
        x-exportParamName: "InstanceId"
        x-optionalDataType: "String"
      - name: "app_name"
        in: "query"
        description: "The application name of Unleash Client"
        required: false
        type: "string"
        x-exportParamName: "AppName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get a list of features"
  /api/v4/feature_flags/unleash/{project_id}/client/register:
    post:
      tags:
      - "feature_flags"
      operationId: "postApiV4FeatureFlagsUnleashProjectIdClientRegister"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "postApiV4FeatureFlagsUnleashProjectIdClientRegister"
        required: true
        schema:
          $ref: "#/definitions/postApiV4FeatureFlagsUnleashProjectIdClientRegister"
        x-exportParamName: "PostApiV4FeatureFlagsUnleashProjectIdClientRegister"
      responses:
        "201":
          description: "created Register"
  /api/v4/feature_flags/unleash/{project_id}/client/metrics:
    post:
      tags:
      - "feature_flags"
      operationId: "postApiV4FeatureFlagsUnleashProjectIdClientMetrics"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "project_id"
        in: "path"
        description: "The ID of a project"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "postApiV4FeatureFlagsUnleashProjectIdClientMetrics"
        required: true
        schema:
          $ref: "#/definitions/postApiV4FeatureFlagsUnleashProjectIdClientMetrics"
        x-exportParamName: "PostApiV4FeatureFlagsUnleashProjectIdClientMetrics"
      responses:
        "201":
          description: "created Metric"
  /api/v4/usage_data/service_ping:
    get:
      tags:
      - "usage_data"
      summary: "Get the latest ServicePing payload"
      description: "Introduces in Gitlab 16.9. Requires Personal Access Token with\
        \ read_service_ping scope."
      operationId: "getApiV4UsageDataServicePing"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get the latest ServicePing payload"
        "401":
          description: "401 Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /api/v4/usage_data/increment_counter:
    post:
      tags:
      - "usage_data"
      summary: "Track usage data event"
      description: "This feature was introduced in GitLab 13.4."
      operationId: "postApiV4UsageDataIncrementCounter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4UsageDataIncrementCounter"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UsageDataIncrementCounter"
        x-exportParamName: "PostApiV4UsageDataIncrementCounter"
      responses:
        "200":
          description: "Track usage data event"
        "403":
          description: "Invalid CSRF token is provided"
        "404":
          description: "Not found"
  /api/v4/usage_data/increment_unique_users:
    post:
      tags:
      - "usage_data"
      description: "Track usage data event for the current user"
      operationId: "postApiV4UsageDataIncrementUniqueUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4UsageDataIncrementUniqueUsers"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UsageDataIncrementUniqueUsers"
        x-exportParamName: "PostApiV4UsageDataIncrementUniqueUsers"
      responses:
        "200":
          description: "Track usage data event for the current user"
        "403":
          description: "Invalid CSRF token is provided"
        "404":
          description: "Not found"
  /api/v4/usage_data/track_event:
    post:
      tags:
      - "usage_data"
      summary: "Track gitlab internal events"
      description: "This feature was introduced in GitLab 16.2."
      operationId: "postApiV4UsageDataTrackEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4UsageDataTrackEvent"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UsageDataTrackEvent"
        x-exportParamName: "PostApiV4UsageDataTrackEvent"
      responses:
        "200":
          description: "Track gitlab internal events"
        "403":
          description: "Invalid CSRF token is provided"
        "404":
          description: "Not found"
  /api/v4/usage_data/metric_definitions:
    get:
      tags:
      - "usage_data"
      - "metrics"
      summary: "Get a list of all metric definitions"
      description: "This feature was introduced in GitLab 13.11."
      operationId: "getApiV4UsageDataMetricDefinitions"
      produces:
      - "application/yaml"
      parameters: []
      responses:
        "200":
          description: "Get a list of all metric definitions"
        "403":
          description: "Invalid CSRF token is provided"
        "404":
          description: "Not found"
  /api/v4/usage_data/non_sql_metrics:
    get:
      tags:
      - "usage_data"
      summary: "Get Non SQL usage ping metrics"
      description: "This feature was introduced in GitLab 13.11."
      operationId: "getApiV4UsageDataNonSqlMetrics"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get Non SQL usage ping metrics"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v4/usage_data/queries:
    get:
      tags:
      - "usage_data"
      summary: "Get raw SQL queries for usage data SQL metrics"
      description: "This feature was introduced in GitLab 13.11."
      operationId: "getApiV4UsageDataQueries"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get raw SQL queries for usage data SQL metrics"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
  /api/v3/user:
    get:
      tags:
      - "user"
      description: "Get the currently authenticated user"
      operationId: "getApiV3User"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get the currently authenticated user"
          schema:
            $ref: "#/definitions/API_Entities_UserPublic"
  /api/v4/user/keys:
    get:
      tags:
      - "user"
      description: "Get the currently authenticated user's SSH keys"
      operationId: "getApiV4UserKeys"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the currently authenticated user's SSH keys"
          schema:
            $ref: "#/definitions/API_Entities_SSHKey"
    post:
      tags:
      - "user"
      description: "Add a new SSH key to the currently authenticated user"
      operationId: "postApiV4UserKeys"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4UserKeys"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UserKeys"
        x-exportParamName: "PostApiV4UserKeys"
      responses:
        "201":
          description: "Add a new SSH key to the currently authenticated user"
          schema:
            $ref: "#/definitions/API_Entities_SSHKey"
  /api/v4/user/keys/{key_id}:
    get:
      tags:
      - "user"
      description: "Get a single key owned by currently authenticated user"
      operationId: "getApiV4UserKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "key_id"
        in: "path"
        description: "The ID of the SSH key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "200":
          description: "Get a single key owned by currently authenticated user"
          schema:
            $ref: "#/definitions/API_Entities_SSHKey"
    delete:
      tags:
      - "user"
      description: "Delete an SSH key from the currently authenticated user"
      operationId: "deleteApiV4UserKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "key_id"
        in: "path"
        description: "The ID of the SSH key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "200":
          description: "Delete an SSH key from the currently authenticated user"
          schema:
            $ref: "#/definitions/API_Entities_SSHKey"
  /api/v4/user/gpg_keys:
    get:
      tags:
      - "user"
      summary: "Get the currently authenticated user's GPG keys"
      description: "This feature was added in GitLab 10.0"
      operationId: "getApiV4UserGpgKeys"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the currently authenticated user's GPG keys"
          schema:
            $ref: "#/definitions/API_Entities_GpgKey"
    post:
      tags:
      - "user"
      summary: "Add a new GPG key to the currently authenticated user"
      description: "This feature was added in GitLab 10.0"
      operationId: "postApiV4UserGpgKeys"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4UserGpgKeys"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UserGpgKeys"
        x-exportParamName: "PostApiV4UserGpgKeys"
      responses:
        "201":
          description: "Add a new GPG key to the currently authenticated user"
          schema:
            $ref: "#/definitions/API_Entities_GpgKey"
  /api/v4/user/gpg_keys/{key_id}:
    get:
      tags:
      - "user"
      summary: "Get a single GPG key owned by currently authenticated user"
      description: "This feature was added in GitLab 10.0"
      operationId: "getApiV4UserGpgKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "key_id"
        in: "path"
        description: "The ID of the GPG key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "200":
          description: "Get a single GPG key owned by currently authenticated user"
          schema:
            $ref: "#/definitions/API_Entities_GpgKey"
    delete:
      tags:
      - "user"
      summary: "Delete a GPG key from the currently authenticated user"
      description: "This feature was added in GitLab 10.0"
      operationId: "deleteApiV4UserGpgKeysKeyId"
      produces:
      - "application/json"
      parameters:
      - name: "key_id"
        in: "path"
        description: "The ID of the SSH key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "204":
          description: "Delete a GPG key from the currently authenticated user"
  /api/v4/user/gpg_keys/{key_id}/revoke:
    post:
      tags:
      - "user"
      summary: "Revoke a GPG key owned by currently authenticated user"
      description: "This feature was added in GitLab 10.0"
      operationId: "postApiV4UserGpgKeysKeyIdRevoke"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "key_id"
        in: "path"
        description: "The ID of the GPG key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "KeyId"
      responses:
        "201":
          description: "Revoke a GPG key owned by currently authenticated user"
  /api/v4/user/emails:
    get:
      tags:
      - "user"
      description: "Get the currently authenticated user's email addresses"
      operationId: "getApiV4UserEmails"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get the currently authenticated user's email addresses"
          schema:
            $ref: "#/definitions/API_Entities_Email"
    post:
      tags:
      - "user"
      description: "Add new email address to the currently authenticated user"
      operationId: "postApiV4UserEmails"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4UserEmails"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UserEmails"
        x-exportParamName: "PostApiV4UserEmails"
      responses:
        "201":
          description: "Add new email address to the currently authenticated user"
          schema:
            $ref: "#/definitions/API_Entities_Email"
  /api/v4/user/{user_id}/credit_card_validation:
    put:
      tags:
      - "user"
      description: "Update a user's credit_card_validation"
      operationId: "putApiV4UserUserIdCreditCardValidation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The ID or username of the user"
        required: true
        type: "string"
        x-exportParamName: "UserId"
      - in: "body"
        name: "putApiV4UserUserIdCreditCardValidation"
        required: true
        schema:
          $ref: "#/definitions/putApiV4UserUserIdCreditCardValidation"
        x-exportParamName: "PutApiV4UserUserIdCreditCardValidation"
      responses:
        "200":
          description: "Update a user's credit_card_validation"
          schema:
            $ref: "#/definitions/API_Entities_UserCreditCardValidations"
  /api/v4/user/preferences:
    get:
      tags:
      - "user"
      summary: "Get the current user's preferences"
      description: "This feature was introduced in GitLab 14.0."
      operationId: "getApiV4UserPreferences"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get the current user's preferences"
          schema:
            $ref: "#/definitions/API_Entities_UserPreferences"
    put:
      tags:
      - "user"
      summary: "Update the current user's preferences"
      description: "This feature was introduced in GitLab 13.10."
      operationId: "putApiV4UserPreferences"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "putApiV4UserPreferences"
        required: true
        schema:
          $ref: "#/definitions/putApiV4UserPreferences"
        x-exportParamName: "PutApiV4UserPreferences"
      responses:
        "200":
          description: "Update the current user's preferences"
          schema:
            $ref: "#/definitions/API_Entities_UserPreferences"
  /api/v4/user/emails/{email_id}:
    get:
      tags:
      - "user"
      description: "Get a single email address owned by the currently authenticated\
        \ user"
      operationId: "getApiV4UserEmailsEmailId"
      produces:
      - "application/json"
      parameters:
      - name: "email_id"
        in: "path"
        description: "The ID of the email"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailId"
      responses:
        "200":
          description: "Get a single email address owned by the currently authenticated\
            \ user"
          schema:
            $ref: "#/definitions/API_Entities_Email"
    delete:
      tags:
      - "user"
      description: "Delete an email address from the currently authenticated user"
      operationId: "deleteApiV4UserEmailsEmailId"
      produces:
      - "application/json"
      parameters:
      - name: "email_id"
        in: "path"
        description: "The ID of the email"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailId"
      responses:
        "204":
          description: "Delete an email address from the currently authenticated user"
  /api/v4/user/activities:
    get:
      tags:
      - "user"
      description: "Get a list of user activities"
      operationId: "getApiV4UserActivities"
      produces:
      - "application/json"
      parameters:
      - name: "from"
        in: "query"
        description: "Date string in the format YEAR-MONTH-DAY"
        required: false
        type: "string"
        default: "2023-11-23T21:13:09.055Z"
        format: "date-time"
        x-exportParamName: "From"
        x-optionalDataType: "Time"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get a list of user activities"
  /api/v4/user/status:
    get:
      tags:
      - "user"
      description: "get the status of the current user"
      operationId: "getApiV4UserStatus"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "get the status of the current user"
          schema:
            $ref: "#/definitions/API_Entities_UserStatus"
    put:
      tags:
      - "user"
      summary: "Set the status of the current user"
      description: "Any parameters that are not passed will be nullified."
      operationId: "putApiV4UserStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "putApiV4UserStatus"
        required: true
        schema:
          $ref: "#/definitions/putApiV4UserStatus"
        x-exportParamName: "PutApiV4UserStatus"
      responses:
        "200":
          description: "Set the status of the current user"
          schema:
            $ref: "#/definitions/API_Entities_UserStatus"
    patch:
      tags:
      - "user"
      summary: "Set the status of the current user"
      description: "Any parameters that are not passed will be ignored."
      operationId: "patchApiV4UserStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "patchApiV4UserStatus"
        required: true
        schema:
          $ref: "#/definitions/patchApiV4UserStatus"
        x-exportParamName: "PatchApiV4UserStatus"
      responses:
        "200":
          description: "Set the status of the current user"
          schema:
            $ref: "#/definitions/API_Entities_UserStatus"
  /api/v4/user/avatar:
    put:
      tags:
      - "user"
      summary: "Set the avatar of the current user"
      description: "This feature was introduced in GitLab 17.0."
      operationId: "putApiV4UserAvatar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "putApiV4UserAvatar"
        required: true
        schema:
          $ref: "#/definitions/putApiV4UserAvatar"
        x-exportParamName: "PutApiV4UserAvatar"
      responses:
        "200":
          description: "Set the avatar of the current user"
          schema:
            $ref: "#/definitions/API_Entities_Avatar"
  /api/v4/user/runners:
    post:
      tags:
      - "user"
      - "runners"
      summary: "Create a runner owned by currently authenticated user"
      description: "Create a new runner"
      operationId: "postApiV4UserRunners"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4UserRunners"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UserRunners"
        x-exportParamName: "PostApiV4UserRunners"
      responses:
        "201":
          description: "Create a runner owned by currently authenticated user"
          schema:
            $ref: "#/definitions/API_Entities_Ci_RunnerRegistrationDetails"
        "400":
          description: "Bad Request"
        "403":
          description: "Forbidden"
  /api/v4/user/personal_access_tokens:
    post:
      tags:
      - "user"
      summary: "Create a personal access token with limited scopes for the currently\
        \ authenticated user"
      description: "This feature was introduced in GitLab 16.5"
      operationId: "postApiV4UserPersonalAccessTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4UserPersonalAccessTokens"
        required: true
        schema:
          $ref: "#/definitions/postApiV4UserPersonalAccessTokens"
        x-exportParamName: "PostApiV4UserPersonalAccessTokens"
      responses:
        "201":
          description: "Create a personal access token with limited scopes for the\
            \ currently authenticated user"
          schema:
            $ref: "#/definitions/API_Entities_PersonalAccessTokenWithToken"
  /api/v4/user_counts:
    get:
      tags:
      - "user_counts"
      summary: "Return the user specific counts"
      description: "Assigned open issues, assigned MRs and pending todos count"
      operationId: "getApiV4UserCounts"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Return the user specific counts"
          schema:
            $ref: "#/definitions/API_Entities_UserCounts"
  /api/v4/application/plan_limits:
    get:
      tags:
      - "plan_limits"
      summary: "Get current plan limits"
      description: "List the current limits of a plan on the GitLab instance."
      operationId: "getApiV4ApplicationPlanLimits"
      produces:
      - "application/json"
      parameters:
      - name: "plan_name"
        in: "query"
        description: "Name of the plan to get the limits from. Default: default."
        required: false
        type: "string"
        default: "default"
        enum:
        - "default"
        - "free"
        - "bronze"
        - "silver"
        - "premium"
        - "gold"
        - "ultimate"
        - "ultimate_trial"
        - "ultimate_trial_paid_customer"
        - "premium_trial"
        - "opensource"
        x-exportParamName: "PlanName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Get current plan limits"
          schema:
            $ref: "#/definitions/API_Entities_PlanLimit"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
    put:
      tags:
      - "plan_limits"
      summary: "Change plan limits"
      description: "Modify the limits of a plan on the GitLab instance."
      operationId: "putApiV4ApplicationPlanLimits"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "putApiV4ApplicationPlanLimits"
        required: true
        schema:
          $ref: "#/definitions/putApiV4ApplicationPlanLimits"
        x-exportParamName: "PutApiV4ApplicationPlanLimits"
      responses:
        "200":
          description: "Change plan limits"
          schema:
            $ref: "#/definitions/API_Entities_PlanLimit"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
  /api/v4/application/appearance:
    get:
      tags:
      - "application"
      description: "Get the current appearance"
      operationId: "getApiV4ApplicationAppearance"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get the current appearance"
          schema:
            $ref: "#/definitions/API_Entities_Appearance"
    put:
      tags:
      - "application"
      description: "Modify appearance"
      operationId: "putApiV4ApplicationAppearance"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "title"
        in: "formData"
        description: "Instance title on the sign in / sign up page"
        required: false
        type: "string"
        x-exportParamName: "Title"
        x-optionalDataType: "String"
      - name: "description"
        in: "formData"
        description: "Markdown text shown on the sign in / sign up page"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "pwa_name"
        in: "formData"
        description: "Name of the Progressive Web App"
        required: false
        type: "string"
        x-exportParamName: "PwaName"
        x-optionalDataType: "String"
      - name: "pwa_short_name"
        in: "formData"
        description: "Optional, short name for Progressive Web App"
        required: false
        type: "string"
        x-exportParamName: "PwaShortName"
        x-optionalDataType: "String"
      - name: "pwa_description"
        in: "formData"
        description: "An explanation of what the Progressive Web App does"
        required: false
        type: "string"
        x-exportParamName: "PwaDescription"
        x-optionalDataType: "String"
      - name: "logo"
        in: "formData"
        description: "Instance image used on the sign in / sign up page"
        required: false
        type: "file"
        x-exportParamName: "Logo"
      - name: "pwa_icon"
        in: "formData"
        description: "Icon used for Progressive Web App"
        required: false
        type: "file"
        x-exportParamName: "PwaIcon"
      - name: "header_logo"
        in: "formData"
        description: "Instance image used for the main navigation bar"
        required: false
        type: "file"
        x-exportParamName: "HeaderLogo"
      - name: "favicon"
        in: "formData"
        description: "Instance favicon in .ico/.png format"
        required: false
        type: "file"
        x-exportParamName: "Favicon"
      - name: "member_guidelines"
        in: "formData"
        description: "Markdown text shown on the members page of a group or project"
        required: false
        type: "string"
        x-exportParamName: "MemberGuidelines"
        x-optionalDataType: "String"
      - name: "new_project_guidelines"
        in: "formData"
        description: "Markdown text shown on the new project page"
        required: false
        type: "string"
        x-exportParamName: "NewProjectGuidelines"
        x-optionalDataType: "String"
      - name: "profile_image_guidelines"
        in: "formData"
        description: "Markdown text shown on the profile page below Public Avatar"
        required: false
        type: "string"
        x-exportParamName: "ProfileImageGuidelines"
        x-optionalDataType: "String"
      - name: "header_message"
        in: "formData"
        description: "Message within the system header bar"
        required: false
        type: "string"
        x-exportParamName: "HeaderMessage"
        x-optionalDataType: "String"
      - name: "footer_message"
        in: "formData"
        description: "Message within the system footer bar"
        required: false
        type: "string"
        x-exportParamName: "FooterMessage"
        x-optionalDataType: "String"
      - name: "message_background_color"
        in: "formData"
        description: "Background color for the system header / footer bar"
        required: false
        type: "string"
        x-exportParamName: "MessageBackgroundColor"
        x-optionalDataType: "String"
      - name: "message_font_color"
        in: "formData"
        description: "Font color for the system header / footer bar"
        required: false
        type: "string"
        x-exportParamName: "MessageFontColor"
        x-optionalDataType: "String"
      - name: "email_header_and_footer_enabled"
        in: "formData"
        description: "Add header and footer to all outgoing emails if enabled"
        required: false
        type: "boolean"
        x-exportParamName: "EmailHeaderAndFooterEnabled"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Modify appearance"
          schema:
            $ref: "#/definitions/API_Entities_Appearance"
  /api/v4/application/statistics:
    get:
      tags:
      - "application"
      description: "Get the current application statistics"
      operationId: "getApiV4ApplicationStatistics"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get the current application statistics"
          schema:
            $ref: "#/definitions/API_Entities_ApplicationStatistics"
  /api/v4/deploy_keys:
    get:
      tags:
      - "deploy_keys"
      summary: "List all deploy keys"
      description: "Get a list of all deploy keys across all projects of the GitLab\
        \ instance. This endpoint requires administrator access and is not available\
        \ on GitLab.com."
      operationId: "getApiV4DeployKeys"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "public"
        in: "query"
        description: "Only return deploy keys that are public"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Public"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "List all deploy keys"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_DeployKey"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
  /api/v4/deploy_tokens:
    get:
      tags:
      - "deploy_tokens"
      summary: "List all deploy tokens"
      description: "Get a list of all deploy tokens across the GitLab instance. This\
        \ endpoint requires administrator access. This feature was introduced in GitLab\
        \ 12.9."
      operationId: "getApiV4DeployTokens"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "active"
        in: "query"
        description: "Limit by active status"
        required: false
        type: "boolean"
        x-exportParamName: "Active"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "List all deploy tokens"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/API_Entities_DeployToken"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
  /api/v4/import/bitbucket:
    post:
      tags:
      - "project_import_bitbucket"
      summary: "Import a BitBucket Cloud repository"
      description: "This feature was introduced in GitLab 17.0."
      operationId: "postApiV4ImportBitbucket"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4ImportBitbucket"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ImportBitbucket"
        x-exportParamName: "PostApiV4ImportBitbucket"
      responses:
        "201":
          description: "Import a BitBucket Cloud repository"
          schema:
            $ref: "#/definitions/ProjectImportEntity"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "422":
          description: "Unprocessable entity"
        "503":
          description: "Service unavailable"
  /api/v4/import/bitbucket_server:
    post:
      tags:
      - "project_import_bitbucket"
      summary: "Import a BitBucket Server repository"
      description: "This feature was introduced in GitLab 13.2."
      operationId: "postApiV4ImportBitbucketServer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4ImportBitbucketServer"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ImportBitbucketServer"
        x-exportParamName: "PostApiV4ImportBitbucketServer"
      responses:
        "201":
          description: "Import a BitBucket Server repository"
          schema:
            $ref: "#/definitions/ProjectEntity"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "422":
          description: "Unprocessable entity"
        "503":
          description: "Service unavailable"
  /api/v4/import/github:
    post:
      tags:
      - "project_import_github"
      summary: "Import a GitHub project"
      description: "This feature was introduced in GitLab 11.3.4."
      operationId: "postApiV4ImportGithub"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4ImportGithub"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ImportGithub"
        x-exportParamName: "PostApiV4ImportGithub"
      responses:
        "201":
          description: "Import a GitHub project"
          schema:
            $ref: "#/definitions/ProjectEntity"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "422":
          description: "Unprocessable entity"
        "503":
          description: "Service unavailable"
  /api/v4/import/github/cancel:
    post:
      tags:
      - "project_import_github"
      summary: "Cancel GitHub project import"
      description: "This feature was introduced in GitLab 15.5"
      operationId: "postApiV4ImportGithubCancel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4ImportGithubCancel"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ImportGithubCancel"
        x-exportParamName: "PostApiV4ImportGithubCancel"
      responses:
        "200":
          description: "Cancel GitHub project import"
          schema:
            $ref: "#/definitions/ProjectImportEntity"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/import/github/gists:
    post:
      tags:
      - "import"
      summary: "Import User Gists"
      description: "This feature was introduced in GitLab 15.8"
      operationId: "postApiV4ImportGithubGists"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4ImportGithubGists"
        required: true
        schema:
          $ref: "#/definitions/postApiV4ImportGithubGists"
        x-exportParamName: "PostApiV4ImportGithubGists"
      responses:
        "202":
          description: "Import User Gists"
        "401":
          description: "Unauthorized"
        "422":
          description: "Unprocessable Entity"
        "429":
          description: "Too Many Requests"
  /api/v4/slack/trigger:
    post:
      tags:
      - "slack"
      summary: "Trigger a global slack command"
      description: "Added in GitLab 9.4"
      operationId: "postApiV4SlackTrigger"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4SlackTrigger"
        required: true
        schema:
          $ref: "#/definitions/postApiV4SlackTrigger"
        x-exportParamName: "PostApiV4SlackTrigger"
      responses:
        "201":
          description: "Trigger a global slack command"
        "401":
          description: "Unauthorized"
  /api/v4/metadata:
    get:
      tags:
      - "metadata"
      summary: "Retrieve metadata information for this GitLab instance"
      description: "This feature was introduced in GitLab 15.2."
      operationId: "getApiV4Metadata"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Retrieve metadata information for this GitLab instance"
          schema:
            $ref: "#/definitions/API_Entities_Metadata"
        "401":
          description: "Unauthorized"
  /api/v4/version:
    get:
      tags:
      - "metadata"
      summary: "Retrieves version information for the GitLab instance"
      description: "This feature was introduced in GitLab 8.13 and deprecated in 15.5.\
        \ We recommend you instead use the Metadata API."
      operationId: "getApiV4Version"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Retrieves version information for the GitLab instance"
          schema:
            $ref: "#/definitions/API_Entities_Metadata"
        "401":
          description: "Unauthorized"
  /api/v4/web_commits/public_key:
    get:
      tags:
      - "web_commits"
      summary: "Get the GitLab public key for signing web commits."
      description: "This feature was introduced in GitLab 17.4."
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Get the GitLab public key for signing web commits."
          schema:
            $ref: "#/definitions/API_Entities_Web_Commits"
        "404":
          description: "Not found"
        "503":
          description: "Service unavailable"
  /api/v4/topics:
    get:
      tags:
      - "topics"
      summary: "Get topics"
      description: "This feature was introduced in GitLab 14.5."
      operationId: "getApiV4Topics"
      produces:
      - "application/json"
      parameters:
      - name: "search"
        in: "query"
        description: "Return list of topics matching the search criteria"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "without_projects"
        in: "query"
        description: "Return list of topics without assigned projects"
        required: false
        type: "boolean"
        x-exportParamName: "WithoutProjects"
        x-optionalDataType: "Bool"
      - name: "page"
        in: "query"
        description: "Current page number"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "per_page"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Get topics"
          schema:
            $ref: "#/definitions/API_Entities_Projects_Topic"
    post:
      tags:
      - "topics"
      summary: "Create a topic"
      description: "This feature was introduced in GitLab 14.5."
      operationId: "postApiV4Topics"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4Topics"
        required: true
        schema:
          $ref: "#/definitions/postApiV4Topics"
        x-exportParamName: "PostApiV4Topics"
      responses:
        "201":
          description: "Create a topic"
          schema:
            $ref: "#/definitions/API_Entities_Projects_Topic"
  /api/v4/topics/{id}:
    get:
      tags:
      - "topics"
      summary: "Get topic"
      description: "This feature was introduced in GitLab 14.5."
      operationId: "getApiV4TopicsId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of project topic"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Get topic"
          schema:
            $ref: "#/definitions/API_Entities_Projects_Topic"
    put:
      tags:
      - "topics"
      summary: "Update a topic"
      description: "This feature was introduced in GitLab 14.5."
      operationId: "putApiV4TopicsId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of project topic"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      - in: "body"
        name: "putApiV4TopicsId"
        required: true
        schema:
          $ref: "#/definitions/putApiV4TopicsId"
        x-exportParamName: "PutApiV4TopicsId"
      responses:
        "200":
          description: "Update a topic"
          schema:
            $ref: "#/definitions/API_Entities_Projects_Topic"
    delete:
      tags:
      - "topics"
      summary: "Delete a topic"
      description: "This feature was introduced in GitLab 14.9."
      operationId: "deleteApiV4TopicsId"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of project topic"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Id"
      responses:
        "204":
          description: "Delete a topic"
  /api/v4/topics/merge:
    post:
      tags:
      - "topics"
      summary: "Merge topics"
      description: "This feature was introduced in GitLab 15.4."
      operationId: "postApiV4TopicsMerge"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postApiV4TopicsMerge"
        required: true
        schema:
          $ref: "#/definitions/postApiV4TopicsMerge"
        x-exportParamName: "PostApiV4TopicsMerge"
      responses:
        "201":
          description: "Merge topics"
          schema:
            $ref: "#/definitions/API_Entities_Projects_Topic"
securityDefinitions:
  access_token_header:
    type: "apiKey"
    name: "PRIVATE-TOKEN"
    in: "header"
  access_token_query:
    type: "apiKey"
    name: "private_token"
    in: "query"
definitions:
  API_Entities_AccessRequester:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      username:
        type: "string"
        example: "admin"
      name:
        type: "string"
        example: "Administrator"
      state:
        type: "string"
        example: "active"
      locked:
        type: "boolean"
      avatar_url:
        type: "string"
        example: "https://gravatar.com/avatar/1"
      avatar_path:
        type: "string"
        example: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      custom_attributes:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_CustomAttribute"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/root"
      requested_at:
        type: "string"
    description: "API_Entities_AccessRequester model"
    example:
      avatar_url: "https://gravatar.com/avatar/1"
      web_url: "https://gitlab.example.com/root"
      avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      name: "Administrator"
      id: 1
      state: "active"
      locked: true
      username: "admin"
      custom_attributes:
      - value: "bar"
        key: "foo"
      - value: "bar"
        key: "foo"
      requested_at: "requested_at"
  API_Entities_CustomAttribute:
    type: "object"
    properties:
      key:
        type: "string"
        example: "foo"
      value:
        type: "string"
        example: "bar"
    description: "API_Entities_CustomAttribute model"
    example:
      value: "bar"
      key: "foo"
  putApiV4GroupsIdAccessRequestsUserIdApprove:
    type: "object"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level (defaults: `30`, the Developer role)"
        default: 30
    description: "Approves an access request for the given user."
  API_Entities_Badge:
    type: "object"
    properties:
      name:
        type: "string"
      link_url:
        type: "string"
      image_url:
        type: "string"
      rendered_link_url:
        type: "string"
      rendered_image_url:
        type: "string"
      id:
        type: "string"
      kind:
        type: "string"
    description: "API_Entities_Badge model"
    example:
      rendered_image_url: "rendered_image_url"
      image_url: "image_url"
      kind: "kind"
      name: "name"
      rendered_link_url: "rendered_link_url"
      link_url: "link_url"
      id: "id"
  API_Entities_BasicBadgeDetails:
    type: "object"
    properties:
      name:
        type: "string"
      link_url:
        type: "string"
      image_url:
        type: "string"
      rendered_link_url:
        type: "string"
      rendered_image_url:
        type: "string"
    description: "API_Entities_BasicBadgeDetails model"
    example:
      rendered_image_url: "rendered_image_url"
      image_url: "image_url"
      name: "name"
      rendered_link_url: "rendered_link_url"
      link_url: "link_url"
  postApiV4GroupsIdBadges:
    type: "object"
    required:
    - "image_url"
    - "link_url"
    properties:
      link_url:
        type: "string"
        description: "URL of the badge link"
      image_url:
        type: "string"
        description: "URL of the badge image"
      name:
        type: "string"
        description: "Name for the badge"
    description: "Adds a badge to a group."
  putApiV4GroupsIdBadgesBadgeId:
    type: "object"
    properties:
      link_url:
        type: "string"
        description: "URL of the badge link"
      image_url:
        type: "string"
        description: "URL of the badge image"
      name:
        type: "string"
        description: "Name for the badge"
    description: "Updates a badge of a group."
  putApiV4GroupsIdCustomAttributesKey:
    type: "object"
    required:
    - "value"
    properties:
      value:
        type: "string"
        description: "The value of the custom attribute"
    description: "Set a custom attribute on a group"
  API_Entities_Group:
    type: "object"
    properties:
      id:
        type: "string"
      web_url:
        type: "string"
      name:
        type: "string"
      path:
        type: "string"
      description:
        type: "string"
      visibility:
        type: "string"
      share_with_group_lock:
        type: "string"
      require_two_factor_authentication:
        type: "string"
      two_factor_grace_period:
        type: "string"
      project_creation_level:
        type: "string"
      auto_devops_enabled:
        type: "string"
      subgroup_creation_level:
        type: "string"
      emails_disabled:
        type: "boolean"
      emails_enabled:
        type: "boolean"
      mentions_disabled:
        type: "string"
      lfs_enabled:
        type: "string"
      math_rendering_limits_enabled:
        type: "boolean"
      lock_math_rendering_limits_enabled:
        type: "boolean"
      default_branch:
        type: "string"
      default_branch_protection:
        type: "string"
      default_branch_protection_defaults:
        type: "string"
      avatar_url:
        type: "string"
      request_access_enabled:
        type: "string"
      full_name:
        type: "string"
      full_path:
        type: "string"
      created_at:
        type: "string"
      parent_id:
        type: "string"
      organization_id:
        type: "string"
      shared_runners_setting:
        type: "string"
      custom_attributes:
        $ref: "#/definitions/API_Entities_CustomAttribute"
      statistics:
        $ref: "#/definitions/API_Entities_Group_statistics"
      ldap_cn:
        type: "string"
      ldap_access:
        type: "string"
      ldap_group_links:
        $ref: "#/definitions/EE_API_Entities_LdapGroupLink"
      saml_group_links:
        $ref: "#/definitions/EE_API_Entities_SamlGroupLink"
      file_template_project_id:
        type: "string"
      marked_for_deletion_on:
        type: "string"
      wiki_access_level:
        type: "string"
      repository_storage:
        type: "string"
      duo_features_enabled:
        type: "string"
      lock_duo_features_enabled:
        type: "string"
    description: "API_Entities_Group model"
    example:
      request_access_enabled: "request_access_enabled"
      repository_storage: "repository_storage"
      ldap_access: "ldap_access"
      description: "description"
      share_with_group_lock: "share_with_group_lock"
      created_at: "created_at"
      mentions_disabled: "mentions_disabled"
      custom_attributes:
        value: "bar"
        key: "foo"
      marked_for_deletion_on: "marked_for_deletion_on"
      lock_duo_features_enabled: "lock_duo_features_enabled"
      path: "path"
      file_template_project_id: "file_template_project_id"
      ldap_cn: "ldap_cn"
      project_creation_level: "project_creation_level"
      wiki_access_level: "wiki_access_level"
      emails_enabled: true
      lock_math_rendering_limits_enabled: true
      id: "id"
      full_path: "full_path"
      lfs_enabled: "lfs_enabled"
      emails_disabled: true
      default_branch_protection_defaults: "default_branch_protection_defaults"
      visibility: "visibility"
      two_factor_grace_period: "two_factor_grace_period"
      require_two_factor_authentication: "require_two_factor_authentication"
      math_rendering_limits_enabled: true
      ldap_group_links:
        filter: "id >= 500"
        provider: "ldapmain"
        cn: "ldap-group-1"
        group_access: 10
      subgroup_creation_level: "subgroup_creation_level"
      auto_devops_enabled: "auto_devops_enabled"
      full_name: "full_name"
      web_url: "web_url"
      avatar_url: "avatar_url"
      saml_group_links:
        access_level: 40
        name: "saml-group-1"
        member_role_id: 12
      parent_id: "parent_id"
      organization_id: "organization_id"
      duo_features_enabled: "duo_features_enabled"
      name: "name"
      shared_runners_setting: "shared_runners_setting"
      default_branch: "default_branch"
      default_branch_protection: "default_branch_protection"
      statistics:
        wiki_size: "wiki_size"
        packages_size: "packages_size"
        lfs_objects_size: "lfs_objects_size"
        job_artifacts_size: "job_artifacts_size"
        repository_size: "repository_size"
        storage_size: "storage_size"
        uploads_size: "uploads_size"
        snippets_size: "snippets_size"
        pipeline_artifacts_size: "pipeline_artifacts_size"
  EE_API_Entities_LdapGroupLink:
    type: "object"
    properties:
      cn:
        type: "string"
        example: "ldap-group-1"
      group_access:
        type: "integer"
        format: "int32"
        example: 10
      provider:
        type: "string"
        example: "ldapmain"
      filter:
        type: "string"
        example: "id >= 500"
    example:
      filter: "id >= 500"
      provider: "ldapmain"
      cn: "ldap-group-1"
      group_access: 10
  EE_API_Entities_SamlGroupLink:
    type: "object"
    properties:
      name:
        type: "string"
        example: "saml-group-1"
      access_level:
        type: "integer"
        format: "int32"
        example: 40
      member_role_id:
        type: "integer"
        format: "int32"
        example: 12
    example:
      access_level: 40
      name: "saml-group-1"
      member_role_id: 12
  postApiV4Groups:
    type: "object"
    required:
    - "name"
    - "path"
    properties:
      name:
        type: "string"
        description: "The name of the group"
      path:
        type: "string"
        description: "The path of the group"
      parent_id:
        type: "integer"
        format: "int32"
        description: "The parent group id for creating nested group"
      organization_id:
        type: "integer"
        format: "int32"
        description: "The organization id for the group"
      description:
        type: "string"
        description: "The description of the group"
      visibility:
        type: "string"
        description: "The visibility of the group"
        enum:
        - "private"
        - "internal"
        - "public"
      avatar:
        type: "file"
        description: "Avatar image for the group"
      share_with_group_lock:
        type: "boolean"
        description: "Prevent sharing a project with another group within this group"
      require_two_factor_authentication:
        type: "boolean"
        description: "Require all users in this group to setup Two-factor authentication"
      two_factor_grace_period:
        type: "integer"
        format: "int32"
        description: "Time before Two-factor authentication is enforced"
      project_creation_level:
        type: "string"
        description: "Determine if developers can create projects in the group"
        enum:
        - "noone"
        - "maintainer"
        - "developer"
      auto_devops_enabled:
        type: "boolean"
        description: "Default to Auto DevOps pipeline for all projects within this\
          \ group"
      subgroup_creation_level:
        type: "string"
        description: "Allowed to create subgroups"
        enum:
        - "owner"
        - "maintainer"
      emails_disabled:
        type: "boolean"
        description: "_(Deprecated)_ Disable email notifications. Use: emails_enabled"
      emails_enabled:
        type: "boolean"
        description: "Enable email notifications"
      show_diff_preview_in_email:
        type: "boolean"
        description: "Include the code diff preview in merge request notification\
          \ emails"
      mentions_disabled:
        type: "boolean"
        description: "Disable a group from getting mentioned"
      lfs_enabled:
        type: "boolean"
        description: "Enable/disable LFS for the projects in this group"
      request_access_enabled:
        type: "boolean"
        description: "Allow users to request member access"
      default_branch:
        type: "string"
        example: "main"
        description: "The default branch of group's projects"
      default_branch_protection:
        type: "integer"
        format: "int32"
        description: "Determine if developers can push to default branch"
        enum:
        - 0
        - 3
        - 1
        - 2
        - 4
      default_branch_protection_defaults:
        $ref: "#/definitions/postApiV4Groups_default_branch_protection_defaults"
      shared_runners_setting:
        type: "string"
        description: "Enable/disable shared runners for the group and its subgroups\
          \ and projects"
        enum:
        - "disabled_and_unoverridable"
        - "disabled_and_overridable"
        - "enabled"
      enabled_git_access_protocol:
        type: "string"
        description: "Allow only the selected protocols to be used for Git access."
        enum:
        - "ssh"
        - "http"
        - "all"
      membership_lock:
        type: "boolean"
        description: "Prevent adding new members to projects within this group"
      ldap_cn:
        type: "string"
        description: "LDAP Common Name"
      ldap_access:
        type: "integer"
        format: "int32"
        description: "A valid access level"
      shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        description: "(admin-only) Compute minutes quota for this group"
      extra_shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        description: "(admin-only) Extra compute minutes quota for this group"
      wiki_access_level:
        type: "string"
        description: "Wiki access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
    description: "Create a group. Available only for users who can create groups."
  putApiV4GroupsId:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the group"
      path:
        type: "string"
        description: "The path of the group"
      description:
        type: "string"
        description: "The description of the group"
      visibility:
        type: "string"
        description: "The visibility of the group"
        enum:
        - "private"
        - "internal"
        - "public"
      avatar:
        type: "file"
        description: "Avatar image for the group"
      share_with_group_lock:
        type: "boolean"
        description: "Prevent sharing a project with another group within this group"
      require_two_factor_authentication:
        type: "boolean"
        description: "Require all users in this group to setup Two-factor authentication"
      two_factor_grace_period:
        type: "integer"
        format: "int32"
        description: "Time before Two-factor authentication is enforced"
      project_creation_level:
        type: "string"
        description: "Determine if developers can create projects in the group"
        enum:
        - "noone"
        - "maintainer"
        - "developer"
      auto_devops_enabled:
        type: "boolean"
        description: "Default to Auto DevOps pipeline for all projects within this\
          \ group"
      subgroup_creation_level:
        type: "string"
        description: "Allowed to create subgroups"
        enum:
        - "owner"
        - "maintainer"
      emails_disabled:
        type: "boolean"
        description: "_(Deprecated)_ Disable email notifications. Use: emails_enabled"
      emails_enabled:
        type: "boolean"
        description: "Enable email notifications"
      show_diff_preview_in_email:
        type: "boolean"
        description: "Include the code diff preview in merge request notification\
          \ emails"
      mentions_disabled:
        type: "boolean"
        description: "Disable a group from getting mentioned"
      lfs_enabled:
        type: "boolean"
        description: "Enable/disable LFS for the projects in this group"
      request_access_enabled:
        type: "boolean"
        description: "Allow users to request member access"
      default_branch:
        type: "string"
        example: "main"
        description: "The default branch of group's projects"
      default_branch_protection:
        type: "integer"
        format: "int32"
        description: "Determine if developers can push to default branch"
        enum:
        - 0
        - 3
        - 1
        - 2
        - 4
      default_branch_protection_defaults:
        $ref: "#/definitions/postApiV4Groups_default_branch_protection_defaults"
      shared_runners_setting:
        type: "string"
        description: "Enable/disable shared runners for the group and its subgroups\
          \ and projects"
        enum:
        - "disabled_and_unoverridable"
        - "disabled_and_overridable"
        - "enabled"
      enabled_git_access_protocol:
        type: "string"
        description: "Allow only the selected protocols to be used for Git access."
        enum:
        - "ssh"
        - "http"
        - "all"
      membership_lock:
        type: "boolean"
        description: "Prevent adding new members to projects within this group"
      ldap_cn:
        type: "string"
        description: "LDAP Common Name"
      ldap_access:
        type: "integer"
        format: "int32"
        description: "A valid access level"
      shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        description: "(admin-only) Compute minutes quota for this group"
      extra_shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        description: "(admin-only) Extra compute minutes quota for this group"
      wiki_access_level:
        type: "string"
        description: "Wiki access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      prevent_sharing_groups_outside_hierarchy:
        type: "boolean"
        description: "Prevent sharing groups within this namespace with any groups\
          \ outside the namespace. Only available on top-level groups."
      lock_math_rendering_limits_enabled:
        type: "boolean"
        description: "Indicates if math rendering limits are locked for all descendent\
          \ groups."
      math_rendering_limits_enabled:
        type: "boolean"
        description: "Indicates if math rendering limits are used for this group."
      file_template_project_id:
        type: "integer"
        format: "int32"
        description: "The ID of a project to use for custom templates in this group"
      prevent_forking_outside_group:
        type: "boolean"
        description: "Prevent forking projects inside this group to external namespaces"
      unique_project_download_limit:
        type: "integer"
        format: "int32"
        description: "Maximum number of unique projects a user can download in the\
          \ specified time period before they are banned."
      unique_project_download_limit_interval_in_seconds:
        type: "integer"
        format: "int32"
        description: "Time period during which a user can download a maximum amount\
          \ of projects before they are banned."
      unique_project_download_limit_allowlist:
        type: "array"
        description: "List of usernames excluded from the unique project download\
          \ limit"
        items:
          type: "string"
      unique_project_download_limit_alertlist:
        type: "array"
        description: "List of user ids who will be emailed when Git abuse rate limit\
          \ is exceeded"
        items:
          type: "integer"
          format: "int32"
      auto_ban_user_on_excessive_projects_download:
        type: "boolean"
        description: "Ban users from the group when they exceed maximum number of\
          \ unique projects download in the specified time period"
      ip_restriction_ranges:
        type: "string"
        description: "List of IP addresses which need to be restricted for group"
      service_access_tokens_expiration_enforced:
        type: "boolean"
        description: "To enforce token expiration for Service accounts users for group"
      duo_features_enabled:
        type: "boolean"
        description: "Indicates whether GitLab Duo features are enabled for the group"
      lock_duo_features_enabled:
        type: "boolean"
        description: "Indicates if the GitLab Duo features enabled setting is enforced\
          \ for all subgroups"
    description: "Update a group. Available only for users who can administrate groups."
  API_Entities_GroupDetail:
    type: "object"
    properties:
      id:
        type: "string"
      web_url:
        type: "string"
      name:
        type: "string"
      path:
        type: "string"
      description:
        type: "string"
      visibility:
        type: "string"
      share_with_group_lock:
        type: "string"
      require_two_factor_authentication:
        type: "string"
      two_factor_grace_period:
        type: "string"
      project_creation_level:
        type: "string"
      auto_devops_enabled:
        type: "string"
      subgroup_creation_level:
        type: "string"
      emails_disabled:
        type: "boolean"
      emails_enabled:
        type: "boolean"
      mentions_disabled:
        type: "string"
      lfs_enabled:
        type: "string"
      math_rendering_limits_enabled:
        type: "boolean"
      lock_math_rendering_limits_enabled:
        type: "boolean"
      default_branch:
        type: "string"
      default_branch_protection:
        type: "string"
      default_branch_protection_defaults:
        type: "string"
      avatar_url:
        type: "string"
      request_access_enabled:
        type: "string"
      full_name:
        type: "string"
      full_path:
        type: "string"
      created_at:
        type: "string"
      parent_id:
        type: "string"
      organization_id:
        type: "string"
      shared_runners_setting:
        type: "string"
      custom_attributes:
        $ref: "#/definitions/API_Entities_CustomAttribute"
      statistics:
        $ref: "#/definitions/API_Entities_Group_statistics"
      ldap_cn:
        type: "string"
      ldap_access:
        type: "string"
      ldap_group_links:
        $ref: "#/definitions/EE_API_Entities_LdapGroupLink"
      saml_group_links:
        $ref: "#/definitions/EE_API_Entities_SamlGroupLink"
      file_template_project_id:
        type: "string"
      marked_for_deletion_on:
        type: "string"
      wiki_access_level:
        type: "string"
      repository_storage:
        type: "string"
      duo_features_enabled:
        type: "string"
      lock_duo_features_enabled:
        type: "string"
      shared_with_groups:
        type: "string"
      runners_token:
        type: "string"
      enabled_git_access_protocol:
        type: "string"
      prevent_sharing_groups_outside_hierarchy:
        type: "string"
      projects:
        $ref: "#/definitions/API_Entities_Project"
      shared_projects:
        $ref: "#/definitions/API_Entities_Project"
      shared_runners_minutes_limit:
        type: "string"
      extra_shared_runners_minutes_limit:
        type: "string"
      prevent_forking_outside_group:
        type: "string"
      service_access_tokens_expiration_enforced:
        type: "string"
      membership_lock:
        type: "string"
      ip_restriction_ranges:
        type: "string"
      unique_project_download_limit:
        type: "string"
      unique_project_download_limit_interval_in_seconds:
        type: "string"
      unique_project_download_limit_allowlist:
        type: "string"
      unique_project_download_limit_alertlist:
        type: "string"
      auto_ban_user_on_excessive_projects_download:
        type: "string"
    description: "API_Entities_GroupDetail model"
    example:
      projects:
        ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
        only_allow_merge_if_all_discussions_are_resolved: true
        enforce_auth_checks_on_uploads: true
        security_and_compliance_access_level: "enabled"
        custom_attributes:
          value: "bar"
          key: "foo"
        path: "project1"
        monitor_access_level: "enabled"
        merge_pipelines_enabled: "merge_pipelines_enabled"
        repository_access_level: "enabled"
        wiki_access_level: "enabled"
        shared_runners_enabled: true
        id: 1
        import_type: "git"
        feature_flags_access_level: "enabled"
        merge_requests_access_level: "enabled"
        merge_trains_enabled: "merge_trains_enabled"
        group_runners_enabled: true
        allow_merge_on_skipped_pipeline: true
        lfs_enabled: true
        ci_separated_caches: true
        resolve_outdated_diff_discussions: true
        builds_access_level: "enabled"
        shared_with_groups:
        - "shared_with_groups"
        - "shared_with_groups"
        security_and_compliance_enabled: "security_and_compliance_enabled"
        pages_access_level: "enabled"
        service_desk_enabled: true
        creator_id: 1
        ci_forward_deployment_enabled: true
        default_branch: "main"
        auto_devops_deploy_strategy: "continuous"
        description_html: "description_html"
        can_create_merge_request_in: true
        ci_allow_fork_pipelines_to_run_in_parent_project: true
        runners_token: "b8547b1dc37721d05889db52fa2f02"
        mirror: "mirror"
        merge_trains_skip_train_allowed: "merge_trains_skip_train_allowed"
        restrict_user_defined_variables: true
        container_registry_image_prefix: "registry.gitlab.example.com/gitlab/gitlab-client"
        auto_cancel_pending_pipelines: "enabled"
        snippets_enabled: true
        created_at: "2020-05-07T04:27:17.016Z"
        ci_default_git_depth: 20
        model_experiments_access_level: "enabled"
        ci_pipeline_variables_minimum_override_role: "ci_pipeline_variables_minimum_override_role"
        archived: true
        marked_for_deletion_at: "marked_for_deletion_at"
        updated_at: "2020-05-07T04:27:17.016Z"
        tag_list:
        - "tag"
        - "tag"
        issues_access_level: "enabled"
        issue_branch_template: "%(title)"
        warn_about_potentially_unwanted_characters: true
        ci_restrict_pipeline_cancellation_role: "ci_restrict_pipeline_cancellation_role"
        printing_merge_request_link_enabled: true
        topics:
        - "topic"
        - "topic"
        import_url: "https://gitlab.com/gitlab/gitlab.git"
        ci_forward_deployment_rollback_allowed: true
        squash_option: "default_off"
        jobs_enabled: true
        import_error: "Import error"
        environments_access_level: "enabled"
        forked_from_project:
          ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
          repository_storage: "default"
          path_with_namespace: "namespace1/project1"
          topics:
          - "topic"
          - "topic"
          description: "desc"
          created_at: "2020-05-07T04:27:17.016Z"
          http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
          readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
          custom_attributes:
            value: "bar"
            key: "foo"
          path: "project1"
          license:
            html_url: "http://choosealicense.com/licenses/gpl-3.0"
            name: "GNU General Public License v3.0"
            nickname: "GNU GPLv3"
            key: "gpl-3.0"
            source_url: "source_url"
          web_url: "https://gitlab.example.com/gitlab/gitlab"
          avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
          tag_list:
          - "tag"
          - "tag"
          last_activity_at: "2013-09-30T13:46:02Z"
          name: "project1"
          namespace:
            path: "my_project"
            avatar_url: "https://example.com/avatar/12345"
            web_url: "https://example.com/group/my_project"
            kind: "project"
            parent_id: 1
            name: "project"
            id: 2
            full_path: "group/my_project"
          default_branch: "main"
          id: 1
          name_with_namespace: "John Doe / project1"
          license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
          star_count: 1
          forks_count: 1
        squash_commit_template: "%(source_branch)"
        only_allow_merge_if_pipeline_succeeds: true
        analytics_access_level: "enabled"
        avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
        wiki_enabled: true
        remove_source_branch_after_merge: true
        mirror_overwrites_diverged_branches: "mirror_overwrites_diverged_branches"
        star_count: 1
        statistics:
          commit_count: "commit_count"
          container_registry_size: "container_registry_size"
          wiki_size: "wiki_size"
          packages_size: "packages_size"
          lfs_objects_size: "lfs_objects_size"
          job_artifacts_size: "job_artifacts_size"
          repository_size: "repository_size"
          storage_size: "storage_size"
          uploads_size: "uploads_size"
          snippets_size: "snippets_size"
          pipeline_artifacts_size: "pipeline_artifacts_size"
        _links:
          merge_requests: "https://gitlab.example.com/api/v4/projects/4/merge_requests"
          cluster_agents: "https://gitlab.example.com/api/v4/projects/4/cluster_agents"
          members: "https://gitlab.example.com/api/v4/projects/4/members"
          self: "https://gitlab.example.com/api/v4/projects/4"
          repo_branches: "https://gitlab.example.com/api/v4/projects/4/repository/branches"
          issues: "https://gitlab.example.com/api/v4/projects/4/issues"
          events: "https://gitlab.example.com/api/v4/projects/4/events"
          labels: "https://gitlab.example.com/api/v4/projects/4/labels"
        request_access_enabled: true
        only_mirror_protected_branches: "only_mirror_protected_branches"
        runner_token_expiration_interval: 3600
        build_timeout: 3600
        infrastructure_access_level: "enabled"
        marked_for_deletion_on: "marked_for_deletion_on"
        mirror_trigger_builds: "mirror_trigger_builds"
        ci_job_token_scope_enabled: true
        emails_enabled: true
        visibility: "public"
        requirements_access_level: "requirements_access_level"
        merge_requests_enabled: true
        forking_access_level: "enabled"
        merge_commit_template: "%(title)"
        mr_default_target_self: true
        suggestion_commit_message: "Suggestion message"
        container_registry_access_level: "enabled"
        license:
          html_url: "http://choosealicense.com/licenses/gpl-3.0"
          name: "GNU General Public License v3.0"
          nickname: "GNU GPLv3"
          key: "gpl-3.0"
          source_url: "source_url"
        auto_devops_enabled: true
        mirror_user_id: "mirror_user_id"
        requirements_enabled: "requirements_enabled"
        compliance_frameworks: "compliance_frameworks"
        name: "project1"
        external_authorization_classification_label: "external_authorization_classification_label"
        approvals_before_merge: "approvals_before_merge"
        name_with_namespace: "John Doe / project1"
        license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
        model_registry_access_level: "enabled"
        autoclose_referenced_issues: true
        issues_enabled: true
        service_desk_address: "address@example.com"
        repository_storage: "default"
        open_issues_count: 1
        prevent_merge_without_jira_issue: "prevent_merge_without_jira_issue"
        packages_enabled: true
        keep_latest_artifact: true
        description: "desc"
        import_status: "none"
        ci_config_path: ""
        merge_requests_template: "merge_requests_template"
        only_allow_merge_if_all_status_checks_passed: "only_allow_merge_if_all_status_checks_passed"
        build_git_strategy: "fetch"
        last_activity_at: "2013-09-30T13:46:02Z"
        container_expiration_policy:
          keep_n: "keep_n"
          next_run_at: "next_run_at"
          name_regex_keep: "name_regex_keep"
          older_than: "older_than"
          name_regex: "name_regex"
          cadence: "cadence"
          enabled: "enabled"
        container_registry_enabled: true
        issues_template: "issues_template"
        allow_pipeline_trigger_approve_deployment: true
        owner:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        emails_disabled: true
        path_with_namespace: "namespace1/project1"
        releases_access_level: "enabled"
        snippets_access_level: "enabled"
        http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
        readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
        merge_method: "merge"
        repository_object_format: "sha1"
        web_url: "https://gitlab.example.com/gitlab/gitlab"
        public_jobs: true
        namespace:
          path: "my_project"
          avatar_url: "https://example.com/avatar/12345"
          web_url: "https://example.com/group/my_project"
          kind: "project"
          parent_id: 1
          name: "project"
          id: 2
          full_path: "group/my_project"
        empty_repo: true
        forks_count: 1
      request_access_enabled: "request_access_enabled"
      mentions_disabled: "mentions_disabled"
      custom_attributes:
        value: "bar"
        key: "foo"
      marked_for_deletion_on: "marked_for_deletion_on"
      path: "path"
      file_template_project_id: "file_template_project_id"
      unique_project_download_limit_interval_in_seconds: "unique_project_download_limit_interval_in_seconds"
      project_creation_level: "project_creation_level"
      wiki_access_level: "wiki_access_level"
      emails_enabled: true
      id: "id"
      lfs_enabled: "lfs_enabled"
      shared_projects:
        ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
        only_allow_merge_if_all_discussions_are_resolved: true
        enforce_auth_checks_on_uploads: true
        security_and_compliance_access_level: "enabled"
        custom_attributes:
          value: "bar"
          key: "foo"
        path: "project1"
        monitor_access_level: "enabled"
        merge_pipelines_enabled: "merge_pipelines_enabled"
        repository_access_level: "enabled"
        wiki_access_level: "enabled"
        shared_runners_enabled: true
        id: 1
        import_type: "git"
        feature_flags_access_level: "enabled"
        merge_requests_access_level: "enabled"
        merge_trains_enabled: "merge_trains_enabled"
        group_runners_enabled: true
        allow_merge_on_skipped_pipeline: true
        lfs_enabled: true
        ci_separated_caches: true
        resolve_outdated_diff_discussions: true
        builds_access_level: "enabled"
        shared_with_groups:
        - "shared_with_groups"
        - "shared_with_groups"
        security_and_compliance_enabled: "security_and_compliance_enabled"
        pages_access_level: "enabled"
        service_desk_enabled: true
        creator_id: 1
        ci_forward_deployment_enabled: true
        default_branch: "main"
        auto_devops_deploy_strategy: "continuous"
        description_html: "description_html"
        can_create_merge_request_in: true
        ci_allow_fork_pipelines_to_run_in_parent_project: true
        runners_token: "b8547b1dc37721d05889db52fa2f02"
        mirror: "mirror"
        merge_trains_skip_train_allowed: "merge_trains_skip_train_allowed"
        restrict_user_defined_variables: true
        container_registry_image_prefix: "registry.gitlab.example.com/gitlab/gitlab-client"
        auto_cancel_pending_pipelines: "enabled"
        snippets_enabled: true
        created_at: "2020-05-07T04:27:17.016Z"
        ci_default_git_depth: 20
        model_experiments_access_level: "enabled"
        ci_pipeline_variables_minimum_override_role: "ci_pipeline_variables_minimum_override_role"
        archived: true
        marked_for_deletion_at: "marked_for_deletion_at"
        updated_at: "2020-05-07T04:27:17.016Z"
        tag_list:
        - "tag"
        - "tag"
        issues_access_level: "enabled"
        issue_branch_template: "%(title)"
        warn_about_potentially_unwanted_characters: true
        ci_restrict_pipeline_cancellation_role: "ci_restrict_pipeline_cancellation_role"
        printing_merge_request_link_enabled: true
        topics:
        - "topic"
        - "topic"
        import_url: "https://gitlab.com/gitlab/gitlab.git"
        ci_forward_deployment_rollback_allowed: true
        squash_option: "default_off"
        jobs_enabled: true
        import_error: "Import error"
        environments_access_level: "enabled"
        forked_from_project:
          ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
          repository_storage: "default"
          path_with_namespace: "namespace1/project1"
          topics:
          - "topic"
          - "topic"
          description: "desc"
          created_at: "2020-05-07T04:27:17.016Z"
          http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
          readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
          custom_attributes:
            value: "bar"
            key: "foo"
          path: "project1"
          license:
            html_url: "http://choosealicense.com/licenses/gpl-3.0"
            name: "GNU General Public License v3.0"
            nickname: "GNU GPLv3"
            key: "gpl-3.0"
            source_url: "source_url"
          web_url: "https://gitlab.example.com/gitlab/gitlab"
          avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
          tag_list:
          - "tag"
          - "tag"
          last_activity_at: "2013-09-30T13:46:02Z"
          name: "project1"
          namespace:
            path: "my_project"
            avatar_url: "https://example.com/avatar/12345"
            web_url: "https://example.com/group/my_project"
            kind: "project"
            parent_id: 1
            name: "project"
            id: 2
            full_path: "group/my_project"
          default_branch: "main"
          id: 1
          name_with_namespace: "John Doe / project1"
          license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
          star_count: 1
          forks_count: 1
        squash_commit_template: "%(source_branch)"
        only_allow_merge_if_pipeline_succeeds: true
        analytics_access_level: "enabled"
        avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
        wiki_enabled: true
        remove_source_branch_after_merge: true
        mirror_overwrites_diverged_branches: "mirror_overwrites_diverged_branches"
        star_count: 1
        statistics:
          commit_count: "commit_count"
          container_registry_size: "container_registry_size"
          wiki_size: "wiki_size"
          packages_size: "packages_size"
          lfs_objects_size: "lfs_objects_size"
          job_artifacts_size: "job_artifacts_size"
          repository_size: "repository_size"
          storage_size: "storage_size"
          uploads_size: "uploads_size"
          snippets_size: "snippets_size"
          pipeline_artifacts_size: "pipeline_artifacts_size"
        _links:
          merge_requests: "https://gitlab.example.com/api/v4/projects/4/merge_requests"
          cluster_agents: "https://gitlab.example.com/api/v4/projects/4/cluster_agents"
          members: "https://gitlab.example.com/api/v4/projects/4/members"
          self: "https://gitlab.example.com/api/v4/projects/4"
          repo_branches: "https://gitlab.example.com/api/v4/projects/4/repository/branches"
          issues: "https://gitlab.example.com/api/v4/projects/4/issues"
          events: "https://gitlab.example.com/api/v4/projects/4/events"
          labels: "https://gitlab.example.com/api/v4/projects/4/labels"
        request_access_enabled: true
        only_mirror_protected_branches: "only_mirror_protected_branches"
        runner_token_expiration_interval: 3600
        build_timeout: 3600
        infrastructure_access_level: "enabled"
        marked_for_deletion_on: "marked_for_deletion_on"
        mirror_trigger_builds: "mirror_trigger_builds"
        ci_job_token_scope_enabled: true
        emails_enabled: true
        visibility: "public"
        requirements_access_level: "requirements_access_level"
        merge_requests_enabled: true
        forking_access_level: "enabled"
        merge_commit_template: "%(title)"
        mr_default_target_self: true
        suggestion_commit_message: "Suggestion message"
        container_registry_access_level: "enabled"
        license:
          html_url: "http://choosealicense.com/licenses/gpl-3.0"
          name: "GNU General Public License v3.0"
          nickname: "GNU GPLv3"
          key: "gpl-3.0"
          source_url: "source_url"
        auto_devops_enabled: true
        mirror_user_id: "mirror_user_id"
        requirements_enabled: "requirements_enabled"
        compliance_frameworks: "compliance_frameworks"
        name: "project1"
        external_authorization_classification_label: "external_authorization_classification_label"
        approvals_before_merge: "approvals_before_merge"
        name_with_namespace: "John Doe / project1"
        license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
        model_registry_access_level: "enabled"
        autoclose_referenced_issues: true
        issues_enabled: true
        service_desk_address: "address@example.com"
        repository_storage: "default"
        open_issues_count: 1
        prevent_merge_without_jira_issue: "prevent_merge_without_jira_issue"
        packages_enabled: true
        keep_latest_artifact: true
        description: "desc"
        import_status: "none"
        ci_config_path: ""
        merge_requests_template: "merge_requests_template"
        only_allow_merge_if_all_status_checks_passed: "only_allow_merge_if_all_status_checks_passed"
        build_git_strategy: "fetch"
        last_activity_at: "2013-09-30T13:46:02Z"
        container_expiration_policy:
          keep_n: "keep_n"
          next_run_at: "next_run_at"
          name_regex_keep: "name_regex_keep"
          older_than: "older_than"
          name_regex: "name_regex"
          cadence: "cadence"
          enabled: "enabled"
        container_registry_enabled: true
        issues_template: "issues_template"
        allow_pipeline_trigger_approve_deployment: true
        owner:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        emails_disabled: true
        path_with_namespace: "namespace1/project1"
        releases_access_level: "enabled"
        snippets_access_level: "enabled"
        http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
        readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
        merge_method: "merge"
        repository_object_format: "sha1"
        web_url: "https://gitlab.example.com/gitlab/gitlab"
        public_jobs: true
        namespace:
          path: "my_project"
          avatar_url: "https://example.com/avatar/12345"
          web_url: "https://example.com/group/my_project"
          kind: "project"
          parent_id: 1
          name: "project"
          id: 2
          full_path: "group/my_project"
        empty_repo: true
        forks_count: 1
      default_branch_protection_defaults: "default_branch_protection_defaults"
      visibility: "visibility"
      shared_runners_minutes_limit: "shared_runners_minutes_limit"
      auto_ban_user_on_excessive_projects_download: "auto_ban_user_on_excessive_projects_download"
      require_two_factor_authentication: "require_two_factor_authentication"
      shared_with_groups: "shared_with_groups"
      math_rendering_limits_enabled: true
      membership_lock: "membership_lock"
      ldap_group_links:
        filter: "id >= 500"
        provider: "ldapmain"
        cn: "ldap-group-1"
        group_access: 10
      prevent_sharing_groups_outside_hierarchy: "prevent_sharing_groups_outside_hierarchy"
      subgroup_creation_level: "subgroup_creation_level"
      auto_devops_enabled: "auto_devops_enabled"
      full_name: "full_name"
      saml_group_links:
        access_level: 40
        name: "saml-group-1"
        member_role_id: 12
      extra_shared_runners_minutes_limit: "extra_shared_runners_minutes_limit"
      parent_id: "parent_id"
      organization_id: "organization_id"
      duo_features_enabled: "duo_features_enabled"
      unique_project_download_limit_allowlist: "unique_project_download_limit_allowlist"
      name: "name"
      shared_runners_setting: "shared_runners_setting"
      enabled_git_access_protocol: "enabled_git_access_protocol"
      default_branch: "default_branch"
      default_branch_protection: "default_branch_protection"
      runners_token: "runners_token"
      repository_storage: "repository_storage"
      ldap_access: "ldap_access"
      description: "description"
      share_with_group_lock: "share_with_group_lock"
      created_at: "created_at"
      unique_project_download_limit_alertlist: "unique_project_download_limit_alertlist"
      lock_duo_features_enabled: "lock_duo_features_enabled"
      ldap_cn: "ldap_cn"
      ip_restriction_ranges: "ip_restriction_ranges"
      lock_math_rendering_limits_enabled: true
      full_path: "full_path"
      emails_disabled: true
      two_factor_grace_period: "two_factor_grace_period"
      unique_project_download_limit: "unique_project_download_limit"
      web_url: "web_url"
      avatar_url: "avatar_url"
      prevent_forking_outside_group: "prevent_forking_outside_group"
      service_access_tokens_expiration_enforced: "service_access_tokens_expiration_enforced"
      statistics:
        wiki_size: "wiki_size"
        packages_size: "packages_size"
        lfs_objects_size: "lfs_objects_size"
        job_artifacts_size: "job_artifacts_size"
        repository_size: "repository_size"
        storage_size: "storage_size"
        uploads_size: "uploads_size"
        snippets_size: "snippets_size"
        pipeline_artifacts_size: "pipeline_artifacts_size"
  API_Entities_Project:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      description:
        type: "string"
        example: "desc"
      name:
        type: "string"
        example: "project1"
      name_with_namespace:
        type: "string"
        example: "John Doe / project1"
      path:
        type: "string"
        example: "project1"
      path_with_namespace:
        type: "string"
        example: "namespace1/project1"
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-05-07T04:27:17.016Z"
      default_branch:
        type: "string"
        example: "main"
      tag_list:
        type: "array"
        items:
          type: "string"
          example: "tag"
      topics:
        type: "array"
        items:
          type: "string"
          example: "topic"
      ssh_url_to_repo:
        type: "string"
        example: "git@gitlab.example.com:gitlab/gitlab.git"
      http_url_to_repo:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab.git"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab"
      readme_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
      forks_count:
        type: "integer"
        format: "int32"
        example: 1
      license_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
      license:
        $ref: "#/definitions/API_Entities_LicenseBasic"
      avatar_url:
        type: "string"
        example: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
      star_count:
        type: "integer"
        format: "int32"
        example: 1
      last_activity_at:
        type: "string"
        format: "date-time"
        example: "2013-09-30T13:46:02Z"
      namespace:
        $ref: "#/definitions/API_Entities_NamespaceBasic"
      custom_attributes:
        $ref: "#/definitions/API_Entities_CustomAttribute"
      repository_storage:
        type: "string"
        example: "default"
      container_registry_image_prefix:
        type: "string"
        example: "registry.gitlab.example.com/gitlab/gitlab-client"
      _links:
        $ref: "#/definitions/API_Entities_Project__links"
      packages_enabled:
        type: "boolean"
      empty_repo:
        type: "boolean"
      archived:
        type: "boolean"
      visibility:
        type: "string"
        example: "public"
      owner:
        $ref: "#/definitions/API_Entities_UserBasic"
      resolve_outdated_diff_discussions:
        type: "boolean"
      container_expiration_policy:
        $ref: "#/definitions/API_Entities_ContainerExpirationPolicy"
      repository_object_format:
        type: "string"
        example: "sha1"
      issues_enabled:
        type: "boolean"
      merge_requests_enabled:
        type: "boolean"
      wiki_enabled:
        type: "boolean"
      jobs_enabled:
        type: "boolean"
      snippets_enabled:
        type: "boolean"
      container_registry_enabled:
        type: "boolean"
      service_desk_enabled:
        type: "boolean"
      service_desk_address:
        type: "string"
        example: "address@example.com"
      can_create_merge_request_in:
        type: "boolean"
      issues_access_level:
        type: "string"
        example: "enabled"
      repository_access_level:
        type: "string"
        example: "enabled"
      merge_requests_access_level:
        type: "string"
        example: "enabled"
      forking_access_level:
        type: "string"
        example: "enabled"
      wiki_access_level:
        type: "string"
        example: "enabled"
      builds_access_level:
        type: "string"
        example: "enabled"
      snippets_access_level:
        type: "string"
        example: "enabled"
      pages_access_level:
        type: "string"
        example: "enabled"
      analytics_access_level:
        type: "string"
        example: "enabled"
      container_registry_access_level:
        type: "string"
        example: "enabled"
      security_and_compliance_access_level:
        type: "string"
        example: "enabled"
      releases_access_level:
        type: "string"
        example: "enabled"
      environments_access_level:
        type: "string"
        example: "enabled"
      feature_flags_access_level:
        type: "string"
        example: "enabled"
      infrastructure_access_level:
        type: "string"
        example: "enabled"
      monitor_access_level:
        type: "string"
        example: "enabled"
      model_experiments_access_level:
        type: "string"
        example: "enabled"
      model_registry_access_level:
        type: "string"
        example: "enabled"
      emails_disabled:
        type: "boolean"
      emails_enabled:
        type: "boolean"
      shared_runners_enabled:
        type: "boolean"
      lfs_enabled:
        type: "boolean"
      creator_id:
        type: "integer"
        format: "int32"
        example: 1
      forked_from_project:
        $ref: "#/definitions/API_Entities_BasicProjectDetails"
      mr_default_target_self:
        type: "boolean"
      import_url:
        type: "string"
        example: "https://gitlab.com/gitlab/gitlab.git"
      import_type:
        type: "string"
        example: "git"
      import_status:
        type: "string"
        example: "none"
      import_error:
        type: "string"
        example: "Import error"
      open_issues_count:
        type: "integer"
        format: "int32"
        example: 1
      description_html:
        type: "string"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2020-05-07T04:27:17.016Z"
      ci_default_git_depth:
        type: "integer"
        format: "int32"
        example: 20
      ci_forward_deployment_enabled:
        type: "boolean"
      ci_forward_deployment_rollback_allowed:
        type: "boolean"
      ci_job_token_scope_enabled:
        type: "boolean"
      ci_separated_caches:
        type: "boolean"
      ci_allow_fork_pipelines_to_run_in_parent_project:
        type: "boolean"
      build_git_strategy:
        type: "string"
        example: "fetch"
      keep_latest_artifact:
        type: "boolean"
      restrict_user_defined_variables:
        type: "boolean"
      ci_pipeline_variables_minimum_override_role:
        type: "string"
      runners_token:
        type: "string"
        example: "b8547b1dc37721d05889db52fa2f02"
      runner_token_expiration_interval:
        type: "integer"
        format: "int32"
        example: 3600
      group_runners_enabled:
        type: "boolean"
      auto_cancel_pending_pipelines:
        type: "string"
        example: "enabled"
      build_timeout:
        type: "integer"
        format: "int32"
        example: 3600
      auto_devops_enabled:
        type: "boolean"
      auto_devops_deploy_strategy:
        type: "string"
        example: "continuous"
      ci_config_path:
        type: "string"
        example: ""
      public_jobs:
        type: "boolean"
      shared_with_groups:
        type: "array"
        items:
          type: "string"
      only_allow_merge_if_pipeline_succeeds:
        type: "boolean"
      allow_merge_on_skipped_pipeline:
        type: "boolean"
      request_access_enabled:
        type: "boolean"
      only_allow_merge_if_all_discussions_are_resolved:
        type: "boolean"
      remove_source_branch_after_merge:
        type: "boolean"
      printing_merge_request_link_enabled:
        type: "boolean"
      merge_method:
        type: "string"
        example: "merge"
      squash_option:
        type: "string"
        example: "default_off"
      enforce_auth_checks_on_uploads:
        type: "boolean"
      suggestion_commit_message:
        type: "string"
        example: "Suggestion message"
      merge_commit_template:
        type: "string"
        example: "%(title)"
      squash_commit_template:
        type: "string"
        example: "%(source_branch)"
      issue_branch_template:
        type: "string"
        example: "%(title)"
      statistics:
        $ref: "#/definitions/API_Entities_ProjectStatistics"
      warn_about_potentially_unwanted_characters:
        type: "boolean"
      autoclose_referenced_issues:
        type: "boolean"
      approvals_before_merge:
        type: "string"
      mirror:
        type: "string"
      mirror_user_id:
        type: "string"
      mirror_trigger_builds:
        type: "string"
      only_mirror_protected_branches:
        type: "string"
      mirror_overwrites_diverged_branches:
        type: "string"
      external_authorization_classification_label:
        type: "string"
      marked_for_deletion_at:
        type: "string"
      marked_for_deletion_on:
        type: "string"
      requirements_enabled:
        type: "string"
      requirements_access_level:
        type: "string"
      security_and_compliance_enabled:
        type: "string"
      compliance_frameworks:
        type: "string"
      issues_template:
        type: "string"
      merge_requests_template:
        type: "string"
      ci_restrict_pipeline_cancellation_role:
        type: "string"
      merge_pipelines_enabled:
        type: "string"
      merge_trains_enabled:
        type: "string"
      merge_trains_skip_train_allowed:
        type: "string"
      only_allow_merge_if_all_status_checks_passed:
        type: "string"
      allow_pipeline_trigger_approve_deployment:
        type: "boolean"
      prevent_merge_without_jira_issue:
        type: "string"
    description: "API_Entities_Project model"
    example:
      ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
      only_allow_merge_if_all_discussions_are_resolved: true
      enforce_auth_checks_on_uploads: true
      security_and_compliance_access_level: "enabled"
      custom_attributes:
        value: "bar"
        key: "foo"
      path: "project1"
      monitor_access_level: "enabled"
      merge_pipelines_enabled: "merge_pipelines_enabled"
      repository_access_level: "enabled"
      wiki_access_level: "enabled"
      shared_runners_enabled: true
      id: 1
      import_type: "git"
      feature_flags_access_level: "enabled"
      merge_requests_access_level: "enabled"
      merge_trains_enabled: "merge_trains_enabled"
      group_runners_enabled: true
      allow_merge_on_skipped_pipeline: true
      lfs_enabled: true
      ci_separated_caches: true
      resolve_outdated_diff_discussions: true
      builds_access_level: "enabled"
      shared_with_groups:
      - "shared_with_groups"
      - "shared_with_groups"
      security_and_compliance_enabled: "security_and_compliance_enabled"
      pages_access_level: "enabled"
      service_desk_enabled: true
      creator_id: 1
      ci_forward_deployment_enabled: true
      default_branch: "main"
      auto_devops_deploy_strategy: "continuous"
      description_html: "description_html"
      can_create_merge_request_in: true
      ci_allow_fork_pipelines_to_run_in_parent_project: true
      runners_token: "b8547b1dc37721d05889db52fa2f02"
      mirror: "mirror"
      merge_trains_skip_train_allowed: "merge_trains_skip_train_allowed"
      restrict_user_defined_variables: true
      container_registry_image_prefix: "registry.gitlab.example.com/gitlab/gitlab-client"
      auto_cancel_pending_pipelines: "enabled"
      snippets_enabled: true
      created_at: "2020-05-07T04:27:17.016Z"
      ci_default_git_depth: 20
      model_experiments_access_level: "enabled"
      ci_pipeline_variables_minimum_override_role: "ci_pipeline_variables_minimum_override_role"
      archived: true
      marked_for_deletion_at: "marked_for_deletion_at"
      updated_at: "2020-05-07T04:27:17.016Z"
      tag_list:
      - "tag"
      - "tag"
      issues_access_level: "enabled"
      issue_branch_template: "%(title)"
      warn_about_potentially_unwanted_characters: true
      ci_restrict_pipeline_cancellation_role: "ci_restrict_pipeline_cancellation_role"
      printing_merge_request_link_enabled: true
      topics:
      - "topic"
      - "topic"
      import_url: "https://gitlab.com/gitlab/gitlab.git"
      ci_forward_deployment_rollback_allowed: true
      squash_option: "default_off"
      jobs_enabled: true
      import_error: "Import error"
      environments_access_level: "enabled"
      forked_from_project:
        ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
        repository_storage: "default"
        path_with_namespace: "namespace1/project1"
        topics:
        - "topic"
        - "topic"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
        readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
        custom_attributes:
          value: "bar"
          key: "foo"
        path: "project1"
        license:
          html_url: "http://choosealicense.com/licenses/gpl-3.0"
          name: "GNU General Public License v3.0"
          nickname: "GNU GPLv3"
          key: "gpl-3.0"
          source_url: "source_url"
        web_url: "https://gitlab.example.com/gitlab/gitlab"
        avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
        tag_list:
        - "tag"
        - "tag"
        last_activity_at: "2013-09-30T13:46:02Z"
        name: "project1"
        namespace:
          path: "my_project"
          avatar_url: "https://example.com/avatar/12345"
          web_url: "https://example.com/group/my_project"
          kind: "project"
          parent_id: 1
          name: "project"
          id: 2
          full_path: "group/my_project"
        default_branch: "main"
        id: 1
        name_with_namespace: "John Doe / project1"
        license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
        star_count: 1
        forks_count: 1
      squash_commit_template: "%(source_branch)"
      only_allow_merge_if_pipeline_succeeds: true
      analytics_access_level: "enabled"
      avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
      wiki_enabled: true
      remove_source_branch_after_merge: true
      mirror_overwrites_diverged_branches: "mirror_overwrites_diverged_branches"
      star_count: 1
      statistics:
        commit_count: "commit_count"
        container_registry_size: "container_registry_size"
        wiki_size: "wiki_size"
        packages_size: "packages_size"
        lfs_objects_size: "lfs_objects_size"
        job_artifacts_size: "job_artifacts_size"
        repository_size: "repository_size"
        storage_size: "storage_size"
        uploads_size: "uploads_size"
        snippets_size: "snippets_size"
        pipeline_artifacts_size: "pipeline_artifacts_size"
      _links:
        merge_requests: "https://gitlab.example.com/api/v4/projects/4/merge_requests"
        cluster_agents: "https://gitlab.example.com/api/v4/projects/4/cluster_agents"
        members: "https://gitlab.example.com/api/v4/projects/4/members"
        self: "https://gitlab.example.com/api/v4/projects/4"
        repo_branches: "https://gitlab.example.com/api/v4/projects/4/repository/branches"
        issues: "https://gitlab.example.com/api/v4/projects/4/issues"
        events: "https://gitlab.example.com/api/v4/projects/4/events"
        labels: "https://gitlab.example.com/api/v4/projects/4/labels"
      request_access_enabled: true
      only_mirror_protected_branches: "only_mirror_protected_branches"
      runner_token_expiration_interval: 3600
      build_timeout: 3600
      infrastructure_access_level: "enabled"
      marked_for_deletion_on: "marked_for_deletion_on"
      mirror_trigger_builds: "mirror_trigger_builds"
      ci_job_token_scope_enabled: true
      emails_enabled: true
      visibility: "public"
      requirements_access_level: "requirements_access_level"
      merge_requests_enabled: true
      forking_access_level: "enabled"
      merge_commit_template: "%(title)"
      mr_default_target_self: true
      suggestion_commit_message: "Suggestion message"
      container_registry_access_level: "enabled"
      license:
        html_url: "http://choosealicense.com/licenses/gpl-3.0"
        name: "GNU General Public License v3.0"
        nickname: "GNU GPLv3"
        key: "gpl-3.0"
        source_url: "source_url"
      auto_devops_enabled: true
      mirror_user_id: "mirror_user_id"
      requirements_enabled: "requirements_enabled"
      compliance_frameworks: "compliance_frameworks"
      name: "project1"
      external_authorization_classification_label: "external_authorization_classification_label"
      approvals_before_merge: "approvals_before_merge"
      name_with_namespace: "John Doe / project1"
      license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
      model_registry_access_level: "enabled"
      autoclose_referenced_issues: true
      issues_enabled: true
      service_desk_address: "address@example.com"
      repository_storage: "default"
      open_issues_count: 1
      prevent_merge_without_jira_issue: "prevent_merge_without_jira_issue"
      packages_enabled: true
      keep_latest_artifact: true
      description: "desc"
      import_status: "none"
      ci_config_path: ""
      merge_requests_template: "merge_requests_template"
      only_allow_merge_if_all_status_checks_passed: "only_allow_merge_if_all_status_checks_passed"
      build_git_strategy: "fetch"
      last_activity_at: "2013-09-30T13:46:02Z"
      container_expiration_policy:
        keep_n: "keep_n"
        next_run_at: "next_run_at"
        name_regex_keep: "name_regex_keep"
        older_than: "older_than"
        name_regex: "name_regex"
        cadence: "cadence"
        enabled: "enabled"
      container_registry_enabled: true
      issues_template: "issues_template"
      allow_pipeline_trigger_approve_deployment: true
      owner:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      emails_disabled: true
      path_with_namespace: "namespace1/project1"
      releases_access_level: "enabled"
      snippets_access_level: "enabled"
      http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
      readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
      merge_method: "merge"
      repository_object_format: "sha1"
      web_url: "https://gitlab.example.com/gitlab/gitlab"
      public_jobs: true
      namespace:
        path: "my_project"
        avatar_url: "https://example.com/avatar/12345"
        web_url: "https://example.com/group/my_project"
        kind: "project"
        parent_id: 1
        name: "project"
        id: 2
        full_path: "group/my_project"
      empty_repo: true
      forks_count: 1
  API_Entities_LicenseBasic:
    type: "object"
    properties:
      key:
        type: "string"
        example: "gpl-3.0"
      name:
        type: "string"
        example: "GNU General Public License v3.0"
      nickname:
        type: "string"
        example: "GNU GPLv3"
      html_url:
        type: "string"
        example: "http://choosealicense.com/licenses/gpl-3.0"
      source_url:
        type: "string"
    example:
      html_url: "http://choosealicense.com/licenses/gpl-3.0"
      name: "GNU General Public License v3.0"
      nickname: "GNU GPLv3"
      key: "gpl-3.0"
      source_url: "source_url"
  API_Entities_NamespaceBasic:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 2
      name:
        type: "string"
        example: "project"
      path:
        type: "string"
        example: "my_project"
      kind:
        type: "string"
        example: "project"
      full_path:
        type: "string"
        example: "group/my_project"
      parent_id:
        type: "integer"
        format: "int32"
        example: 1
      avatar_url:
        type: "string"
        example: "https://example.com/avatar/12345"
      web_url:
        type: "string"
        example: "https://example.com/group/my_project"
    example:
      path: "my_project"
      avatar_url: "https://example.com/avatar/12345"
      web_url: "https://example.com/group/my_project"
      kind: "project"
      parent_id: 1
      name: "project"
      id: 2
      full_path: "group/my_project"
  API_Entities_UserBasic:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      username:
        type: "string"
        example: "admin"
      name:
        type: "string"
        example: "Administrator"
      state:
        type: "string"
        example: "active"
      locked:
        type: "boolean"
      avatar_url:
        type: "string"
        example: "https://gravatar.com/avatar/1"
      avatar_path:
        type: "string"
        example: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      custom_attributes:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_CustomAttribute"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/root"
    description: "API_Entities_UserBasic model"
    example:
      avatar_url: "https://gravatar.com/avatar/1"
      web_url: "https://gitlab.example.com/root"
      avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      name: "Administrator"
      id: 1
      state: "active"
      locked: true
      username: "admin"
      custom_attributes:
      - value: "bar"
        key: "foo"
      - value: "bar"
        key: "foo"
  API_Entities_ContainerExpirationPolicy:
    type: "object"
    properties:
      cadence:
        type: "string"
      enabled:
        type: "string"
      keep_n:
        type: "string"
      older_than:
        type: "string"
      name_regex:
        type: "string"
      name_regex_keep:
        type: "string"
      next_run_at:
        type: "string"
    example:
      keep_n: "keep_n"
      next_run_at: "next_run_at"
      name_regex_keep: "name_regex_keep"
      older_than: "older_than"
      name_regex: "name_regex"
      cadence: "cadence"
      enabled: "enabled"
  API_Entities_BasicProjectDetails:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      description:
        type: "string"
        example: "desc"
      name:
        type: "string"
        example: "project1"
      name_with_namespace:
        type: "string"
        example: "John Doe / project1"
      path:
        type: "string"
        example: "project1"
      path_with_namespace:
        type: "string"
        example: "namespace1/project1"
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-05-07T04:27:17.016Z"
      default_branch:
        type: "string"
        example: "main"
      tag_list:
        type: "array"
        items:
          type: "string"
          example: "tag"
      topics:
        type: "array"
        items:
          type: "string"
          example: "topic"
      ssh_url_to_repo:
        type: "string"
        example: "git@gitlab.example.com:gitlab/gitlab.git"
      http_url_to_repo:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab.git"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab"
      readme_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
      forks_count:
        type: "integer"
        format: "int32"
        example: 1
      license_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
      license:
        $ref: "#/definitions/API_Entities_LicenseBasic"
      avatar_url:
        type: "string"
        example: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
      star_count:
        type: "integer"
        format: "int32"
        example: 1
      last_activity_at:
        type: "string"
        format: "date-time"
        example: "2013-09-30T13:46:02Z"
      namespace:
        $ref: "#/definitions/API_Entities_NamespaceBasic"
      custom_attributes:
        $ref: "#/definitions/API_Entities_CustomAttribute"
      repository_storage:
        type: "string"
        example: "default"
    description: "API_Entities_BasicProjectDetails model"
    example:
      ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
      repository_storage: "default"
      path_with_namespace: "namespace1/project1"
      topics:
      - "topic"
      - "topic"
      description: "desc"
      created_at: "2020-05-07T04:27:17.016Z"
      http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
      readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
      custom_attributes:
        value: "bar"
        key: "foo"
      path: "project1"
      license:
        html_url: "http://choosealicense.com/licenses/gpl-3.0"
        name: "GNU General Public License v3.0"
        nickname: "GNU GPLv3"
        key: "gpl-3.0"
        source_url: "source_url"
      web_url: "https://gitlab.example.com/gitlab/gitlab"
      avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
      tag_list:
      - "tag"
      - "tag"
      last_activity_at: "2013-09-30T13:46:02Z"
      name: "project1"
      namespace:
        path: "my_project"
        avatar_url: "https://example.com/avatar/12345"
        web_url: "https://example.com/group/my_project"
        kind: "project"
        parent_id: 1
        name: "project"
        id: 2
        full_path: "group/my_project"
      default_branch: "main"
      id: 1
      name_with_namespace: "John Doe / project1"
      license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
      star_count: 1
      forks_count: 1
  API_Entities_ProjectStatistics:
    type: "object"
    properties:
      commit_count:
        type: "string"
      storage_size:
        type: "string"
      repository_size:
        type: "string"
      wiki_size:
        type: "string"
      lfs_objects_size:
        type: "string"
      job_artifacts_size:
        type: "string"
      pipeline_artifacts_size:
        type: "string"
      packages_size:
        type: "string"
      snippets_size:
        type: "string"
      uploads_size:
        type: "string"
      container_registry_size:
        type: "string"
    example:
      commit_count: "commit_count"
      container_registry_size: "container_registry_size"
      wiki_size: "wiki_size"
      packages_size: "packages_size"
      lfs_objects_size: "lfs_objects_size"
      job_artifacts_size: "job_artifacts_size"
      repository_size: "repository_size"
      storage_size: "storage_size"
      uploads_size: "uploads_size"
      snippets_size: "snippets_size"
      pipeline_artifacts_size: "pipeline_artifacts_size"
  postApiV4GroupsIdTransfer:
    type: "object"
    properties:
      group_id:
        type: "integer"
        format: "int32"
        description: "The ID of the target group to which the group needs to be transferred\
          \ to.If not provided, the source group will be promoted to a root group."
    description: "Transfer a group to a new parent group or promote a subgroup to\
      \ a root group"
  postApiV4GroupsIdShare:
    type: "object"
    required:
    - "group_access"
    - "group_id"
    properties:
      group_id:
        type: "integer"
        format: "int32"
        description: "The ID of the group to share"
      group_access:
        type: "integer"
        format: "int32"
        description: "The group access level"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
      expires_at:
        type: "string"
        format: "date"
        description: "Share expiration date"
    description: "Share a group with a group"
  API_Entities_UserPublic:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      username:
        type: "string"
        example: "admin"
      name:
        type: "string"
        example: "Administrator"
      state:
        type: "string"
        example: "active"
      locked:
        type: "boolean"
      avatar_url:
        type: "string"
        example: "https://gravatar.com/avatar/1"
      avatar_path:
        type: "string"
        example: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      custom_attributes:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_CustomAttribute"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/root"
      created_at:
        type: "string"
      bio:
        type: "string"
      location:
        type: "string"
      public_email:
        type: "string"
      skype:
        type: "string"
      linkedin:
        type: "string"
      twitter:
        type: "string"
      discord:
        type: "string"
      website_url:
        type: "string"
      organization:
        type: "string"
      job_title:
        type: "string"
      pronouns:
        type: "string"
      bot:
        type: "string"
      work_information:
        type: "string"
      followers:
        type: "string"
      following:
        type: "string"
      is_followed:
        type: "string"
      local_time:
        type: "string"
      last_sign_in_at:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:01.670Z"
      confirmed_at:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:01.670Z"
      last_activity_on:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:01.670Z"
      email:
        type: "string"
        example: "john@example.com"
      theme_id:
        type: "integer"
        format: "int32"
        example: 2
      color_scheme_id:
        type: "integer"
        format: "int32"
        example: 1
      projects_limit:
        type: "integer"
        format: "int32"
        example: 10
      current_sign_in_at:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:01.670Z"
      identities:
        $ref: "#/definitions/API_Entities_Identity"
      can_create_group:
        type: "boolean"
        example: true
      can_create_project:
        type: "boolean"
        example: true
      two_factor_enabled:
        type: "boolean"
        example: true
      external:
        type: "string"
      private_profile:
        type: "boolean"
        example: false
      commit_email:
        type: "string"
      shared_runners_minutes_limit:
        type: "string"
      extra_shared_runners_minutes_limit:
        type: "string"
      scim_identities:
        $ref: "#/definitions/API_Entities_ScimIdentity"
    description: "API_Entities_UserPublic model"
    example:
      can_create_project: true
      private_profile: false
      work_information: "work_information"
      commit_email: "commit_email"
      bot: "bot"
      theme_id: 2
      created_at: "created_at"
      bio: "bio"
      projects_limit: 10
      linkedin: "linkedin"
      last_activity_on: "2015-09-03T07:24:01.670Z"
      can_create_group: true
      custom_attributes:
      - value: "bar"
        key: "foo"
      - value: "bar"
        key: "foo"
      skype: "skype"
      twitter: "twitter"
      identities:
        provider: "provider"
        saml_provider_id: "saml_provider_id"
        extern_uid: "extern_uid"
      local_time: "local_time"
      last_sign_in_at: "2015-09-03T07:24:01.670Z"
      color_scheme_id: 1
      id: 1
      state: "active"
      locked: true
      confirmed_at: "2015-09-03T07:24:01.670Z"
      job_title: "job_title"
      email: "john@example.com"
      current_sign_in_at: "2015-09-03T07:24:01.670Z"
      two_factor_enabled: true
      scim_identities:
        group_id: "group_id"
        active: "active"
        extern_uid: "extern_uid"
      shared_runners_minutes_limit: "shared_runners_minutes_limit"
      avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      is_followed: "is_followed"
      external: "external"
      discord: "discord"
      followers: "followers"
      avatar_url: "https://gravatar.com/avatar/1"
      web_url: "https://gitlab.example.com/root"
      website_url: "website_url"
      extra_shared_runners_minutes_limit: "extra_shared_runners_minutes_limit"
      organization: "organization"
      following: "following"
      name: "Administrator"
      location: "location"
      pronouns: "pronouns"
      public_email: "public_email"
      username: "admin"
  API_Entities_Identity:
    type: "object"
    properties:
      provider:
        type: "string"
      extern_uid:
        type: "string"
      saml_provider_id:
        type: "string"
    example:
      provider: "provider"
      saml_provider_id: "saml_provider_id"
      extern_uid: "extern_uid"
  API_Entities_ScimIdentity:
    type: "object"
    properties:
      extern_uid:
        type: "string"
      group_id:
        type: "string"
      active:
        type: "string"
    example:
      group_id: "group_id"
      active: "active"
      extern_uid: "extern_uid"
  EE_API_Entities_SshCertificate:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 142
      title:
        type: "string"
        example: "new ssh cert"
      key:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-01-31T15:10:45.080Z"
    description: "EE_API_Entities_SshCertificate model"
    example:
      created_at: "2022-01-31T15:10:45.080Z"
      id: 142
      title: "new ssh cert"
      key: "key"
  postApiV4GroupsIdSshCertificates:
    type: "object"
    required:
    - "key"
    - "title"
    properties:
      title:
        type: "string"
        description: "The title of the ssh certificate"
      key:
        type: "string"
        description: "The key of the ssh certificate"
    description: "Create a ssh certificate for a group."
  API_Entities_Ci_Runner:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 8
      description:
        type: "string"
        example: "test-1-20150125"
      ip_address:
        type: "string"
        example: "127.0.0.1"
      active:
        type: "boolean"
        example: true
      paused:
        type: "boolean"
        example: false
      is_shared:
        type: "boolean"
        example: true
      runner_type:
        type: "string"
        example: "instance_type"
        enum:
        - "instance_type"
        - "group_type"
        - "project_type"
      name:
        type: "string"
        example: "test"
      online:
        type: "boolean"
        example: true
      status:
        type: "string"
        example: "online"
    description: "API_Entities_Ci_Runner model"
    example:
      paused: false
      is_shared: true
      name: "test"
      description: "test-1-20150125"
      active: true
      runner_type: "instance_type"
      online: true
      id: 8
      ip_address: "127.0.0.1"
      status: "online"
  API_Entities_Ci_ResetTokenResult:
    type: "object"
    properties:
      token:
        type: "string"
      token_expires_at:
        type: "string"
    description: "API_Entities_Ci_ResetTokenResult model"
    example:
      token_expires_at: "token_expires_at"
      token: "token"
  API_Entities_DeployToken:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "MyToken"
      username:
        type: "string"
        example: "gitlab+deploy-token-1"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-02-14T00:00:00.000Z"
      scopes:
        type: "array"
        example: ""
      revoked:
        type: "boolean"
      expired:
        type: "boolean"
    description: "API_Entities_DeployToken model"
    example:
      expires_at: "2020-02-14T00:00:00.000Z"
      expired: true
      name: "MyToken"
      id: 1
      scopes: ""
      revoked: true
      username: "gitlab+deploy-token-1"
  postApiV4GroupsIdDeployTokens:
    type: "object"
    required:
    - "name"
    - "scopes"
    properties:
      name:
        type: "string"
        description: "New deploy token's name"
      scopes:
        type: "array"
        description: "Indicates the deploy token scopes. Must be at least one of `read_repository`,\
          \ `read_registry`, `write_registry`, `read_package_registry`, or `write_package_registry`"
        items:
          type: "string"
          enum:
          - "read_repository"
          - "read_registry"
          - "write_registry"
          - "read_package_registry"
          - "write_package_registry"
      expires_at:
        type: "string"
        format: "date-time"
        description: "Expiration date for the deploy token. Does not expire if no\
          \ value is provided. Expected in ISO 8601 format (`2019-03-15T08:00:00Z`)"
      username:
        type: "string"
        description: "Username for deploy token. Default is `gitlab+deploy-token-{n}`"
    description: "Create a group deploy token"
  API_Entities_DeployTokenWithToken:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "MyToken"
      username:
        type: "string"
        example: "gitlab+deploy-token-1"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-02-14T00:00:00.000Z"
      scopes:
        type: "array"
        example: ""
      revoked:
        type: "boolean"
      expired:
        type: "boolean"
      token:
        type: "string"
        example: "jMRvtPNxrn3crTAGukpZ"
    description: "API_Entities_DeployTokenWithToken model"
    example:
      expires_at: "2020-02-14T00:00:00.000Z"
      expired: true
      name: "MyToken"
      id: 1
      scopes: ""
      revoked: true
      username: "gitlab+deploy-token-1"
      token: "jMRvtPNxrn3crTAGukpZ"
  API_Entities_Cluster:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      created_at:
        type: "string"
      domain:
        type: "string"
      enabled:
        type: "string"
      managed:
        type: "string"
      provider_type:
        type: "string"
      platform_type:
        type: "string"
      environment_scope:
        type: "string"
      cluster_type:
        type: "string"
      namespace_per_environment:
        type: "string"
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
      platform_kubernetes:
        $ref: "#/definitions/API_Entities_Platform_Kubernetes"
      provider_gcp:
        $ref: "#/definitions/API_Entities_Provider_Gcp"
      management_project:
        $ref: "#/definitions/API_Entities_ProjectIdentity"
    description: "API_Entities_Cluster model"
    example:
      provider_type: "provider_type"
      environment_scope: "environment_scope"
      created_at: "created_at"
      cluster_type: "cluster_type"
      provider_gcp:
        machine_type: "machine_type"
        cluster_id: "cluster_id"
        endpoint: "endpoint"
        zone: "zone"
        status_name: "status_name"
        gcp_project_id: "gcp_project_id"
        num_nodes: "num_nodes"
      enabled: "enabled"
      namespace_per_environment: "namespace_per_environment"
      platform_type: "platform_type"
      managed: "managed"
      domain: "domain"
      platform_kubernetes:
        api_url: "api_url"
        namespace: "namespace"
        authorization_type: "authorization_type"
        ca_cert: "ca_cert"
      name: "name"
      management_project:
        path: "project1"
        path_with_namespace: "namespace1/project1"
        name: "project1"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        id: 1
        name_with_namespace: "John Doe / project1"
      id: "id"
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
  API_Entities_Platform_Kubernetes:
    type: "object"
    properties:
      api_url:
        type: "string"
      namespace:
        type: "string"
      authorization_type:
        type: "string"
      ca_cert:
        type: "string"
    example:
      api_url: "api_url"
      namespace: "namespace"
      authorization_type: "authorization_type"
      ca_cert: "ca_cert"
  API_Entities_Provider_Gcp:
    type: "object"
    properties:
      cluster_id:
        type: "string"
      status_name:
        type: "string"
      gcp_project_id:
        type: "string"
      zone:
        type: "string"
      machine_type:
        type: "string"
      num_nodes:
        type: "string"
      endpoint:
        type: "string"
    example:
      machine_type: "machine_type"
      cluster_id: "cluster_id"
      endpoint: "endpoint"
      zone: "zone"
      status_name: "status_name"
      gcp_project_id: "gcp_project_id"
      num_nodes: "num_nodes"
  API_Entities_ProjectIdentity:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      description:
        type: "string"
        example: "desc"
      name:
        type: "string"
        example: "project1"
      name_with_namespace:
        type: "string"
        example: "John Doe / project1"
      path:
        type: "string"
        example: "project1"
      path_with_namespace:
        type: "string"
        example: "namespace1/project1"
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-05-07T04:27:17.016Z"
    example:
      path: "project1"
      path_with_namespace: "namespace1/project1"
      name: "project1"
      description: "desc"
      created_at: "2020-05-07T04:27:17.016Z"
      id: 1
      name_with_namespace: "John Doe / project1"
  API_Entities_ClusterGroup:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      created_at:
        type: "string"
      domain:
        type: "string"
      enabled:
        type: "string"
      managed:
        type: "string"
      provider_type:
        type: "string"
      platform_type:
        type: "string"
      environment_scope:
        type: "string"
      cluster_type:
        type: "string"
      namespace_per_environment:
        type: "string"
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
      platform_kubernetes:
        $ref: "#/definitions/API_Entities_Platform_Kubernetes"
      provider_gcp:
        $ref: "#/definitions/API_Entities_Provider_Gcp"
      management_project:
        $ref: "#/definitions/API_Entities_ProjectIdentity"
      group:
        $ref: "#/definitions/API_Entities_BasicGroupDetails"
    description: "API_Entities_ClusterGroup model"
    example:
      provider_type: "provider_type"
      environment_scope: "environment_scope"
      created_at: "created_at"
      cluster_type: "cluster_type"
      provider_gcp:
        machine_type: "machine_type"
        cluster_id: "cluster_id"
        endpoint: "endpoint"
        zone: "zone"
        status_name: "status_name"
        gcp_project_id: "gcp_project_id"
        num_nodes: "num_nodes"
      enabled: "enabled"
      namespace_per_environment: "namespace_per_environment"
      platform_type: "platform_type"
      managed: "managed"
      domain: "domain"
      platform_kubernetes:
        api_url: "api_url"
        namespace: "namespace"
        authorization_type: "authorization_type"
        ca_cert: "ca_cert"
      name: "name"
      management_project:
        path: "project1"
        path_with_namespace: "namespace1/project1"
        name: "project1"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        id: 1
        name_with_namespace: "John Doe / project1"
      id: "id"
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      group:
        web_url: "web_url"
        name: "name"
        id: "id"
  API_Entities_BasicGroupDetails:
    type: "object"
    properties:
      id:
        type: "string"
      web_url:
        type: "string"
      name:
        type: "string"
    description: "API_Entities_BasicGroupDetails model"
    example:
      web_url: "web_url"
      name: "name"
      id: "id"
  postApiV4GroupsIdClustersUser:
    type: "object"
    required:
    - "name"
    - "platform_kubernetes_attributes"
    properties:
      name:
        type: "string"
        description: "Cluster name"
      enabled:
        type: "boolean"
        description: "Determines if cluster is active or not, defaults to true"
        default: true
      environment_scope:
        type: "string"
        description: "The associated environment to the cluster"
        default: "*"
      namespace_per_environment:
        type: "boolean"
        description: "Deploy each environment to a separate Kubernetes namespace"
        default: true
      domain:
        type: "string"
        description: "Cluster base domain"
      management_project_id:
        type: "integer"
        format: "int32"
        description: "The ID of the management project"
      managed:
        type: "boolean"
        description: "Determines if GitLab will manage namespaces and service accounts\
          \ for this cluster, defaults to true"
        default: true
      platform_kubernetes_attributes:
        $ref: "#/definitions/postApiV4GroupsIdClustersUser_platform_kubernetes_attributes"
    description: "Add existing cluster to group"
  putApiV4GroupsIdClustersClusterId:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Cluster name"
      enabled:
        type: "boolean"
        description: "Determines if cluster is active or not"
      domain:
        type: "string"
        description: "Cluster base domain"
      environment_scope:
        type: "string"
        description: "The associated environment to the cluster"
      namespace_per_environment:
        type: "boolean"
        description: "Deploy each environment to a separate Kubernetes namespace"
        default: true
      management_project_id:
        type: "integer"
        format: "int32"
        description: "The ID of the management project"
      managed:
        type: "boolean"
        description: "Determines if GitLab will manage namespaces and service accounts\
          \ for this cluster"
      platform_kubernetes_attributes:
        $ref: "#/definitions/putApiV4GroupsIdClustersClusterId_platform_kubernetes_attributes"
    description: "Edit group cluster"
  API_Entities_ContainerRegistry_Repository:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "releases"
      path:
        type: "string"
        example: "group/project/releases"
      project_id:
        type: "integer"
        format: "int32"
        example: 9
      location:
        type: "string"
        example: "gitlab.example.com/group/project/releases"
      created_at:
        type: "string"
        format: "date-time"
        example: "2019-01-10T13:39:08.229Z"
      cleanup_policy_started_at:
        type: "string"
        format: "date-time"
        example: "2020-08-17T03:12:35.489Z"
      tags_count:
        type: "integer"
        format: "int32"
        example: 3
      tags:
        $ref: "#/definitions/API_Entities_ContainerRegistry_Tag"
      delete_api_path:
        type: "string"
        example: "delete/api/path"
      size:
        type: "integer"
        format: "int32"
        example: 12345
      status:
        type: "string"
        example: "delete_scheduled"
    description: "API_Entities_ContainerRegistry_Repository model"
    example:
      path: "group/project/releases"
      delete_api_path: "delete/api/path"
      size: 12345
      project_id: 9
      cleanup_policy_started_at: "2020-08-17T03:12:35.489Z"
      tags_count: 3
      name: "releases"
      created_at: "2019-01-10T13:39:08.229Z"
      location: "gitlab.example.com/group/project/releases"
      id: 1
      tags:
        path: "namespace1/project1/test_image_1:latest"
        name: "latest"
        location: "registry.dev/namespace1/project1/test_image_1:latest"
      status: "delete_scheduled"
  API_Entities_ContainerRegistry_Tag:
    type: "object"
    properties:
      name:
        type: "string"
        example: "latest"
      path:
        type: "string"
        example: "namespace1/project1/test_image_1:latest"
      location:
        type: "string"
        example: "registry.dev/namespace1/project1/test_image_1:latest"
    description: "API_Entities_ContainerRegistry_Tag model"
    example:
      path: "namespace1/project1/test_image_1:latest"
      name: "latest"
      location: "registry.dev/namespace1/project1/test_image_1:latest"
  postApiV4GroupsIdExportRelations:
    type: "object"
    properties:
      batched:
        type: "boolean"
        description: "Whether to export in batches"
    description: "Start relations export"
  API_Entities_BulkImports_ExportStatus:
    type: "object"
    properties:
      relation:
        type: "string"
        example: "issues"
      status:
        type: "string"
        example: "started"
        enum:
        - "started"
        - "finished"
        - "failed"
      error:
        type: "string"
        example: "Error message"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      batched:
        type: "boolean"
        example: true
      batches_count:
        type: "integer"
        format: "int32"
        example: 2
      total_objects_count:
        type: "integer"
        format: "int32"
        example: 100
      batches:
        $ref: "#/definitions/API_Entities_BulkImports_ExportBatchStatus"
    description: "API_Entities_BulkImports_ExportStatus model"
    example:
      batched: true
      batches:
        batch_number: 1
        updated_at: "2012-05-28T04:42:42-07:00"
        objects_count: 100
        error: "Error message"
        status: "started"
      updated_at: "2012-05-28T04:42:42-07:00"
      total_objects_count: 100
      error: "Error message"
      batches_count: 2
      relation: "issues"
      status: "started"
  API_Entities_BulkImports_ExportBatchStatus:
    type: "object"
    properties:
      status:
        type: "string"
        example: "started"
        enum:
        - "started"
        - "finished"
        - "failed"
      batch_number:
        type: "integer"
        format: "int32"
        example: 1
      objects_count:
        type: "integer"
        format: "int32"
        example: 100
      error:
        type: "string"
        example: "Error message"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
    example:
      batch_number: 1
      updated_at: "2012-05-28T04:42:42-07:00"
      objects_count: 100
      error: "Error message"
      status: "started"
  API_Entities_Package:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "@foo/bar"
      conan_package_name:
        type: "string"
      version:
        type: "string"
        example: "1.0.3"
      package_type:
        type: "string"
        example: "npm"
      status:
        type: "string"
        example: "default"
      _links:
        $ref: "#/definitions/API_Entities_Package__links"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-09-16T12:47:31.949Z"
      last_downloaded_at:
        type: "string"
        format: "date-time"
        example: "2022-09-19T11:32:35.169Z"
      project_id:
        type: "integer"
        format: "int32"
        example: 2
      project_path:
        type: "string"
        example: "gitlab/foo/bar"
      tags:
        type: "string"
      pipeline:
        $ref: "#/definitions/API_Entities_Package_Pipeline"
      pipelines:
        $ref: "#/definitions/API_Entities_Package_Pipeline"
      versions:
        $ref: "#/definitions/API_Entities_PackageVersion"
    description: "API_Entities_Package model"
    example:
      _links:
        delete_api_path: "delete_api_path"
        web_path: "web_path"
      created_at: "2022-09-16T12:47:31.949Z"
      package_type: "npm"
      version: "1.0.3"
      tags: "tags"
      pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        status: "success"
      pipelines:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        status: "success"
      project_id: 2
      project_path: "gitlab/foo/bar"
      versions:
        pipeline:
          ref: "feature-branch"
          updated_at: "2022-10-21T16:49:48.000+02:00"
          web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
          iid: 2
          project_id: 3
          created_at: "2022-10-21T16:49:48.000+02:00"
          id: 1
          source: "push"
          sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
          user:
            avatar_url: "https://gravatar.com/avatar/1"
            web_url: "https://gitlab.example.com/root"
            avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
            name: "Administrator"
            id: 1
            state: "active"
            locked: true
            username: "admin"
            custom_attributes:
            - value: "bar"
              key: "foo"
            - value: "bar"
              key: "foo"
          status: "success"
        created_at: "created_at"
        id: "id"
        version: "version"
        tags: "tags"
      name: "@foo/bar"
      id: 1
      last_downloaded_at: "2022-09-19T11:32:35.169Z"
      conan_package_name: "conan_package_name"
      status: "default"
  API_Entities_Package_Pipeline:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      iid:
        type: "integer"
        format: "int32"
        example: 2
      project_id:
        type: "integer"
        format: "int32"
        example: 3
      sha:
        type: "string"
        example: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
      ref:
        type: "string"
        example: "feature-branch"
      status:
        type: "string"
        example: "success"
      source:
        type: "string"
        example: "push"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-10-21T16:49:48.000+02:00"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2022-10-21T16:49:48.000+02:00"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
    description: "API_Entities_Package_Pipeline model"
    example:
      ref: "feature-branch"
      updated_at: "2022-10-21T16:49:48.000+02:00"
      web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
      iid: 2
      project_id: 3
      created_at: "2022-10-21T16:49:48.000+02:00"
      id: 1
      source: "push"
      sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      status: "success"
  API_Entities_PackageVersion:
    type: "object"
    properties:
      id:
        type: "string"
      version:
        type: "string"
      created_at:
        type: "string"
      tags:
        type: "string"
      pipeline:
        $ref: "#/definitions/API_Entities_Package_Pipeline"
    example:
      pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        status: "success"
      created_at: "created_at"
      id: "id"
      version: "version"
      tags: "tags"
  API_Entities_Ci_Variable:
    type: "object"
    properties:
      variable_type:
        type: "string"
        example: "env_var"
      key:
        type: "string"
        example: "TEST_VARIABLE_1"
      value:
        type: "string"
        example: "TEST_1"
      hidden:
        type: "boolean"
      protected:
        type: "boolean"
      masked:
        type: "boolean"
      raw:
        type: "boolean"
      environment_scope:
        type: "string"
        example: "*"
      description:
        type: "string"
        example: "This variable is being used for ..."
    description: "API_Entities_Ci_Variable model"
    example:
      environment_scope: "*"
      hidden: true
      protected: true
      variable_type: "env_var"
      masked: true
      raw: true
      description: "This variable is being used for ..."
      value: "TEST_1"
      key: "TEST_VARIABLE_1"
  postApiV4GroupsIdVariables:
    type: "object"
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
        description: "The ID of a group or URL-encoded path of the group owned by\
          \ the\n        authenticated user"
      value:
        type: "string"
        description: "The value of a variable"
      protected:
        type: "string"
        description: "Whether the variable is protected"
      masked_and_hidden:
        type: "string"
        description: "Whether the variable is masked and hidden"
      masked:
        type: "string"
        description: "Whether the variable is masked"
      raw:
        type: "string"
        description: "Whether the variable will be expanded"
      variable_type:
        type: "string"
        description: "The type of the variable. Default: env_var"
        enum:
        - "env_var"
        - "file"
      environment_scope:
        type: "string"
        description: "The environment scope of the variable"
      description:
        type: "string"
        description: "The description of the variable"
    description: "Create a new variable in a group"
  putApiV4GroupsIdVariablesKey:
    type: "object"
    properties:
      value:
        type: "string"
        description: "The value of a variable"
      protected:
        type: "string"
        description: "Whether the variable is protected"
      masked:
        type: "string"
        description: "Whether the variable is masked"
      raw:
        type: "string"
        description: "Whether the variable will be expanded"
      variable_type:
        type: "string"
        description: "The type of the variable. Default: env_var"
        enum:
        - "env_var"
        - "file"
      environment_scope:
        type: "string"
        description: "The environment scope of the variable"
      description:
        type: "string"
        description: "The description of the variable"
    description: "Update an existing variable from a group"
  postApiV4GroupsIdInvitations:
    type: "object"
    required:
    - "access_level"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level (defaults: `30`, developer access level)"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        - 5
      email:
        type: "array"
        description: "The email address to invite, or multiple emails separated by\
          \ comma"
        items:
          type: "string"
      user_id:
        type: "array"
        description: "The user ID of the new member or multiple IDs separated by commas."
        items:
          type: "string"
      expires_at:
        type: "string"
        format: "date-time"
        description: "Date string in the format YEAR-MONTH-DAY"
      invite_source:
        type: "string"
        description: "Source that triggered the member creation process"
        default: "invitations-api"
    description: "Invite non-members by email address to a group or project."
  API_Entities_Invitation:
    type: "object"
    properties:
      access_level:
        type: "string"
      created_at:
        type: "string"
      expires_at:
        type: "string"
      invite_email:
        type: "string"
      invite_token:
        type: "string"
      user_name:
        type: "string"
      created_by_name:
        type: "string"
    description: "API_Entities_Invitation model"
    example:
      access_level: "access_level"
      expires_at: "expires_at"
      user_name: "user_name"
      created_at: "created_at"
      created_by_name: "created_by_name"
      invite_token: "invite_token"
      invite_email: "invite_email"
  putApiV4GroupsIdInvitationsEmail:
    type: "object"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level (defaults: `30`, developer access level)"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
      expires_at:
        type: "string"
        format: "date-time"
        description: "Date string in ISO 8601 format (`YYYY-MM-DDTHH:MM:SSZ`)"
    description: "Updates a group or project invitation."
  API_Entities_Member:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      username:
        type: "string"
        example: "admin"
      name:
        type: "string"
        example: "Administrator"
      state:
        type: "string"
        example: "active"
      locked:
        type: "boolean"
      avatar_url:
        type: "string"
        example: "https://gravatar.com/avatar/1"
      avatar_path:
        type: "string"
        example: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      custom_attributes:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_CustomAttribute"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/root"
      access_level:
        type: "string"
      created_at:
        type: "string"
      created_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      expires_at:
        type: "string"
      group_saml_identity:
        $ref: "#/definitions/API_Entities_Identity"
      email:
        type: "string"
      is_using_seat:
        type: "string"
      override:
        type: "string"
      membership_state:
        type: "string"
      member_role:
        $ref: "#/definitions/EE_API_Entities_MemberRole"
    description: "API_Entities_Member model"
    example:
      is_using_seat: "is_using_seat"
      member_role:
        remove_group: true
        base_access_level: 40
        remove_project: true
        manage_security_policy_link: true
        admin_group_member: true
        manage_group_access_tokens: true
        manage_project_access_tokens: true
        admin_push_rules: true
        read_vulnerability: true
        admin_cicd_variables: true
        read_code: true
        admin_terraform_state: true
        admin_merge_request: true
        admin_vulnerability: true
        manage_deploy_tokens: true
        group_id: 2
        archive_project: true
        read_dependency: true
        admin_web_hook: true
        id: 2
        admin_compliance_framework: true
        manage_merge_request_settings: true
      avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      group_saml_identity:
        provider: "provider"
        saml_provider_id: "saml_provider_id"
        extern_uid: "extern_uid"
      created_at: "created_at"
      created_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      custom_attributes:
      - value: "bar"
        key: "foo"
      - value: "bar"
        key: "foo"
      access_level: "access_level"
      membership_state: "membership_state"
      expires_at: "expires_at"
      avatar_url: "https://gravatar.com/avatar/1"
      web_url: "https://gitlab.example.com/root"
      name: "Administrator"
      id: 1
      state: "active"
      override: "override"
      locked: true
      email: "email"
      username: "admin"
  EE_API_Entities_MemberRole:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 2
      group_id:
        type: "integer"
        format: "int32"
        example: 2
      base_access_level:
        type: "integer"
        format: "int32"
        example: 40
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        - 5
      admin_cicd_variables:
        type: "boolean"
      admin_compliance_framework:
        type: "boolean"
      admin_group_member:
        type: "boolean"
      admin_merge_request:
        type: "boolean"
      admin_push_rules:
        type: "boolean"
      admin_terraform_state:
        type: "boolean"
      admin_vulnerability:
        type: "boolean"
      admin_web_hook:
        type: "boolean"
      archive_project:
        type: "boolean"
      manage_deploy_tokens:
        type: "boolean"
      manage_group_access_tokens:
        type: "boolean"
      manage_merge_request_settings:
        type: "boolean"
      manage_project_access_tokens:
        type: "boolean"
      manage_security_policy_link:
        type: "boolean"
      read_code:
        type: "boolean"
      read_dependency:
        type: "boolean"
      read_vulnerability:
        type: "boolean"
      remove_group:
        type: "boolean"
      remove_project:
        type: "boolean"
    example:
      remove_group: true
      base_access_level: 40
      remove_project: true
      manage_security_policy_link: true
      admin_group_member: true
      manage_group_access_tokens: true
      manage_project_access_tokens: true
      admin_push_rules: true
      read_vulnerability: true
      admin_cicd_variables: true
      read_code: true
      admin_terraform_state: true
      admin_merge_request: true
      admin_vulnerability: true
      manage_deploy_tokens: true
      group_id: 2
      archive_project: true
      read_dependency: true
      admin_web_hook: true
      id: 2
      admin_compliance_framework: true
      manage_merge_request_settings: true
  postApiV4GroupsIdMembers:
    type: "object"
    required:
    - "access_level"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level (defaults: `30`, developer access level)"
      user_id:
        type: "integer"
        format: "int32"
        description: "The user ID of the new member or multiple IDs separated by commas."
      username:
        type: "string"
        description: "The username of the new member or multiple usernames separated\
          \ by commas."
      expires_at:
        type: "string"
        format: "date-time"
        description: "Date string in the format YEAR-MONTH-DAY"
      invite_source:
        type: "string"
        description: "Source that triggered the member creation process"
        default: "members-api"
    description: "Adds a member to a group or project."
  putApiV4GroupsIdMembersUserId:
    type: "object"
    required:
    - "access_level"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level"
      expires_at:
        type: "string"
        format: "date-time"
        description: "Date string in the format YEAR-MONTH-DAY"
      member_role_id:
        type: "integer"
        format: "int32"
        description: "The ID of the Member Role to be updated"
    description: "Updates a member of a group or project."
  putApiV4GroupsIdMembersUserIdState:
    type: "object"
    required:
    - "state"
    properties:
      state:
        type: "string"
        description: "The new state for the memberships of the user"
        enum:
        - "awaiting"
        - "active"
    description: "Changes the state of the memberships of a user in the group"
  EE_API_Entities_BillableMembership:
    type: "object"
    properties:
      id:
        type: "string"
      source_id:
        type: "string"
      source_full_name:
        type: "string"
      source_members_url:
        type: "string"
      created_at:
        type: "string"
      expires_at:
        type: "string"
      access_level:
        $ref: "#/definitions/EE_API_Entities_BillableMembership_access_level"
    description: "EE_API_Entities_BillableMembership model"
    example:
      access_level:
        string_value: "string_value"
        custom_role: "custom_role"
        integer_value: "integer_value"
      source_full_name: "source_full_name"
      expires_at: "expires_at"
      source_members_url: "source_members_url"
      created_at: "created_at"
      id: "id"
      source_id: "source_id"
  API_Entities_MergeRequestBasic:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 84
      iid:
        type: "integer"
        format: "int32"
        example: 14
      project_id:
        type: "integer"
        format: "int32"
        example: 4
      title:
        type: "string"
        example: "Impedit et ut et dolores vero provident ullam est"
      description:
        type: "string"
        example: "Repellendus impedit et vel velit dignissimos."
      state:
        type: "string"
        example: "closed"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-08-17T12:46:35.053Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2022-11-14T17:22:01.470Z"
      merged_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      merge_user:
        $ref: "#/definitions/API_Entities_UserBasic"
      merged_at:
        type: "string"
      closed_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      closed_at:
        type: "string"
      title_html:
        type: "string"
      description_html:
        type: "string"
      target_branch:
        type: "string"
      source_branch:
        type: "string"
      user_notes_count:
        type: "string"
      upvotes:
        type: "string"
      downvotes:
        type: "string"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      assignees:
        $ref: "#/definitions/API_Entities_UserBasic"
      assignee:
        $ref: "#/definitions/API_Entities_UserBasic"
      reviewers:
        $ref: "#/definitions/API_Entities_UserBasic"
      source_project_id:
        type: "string"
      target_project_id:
        type: "string"
      labels:
        type: "string"
      draft:
        type: "string"
      imported:
        type: "string"
      imported_from:
        type: "string"
        example: "bitbucket"
      work_in_progress:
        type: "string"
      milestone:
        $ref: "#/definitions/API_Entities_Milestone"
      merge_when_pipeline_succeeds:
        type: "string"
      merge_status:
        type: "string"
      detailed_merge_status:
        type: "string"
      sha:
        type: "string"
      merge_commit_sha:
        type: "string"
      squash_commit_sha:
        type: "string"
      discussion_locked:
        type: "string"
      should_remove_source_branch:
        type: "string"
      force_remove_source_branch:
        type: "string"
      prepared_at:
        type: "string"
      allow_collaboration:
        type: "string"
      allow_maintainer_to_push:
        type: "string"
      reference:
        type: "string"
      references:
        $ref: "#/definitions/API_Entities_IssuableReferences"
      web_url:
        type: "string"
      time_stats:
        $ref: "#/definitions/API_Entities_IssuableTimeStats"
      squash:
        type: "string"
      squash_on_merge:
        type: "string"
      task_completion_status:
        type: "string"
      has_conflicts:
        type: "string"
      blocking_discussions_resolved:
        type: "string"
      approvals_before_merge:
        type: "string"
    description: "API_Entities_MergeRequestBasic model"
    example:
      discussion_locked: "discussion_locked"
      upvotes: "upvotes"
      merge_when_pipeline_succeeds: "merge_when_pipeline_succeeds"
      references:
        short: "&6"
        relative: "&6"
        full: "test&6"
      merge_user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      assignees:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      allow_maintainer_to_push: "allow_maintainer_to_push"
      reference: "reference"
      squash: "squash"
      project_id: 4
      draft: "draft"
      time_stats:
        time_estimate: 12600
        total_time_spent: 3600
        human_time_estimate: "3h 30m"
        human_total_time_spent: "1h"
      id: 84
      state: "closed"
      closed_at: "closed_at"
      work_in_progress: "work_in_progress"
      squash_on_merge: "squash_on_merge"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      merged_at: "merged_at"
      imported_from: "bitbucket"
      target_branch: "target_branch"
      downvotes: "downvotes"
      should_remove_source_branch: "should_remove_source_branch"
      sha: "sha"
      labels: "labels"
      user_notes_count: "user_notes_count"
      squash_commit_sha: "squash_commit_sha"
      description_html: "description_html"
      assignee:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      prepared_at: "prepared_at"
      task_completion_status: "task_completion_status"
      approvals_before_merge: "approvals_before_merge"
      target_project_id: "target_project_id"
      force_remove_source_branch: "force_remove_source_branch"
      has_conflicts: "has_conflicts"
      detailed_merge_status: "detailed_merge_status"
      iid: 14
      description: "Repellendus impedit et vel velit dignissimos."
      created_at: "2022-08-17T12:46:35.053Z"
      merged_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      title: "Impedit et ut et dolores vero provident ullam est"
      allow_collaboration: "allow_collaboration"
      closed_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      source_branch: "source_branch"
      updated_at: "2022-11-14T17:22:01.470Z"
      imported: "imported"
      merge_commit_sha: "merge_commit_sha"
      blocking_discussions_resolved: "blocking_discussions_resolved"
      source_project_id: "source_project_id"
      reviewers:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      milestone:
        iid: "iid"
        due_date: "due_date"
        description: "description"
        created_at: "created_at"
        title: "title"
        expired: "expired"
        updated_at: "updated_at"
        web_url: "web_url"
        project_id: "project_id"
        group_id: "group_id"
        id: "id"
        state: "state"
        start_date: "start_date"
      web_url: "web_url"
      title_html: "title_html"
      merge_status: "merge_status"
  API_Entities_Milestone:
    type: "object"
    properties:
      id:
        type: "string"
      iid:
        type: "string"
      project_id:
        type: "string"
      group_id:
        type: "string"
      title:
        type: "string"
      description:
        type: "string"
      state:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      due_date:
        type: "string"
      start_date:
        type: "string"
      expired:
        type: "string"
      web_url:
        type: "string"
    example:
      iid: "iid"
      due_date: "due_date"
      description: "description"
      created_at: "created_at"
      title: "title"
      expired: "expired"
      updated_at: "updated_at"
      web_url: "web_url"
      project_id: "project_id"
      group_id: "group_id"
      id: "id"
      state: "state"
      start_date: "start_date"
  API_Entities_IssuableReferences:
    type: "object"
    properties:
      short:
        type: "string"
        example: "&6"
      relative:
        type: "string"
        example: "&6"
      full:
        type: "string"
        example: "test&6"
    example:
      short: "&6"
      relative: "&6"
      full: "test&6"
  API_Entities_IssuableTimeStats:
    type: "object"
    properties:
      time_estimate:
        type: "integer"
        format: "int32"
        example: 12600
      total_time_spent:
        type: "integer"
        format: "int32"
        example: 3600
      human_time_estimate:
        type: "string"
        example: "3h 30m"
      human_total_time_spent:
        type: "string"
        example: "1h"
    description: "API_Entities_IssuableTimeStats model"
    example:
      time_estimate: 12600
      total_time_spent: 3600
      human_time_estimate: "3h 30m"
      human_total_time_spent: "1h"
  API_Entities_Release:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Release v1.0"
      tag_name:
        type: "string"
        example: "v1.0"
      description:
        type: "string"
        example: "Finally released v1.0"
      created_at:
        type: "string"
        format: "date-time"
        example: "2019-01-03T01:56:19.539Z"
      released_at:
        type: "string"
        format: "date-time"
        example: "2019-01-03T01:56:19.539Z"
      upcoming_release:
        type: "boolean"
      description_html:
        type: "string"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      commit:
        $ref: "#/definitions/API_Entities_Commit"
      milestones:
        $ref: "#/definitions/API_Entities_MilestoneWithStats"
      commit_path:
        type: "string"
        example: "/root/app/commit/588440f66559714280628a4f9799f0c4eb880a4a"
      tag_path:
        type: "string"
        example: "/root/app/-/tags/v1.0"
      assets:
        $ref: "#/definitions/API_Entities_Release_assets"
      evidences:
        $ref: "#/definitions/API_Entities_Releases_Evidence"
      _links:
        $ref: "#/definitions/API_Entities_Release__links"
    description: "API_Entities_Release model"
    example:
      _links:
        closed_issues_url: "closed_issues_url"
        opened_issues_url: "opened_issues_url"
        merged_merge_requests_url: "merged_merge_requests_url"
        edit_url: "edit_url"
        self: "self"
        closed_merge_requests_url: "closed_merge_requests_url"
        opened_merge_requests_url: "opened_merge_requests_url"
      tag_name: "v1.0"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      commit:
        author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      description: "Finally released v1.0"
      created_at: "2019-01-03T01:56:19.539Z"
      released_at: "2019-01-03T01:56:19.539Z"
      commit_path: "/root/app/commit/588440f66559714280628a4f9799f0c4eb880a4a"
      upcoming_release: true
      assets:
        sources:
          format: "zip"
          url: "https://gitlab.example.com/root/app/-/archive/v1.0/app-v1.0.zip"
        count: 2
        links:
          link_type: "other"
          direct_asset_url: "https://gitlab.example.com/root/app/-/releases/v1.0/downloads/app-v1.0.dmg"
          name: "app-v1.0.dmg"
          id: 1
          url: "https://gitlab.example.com/root/app/-/jobs/688/artifacts/raw/bin/app-v1.0.dmg"
      name: "Release v1.0"
      description_html: "description_html"
      milestones:
        iid: "iid"
        due_date: "due_date"
        description: "description"
        created_at: "created_at"
        title: "title"
        expired: "expired"
        updated_at: "updated_at"
        web_url: "web_url"
        project_id: "project_id"
        group_id: "group_id"
        issue_stats:
          total: "total"
          closed: "closed"
        id: "id"
        state: "state"
        start_date: "start_date"
      evidences:
        filepath: "https://gitlab.example.com/root/app/-/releases/v1.0/evidence.json"
        sha: "760d6cdfb0879c3ffedec13af470e0f71cf52c6cde4d"
        collected_at: "2019-01-03T01:56:19.539Z"
      tag_path: "/root/app/-/tags/v1.0"
  API_Entities_Commit:
    type: "object"
    properties:
      id:
        type: "string"
        example: "2695effb5807a22ff3d138d593fd856244e155e7"
      short_id:
        type: "string"
        example: "2695effb"
      created_at:
        type: "string"
        format: "date-time"
        example: "2017-07-26T11:08:53.000+02:00"
      parent_ids:
        type: "array"
        items:
          type: "string"
          example: "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
      title:
        type: "string"
        example: "Initial commit"
      message:
        type: "string"
        example: "Initial commit"
      author_name:
        type: "string"
        example: "John Smith"
      author_email:
        type: "string"
        example: "john@example.com"
      authored_date:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      committer_name:
        type: "string"
        example: "Jack Smith"
      committer_email:
        type: "string"
        example: "jack@example.com"
      committed_date:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      trailers:
        type: "object"
        example: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        properties: {}
      extended_trailers:
        type: "object"
        example: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\", \"Jane\
          \ Doe <janedoe@gitlab.com>\"] }"
        properties: {}
      web_url:
        type: "string"
        example: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
    description: "API_Entities_Commit model"
    example:
      author_name: "John Smith"
      authored_date: "2012-05-28T04:42:42-07:00"
      committer_email: "jack@example.com"
      extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
        , \"Jane Doe <janedoe@gitlab.com>\"] }"
      created_at: "2017-07-26T11:08:53.000+02:00"
      short_id: "2695effb"
      parent_ids:
      - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
      - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
      title: "Initial commit"
      message: "Initial commit"
      committer_name: "Jack Smith"
      trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
      committed_date: "2012-05-28T04:42:42-07:00"
      web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
      author_email: "john@example.com"
      id: "2695effb5807a22ff3d138d593fd856244e155e7"
  API_Entities_MilestoneWithStats:
    type: "object"
    properties:
      id:
        type: "string"
      iid:
        type: "string"
      project_id:
        type: "string"
      group_id:
        type: "string"
      title:
        type: "string"
      description:
        type: "string"
      state:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      due_date:
        type: "string"
      start_date:
        type: "string"
      expired:
        type: "string"
      web_url:
        type: "string"
      issue_stats:
        $ref: "#/definitions/API_Entities_MilestoneWithStats_issue_stats"
    example:
      iid: "iid"
      due_date: "due_date"
      description: "description"
      created_at: "created_at"
      title: "title"
      expired: "expired"
      updated_at: "updated_at"
      web_url: "web_url"
      project_id: "project_id"
      group_id: "group_id"
      issue_stats:
        total: "total"
        closed: "closed"
      id: "id"
      state: "state"
      start_date: "start_date"
  API_Entities_Releases_Source:
    type: "object"
    properties:
      format:
        type: "string"
        example: "zip"
      url:
        type: "string"
        example: "https://gitlab.example.com/root/app/-/archive/v1.0/app-v1.0.zip"
    example:
      format: "zip"
      url: "https://gitlab.example.com/root/app/-/archive/v1.0/app-v1.0.zip"
  API_Entities_Releases_Link:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "app-v1.0.dmg"
      url:
        type: "string"
        example: "https://gitlab.example.com/root/app/-/jobs/688/artifacts/raw/bin/app-v1.0.dmg"
      direct_asset_url:
        type: "string"
        example: "https://gitlab.example.com/root/app/-/releases/v1.0/downloads/app-v1.0.dmg"
      link_type:
        type: "string"
        example: "other"
    description: "API_Entities_Releases_Link model"
    example:
      link_type: "other"
      direct_asset_url: "https://gitlab.example.com/root/app/-/releases/v1.0/downloads/app-v1.0.dmg"
      name: "app-v1.0.dmg"
      id: 1
      url: "https://gitlab.example.com/root/app/-/jobs/688/artifacts/raw/bin/app-v1.0.dmg"
  API_Entities_Releases_Evidence:
    type: "object"
    properties:
      sha:
        type: "string"
        example: "760d6cdfb0879c3ffedec13af470e0f71cf52c6cde4d"
      filepath:
        type: "string"
        example: "https://gitlab.example.com/root/app/-/releases/v1.0/evidence.json"
      collected_at:
        type: "string"
        format: "date-time"
        example: "2019-01-03T01:56:19.539Z"
    example:
      filepath: "https://gitlab.example.com/root/app/-/releases/v1.0/evidence.json"
      sha: "760d6cdfb0879c3ffedec13af470e0f71cf52c6cde4d"
      collected_at: "2019-01-03T01:56:19.539Z"
  API_Entities_ResourceAccessToken:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 2
      name:
        type: "string"
        example: "John Doe"
      revoked:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      scopes:
        type: "array"
        example: ""
      user_id:
        type: "integer"
        format: "int32"
        example: 3
      last_used_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      active:
        type: "boolean"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      access_level:
        type: "integer"
        format: "int32"
        example: 40
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
    description: "API_Entities_ResourceAccessToken model"
    example:
      access_level: 40
      last_used_at: "2020-08-31T15:53:00.073Z"
      expires_at: "2020-08-31T15:53:00.073Z"
      user_id: 3
      name: "John Doe"
      created_at: "2000-01-23T04:56:07.000+00:00"
      active: true
      id: 2
      scopes: ""
      revoked: true
  postApiV4GroupsIdAccessTokens:
    type: "object"
    required:
    - "expires_at"
    - "name"
    - "scopes"
    properties:
      name:
        type: "string"
        example: "test"
        description: "Resource access token name"
      scopes:
        type: "array"
        example:
        - "api"
        - "read_repository"
        description: "The permissions of the token"
        items:
          type: "string"
          enum:
          - "api"
          - "read_api"
          - "create_runner"
          - "k8s_proxy"
          - "read_repository"
          - "write_repository"
          - "read_observability"
          - "write_observability"
          - "ai_features"
      expires_at:
        type: "string"
        format: "date"
        example: "\"2021-01-31"
        description: "The expiration date of the token"
      access_level:
        type: "integer"
        format: "int32"
        example: 40
        description: "The access level of the token in the group"
        default: 40
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
    description: "Create a resource access token"
  API_Entities_ResourceAccessTokenWithToken:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 2
      name:
        type: "string"
        example: "John Doe"
      revoked:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      scopes:
        type: "array"
        example: ""
      user_id:
        type: "integer"
        format: "int32"
        example: 3
      last_used_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      active:
        type: "boolean"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      access_level:
        type: "integer"
        format: "int32"
        example: 40
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
      token:
        type: "string"
    description: "API_Entities_ResourceAccessTokenWithToken model"
    example:
      access_level: 40
      last_used_at: "2020-08-31T15:53:00.073Z"
      expires_at: "2020-08-31T15:53:00.073Z"
      user_id: 3
      name: "John Doe"
      created_at: "2000-01-23T04:56:07.000+00:00"
      active: true
      id: 2
      scopes: ""
      revoked: true
      token: "token"
  postApiV4GroupsIdAccessTokensTokenIdRotate:
    type: "object"
    properties:
      expires_at:
        type: "string"
        format: "date"
        example: "2021-01-31"
        description: "The expiration date of the token"
    description: "Rotate a resource access token"
  API_Entities_WikiPageBasic:
    type: "object"
    properties:
      format:
        type: "string"
        example: "markdown"
      slug:
        type: "string"
        example: "deploy"
      title:
        type: "string"
        example: "deploy"
    description: "API_Entities_WikiPageBasic model"
    example:
      format: "markdown"
      title: "deploy"
      slug: "deploy"
  API_Entities_WikiPage:
    type: "object"
    properties:
      format:
        type: "string"
        example: "markdown"
      slug:
        type: "string"
        example: "deploy"
      title:
        type: "string"
        example: "deploy"
      content:
        type: "string"
        example: "Here is an instruction how to deploy this project."
      encoding:
        type: "string"
        example: "UTF-8"
      front_matter:
        type: "object"
        example:
          title: "deploy"
        properties: {}
    description: "API_Entities_WikiPage model"
    example:
      front_matter:
        title: "deploy"
      format: "markdown"
      title: "deploy"
      encoding: "UTF-8"
      slug: "deploy"
      content: "Here is an instruction how to deploy this project."
  postApiV4GroupsIdWikis:
    type: "object"
    required:
    - "content"
    - "title"
    properties:
      title:
        type: "string"
        description: "Title of a wiki page"
      front_matter:
        $ref: "#/definitions/postApiV4GroupsIdWikis_front_matter"
      content:
        type: "string"
        description: "Content of a wiki page"
      format:
        type: "string"
        description: "Format of a wiki page. Available formats are markdown, rdoc,\
          \ asciidoc and org"
        default: "markdown"
        enum:
        - "markdown"
        - "rdoc"
        - "asciidoc"
        - "org"
    description: "Create a wiki page"
  putApiV4GroupsIdWikisSlug:
    type: "object"
    properties:
      title:
        type: "string"
        description: "Title of a wiki page"
      front_matter:
        $ref: "#/definitions/postApiV4GroupsIdWikis_front_matter"
      content:
        type: "string"
        description: "Content of a wiki page"
      format:
        type: "string"
        description: "Format of a wiki page. Available formats are markdown, rdoc,\
          \ asciidoc and org"
        default: "markdown"
        enum:
        - "markdown"
        - "rdoc"
        - "asciidoc"
        - "org"
    description: "Update a wiki page"
  postApiV4GroupsIdWikisAttachments:
    type: "object"
    required:
    - "file"
    properties:
      file:
        type: "file"
        description: "The attachment file to be uploaded"
      branch:
        type: "string"
        description: "The name of the branch"
    description: "Upload an attachment to the wiki repository"
  API_Entities_WikiAttachment:
    type: "object"
    properties:
      file_name:
        type: "string"
        example: "dk.png"
      file_path:
        type: "string"
        example: "uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png"
      branch:
        type: "string"
        example: "main"
      link:
        $ref: "#/definitions/API_Entities_WikiAttachment_link"
    description: "API_Entities_WikiAttachment model"
    example:
      file_path: "uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png"
      file_name: "dk.png"
      link:
        markdown: "![dk](uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png)"
        url: "uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png"
      branch: "main"
  EE_API_Entities_AuditEvent:
    type: "object"
    properties:
      id:
        type: "string"
      author_id:
        type: "string"
      entity_id:
        type: "string"
      entity_type:
        type: "string"
      details:
        type: "string"
      created_at:
        type: "string"
    description: "EE_API_Entities_AuditEvent model"
    example:
      entity_type: "entity_type"
      created_at: "created_at"
      details: "details"
      id: "id"
      author_id: "author_id"
      entity_id: "entity_id"
  postApiV4GroupsIdDebianDistributions:
    type: "object"
    required:
    - "codename"
    properties:
      codename:
        type: "string"
        example: "sid"
        description: "The Debian Codename"
      suite:
        type: "string"
        example: "unstable"
        description: "The Debian Suite"
      origin:
        type: "string"
        example: "Grep"
        description: "The Debian Origin"
      label:
        type: "string"
        example: "grep.be"
        description: "The Debian Label"
      version:
        type: "string"
        example: "12"
        description: "The Debian Version"
      description:
        type: "string"
        example: "My description"
        description: "The Debian Description"
      valid_time_duration_seconds:
        type: "integer"
        format: "int32"
        example: 604800
        description: "The duration before the Release file should be considered expired\
          \ by the client"
      components:
        type: "array"
        example: "main"
        description: "The list of Components"
        items:
          type: "string"
      architectures:
        type: "array"
        example: "amd64"
        description: "The list of Architectures"
        items:
          type: "string"
    description: "Create a Debian Distribution"
  API_Entities_Packages_Debian_Distribution:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      codename:
        type: "string"
        example: "sid"
      suite:
        type: "string"
        example: "unstable"
      origin:
        type: "string"
        example: "Grep"
      label:
        type: "string"
        example: "grep.be"
      version:
        type: "string"
        example: "12"
      description:
        type: "string"
        example: "My description"
      valid_time_duration_seconds:
        type: "integer"
        format: "int32"
        example: 604800
      components:
        type: "array"
        items:
          type: "string"
          example: "main"
      architectures:
        type: "array"
        items:
          type: "string"
          example: "amd64"
    description: "API_Entities_Packages_Debian_Distribution model"
    example:
      architectures:
      - "amd64"
      - "amd64"
      valid_time_duration_seconds: 604800
      components:
      - "main"
      - "main"
      suite: "unstable"
      codename: "sid"
      origin: "Grep"
      description: "My description"
      id: 1
      label: "grep.be"
      version: "12"
  putApiV4GroupsIdDebianDistributionsCodename:
    type: "object"
    properties:
      suite:
        type: "string"
        example: "unstable"
        description: "The Debian Suite"
      origin:
        type: "string"
        example: "Grep"
        description: "The Debian Origin"
      label:
        type: "string"
        example: "grep.be"
        description: "The Debian Label"
      version:
        type: "string"
        example: "12"
        description: "The Debian Version"
      description:
        type: "string"
        example: "My description"
        description: "The Debian Description"
      valid_time_duration_seconds:
        type: "integer"
        format: "int32"
        example: 604800
        description: "The duration before the Release file should be considered expired\
          \ by the client"
      components:
        type: "array"
        example: "main"
        description: "The list of Components"
        items:
          type: "string"
      architectures:
        type: "array"
        example: "amd64"
        description: "The list of Architectures"
        items:
          type: "string"
    description: "Update a Debian Distribution"
  API_Entities_NpmPackageTag:
    type: "object"
    properties:
      dist_tags:
        type: "object"
        example: "{ \"latest\":\"1.0.1\" }"
        properties: {}
    description: "API_Entities_NpmPackageTag model"
    example:
      dist_tags: "{ \"latest\":\"1.0.1\" }"
  putApiV4GroupsIdPackagesNpmPackage*packageNameDistTagsTag:
    type: "object"
    required:
    - "package_name"
    properties:
      package_name:
        type: "string"
        description: "Package name"
    description: "Create or Update the given tag for the given NPM package and version"
  API_Entities_NpmPackage:
    type: "object"
    properties:
      name:
        type: "string"
        example: "my_package"
      versions:
        type: "object"
        example: "{\n                 \"1.0.0\": {\n                   \"name\": \"\
          my_package\",\n                   \"version\": \"1.0.0\",\n            \
          \       \"dist\": { \"shasum\": \"12345\", \"tarball\": \"https://...\"\
          \ }\n                 }\n               }"
        properties: {}
      dist-tags:
        type: "object"
        example: "{ \"latest\":\"1.0.1\" }"
        properties: {}
    description: "API_Entities_NpmPackage model"
    example:
      versions: "{\n                 \"1.0.0\": {\n                   \"name\": \"\
        my_package\",\n                   \"version\": \"1.0.0\",\n              \
        \     \"dist\": { \"shasum\": \"12345\", \"tarball\": \"https://...\" }\n\
        \                 }\n               }"
      dist-tags: "{ \"latest\":\"1.0.1\" }"
      name: "my_package"
  API_Entities_Nuget_ServiceIndex:
    type: "object"
    properties:
      version:
        type: "string"
        example: "1.3.0.17"
      resources:
        type: "array"
        items:
          type: "object"
          example: "{ \"@id\": \"https://gitlab.com/api/v4/projects/1/packages/nuget/query\"\
            , \"@type\": \"SearchQueryService\", \"comment\": \"Filter and search\
            \ for packages by keyword.\"}"
          properties: {}
    description: "API_Entities_Nuget_ServiceIndex model"
    example:
      resources:
      - "{ \"@id\": \"https://gitlab.com/api/v4/projects/1/packages/nuget/query\"\
        , \"@type\": \"SearchQueryService\", \"comment\": \"Filter and search for\
        \ packages by keyword.\"}"
      - "{ \"@id\": \"https://gitlab.com/api/v4/projects/1/packages/nuget/query\"\
        , \"@type\": \"SearchQueryService\", \"comment\": \"Filter and search for\
        \ packages by keyword.\"}"
      version: "1.3.0.17"
  API_Entities_Nuget_PackagesMetadata:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int32"
        example: 1
      items:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_Nuget_PackagesMetadataItem"
    description: "API_Entities_Nuget_PackagesMetadata model"
    example:
      count: 1
      items:
      - lower: "1.3.0.17"
        upper: "1.3.0.17"
        count: 1
        '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
        items:
        - packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
          '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
          catalogEntry:
            summary: "Description"
            licenseUrl: "http://sandbox.com/license"
            projectUrl: "http://sandbox.com/project"
            dependencyGroups:
            - targetFramework: "fwk test"
              '@type': "PackageDependencyGroup"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
              dependencies:
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
            - targetFramework: "fwk test"
              '@type': "PackageDependencyGroup"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
              dependencies:
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
            packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
            description: "Description"
            published: "2023-05-08T17:23:25Z"
            version: "1.3.0.17"
            tags: "tag#1 tag#2"
            '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
            id: "MyNuGetPkg"
            iconUrl: "http://sandbox.com/icon"
            authors: "Authors"
        - packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
          '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
          catalogEntry:
            summary: "Description"
            licenseUrl: "http://sandbox.com/license"
            projectUrl: "http://sandbox.com/project"
            dependencyGroups:
            - targetFramework: "fwk test"
              '@type': "PackageDependencyGroup"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
              dependencies:
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
            - targetFramework: "fwk test"
              '@type': "PackageDependencyGroup"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
              dependencies:
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
            packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
            description: "Description"
            published: "2023-05-08T17:23:25Z"
            version: "1.3.0.17"
            tags: "tag#1 tag#2"
            '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
            id: "MyNuGetPkg"
            iconUrl: "http://sandbox.com/icon"
            authors: "Authors"
      - lower: "1.3.0.17"
        upper: "1.3.0.17"
        count: 1
        '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
        items:
        - packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
          '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
          catalogEntry:
            summary: "Description"
            licenseUrl: "http://sandbox.com/license"
            projectUrl: "http://sandbox.com/project"
            dependencyGroups:
            - targetFramework: "fwk test"
              '@type': "PackageDependencyGroup"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
              dependencies:
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
            - targetFramework: "fwk test"
              '@type': "PackageDependencyGroup"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
              dependencies:
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
            packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
            description: "Description"
            published: "2023-05-08T17:23:25Z"
            version: "1.3.0.17"
            tags: "tag#1 tag#2"
            '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
            id: "MyNuGetPkg"
            iconUrl: "http://sandbox.com/icon"
            authors: "Authors"
        - packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
          '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
          catalogEntry:
            summary: "Description"
            licenseUrl: "http://sandbox.com/license"
            projectUrl: "http://sandbox.com/project"
            dependencyGroups:
            - targetFramework: "fwk test"
              '@type': "PackageDependencyGroup"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
              dependencies:
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
            - targetFramework: "fwk test"
              '@type': "PackageDependencyGroup"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
              dependencies:
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
              - '@type': "PackageDependency"
                range: "2.0.0"
                '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
                id: "Dependency"
            packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
            description: "Description"
            published: "2023-05-08T17:23:25Z"
            version: "1.3.0.17"
            tags: "tag#1 tag#2"
            '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
            id: "MyNuGetPkg"
            iconUrl: "http://sandbox.com/icon"
            authors: "Authors"
  API_Entities_Nuget_PackagesMetadataItem:
    type: "object"
    properties:
      '@id':
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
      lower:
        type: "string"
        example: "1.3.0.17"
      upper:
        type: "string"
        example: "1.3.0.17"
      count:
        type: "integer"
        format: "int32"
        example: 1
      items:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_Nuget_PackageMetadata"
    example:
      lower: "1.3.0.17"
      upper: "1.3.0.17"
      count: 1
      '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
      items:
      - packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
        '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
        catalogEntry:
          summary: "Description"
          licenseUrl: "http://sandbox.com/license"
          projectUrl: "http://sandbox.com/project"
          dependencyGroups:
          - targetFramework: "fwk test"
            '@type': "PackageDependencyGroup"
            '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
            dependencies:
            - '@type': "PackageDependency"
              range: "2.0.0"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
              id: "Dependency"
            - '@type': "PackageDependency"
              range: "2.0.0"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
              id: "Dependency"
          - targetFramework: "fwk test"
            '@type': "PackageDependencyGroup"
            '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
            dependencies:
            - '@type': "PackageDependency"
              range: "2.0.0"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
              id: "Dependency"
            - '@type': "PackageDependency"
              range: "2.0.0"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
              id: "Dependency"
          packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
          description: "Description"
          published: "2023-05-08T17:23:25Z"
          version: "1.3.0.17"
          tags: "tag#1 tag#2"
          '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
          id: "MyNuGetPkg"
          iconUrl: "http://sandbox.com/icon"
          authors: "Authors"
      - packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
        '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
        catalogEntry:
          summary: "Description"
          licenseUrl: "http://sandbox.com/license"
          projectUrl: "http://sandbox.com/project"
          dependencyGroups:
          - targetFramework: "fwk test"
            '@type': "PackageDependencyGroup"
            '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
            dependencies:
            - '@type': "PackageDependency"
              range: "2.0.0"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
              id: "Dependency"
            - '@type': "PackageDependency"
              range: "2.0.0"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
              id: "Dependency"
          - targetFramework: "fwk test"
            '@type': "PackageDependencyGroup"
            '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
            dependencies:
            - '@type': "PackageDependency"
              range: "2.0.0"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
              id: "Dependency"
            - '@type': "PackageDependency"
              range: "2.0.0"
              '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
              id: "Dependency"
          packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
          description: "Description"
          published: "2023-05-08T17:23:25Z"
          version: "1.3.0.17"
          tags: "tag#1 tag#2"
          '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
          id: "MyNuGetPkg"
          iconUrl: "http://sandbox.com/icon"
          authors: "Authors"
  API_Entities_Nuget_PackageMetadata:
    type: "object"
    properties:
      '@id':
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
      packageContent:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
      catalogEntry:
        $ref: "#/definitions/API_Entities_Nuget_PackageMetadataCatalogEntry"
    description: "API_Entities_Nuget_PackageMetadata model"
    example:
      packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
      '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
      catalogEntry:
        summary: "Description"
        licenseUrl: "http://sandbox.com/license"
        projectUrl: "http://sandbox.com/project"
        dependencyGroups:
        - targetFramework: "fwk test"
          '@type': "PackageDependencyGroup"
          '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
          dependencies:
          - '@type': "PackageDependency"
            range: "2.0.0"
            '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
            id: "Dependency"
          - '@type': "PackageDependency"
            range: "2.0.0"
            '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
            id: "Dependency"
        - targetFramework: "fwk test"
          '@type': "PackageDependencyGroup"
          '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
          dependencies:
          - '@type': "PackageDependency"
            range: "2.0.0"
            '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
            id: "Dependency"
          - '@type': "PackageDependency"
            range: "2.0.0"
            '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
            id: "Dependency"
        packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
        description: "Description"
        published: "2023-05-08T17:23:25Z"
        version: "1.3.0.17"
        tags: "tag#1 tag#2"
        '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
        id: "MyNuGetPkg"
        iconUrl: "http://sandbox.com/icon"
        authors: "Authors"
  API_Entities_Nuget_PackageMetadataCatalogEntry:
    type: "object"
    properties:
      '@id':
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
      dependencyGroups:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_Nuget_DependencyGroup"
      id:
        type: "string"
        example: "MyNuGetPkg"
      version:
        type: "string"
        example: "1.3.0.17"
      tags:
        type: "string"
        example: "tag#1 tag#2"
      packageContent:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
      authors:
        type: "string"
        example: "Authors"
      description:
        type: "string"
        example: "Description"
      summary:
        type: "string"
        example: "Description"
      projectUrl:
        type: "string"
        example: "http://sandbox.com/project"
      licenseUrl:
        type: "string"
        example: "http://sandbox.com/license"
      iconUrl:
        type: "string"
        example: "http://sandbox.com/icon"
      published:
        type: "string"
        example: "2023-05-08T17:23:25Z"
    example:
      summary: "Description"
      licenseUrl: "http://sandbox.com/license"
      projectUrl: "http://sandbox.com/project"
      dependencyGroups:
      - targetFramework: "fwk test"
        '@type': "PackageDependencyGroup"
        '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
        dependencies:
        - '@type': "PackageDependency"
          range: "2.0.0"
          '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
          id: "Dependency"
        - '@type': "PackageDependency"
          range: "2.0.0"
          '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
          id: "Dependency"
      - targetFramework: "fwk test"
        '@type': "PackageDependencyGroup"
        '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
        dependencies:
        - '@type': "PackageDependency"
          range: "2.0.0"
          '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
          id: "Dependency"
        - '@type': "PackageDependency"
          range: "2.0.0"
          '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
          id: "Dependency"
      packageContent: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/download/MyNuGetPkg/1.3.0.17/helloworld.1.3.0.17.nupkg"
      description: "Description"
      published: "2023-05-08T17:23:25Z"
      version: "1.3.0.17"
      tags: "tag#1 tag#2"
      '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
      id: "MyNuGetPkg"
      iconUrl: "http://sandbox.com/icon"
      authors: "Authors"
  API_Entities_Nuget_DependencyGroup:
    type: "object"
    properties:
      '@id':
        type: "string"
        example: "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
      '@type':
        type: "string"
        example: "PackageDependencyGroup"
      targetFramework:
        type: "string"
        example: "fwk test"
      dependencies:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_Nuget_Dependency"
    example:
      targetFramework: "fwk test"
      '@type': "PackageDependencyGroup"
      '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependencygroup"
      dependencies:
      - '@type': "PackageDependency"
        range: "2.0.0"
        '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
        id: "Dependency"
      - '@type': "PackageDependency"
        range: "2.0.0"
        '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
        id: "Dependency"
  API_Entities_Nuget_Dependency:
    type: "object"
    properties:
      '@id':
        type: "string"
        example: "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
      '@type':
        type: "string"
        example: "PackageDependency"
      id:
        type: "string"
        example: "Dependency"
      range:
        type: "string"
        example: "2.0.0"
    example:
      '@type': "PackageDependency"
      range: "2.0.0"
      '@id': "http://gitlab.com/Sandbox.App/1.0.0.json#dependency"
      id: "Dependency"
  API_Entities_Nuget_SearchResults:
    type: "object"
    properties:
      totalHits:
        type: "integer"
        format: "int32"
        example: 1
      data:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_Nuget_SearchResult"
    description: "API_Entities_Nuget_SearchResults model"
    example:
      data:
      - summary: "Description"
        licenseUrl: "http://sandbox.com/license"
        projectUrl: "http://sandbox.com/project"
        '@type': "Package"
        totalDownloads: 1
        verified: true
        description: "Description"
        title: "MyNuGetPkg"
        version: "1.3.0.17"
        tags: "tag#1 tag#2"
        versions:
          downloads: 1
          '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
          version: "1.3.0.17"
        id: "MyNuGetPkg"
        iconUrl: "http://sandbox.com/icon"
        authors: "Authors"
      - summary: "Description"
        licenseUrl: "http://sandbox.com/license"
        projectUrl: "http://sandbox.com/project"
        '@type': "Package"
        totalDownloads: 1
        verified: true
        description: "Description"
        title: "MyNuGetPkg"
        version: "1.3.0.17"
        tags: "tag#1 tag#2"
        versions:
          downloads: 1
          '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
          version: "1.3.0.17"
        id: "MyNuGetPkg"
        iconUrl: "http://sandbox.com/icon"
        authors: "Authors"
      totalHits: 1
  API_Entities_Nuget_SearchResult:
    type: "object"
    properties:
      '@type':
        type: "string"
        example: "Package"
      id:
        type: "string"
        example: "MyNuGetPkg"
      title:
        type: "string"
        example: "MyNuGetPkg"
      totalDownloads:
        type: "integer"
        format: "int32"
        example: 1
      verified:
        type: "boolean"
      version:
        type: "string"
        example: "1.3.0.17"
      versions:
        $ref: "#/definitions/API_Entities_Nuget_SearchResultVersion"
      tags:
        type: "string"
        example: "tag#1 tag#2"
      authors:
        type: "string"
        example: "Authors"
      description:
        type: "string"
        example: "Description"
      summary:
        type: "string"
        example: "Description"
      projectUrl:
        type: "string"
        example: "http://sandbox.com/project"
      licenseUrl:
        type: "string"
        example: "http://sandbox.com/license"
      iconUrl:
        type: "string"
        example: "http://sandbox.com/icon"
    example:
      summary: "Description"
      licenseUrl: "http://sandbox.com/license"
      projectUrl: "http://sandbox.com/project"
      '@type': "Package"
      totalDownloads: 1
      verified: true
      description: "Description"
      title: "MyNuGetPkg"
      version: "1.3.0.17"
      tags: "tag#1 tag#2"
      versions:
        downloads: 1
        '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
        version: "1.3.0.17"
      id: "MyNuGetPkg"
      iconUrl: "http://sandbox.com/icon"
      authors: "Authors"
  API_Entities_Nuget_SearchResultVersion:
    type: "object"
    properties:
      '@id':
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
      version:
        type: "string"
        example: "1.3.0.17"
      downloads:
        type: "integer"
        format: "int32"
        example: 1
    example:
      downloads: 1
      '@id': "https://gitlab.example.com/api/v4/projects/1/packages/nuget/metadata/MyNuGetPkg/1.3.0.17.json"
      version: "1.3.0.17"
  putApiV4ProjectsIdAccessRequestsUserIdApprove:
    type: "object"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level (defaults: `30`, the Developer role)"
        default: 30
    description: "Approves an access request for the given user."
  postApiV4ProjectsIdBadges:
    type: "object"
    required:
    - "image_url"
    - "link_url"
    properties:
      link_url:
        type: "string"
        description: "URL of the badge link"
      image_url:
        type: "string"
        description: "URL of the badge image"
      name:
        type: "string"
        description: "Name for the badge"
    description: "Adds a badge to a project."
  putApiV4ProjectsIdBadgesBadgeId:
    type: "object"
    properties:
      link_url:
        type: "string"
        description: "URL of the badge link"
      image_url:
        type: "string"
        description: "URL of the badge image"
      name:
        type: "string"
        description: "Name for the badge"
    description: "Updates a badge of a project."
  API_Entities_Branch:
    type: "object"
    properties:
      name:
        type: "string"
        example: "master"
      commit:
        $ref: "#/definitions/API_Entities_Commit"
      merged:
        type: "boolean"
        example: true
      protected:
        type: "boolean"
        example: true
      developers_can_push:
        type: "boolean"
        example: true
      developers_can_merge:
        type: "boolean"
        example: true
      can_push:
        type: "boolean"
        example: true
      default:
        type: "boolean"
        example: true
      web_url:
        type: "string"
        example: "https://gitlab.example.com/Commit921/the-dude/-/tree/master"
    description: "API_Entities_Branch model"
    example:
      default: true
      protected: true
      web_url: "https://gitlab.example.com/Commit921/the-dude/-/tree/master"
      developers_can_push: true
      developers_can_merge: true
      name: "master"
      commit:
        author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      merged: true
      can_push: true
  putApiV4ProjectsIdRepositoryBranchesBranchProtect:
    type: "object"
    properties:
      developers_can_push:
        type: "boolean"
        description: "Flag if developers can push to that branch"
      developers_can_merge:
        type: "boolean"
        description: "Flag if developers can merge to that branch"
    description: "Protect a single branch"
  postApiV4ProjectsIdRepositoryBranches:
    type: "object"
    required:
    - "branch"
    - "ref"
    properties:
      branch:
        type: "string"
        description: "The name of the branch"
      ref:
        type: "string"
        description: "Create branch from commit sha or existing branch"
    description: "Create branch"
  API_Entities_Ci_Job:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      status:
        type: "string"
        example: "waiting_for_resource"
      stage:
        type: "string"
        example: "deploy"
      name:
        type: "string"
        example: "deploy_to_production"
      ref:
        type: "string"
        example: "main"
      tag:
        type: "boolean"
      coverage:
        type: "number"
        format: "float"
        example: 98.29
      allow_failure:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T15:51:21.880Z"
      started_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:30.733Z"
      finished_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:31.198Z"
      erased_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T18:00:29.728Z"
      duration:
        type: "number"
        format: "float"
        example: 0.465
        description: "Time spent running"
      queued_duration:
        type: "number"
        format: "float"
        example: 0.123
        description: "Time spent enqueued"
      user:
        $ref: "#/definitions/API_Entities_User"
      commit:
        $ref: "#/definitions/API_Entities_Commit"
      pipeline:
        $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
      failure_reason:
        type: "string"
        example: "script_failure"
      web_url:
        type: "string"
        example: "https://example.com/foo/bar/-/jobs/1"
      project:
        $ref: "#/definitions/API_Entities_Ci_Job_project"
      artifacts_file:
        $ref: "#/definitions/API_Entities_Ci_JobArtifactFile"
      artifacts:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_Ci_JobArtifact"
      runner:
        $ref: "#/definitions/API_Entities_Ci_Runner"
      runner_manager:
        $ref: "#/definitions/API_Entities_Ci_RunnerManager"
      artifacts_expire_at:
        type: "string"
        format: "date-time"
        example: "2016-01-19T09:05:50.355Z"
      archived:
        type: "boolean"
        example: false
      tag_list:
        type: "array"
        items:
          type: "string"
          example: ""
    description: "API_Entities_Ci_Job model"
    example:
      finished_at: "2015-12-24T17:54:31.198Z"
      commit:
        author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      created_at: "2015-12-24T15:51:21.880Z"
      project:
        ci_job_token_scope_enabled: "false"
      queued_duration: 0.123
      duration: 0.465
      archived: false
      ref: "main"
      allow_failure: true
      runner_manager:
        system_id: "runner-1"
        created_at: "2023-10-24T01:27:06.549Z"
        id: 8
        contacted_at: "2023-10-24T01:27:06.549Z"
        ip_address: "127.0.0.1"
        version: "16.11.0"
        platform: "linux"
        revision: "91a27b2a"
        architecture: "amd64"
        status: "online"
      tag_list:
      - ""
      - ""
      id: 1
      tag: true
      runner:
        paused: false
        is_shared: true
        name: "test"
        description: "test-1-20150125"
        active: true
        runner_type: "instance_type"
        online: true
        id: 8
        ip_address: "127.0.0.1"
        status: "online"
      artifacts:
      - filename: "artifacts.zip"
        size: 1000
        file_type: "archive"
        file_format: "zip"
      - filename: "artifacts.zip"
        size: 1000
        file_type: "archive"
        file_format: "zip"
      coverage: 98.29
      erased_at: "2015-12-24T18:00:29.728Z"
      failure_reason: "script_failure"
      artifacts_expire_at: "2016-01-19T09:05:50.355Z"
      pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        status: "success"
      stage: "deploy"
      web_url: "https://example.com/foo/bar/-/jobs/1"
      artifacts_file:
        filename: "artifacts.zip"
        size: 1000
      name: "deploy_to_production"
      started_at: "2015-12-24T17:54:30.733Z"
      user:
        work_information: "work_information"
        bot: "bot"
        created_at: "created_at"
        bio: "bio"
        linkedin: "linkedin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
        skype: "skype"
        twitter: "twitter"
        local_time: "local_time"
        id: 1
        state: "active"
        locked: true
        job_title: "job_title"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        is_followed: "is_followed"
        discord: "discord"
        followers: "followers"
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        website_url: "website_url"
        organization: "organization"
        following: "following"
        name: "Administrator"
        location: "location"
        pronouns: "pronouns"
        public_email: "public_email"
        username: "admin"
      status: "waiting_for_resource"
  API_Entities_User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      username:
        type: "string"
        example: "admin"
      name:
        type: "string"
        example: "Administrator"
      state:
        type: "string"
        example: "active"
      locked:
        type: "boolean"
      avatar_url:
        type: "string"
        example: "https://gravatar.com/avatar/1"
      avatar_path:
        type: "string"
        example: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      custom_attributes:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_CustomAttribute"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/root"
      created_at:
        type: "string"
      bio:
        type: "string"
      location:
        type: "string"
      public_email:
        type: "string"
      skype:
        type: "string"
      linkedin:
        type: "string"
      twitter:
        type: "string"
      discord:
        type: "string"
      website_url:
        type: "string"
      organization:
        type: "string"
      job_title:
        type: "string"
      pronouns:
        type: "string"
      bot:
        type: "string"
      work_information:
        type: "string"
      followers:
        type: "string"
      following:
        type: "string"
      is_followed:
        type: "string"
      local_time:
        type: "string"
    description: "API_Entities_User model"
    example:
      work_information: "work_information"
      bot: "bot"
      created_at: "created_at"
      bio: "bio"
      linkedin: "linkedin"
      custom_attributes:
      - value: "bar"
        key: "foo"
      - value: "bar"
        key: "foo"
      skype: "skype"
      twitter: "twitter"
      local_time: "local_time"
      id: 1
      state: "active"
      locked: true
      job_title: "job_title"
      avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      is_followed: "is_followed"
      discord: "discord"
      followers: "followers"
      avatar_url: "https://gravatar.com/avatar/1"
      web_url: "https://gitlab.example.com/root"
      website_url: "website_url"
      organization: "organization"
      following: "following"
      name: "Administrator"
      location: "location"
      pronouns: "pronouns"
      public_email: "public_email"
      username: "admin"
  API_Entities_Ci_PipelineBasic:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      iid:
        type: "integer"
        format: "int32"
        example: 2
      project_id:
        type: "integer"
        format: "int32"
        example: 3
      sha:
        type: "string"
        example: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
      ref:
        type: "string"
        example: "feature-branch"
      status:
        type: "string"
        example: "success"
      source:
        type: "string"
        example: "push"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-10-21T16:49:48.000+02:00"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2022-10-21T16:49:48.000+02:00"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
    description: "API_Entities_Ci_PipelineBasic model"
    example:
      ref: "feature-branch"
      updated_at: "2022-10-21T16:49:48.000+02:00"
      web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
      iid: 2
      project_id: 3
      created_at: "2022-10-21T16:49:48.000+02:00"
      id: 1
      source: "push"
      sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
      status: "success"
  API_Entities_Ci_JobArtifactFile:
    type: "object"
    properties:
      filename:
        type: "string"
        example: "artifacts.zip"
      size:
        type: "integer"
        format: "int32"
        example: 1000
    example:
      filename: "artifacts.zip"
      size: 1000
  API_Entities_Ci_JobArtifact:
    type: "object"
    properties:
      file_type:
        type: "string"
        example: "archive"
        enum:
        - "archive"
        - "metadata"
        - "trace"
        - "junit"
        - "sast"
        - "dependency_scanning"
        - "container_scanning"
        - "dast"
        - "codequality"
        - "license_scanning"
        - "performance"
        - "metrics"
        - "metrics_referee"
        - "network_referee"
        - "lsif"
        - "dotenv"
        - "cobertura"
        - "terraform"
        - "accessibility"
        - "cluster_applications"
        - "secret_detection"
        - "requirements"
        - "coverage_fuzzing"
        - "browser_performance"
        - "load_performance"
        - "api_fuzzing"
        - "cluster_image_scanning"
        - "cyclonedx"
        - "requirements_v2"
        - "annotations"
        - "repository_xray"
      size:
        type: "integer"
        format: "int32"
        example: 1000
      filename:
        type: "string"
        example: "artifacts.zip"
      file_format:
        type: "string"
        example: "zip"
        enum:
        - "raw"
        - "zip"
        - "gzip"
    example:
      filename: "artifacts.zip"
      size: 1000
      file_type: "archive"
      file_format: "zip"
  API_Entities_Ci_RunnerManager:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 8
      system_id:
        type: "string"
        example: "runner-1"
      version:
        type: "string"
        example: "16.11.0"
      revision:
        type: "string"
        example: "91a27b2a"
      platform:
        type: "string"
        example: "linux"
      architecture:
        type: "string"
        example: "amd64"
      created_at:
        type: "string"
        example: "2023-10-24T01:27:06.549Z"
      contacted_at:
        type: "string"
        example: "2023-10-24T01:27:06.549Z"
      ip_address:
        type: "string"
        example: "127.0.0.1"
      status:
        type: "string"
        example: "online"
    example:
      system_id: "runner-1"
      created_at: "2023-10-24T01:27:06.549Z"
      id: 8
      contacted_at: "2023-10-24T01:27:06.549Z"
      ip_address: "127.0.0.1"
      version: "16.11.0"
      platform: "linux"
      revision: "91a27b2a"
      architecture: "amd64"
      status: "online"
  postApiV4ProjectsIdJobsJobIdPlay:
    type: "object"
    properties:
      job_variables_attributes:
        type: "array"
        description: "User defined variables that will be included when running the\
          \ job"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdJobsJobIdPlay_job_variables_attributes"
    description: "Trigger an actionable job (manual, delayed, etc)"
  API_Entities_Ci_JobBasic:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      status:
        type: "string"
        example: "waiting_for_resource"
      stage:
        type: "string"
        example: "deploy"
      name:
        type: "string"
        example: "deploy_to_production"
      ref:
        type: "string"
        example: "main"
      tag:
        type: "boolean"
      coverage:
        type: "number"
        format: "float"
        example: 98.29
      allow_failure:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T15:51:21.880Z"
      started_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:30.733Z"
      finished_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:31.198Z"
      erased_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T18:00:29.728Z"
      duration:
        type: "number"
        format: "float"
        example: 0.465
        description: "Time spent running"
      queued_duration:
        type: "number"
        format: "float"
        example: 0.123
        description: "Time spent enqueued"
      user:
        $ref: "#/definitions/API_Entities_User"
      commit:
        $ref: "#/definitions/API_Entities_Commit"
      pipeline:
        $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
      failure_reason:
        type: "string"
        example: "script_failure"
      web_url:
        type: "string"
        example: "https://example.com/foo/bar/-/jobs/1"
      project:
        $ref: "#/definitions/API_Entities_Ci_Job_project"
    description: "API_Entities_Ci_JobBasic model"
    example:
      coverage: 98.29
      finished_at: "2015-12-24T17:54:31.198Z"
      commit:
        author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      created_at: "2015-12-24T15:51:21.880Z"
      erased_at: "2015-12-24T18:00:29.728Z"
      project:
        ci_job_token_scope_enabled: "false"
      failure_reason: "script_failure"
      queued_duration: 0.123
      duration: 0.465
      pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        status: "success"
      ref: "main"
      allow_failure: true
      stage: "deploy"
      web_url: "https://example.com/foo/bar/-/jobs/1"
      name: "deploy_to_production"
      started_at: "2015-12-24T17:54:30.733Z"
      id: 1
      tag: true
      user:
        work_information: "work_information"
        bot: "bot"
        created_at: "created_at"
        bio: "bio"
        linkedin: "linkedin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
        skype: "skype"
        twitter: "twitter"
        local_time: "local_time"
        id: 1
        state: "active"
        locked: true
        job_title: "job_title"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        is_followed: "is_followed"
        discord: "discord"
        followers: "followers"
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        website_url: "website_url"
        organization: "organization"
        following: "following"
        name: "Administrator"
        location: "location"
        pronouns: "pronouns"
        public_email: "public_email"
        username: "admin"
      status: "waiting_for_resource"
  API_Entities_Ci_ResourceGroup:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      key:
        type: "string"
        example: "production"
      process_mode:
        type: "string"
        example: "unordered"
      created_at:
        type: "string"
        format: "date-time"
        example: "2021-09-01T08:04:59.650Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2021-09-01T08:04:59.650Z"
    description: "API_Entities_Ci_ResourceGroup model"
    example:
      updated_at: "2021-09-01T08:04:59.650Z"
      created_at: "2021-09-01T08:04:59.650Z"
      id: 1
      key: "production"
      process_mode: "unordered"
  putApiV4ProjectsIdResourceGroupsKey:
    type: "object"
    properties:
      process_mode:
        type: "string"
        description: "The process mode of the resource group"
        enum:
        - "unordered"
        - "oldest_first"
        - "newest_first"
    description: "Edit an existing resource group"
  postApiV4ProjectsIdRunners:
    type: "object"
    required:
    - "runner_id"
    properties:
      runner_id:
        type: "integer"
        format: "int32"
        description: "The ID of a runner"
    description: "Enable a runner in project"
  API_Entities_Ci_SecureFile:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 123
      name:
        type: "string"
        example: "upload-keystore.jks"
      checksum:
        type: "string"
        example: "16630b189ab34b2e3504f4758e1054d2e478deda510b2b08cc0ef38d12e80aac"
      checksum_algorithm:
        type: "string"
        example: "sha256"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-02-22T22:22:22.222Z"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2023-09-21T14:55:59.000Z"
      metadata:
        type: "object"
        example:
          id: "75949910542696343243264405377658443914"
        properties: {}
      file_extension:
        type: "string"
        example: "jks"
    description: "API_Entities_Ci_SecureFile model"
    example:
      metadata:
        id: "75949910542696343243264405377658443914"
      expires_at: "2023-09-21T14:55:59.000Z"
      checksum_algorithm: "sha256"
      name: "upload-keystore.jks"
      checksum: "16630b189ab34b2e3504f4758e1054d2e478deda510b2b08cc0ef38d12e80aac"
      created_at: "2022-02-22T22:22:22.222Z"
      file_extension: "jks"
      id: 123
  postApiV4ProjectsIdSecureFiles:
    type: "object"
    required:
    - "file"
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the file being uploaded. The filename must be unique\
          \ within\n            the project"
      file:
        type: "file"
        description: "The secure file being uploaded"
    description: "Create a secure file"
  postApiV4ProjectsIdPipeline:
    type: "object"
    required:
    - "ref"
    properties:
      ref:
        type: "string"
        example: "develop"
        description: "Reference"
      variables:
        type: "array"
        description: "Array of variables available in the pipeline"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdPipeline_variables"
    description: "Create a new pipeline"
  API_Entities_Ci_Pipeline:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      iid:
        type: "integer"
        format: "int32"
        example: 2
      project_id:
        type: "integer"
        format: "int32"
        example: 3
      sha:
        type: "string"
        example: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
      ref:
        type: "string"
        example: "feature-branch"
      status:
        type: "string"
        example: "success"
      source:
        type: "string"
        example: "push"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T15:51:21.880Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:31.198Z"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
      before_sha:
        type: "string"
        example: "a91957a858320c0e17f3a0eca7cfacbff50ea29a"
      tag:
        type: "boolean"
        example: false
      yaml_errors:
        type: "string"
        example: "widgets:build: needs 'widgets:test'"
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
      started_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:30.733Z"
      finished_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:31.198Z"
      committed_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T15:51:21.880Z"
      duration:
        type: "integer"
        format: "int32"
        example: 127
        description: "Time spent running in seconds"
      queued_duration:
        type: "integer"
        format: "int32"
        example: 63
        description: "Time spent enqueued in seconds"
      coverage:
        type: "number"
        format: "float"
        example: 98.29
      detailed_status:
        $ref: "#/definitions/DetailedStatusEntity"
    description: "API_Entities_Ci_Pipeline model"
    example:
      coverage: 98.29
      before_sha: "a91957a858320c0e17f3a0eca7cfacbff50ea29a"
      detailed_status:
        favicon: "/assets/ci_favicons/favicon_status_success.png"
        icon: "status_success"
        tooltip: "passed"
        action:
          path: "/namespace1/project1/-/jobs/2/cancel"
          method: "post"
          confirmation_message: "Are you sure?"
          icon: "cancel"
          button_title: "Cancel this job"
          title: "Cancel"
        illustration: "{\n  \"image\": \"illustrations/empty-state/empty-job-not-triggered-md.svg\"\
          ,\n  \"size\": \"\",\n  \"title\": \"This job has not been triggered yet\"\
          ,\n  \"content\": \"This job depends on upstream jobs that need to succeed\
          \ in order for this job to be triggered\"\n}\n"
        text: "passed"
        label: "passed"
        group: "success"
        has_details: true
        details_path: "/test-group/test-project/-/pipelines/287"
      finished_at: "2015-12-24T17:54:31.198Z"
      iid: 2
      created_at: "2015-12-24T15:51:21.880Z"
      source: "push"
      sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
      queued_duration: 63
      yaml_errors: "widgets:build: needs 'widgets:test'"
      duration: 127
      ref: "feature-branch"
      updated_at: "2015-12-24T17:54:31.198Z"
      web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
      project_id: 3
      committed_at: "2015-12-24T15:51:21.880Z"
      started_at: "2015-12-24T17:54:30.733Z"
      id: 1
      tag: false
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      status: "success"
  DetailedStatusEntity:
    type: "object"
    properties:
      icon:
        type: "string"
        example: "status_success"
      text:
        type: "string"
        example: "passed"
      label:
        type: "string"
        example: "passed"
      group:
        type: "string"
        example: "success"
      tooltip:
        type: "string"
        example: "passed"
      has_details:
        type: "boolean"
        example: true
      details_path:
        type: "string"
        example: "/test-group/test-project/-/pipelines/287"
      illustration:
        type: "object"
        example: "{\n  \"image\": \"illustrations/empty-state/empty-job-not-triggered-md.svg\"\
          ,\n  \"size\": \"\",\n  \"title\": \"This job has not been triggered yet\"\
          ,\n  \"content\": \"This job depends on upstream jobs that need to succeed\
          \ in order for this job to be triggered\"\n}\n"
        properties: {}
      favicon:
        type: "string"
        example: "/assets/ci_favicons/favicon_status_success.png"
      action:
        $ref: "#/definitions/DetailedStatusEntity_action"
    example:
      favicon: "/assets/ci_favicons/favicon_status_success.png"
      icon: "status_success"
      tooltip: "passed"
      action:
        path: "/namespace1/project1/-/jobs/2/cancel"
        method: "post"
        confirmation_message: "Are you sure?"
        icon: "cancel"
        button_title: "Cancel this job"
        title: "Cancel"
      illustration: "{\n  \"image\": \"illustrations/empty-state/empty-job-not-triggered-md.svg\"\
        ,\n  \"size\": \"\",\n  \"title\": \"This job has not been triggered yet\"\
        ,\n  \"content\": \"This job depends on upstream jobs that need to succeed\
        \ in order for this job to be triggered\"\n}\n"
      text: "passed"
      label: "passed"
      group: "success"
      has_details: true
      details_path: "/test-group/test-project/-/pipelines/287"
  API_Entities_Ci_PipelineWithMetadata:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      iid:
        type: "integer"
        format: "int32"
        example: 2
      project_id:
        type: "integer"
        format: "int32"
        example: 3
      sha:
        type: "string"
        example: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
      ref:
        type: "string"
        example: "feature-branch"
      status:
        type: "string"
        example: "success"
      source:
        type: "string"
        example: "push"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T15:51:21.880Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:31.198Z"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
      before_sha:
        type: "string"
        example: "a91957a858320c0e17f3a0eca7cfacbff50ea29a"
      tag:
        type: "boolean"
        example: false
      yaml_errors:
        type: "string"
        example: "widgets:build: needs 'widgets:test'"
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
      started_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:30.733Z"
      finished_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:31.198Z"
      committed_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T15:51:21.880Z"
      duration:
        type: "integer"
        format: "int32"
        example: 127
        description: "Time spent running in seconds"
      queued_duration:
        type: "integer"
        format: "int32"
        example: 63
        description: "Time spent enqueued in seconds"
      coverage:
        type: "number"
        format: "float"
        example: 98.29
      detailed_status:
        $ref: "#/definitions/DetailedStatusEntity"
      name:
        type: "string"
        example: "Build pipeline"
    description: "API_Entities_Ci_PipelineWithMetadata model"
    example:
      coverage: 98.29
      before_sha: "a91957a858320c0e17f3a0eca7cfacbff50ea29a"
      detailed_status:
        favicon: "/assets/ci_favicons/favicon_status_success.png"
        icon: "status_success"
        tooltip: "passed"
        action:
          path: "/namespace1/project1/-/jobs/2/cancel"
          method: "post"
          confirmation_message: "Are you sure?"
          icon: "cancel"
          button_title: "Cancel this job"
          title: "Cancel"
        illustration: "{\n  \"image\": \"illustrations/empty-state/empty-job-not-triggered-md.svg\"\
          ,\n  \"size\": \"\",\n  \"title\": \"This job has not been triggered yet\"\
          ,\n  \"content\": \"This job depends on upstream jobs that need to succeed\
          \ in order for this job to be triggered\"\n}\n"
        text: "passed"
        label: "passed"
        group: "success"
        has_details: true
        details_path: "/test-group/test-project/-/pipelines/287"
      finished_at: "2015-12-24T17:54:31.198Z"
      iid: 2
      created_at: "2015-12-24T15:51:21.880Z"
      source: "push"
      sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
      queued_duration: 63
      yaml_errors: "widgets:build: needs 'widgets:test'"
      duration: 127
      ref: "feature-branch"
      updated_at: "2015-12-24T17:54:31.198Z"
      web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
      project_id: 3
      committed_at: "2015-12-24T15:51:21.880Z"
      name: "Build pipeline"
      started_at: "2015-12-24T17:54:30.733Z"
      id: 1
      tag: false
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      status: "success"
  API_Entities_Ci_Bridge:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      status:
        type: "string"
        example: "waiting_for_resource"
      stage:
        type: "string"
        example: "deploy"
      name:
        type: "string"
        example: "deploy_to_production"
      ref:
        type: "string"
        example: "main"
      tag:
        type: "boolean"
      coverage:
        type: "number"
        format: "float"
        example: 98.29
      allow_failure:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T15:51:21.880Z"
      started_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:30.733Z"
      finished_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:31.198Z"
      erased_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T18:00:29.728Z"
      duration:
        type: "number"
        format: "float"
        example: 0.465
        description: "Time spent running"
      queued_duration:
        type: "number"
        format: "float"
        example: 0.123
        description: "Time spent enqueued"
      user:
        $ref: "#/definitions/API_Entities_User"
      commit:
        $ref: "#/definitions/API_Entities_Commit"
      pipeline:
        $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
      failure_reason:
        type: "string"
        example: "script_failure"
      web_url:
        type: "string"
        example: "https://example.com/foo/bar/-/jobs/1"
      project:
        $ref: "#/definitions/API_Entities_Ci_Job_project"
      downstream_pipeline:
        $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
    description: "API_Entities_Ci_Bridge model"
    example:
      coverage: 98.29
      finished_at: "2015-12-24T17:54:31.198Z"
      commit:
        author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      created_at: "2015-12-24T15:51:21.880Z"
      erased_at: "2015-12-24T18:00:29.728Z"
      project:
        ci_job_token_scope_enabled: "false"
      downstream_pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        status: "success"
      failure_reason: "script_failure"
      queued_duration: 0.123
      duration: 0.465
      pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        status: "success"
      ref: "main"
      allow_failure: true
      stage: "deploy"
      web_url: "https://example.com/foo/bar/-/jobs/1"
      name: "deploy_to_production"
      started_at: "2015-12-24T17:54:30.733Z"
      id: 1
      tag: true
      user:
        work_information: "work_information"
        bot: "bot"
        created_at: "created_at"
        bio: "bio"
        linkedin: "linkedin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
        skype: "skype"
        twitter: "twitter"
        local_time: "local_time"
        id: 1
        state: "active"
        locked: true
        job_title: "job_title"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        is_followed: "is_followed"
        discord: "discord"
        followers: "followers"
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        website_url: "website_url"
        organization: "organization"
        following: "following"
        name: "Administrator"
        location: "location"
        pronouns: "pronouns"
        public_email: "public_email"
        username: "admin"
      status: "waiting_for_resource"
  TestReportEntity:
    type: "object"
    properties:
      total_time:
        type: "integer"
        format: "int32"
        example: 180
      total_count:
        type: "integer"
        format: "int32"
        example: 1
      success_count:
        type: "integer"
        format: "int32"
        example: 1
      failed_count:
        type: "integer"
        format: "int32"
        example: 0
      skipped_count:
        type: "integer"
        format: "int32"
        example: 0
      error_count:
        type: "integer"
        format: "int32"
        example: 0
      test_suites:
        type: "array"
        items:
          $ref: "#/definitions/TestSuiteEntity"
    description: "TestReportEntity model"
    example:
      skipped_count: 0
      total_count: 1
      success_count: 1
      test_suites:
      - skipped_count: 12
        total_count: 3363
        name: "test"
        success_count: 3351
        test_cases:
        - file: "./spec/test_spec.rb"
          classname: "vulnerability_management_spec"
          system_output: "Failure/Error: is_expected.to eq(3)"
          name: "Security Reports can create an auto-remediation MR"
          stack_trace: "Failure/Error: is_expected.to eq(3)"
          attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
          status: "success"
          execution_time: 180
          recent_failures: ""
        - file: "./spec/test_spec.rb"
          classname: "vulnerability_management_spec"
          system_output: "Failure/Error: is_expected.to eq(3)"
          name: "Security Reports can create an auto-remediation MR"
          stack_trace: "Failure/Error: is_expected.to eq(3)"
          attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
          status: "success"
          execution_time: 180
          recent_failures: ""
        failed_count: 0
        total_time: 1904
        error_count: 0
        suite_error: "JUnit XML parsing failed: 1:1: FATAL: Document is empty"
      - skipped_count: 12
        total_count: 3363
        name: "test"
        success_count: 3351
        test_cases:
        - file: "./spec/test_spec.rb"
          classname: "vulnerability_management_spec"
          system_output: "Failure/Error: is_expected.to eq(3)"
          name: "Security Reports can create an auto-remediation MR"
          stack_trace: "Failure/Error: is_expected.to eq(3)"
          attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
          status: "success"
          execution_time: 180
          recent_failures: ""
        - file: "./spec/test_spec.rb"
          classname: "vulnerability_management_spec"
          system_output: "Failure/Error: is_expected.to eq(3)"
          name: "Security Reports can create an auto-remediation MR"
          stack_trace: "Failure/Error: is_expected.to eq(3)"
          attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
          status: "success"
          execution_time: 180
          recent_failures: ""
        failed_count: 0
        total_time: 1904
        error_count: 0
        suite_error: "JUnit XML parsing failed: 1:1: FATAL: Document is empty"
      failed_count: 0
      total_time: 180
      error_count: 0
  TestSuiteEntity:
    type: "object"
    properties:
      name:
        type: "string"
        example: "test"
      total_time:
        type: "integer"
        format: "int32"
        example: 1904
      total_count:
        type: "integer"
        format: "int32"
        example: 3363
      success_count:
        type: "integer"
        format: "int32"
        example: 3351
      failed_count:
        type: "integer"
        format: "int32"
        example: 0
      skipped_count:
        type: "integer"
        format: "int32"
        example: 12
      error_count:
        type: "integer"
        format: "int32"
        example: 0
      suite_error:
        type: "string"
        example: "JUnit XML parsing failed: 1:1: FATAL: Document is empty"
      test_cases:
        type: "array"
        items:
          $ref: "#/definitions/TestCaseEntity"
    example:
      skipped_count: 12
      total_count: 3363
      name: "test"
      success_count: 3351
      test_cases:
      - file: "./spec/test_spec.rb"
        classname: "vulnerability_management_spec"
        system_output: "Failure/Error: is_expected.to eq(3)"
        name: "Security Reports can create an auto-remediation MR"
        stack_trace: "Failure/Error: is_expected.to eq(3)"
        attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
        status: "success"
        execution_time: 180
        recent_failures: ""
      - file: "./spec/test_spec.rb"
        classname: "vulnerability_management_spec"
        system_output: "Failure/Error: is_expected.to eq(3)"
        name: "Security Reports can create an auto-remediation MR"
        stack_trace: "Failure/Error: is_expected.to eq(3)"
        attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
        status: "success"
        execution_time: 180
        recent_failures: ""
      failed_count: 0
      total_time: 1904
      error_count: 0
      suite_error: "JUnit XML parsing failed: 1:1: FATAL: Document is empty"
  TestCaseEntity:
    type: "object"
    properties:
      status:
        type: "string"
        example: "success"
      name:
        type: "string"
        example: "Security Reports can create an auto-remediation MR"
      classname:
        type: "string"
        example: "vulnerability_management_spec"
      file:
        type: "string"
        example: "./spec/test_spec.rb"
      execution_time:
        type: "integer"
        format: "int32"
        example: 180
      system_output:
        type: "string"
        example: "Failure/Error: is_expected.to eq(3)"
      stack_trace:
        type: "string"
        example: "Failure/Error: is_expected.to eq(3)"
      recent_failures:
        type: "string"
        example: ""
      attachment_url:
        type: "string"
        example: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
    example:
      file: "./spec/test_spec.rb"
      classname: "vulnerability_management_spec"
      system_output: "Failure/Error: is_expected.to eq(3)"
      name: "Security Reports can create an auto-remediation MR"
      stack_trace: "Failure/Error: is_expected.to eq(3)"
      attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
      status: "success"
      execution_time: 180
      recent_failures: ""
  TestReportSummaryEntity:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
        example: 3363
      test_suites:
        $ref: "#/definitions/TestSuiteSummaryEntity"
    description: "TestReportSummaryEntity model"
    example:
      total: 3363
      test_suites:
        skipped_count: 12
        build_ids:
        - ""
        - ""
        total_count: 3363
        name: "test"
        success_count: 3351
        test_cases:
        - file: "./spec/test_spec.rb"
          classname: "vulnerability_management_spec"
          system_output: "Failure/Error: is_expected.to eq(3)"
          name: "Security Reports can create an auto-remediation MR"
          stack_trace: "Failure/Error: is_expected.to eq(3)"
          attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
          status: "success"
          execution_time: 180
          recent_failures: ""
        - file: "./spec/test_spec.rb"
          classname: "vulnerability_management_spec"
          system_output: "Failure/Error: is_expected.to eq(3)"
          name: "Security Reports can create an auto-remediation MR"
          stack_trace: "Failure/Error: is_expected.to eq(3)"
          attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
          status: "success"
          execution_time: 180
          recent_failures: ""
        failed_count: 0
        total_time: 1904
        error_count: 0
        suite_error: "JUnit XML parsing failed: 1:1: FATAL: Document is empty"
  TestSuiteSummaryEntity:
    type: "object"
    properties:
      name:
        type: "string"
        example: "test"
      total_time:
        type: "integer"
        format: "int32"
        example: 1904
      total_count:
        type: "integer"
        format: "int32"
        example: 3363
      success_count:
        type: "integer"
        format: "int32"
        example: 3351
      failed_count:
        type: "integer"
        format: "int32"
        example: 0
      skipped_count:
        type: "integer"
        format: "int32"
        example: 12
      error_count:
        type: "integer"
        format: "int32"
        example: 0
      suite_error:
        type: "string"
        example: "JUnit XML parsing failed: 1:1: FATAL: Document is empty"
      test_cases:
        type: "array"
        items:
          $ref: "#/definitions/TestCaseEntity"
      build_ids:
        type: "array"
        items:
          type: "integer"
          format: "int32"
          example: ""
    example:
      skipped_count: 12
      build_ids:
      - ""
      - ""
      total_count: 3363
      name: "test"
      success_count: 3351
      test_cases:
      - file: "./spec/test_spec.rb"
        classname: "vulnerability_management_spec"
        system_output: "Failure/Error: is_expected.to eq(3)"
        name: "Security Reports can create an auto-remediation MR"
        stack_trace: "Failure/Error: is_expected.to eq(3)"
        attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
        status: "success"
        execution_time: 180
        recent_failures: ""
      - file: "./spec/test_spec.rb"
        classname: "vulnerability_management_spec"
        system_output: "Failure/Error: is_expected.to eq(3)"
        name: "Security Reports can create an auto-remediation MR"
        stack_trace: "Failure/Error: is_expected.to eq(3)"
        attachment_url: "http://localhost/namespace1/project1/-/jobs/1/artifacts/file/some/path.png"
        status: "success"
        execution_time: 180
        recent_failures: ""
      failed_count: 0
      total_time: 1904
      error_count: 0
      suite_error: "JUnit XML parsing failed: 1:1: FATAL: Document is empty"
  putApiV4ProjectsIdPipelinesPipelineIdMetadata:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "Deployment to production"
        description: "The name of the pipeline"
    description: "Updates pipeline metadata"
  API_Entities_Ci_PipelineSchedule:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 13
      description:
        type: "string"
        example: "Test schedule pipeline"
      ref:
        type: "string"
        example: "develop"
      cron:
        type: "string"
        example: "* * * * *"
      cron_timezone:
        type: "string"
        example: "Asia/Tokyo"
      next_run_at:
        type: "string"
        format: "date-time"
        example: "2017-05-19T13:41:00.000Z"
      active:
        type: "boolean"
        example: true
      created_at:
        type: "string"
        format: "date-time"
        example: "2017-05-19T13:31:08.849Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2017-05-19T13:40:17.727Z"
      owner:
        $ref: "#/definitions/API_Entities_UserBasic"
    description: "API_Entities_Ci_PipelineSchedule model"
    example:
      cron: "* * * * *"
      owner:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      ref: "develop"
      next_run_at: "2017-05-19T13:41:00.000Z"
      updated_at: "2017-05-19T13:40:17.727Z"
      description: "Test schedule pipeline"
      cron_timezone: "Asia/Tokyo"
      active: true
      created_at: "2017-05-19T13:31:08.849Z"
      id: 13
  API_Entities_Ci_PipelineScheduleDetails:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 13
      description:
        type: "string"
        example: "Test schedule pipeline"
      ref:
        type: "string"
        example: "develop"
      cron:
        type: "string"
        example: "* * * * *"
      cron_timezone:
        type: "string"
        example: "Asia/Tokyo"
      next_run_at:
        type: "string"
        format: "date-time"
        example: "2017-05-19T13:41:00.000Z"
      active:
        type: "boolean"
        example: true
      created_at:
        type: "string"
        format: "date-time"
        example: "2017-05-19T13:31:08.849Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2017-05-19T13:40:17.727Z"
      owner:
        $ref: "#/definitions/API_Entities_UserBasic"
      last_pipeline:
        $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
      variables:
        $ref: "#/definitions/API_Entities_Ci_Variable"
    description: "API_Entities_Ci_PipelineScheduleDetails model"
    example:
      cron: "* * * * *"
      owner:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      ref: "develop"
      variables:
        environment_scope: "*"
        hidden: true
        protected: true
        variable_type: "env_var"
        masked: true
        raw: true
        description: "This variable is being used for ..."
        value: "TEST_1"
        key: "TEST_VARIABLE_1"
      next_run_at: "2017-05-19T13:41:00.000Z"
      updated_at: "2017-05-19T13:40:17.727Z"
      description: "Test schedule pipeline"
      cron_timezone: "Asia/Tokyo"
      active: true
      created_at: "2017-05-19T13:31:08.849Z"
      last_pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        status: "success"
      id: 13
  postApiV4ProjectsIdPipelineSchedules:
    type: "object"
    required:
    - "cron"
    - "description"
    - "ref"
    properties:
      description:
        type: "string"
        example: "Test schedule pipeline"
        description: "The description of pipeline schedule"
      ref:
        type: "string"
        example: "develop"
        description: "The branch/tag name will be triggered"
      cron:
        type: "string"
        example: "* * * * *"
        description: "The cron"
      cron_timezone:
        type: "string"
        example: "Asia/Tokyo"
        description: "The timezone"
        default: "UTC"
      active:
        type: "boolean"
        example: true
        description: "The activation of pipeline schedule"
        default: true
    description: "Create a new pipeline schedule"
  putApiV4ProjectsIdPipelineSchedulesPipelineScheduleId:
    type: "object"
    properties:
      description:
        type: "string"
        example: "Test schedule pipeline"
        description: "The description of pipeline schedule"
      ref:
        type: "string"
        example: "develop"
        description: "The branch/tag name will be triggered"
      cron:
        type: "string"
        example: "* * * * *"
        description: "The cron"
      cron_timezone:
        type: "string"
        example: "Asia/Tokyo"
        description: "The timezone"
      active:
        type: "boolean"
        example: true
        description: "The activation of pipeline schedule"
    description: "Edit a pipeline schedule"
  postApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariables:
    type: "object"
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
        example: "NEW_VARIABLE"
        description: "The key of the variable"
      value:
        type: "string"
        example: "new value"
        description: "The value of the variable"
      variable_type:
        type: "string"
        description: "The type of variable, must be one of env_var or file. Defaults\
          \ to env_var"
        default: "env_var"
        enum:
        - "env_var"
        - "file"
    description: "Create a new pipeline schedule variable"
  putApiV4ProjectsIdPipelineSchedulesPipelineScheduleIdVariablesKey:
    type: "object"
    properties:
      value:
        type: "string"
        example: "new value"
        description: "The value of the variable"
      variable_type:
        type: "string"
        description: "The type of variable, must be one of env_var or file"
        default: "env_var"
        enum:
        - "env_var"
        - "file"
    description: "Edit a pipeline schedule variable"
  postApiV4ProjectsId(refRef)triggerPipeline:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        example: "6d056f63e50fe6f8c5f8f4aa10edb7"
        description: "The unique token of trigger or job token"
      variables:
        type: "object"
        example:
          VAR1: "value1"
          VAR2: "value2"
        description: "The list of variables to be injected into build"
        properties: {}
    description: "Trigger a GitLab project pipeline"
  API_Entities_Trigger:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 10
      token:
        type: "string"
        example: "6d056f63e50fe6f8c5f8f4aa10edb7"
      description:
        type: "string"
        example: "test"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T15:51:21.880Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:31.198Z"
      last_used:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:31.198Z"
      owner:
        $ref: "#/definitions/API_Entities_UserBasic"
    description: "API_Entities_Trigger model"
    example:
      owner:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      updated_at: "2015-12-24T17:54:31.198Z"
      last_used: "2015-12-24T17:54:31.198Z"
      description: "test"
      created_at: "2015-12-24T15:51:21.880Z"
      id: 10
      token: "6d056f63e50fe6f8c5f8f4aa10edb7"
  postApiV4ProjectsIdTriggers:
    type: "object"
    required:
    - "description"
    properties:
      description:
        type: "string"
        example: "my trigger token description"
        description: "The trigger token description"
    description: "Create a trigger token"
  putApiV4ProjectsIdTriggersTriggerId:
    type: "object"
    properties:
      description:
        type: "string"
        description: "The trigger token description"
    description: "Update a trigger token"
  postApiV4ProjectsIdVariables:
    type: "object"
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
        description: "The key of a variable"
      value:
        type: "string"
        description: "The value of a variable"
      protected:
        type: "boolean"
        description: "Whether the variable is protected"
      masked:
        type: "boolean"
        description: "Whether the variable is masked"
      masked_and_hidden:
        type: "boolean"
        description: "Whether the variable is masked and hidden"
      raw:
        type: "boolean"
        description: "Whether the variable will be expanded"
      variable_type:
        type: "string"
        description: "The type of the variable. Default: env_var"
        enum:
        - "env_var"
        - "file"
      environment_scope:
        type: "string"
        description: "The environment_scope of the variable"
      description:
        type: "string"
        description: "The description of the variable"
    description: "Create a new variable in a project"
  putApiV4ProjectsIdVariablesKey:
    type: "object"
    properties:
      value:
        type: "string"
        description: "The value of a variable"
      protected:
        type: "boolean"
        description: "Whether the variable is protected"
      masked:
        type: "boolean"
        description: "Whether the variable is masked"
      environment_scope:
        type: "string"
        description: "The environment_scope of a variable"
      raw:
        type: "boolean"
        description: "Whether the variable will be expanded"
      variable_type:
        type: "string"
        description: "The type of the variable. Default: env_var"
        enum:
        - "env_var"
        - "file"
      filter:
        $ref: "#/definitions/putApiV4ProjectsIdVariablesKey_filter"
      description:
        type: "string"
        description: "The description of the variable"
    description: "Update an existing variable from a project"
  API_Entities_Clusters_Agent:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      config_project:
        $ref: "#/definitions/API_Entities_ProjectIdentity"
      created_at:
        type: "string"
      created_by_user_id:
        type: "string"
    description: "API_Entities_Clusters_Agent model"
    example:
      name: "name"
      created_at: "created_at"
      id: "id"
      config_project:
        path: "project1"
        path_with_namespace: "namespace1/project1"
        name: "project1"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        id: 1
        name_with_namespace: "John Doe / project1"
      created_by_user_id: "created_by_user_id"
  postApiV4ProjectsIdClusterAgents:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the agent"
    description: "Register an agent with a project"
  postApiV4ProjectsIdRepositoryCommits:
    type: "object"
    required:
    - "actions"
    - "branch"
    - "commit_message"
    properties:
      branch:
        type: "string"
        example: "master"
        description: "Name of the branch to commit into. To create a new branch, also\
          \ provide either `start_branch` or `start_sha`, and optionally `start_project`."
      commit_message:
        type: "string"
        example: "initial commit"
        description: "Commit message"
      actions:
        type: "array"
        description: "Actions to perform in commit"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdRepositoryCommits_actions"
      start_branch:
        type: "string"
        example: "staging"
        description: "Name of the branch to start the new branch from"
      start_sha:
        type: "string"
        example: "2695effb5807a22ff3d138d593fd856244e155e7"
        description: "SHA of the commit to start the new branch from"
      start_project:
        type: "integer"
        format: "int32"
        example: 1
        description: "The ID or path of the project to start the new branch from"
      author_email:
        type: "string"
        example: "janedoe@example.com"
        description: "Author email for commit"
      author_name:
        type: "string"
        example: "Jane Doe"
        description: "Author name for commit"
      stats:
        type: "boolean"
        description: "Include commit stats"
        default: true
      force:
        type: "boolean"
        description: "When `true` overwrites the target branch with a new commit based\
          \ on the `start_branch` or `start_sha`"
        default: false
    description: "Commit multiple file changes as one commit"
  API_Entities_CommitDetail:
    type: "object"
    properties:
      id:
        type: "string"
        example: "2695effb5807a22ff3d138d593fd856244e155e7"
      short_id:
        type: "string"
        example: "2695effb"
      created_at:
        type: "string"
        format: "date-time"
        example: "2017-07-26T11:08:53.000+02:00"
      parent_ids:
        type: "array"
        items:
          type: "string"
          example: "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
      title:
        type: "string"
        example: "Initial commit"
      message:
        type: "string"
        example: "Initial commit"
      author_name:
        type: "string"
        example: "John Smith"
      author_email:
        type: "string"
        example: "john@example.com"
      authored_date:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      committer_name:
        type: "string"
        example: "Jack Smith"
      committer_email:
        type: "string"
        example: "jack@example.com"
      committed_date:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      trailers:
        type: "object"
        example: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        properties: {}
      extended_trailers:
        type: "object"
        example: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\", \"Jane\
          \ Doe <janedoe@gitlab.com>\"] }"
        properties: {}
      web_url:
        type: "string"
        example: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
      stats:
        $ref: "#/definitions/API_Entities_CommitStats"
      status:
        type: "string"
        example: "success"
      project_id:
        type: "integer"
        format: "int32"
        example: 1
      last_pipeline:
        $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
    description: "API_Entities_CommitDetail model"
    example:
      author_name: "John Smith"
      authored_date: "2012-05-28T04:42:42-07:00"
      committer_email: "jack@example.com"
      extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
        , \"Jane Doe <janedoe@gitlab.com>\"] }"
      created_at: "2017-07-26T11:08:53.000+02:00"
      short_id: "2695effb"
      parent_ids:
      - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
      - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
      title: "Initial commit"
      message: "Initial commit"
      committer_name: "Jack Smith"
      trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
      committed_date: "2012-05-28T04:42:42-07:00"
      web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
      stats:
        total: 1
        additions: 1
        deletions: 0
      project_id: 1
      author_email: "john@example.com"
      last_pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        status: "success"
      id: "2695effb5807a22ff3d138d593fd856244e155e7"
      status: "success"
  API_Entities_CommitStats:
    type: "object"
    properties:
      additions:
        type: "integer"
        format: "int32"
        example: 1
      deletions:
        type: "integer"
        format: "int32"
        example: 0
      total:
        type: "integer"
        format: "int32"
        example: 1
    example:
      total: 1
      additions: 1
      deletions: 0
  API_Entities_Diff:
    type: "object"
    properties:
      diff:
        type: "string"
        example: "@@ -71,6 +71,8 @@\\n..."
      new_path:
        type: "string"
        example: "doc/update/5.4-to-6.0.md"
      old_path:
        type: "string"
        example: "doc/update/5.4-to-6.0.md"
      a_mode:
        type: "string"
        example: "100755"
      b_mode:
        type: "string"
        example: "100644"
      new_file:
        type: "boolean"
      renamed_file:
        type: "boolean"
      deleted_file:
        type: "boolean"
      generated_file:
        type: "boolean"
    description: "API_Entities_Diff model"
    example:
      generated_file: true
      new_path: "doc/update/5.4-to-6.0.md"
      renamed_file: true
      a_mode: "100755"
      deleted_file: true
      b_mode: "100644"
      new_file: true
      diff: "@@ -71,6 +71,8 @@\\n..."
      old_path: "doc/update/5.4-to-6.0.md"
  API_Entities_CommitNote:
    type: "object"
    properties:
      note:
        type: "string"
        example: "this doc is really nice"
      path:
        type: "string"
        example: "README.md"
      line:
        type: "integer"
        format: "int32"
        example: 11
      line_type:
        type: "string"
        example: "new"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      created_at:
        type: "string"
        format: "date-time"
        example: "2016-01-19T09:44:55.600Z"
    description: "API_Entities_CommitNote model"
    example:
      note: "this doc is really nice"
      path: "README.md"
      line: 11
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      line_type: "new"
      created_at: "2016-01-19T09:44:55.600Z"
  API_Entities_CommitSequence:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int32"
        example: 1
    description: "API_Entities_CommitSequence model"
    example:
      count: 1
  postApiV4ProjectsIdRepositoryCommitsShaCherryPick:
    type: "object"
    required:
    - "branch"
    properties:
      branch:
        type: "string"
        example: "master"
        description: "The name of the branch"
      dry_run:
        type: "boolean"
        description: "Does not commit any changes"
        default: false
      message:
        type: "string"
        example: "Initial commit"
        description: "A custom commit message to use for the picked commit"
    description: "Cherry pick commit into a branch"
  postApiV4ProjectsIdRepositoryCommitsShaRevert:
    type: "object"
    required:
    - "branch"
    properties:
      branch:
        type: "string"
        example: "master"
        description: "Target branch name"
      dry_run:
        type: "boolean"
        description: "Does not commit any changes"
        default: false
    description: "Revert a commit in a branch"
  API_Entities_BasicRef:
    type: "object"
    properties:
      type:
        type: "string"
        example: "tag"
      name:
        type: "string"
        example: "v1.1.0"
    description: "API_Entities_BasicRef model"
    example:
      name: "v1.1.0"
      type: "tag"
  postApiV4ProjectsIdRepositoryCommitsShaComments:
    type: "object"
    required:
    - "line"
    - "line_type"
    - "note"
    properties:
      note:
        type: "string"
        example: "Nice code!"
        description: "The text of the comment"
      path:
        type: "string"
        example: "doc/update/5.4-to-6.0.md"
        description: "The file path"
      line:
        type: "integer"
        format: "int32"
        example: 11
        description: "The line number"
      line_type:
        type: "string"
        description: "The type of the line"
        default: "new"
        enum:
        - "new"
        - "old"
    description: "Post comment to commit"
  API_Entities_CommitSignature:
    type: "object"
    properties:
      signature_type:
        type: "string"
        example: "PGP"
      signature:
        type: "string"
      commit_source:
        type: "string"
        example: "gitaly"
    description: "API_Entities_CommitSignature model"
    example:
      commit_source: "gitaly"
      signature: "signature"
      signature_type: "PGP"
  API_Entities_CommitStatus:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 93
      sha:
        type: "string"
        example: "18f3e63d05582537db6d183d9d557be09e1f90c8"
      ref:
        type: "string"
        example: "develop"
      status:
        type: "string"
        example: "success"
      name:
        type: "string"
        example: "default"
      target_url:
        type: "string"
        example: "https://gitlab.example.com/janedoe/gitlab-foss/builds/91"
      description:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
        example: "2016-01-19T09:05:50.355Z"
      started_at:
        type: "string"
        format: "date-time"
        example: "2016-01-20T08:40:25.832Z"
      finished_at:
        type: "string"
        format: "date-time"
        example: "2016-01-21T08:40:25.832Z"
      allow_failure:
        type: "boolean"
        example: false
      coverage:
        type: "number"
        format: "float"
        example: 98.29
      pipeline_id:
        type: "integer"
        format: "int32"
        example: 101
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
    description: "API_Entities_CommitStatus model"
    example:
      coverage: 98.29
      finished_at: "2016-01-21T08:40:25.832Z"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      target_url: "https://gitlab.example.com/janedoe/gitlab-foss/builds/91"
      description: "description"
      created_at: "2016-01-19T09:05:50.355Z"
      sha: "18f3e63d05582537db6d183d9d557be09e1f90c8"
      ref: "develop"
      allow_failure: false
      name: "default"
      pipeline_id: 101
      started_at: "2016-01-20T08:40:25.832Z"
      id: 93
      status: "success"
  postApiV4ProjectsIdStatusesSha:
    type: "object"
    required:
    - "state"
    properties:
      state:
        type: "string"
        example: "pending"
        description: "The state of the status"
        enum:
        - "pending"
        - "running"
        - "success"
        - "failed"
        - "canceled"
      ref:
        type: "string"
        example: "develop"
        description: "The ref"
      target_url:
        type: "string"
        example: "https://gitlab.example.com/janedoe/gitlab-foss/builds/91"
        description: "The target URL to associate with this status"
      description:
        type: "string"
        description: "A short description of the status"
      name:
        type: "string"
        example: "coverage"
        description: "A string label to differentiate this status from the status\
          \ of other systems"
        default: "default"
      context:
        type: "string"
        example: "coverage"
        description: "A string label to differentiate this status from the status\
          \ of other systems"
        default: "default"
      coverage:
        type: "number"
        format: "float"
        example: 100.0
        description: "The total code coverage"
      pipeline_id:
        type: "integer"
        format: "int32"
        description: "An existing pipeline ID, when multiple pipelines on the same\
          \ commit SHA have been triggered"
    description: "Post status to a commit"
  API_Entities_DeployKeysProject:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      title:
        type: "string"
        example: "Sample key 25"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:44.627Z"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-09-03T07:24:44.627Z"
      key:
        type: "string"
        example: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDNJAkI3Wdf0r13c8a5pEExB2YowPWCSVzfZV22pNBc1CuEbyYLHpUyaD0GwpGvFdx2aP7lMEk35k6Rz3ccBF6jRaVJyhsn5VNnW92PMpBJ/P1UebhXwsFHdQf5rTt082cSxWuk61kGWRQtk4ozt/J2DF/dIUVaLvc+z4HomT41fQ=="
      usage_type:
        type: "string"
        example: "auth"
      fingerprint:
        type: "string"
        example: "4a:9d:64:15:ed:3a:e6:07:6e:89:36:b3:3b:03:05:d9"
      fingerprint_sha256:
        type: "string"
        example: "SHA256:Jrs3LD1Ji30xNLtTVf9NDCj7kkBgPBb2pjvTZ3HfIgU"
      projects_with_write_access:
        $ref: "#/definitions/API_Entities_ProjectIdentity"
      projects_with_readonly_access:
        $ref: "#/definitions/API_Entities_ProjectIdentity"
      can_push:
        type: "boolean"
    description: "API_Entities_DeployKeysProject model"
    example:
      expires_at: "2020-09-03T07:24:44.627Z"
      usage_type: "auth"
      projects_with_readonly_access:
        path: "project1"
        path_with_namespace: "namespace1/project1"
        name: "project1"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        id: 1
        name_with_namespace: "John Doe / project1"
      fingerprint: "4a:9d:64:15:ed:3a:e6:07:6e:89:36:b3:3b:03:05:d9"
      created_at: "2015-09-03T07:24:44.627Z"
      id: 1
      projects_with_write_access:
        path: "project1"
        path_with_namespace: "namespace1/project1"
        name: "project1"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        id: 1
        name_with_namespace: "John Doe / project1"
      title: "Sample key 25"
      can_push: true
      key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDNJAkI3Wdf0r13c8a5pEExB2YowPWCSVzfZV22pNBc1CuEbyYLHpUyaD0GwpGvFdx2aP7lMEk35k6Rz3ccBF6jRaVJyhsn5VNnW92PMpBJ/P1UebhXwsFHdQf5rTt082cSxWuk61kGWRQtk4ozt/J2DF/dIUVaLvc+z4HomT41fQ=="
      fingerprint_sha256: "SHA256:Jrs3LD1Ji30xNLtTVf9NDCj7kkBgPBb2pjvTZ3HfIgU"
  postApiV4ProjectsIdDeployKeys:
    type: "object"
    required:
    - "key"
    - "title"
    properties:
      key:
        type: "string"
        description: "New deploy key"
      title:
        type: "string"
        description: "New deploy key's title"
      can_push:
        type: "boolean"
        description: "Can deploy key push to the project's repository"
      expires_at:
        type: "string"
        format: "date-time"
        description: "The expiration date of the SSH key in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)"
    description: "Add deploy key"
  putApiV4ProjectsIdDeployKeysKeyId:
    type: "object"
    properties:
      title:
        type: "string"
        description: "New deploy key's title"
      can_push:
        type: "boolean"
        description: "Can deploy key push to the project's repository"
    description: "Update deploy key"
  API_Entities_DeployKey:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      title:
        type: "string"
        example: "Sample key 25"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:44.627Z"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-09-03T07:24:44.627Z"
      key:
        type: "string"
        example: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDNJAkI3Wdf0r13c8a5pEExB2YowPWCSVzfZV22pNBc1CuEbyYLHpUyaD0GwpGvFdx2aP7lMEk35k6Rz3ccBF6jRaVJyhsn5VNnW92PMpBJ/P1UebhXwsFHdQf5rTt082cSxWuk61kGWRQtk4ozt/J2DF/dIUVaLvc+z4HomT41fQ=="
      usage_type:
        type: "string"
        example: "auth"
      fingerprint:
        type: "string"
        example: "4a:9d:64:15:ed:3a:e6:07:6e:89:36:b3:3b:03:05:d9"
      fingerprint_sha256:
        type: "string"
        example: "SHA256:Jrs3LD1Ji30xNLtTVf9NDCj7kkBgPBb2pjvTZ3HfIgU"
      projects_with_write_access:
        $ref: "#/definitions/API_Entities_ProjectIdentity"
      projects_with_readonly_access:
        $ref: "#/definitions/API_Entities_ProjectIdentity"
    description: "API_Entities_DeployKey model"
    example:
      expires_at: "2020-09-03T07:24:44.627Z"
      usage_type: "auth"
      projects_with_readonly_access:
        path: "project1"
        path_with_namespace: "namespace1/project1"
        name: "project1"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        id: 1
        name_with_namespace: "John Doe / project1"
      fingerprint: "4a:9d:64:15:ed:3a:e6:07:6e:89:36:b3:3b:03:05:d9"
      created_at: "2015-09-03T07:24:44.627Z"
      id: 1
      projects_with_write_access:
        path: "project1"
        path_with_namespace: "namespace1/project1"
        name: "project1"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        id: 1
        name_with_namespace: "John Doe / project1"
      title: "Sample key 25"
      key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDNJAkI3Wdf0r13c8a5pEExB2YowPWCSVzfZV22pNBc1CuEbyYLHpUyaD0GwpGvFdx2aP7lMEk35k6Rz3ccBF6jRaVJyhsn5VNnW92PMpBJ/P1UebhXwsFHdQf5rTt082cSxWuk61kGWRQtk4ozt/J2DF/dIUVaLvc+z4HomT41fQ=="
      fingerprint_sha256: "SHA256:Jrs3LD1Ji30xNLtTVf9NDCj7kkBgPBb2pjvTZ3HfIgU"
  postApiV4ProjectsIdDeployTokens:
    type: "object"
    required:
    - "name"
    - "scopes"
    properties:
      name:
        type: "string"
        description: "New deploy token's name"
      scopes:
        type: "array"
        description: "Indicates the deploy token scopes. Must be at least one of `read_repository`,\
          \ `read_registry`, `write_registry`, `read_package_registry`, or `write_package_registry`."
        items:
          type: "string"
          enum:
          - "read_repository"
          - "read_registry"
          - "write_registry"
          - "read_package_registry"
          - "write_package_registry"
      expires_at:
        type: "string"
        format: "date-time"
        description: "Expiration date for the deploy token. Does not expire if no\
          \ value is provided. Expected in ISO 8601 format (`2019-03-15T08:00:00Z`)."
      username:
        type: "string"
        description: "Username for deploy token. Default is `gitlab+deploy-token-{n}`"
    description: "Create a project deploy token"
  API_Entities_Deployment:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 41
      iid:
        type: "integer"
        format: "int32"
        example: 1
      ref:
        type: "string"
        example: "main"
      sha:
        type: "string"
        example: "99d03678b90d914dbb1b109132516d71a4a03ea8"
      created_at:
        type: "string"
        format: "date-time"
        example: "2016-08-11T11:32:35.444Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2016-08-11T11:32:35.444Z"
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
      environment:
        $ref: "#/definitions/API_Entities_EnvironmentBasic"
      deployable:
        $ref: "#/definitions/API_Entities_Ci_Job"
      status:
        type: "string"
        example: "created"
    description: "API_Entities_Deployment model"
    example:
      ref: "main"
      environment:
        external_url: "https://deploy.gitlab.example.com"
        updated_at: "2019-05-25T18:55:13.252Z"
        name: "deploy"
        created_at: "2019-05-25T18:55:13.252Z"
        id: 1
        slug: "deploy"
      updated_at: "2016-08-11T11:32:35.444Z"
      deployable:
        finished_at: "2015-12-24T17:54:31.198Z"
        commit:
          author_name: "John Smith"
          authored_date: "2012-05-28T04:42:42-07:00"
          committer_email: "jack@example.com"
          extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
            , \"Jane Doe <janedoe@gitlab.com>\"] }"
          created_at: "2017-07-26T11:08:53.000+02:00"
          short_id: "2695effb"
          parent_ids:
          - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
          - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
          title: "Initial commit"
          message: "Initial commit"
          committer_name: "Jack Smith"
          trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
          committed_date: "2012-05-28T04:42:42-07:00"
          web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
          author_email: "john@example.com"
          id: "2695effb5807a22ff3d138d593fd856244e155e7"
        created_at: "2015-12-24T15:51:21.880Z"
        project:
          ci_job_token_scope_enabled: "false"
        queued_duration: 0.123
        duration: 0.465
        archived: false
        ref: "main"
        allow_failure: true
        runner_manager:
          system_id: "runner-1"
          created_at: "2023-10-24T01:27:06.549Z"
          id: 8
          contacted_at: "2023-10-24T01:27:06.549Z"
          ip_address: "127.0.0.1"
          version: "16.11.0"
          platform: "linux"
          revision: "91a27b2a"
          architecture: "amd64"
          status: "online"
        tag_list:
        - ""
        - ""
        id: 1
        tag: true
        runner:
          paused: false
          is_shared: true
          name: "test"
          description: "test-1-20150125"
          active: true
          runner_type: "instance_type"
          online: true
          id: 8
          ip_address: "127.0.0.1"
          status: "online"
        artifacts:
        - filename: "artifacts.zip"
          size: 1000
          file_type: "archive"
          file_format: "zip"
        - filename: "artifacts.zip"
          size: 1000
          file_type: "archive"
          file_format: "zip"
        coverage: 98.29
        erased_at: "2015-12-24T18:00:29.728Z"
        failure_reason: "script_failure"
        artifacts_expire_at: "2016-01-19T09:05:50.355Z"
        pipeline:
          ref: "feature-branch"
          updated_at: "2022-10-21T16:49:48.000+02:00"
          web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
          iid: 2
          project_id: 3
          created_at: "2022-10-21T16:49:48.000+02:00"
          id: 1
          source: "push"
          sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
          status: "success"
        stage: "deploy"
        web_url: "https://example.com/foo/bar/-/jobs/1"
        artifacts_file:
          filename: "artifacts.zip"
          size: 1000
        name: "deploy_to_production"
        started_at: "2015-12-24T17:54:30.733Z"
        user:
          work_information: "work_information"
          bot: "bot"
          created_at: "created_at"
          bio: "bio"
          linkedin: "linkedin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
          skype: "skype"
          twitter: "twitter"
          local_time: "local_time"
          id: 1
          state: "active"
          locked: true
          job_title: "job_title"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          is_followed: "is_followed"
          discord: "discord"
          followers: "followers"
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          website_url: "website_url"
          organization: "organization"
          following: "following"
          name: "Administrator"
          location: "location"
          pronouns: "pronouns"
          public_email: "public_email"
          username: "admin"
        status: "waiting_for_resource"
      iid: 1
      created_at: "2016-08-11T11:32:35.444Z"
      id: 41
      sha: "99d03678b90d914dbb1b109132516d71a4a03ea8"
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      status: "created"
  API_Entities_EnvironmentBasic:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "deploy"
      slug:
        type: "string"
        example: "deploy"
      external_url:
        type: "string"
        example: "https://deploy.gitlab.example.com"
      created_at:
        type: "string"
        format: "date-time"
        example: "2019-05-25T18:55:13.252Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2019-05-25T18:55:13.252Z"
    description: "API_Entities_EnvironmentBasic model"
    example:
      external_url: "https://deploy.gitlab.example.com"
      updated_at: "2019-05-25T18:55:13.252Z"
      name: "deploy"
      created_at: "2019-05-25T18:55:13.252Z"
      id: 1
      slug: "deploy"
  API_Entities_DeploymentExtended:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 41
      iid:
        type: "integer"
        format: "int32"
        example: 1
      ref:
        type: "string"
        example: "main"
      sha:
        type: "string"
        example: "99d03678b90d914dbb1b109132516d71a4a03ea8"
      created_at:
        type: "string"
        format: "date-time"
        example: "2016-08-11T11:32:35.444Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2016-08-11T11:32:35.444Z"
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
      environment:
        $ref: "#/definitions/API_Entities_EnvironmentBasic"
      deployable:
        $ref: "#/definitions/API_Entities_Ci_Job"
      status:
        type: "string"
        example: "created"
      pending_approval_count:
        type: "integer"
        format: "int32"
        example: 0
      approvals:
        $ref: "#/definitions/API_Entities_Deployments_Approval"
      approval_summary:
        $ref: "#/definitions/API_Entities_Deployments_ApprovalSummary"
    description: "API_Entities_DeploymentExtended model"
    example:
      iid: 1
      created_at: "2016-08-11T11:32:35.444Z"
      sha: "99d03678b90d914dbb1b109132516d71a4a03ea8"
      ref: "main"
      environment:
        external_url: "https://deploy.gitlab.example.com"
        updated_at: "2019-05-25T18:55:13.252Z"
        name: "deploy"
        created_at: "2019-05-25T18:55:13.252Z"
        id: 1
        slug: "deploy"
      pending_approval_count: 0
      updated_at: "2016-08-11T11:32:35.444Z"
      deployable:
        finished_at: "2015-12-24T17:54:31.198Z"
        commit:
          author_name: "John Smith"
          authored_date: "2012-05-28T04:42:42-07:00"
          committer_email: "jack@example.com"
          extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
            , \"Jane Doe <janedoe@gitlab.com>\"] }"
          created_at: "2017-07-26T11:08:53.000+02:00"
          short_id: "2695effb"
          parent_ids:
          - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
          - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
          title: "Initial commit"
          message: "Initial commit"
          committer_name: "Jack Smith"
          trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
          committed_date: "2012-05-28T04:42:42-07:00"
          web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
          author_email: "john@example.com"
          id: "2695effb5807a22ff3d138d593fd856244e155e7"
        created_at: "2015-12-24T15:51:21.880Z"
        project:
          ci_job_token_scope_enabled: "false"
        queued_duration: 0.123
        duration: 0.465
        archived: false
        ref: "main"
        allow_failure: true
        runner_manager:
          system_id: "runner-1"
          created_at: "2023-10-24T01:27:06.549Z"
          id: 8
          contacted_at: "2023-10-24T01:27:06.549Z"
          ip_address: "127.0.0.1"
          version: "16.11.0"
          platform: "linux"
          revision: "91a27b2a"
          architecture: "amd64"
          status: "online"
        tag_list:
        - ""
        - ""
        id: 1
        tag: true
        runner:
          paused: false
          is_shared: true
          name: "test"
          description: "test-1-20150125"
          active: true
          runner_type: "instance_type"
          online: true
          id: 8
          ip_address: "127.0.0.1"
          status: "online"
        artifacts:
        - filename: "artifacts.zip"
          size: 1000
          file_type: "archive"
          file_format: "zip"
        - filename: "artifacts.zip"
          size: 1000
          file_type: "archive"
          file_format: "zip"
        coverage: 98.29
        erased_at: "2015-12-24T18:00:29.728Z"
        failure_reason: "script_failure"
        artifacts_expire_at: "2016-01-19T09:05:50.355Z"
        pipeline:
          ref: "feature-branch"
          updated_at: "2022-10-21T16:49:48.000+02:00"
          web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
          iid: 2
          project_id: 3
          created_at: "2022-10-21T16:49:48.000+02:00"
          id: 1
          source: "push"
          sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
          status: "success"
        stage: "deploy"
        web_url: "https://example.com/foo/bar/-/jobs/1"
        artifacts_file:
          filename: "artifacts.zip"
          size: 1000
        name: "deploy_to_production"
        started_at: "2015-12-24T17:54:30.733Z"
        user:
          work_information: "work_information"
          bot: "bot"
          created_at: "created_at"
          bio: "bio"
          linkedin: "linkedin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
          skype: "skype"
          twitter: "twitter"
          local_time: "local_time"
          id: 1
          state: "active"
          locked: true
          job_title: "job_title"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          is_followed: "is_followed"
          discord: "discord"
          followers: "followers"
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          website_url: "website_url"
          organization: "organization"
          following: "following"
          name: "Administrator"
          location: "location"
          pronouns: "pronouns"
          public_email: "public_email"
          username: "admin"
        status: "waiting_for_resource"
      approval_summary:
        rules:
          access_level: "access_level"
          access_level_description: "access_level_description"
          group_inheritance_type: "group_inheritance_type"
          user_id: "user_id"
          group_id: "group_id"
          deployment_approvals:
            created_at: "2022-02-24T20:22:30.097Z"
            comment: "LGTM"
            user:
              avatar_url: "https://gravatar.com/avatar/1"
              web_url: "https://gitlab.example.com/root"
              avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
              name: "Administrator"
              id: 1
              state: "active"
              locked: true
              username: "admin"
              custom_attributes:
              - value: "bar"
                key: "foo"
              - value: "bar"
                key: "foo"
            status: "approved"
          required_approvals: "required_approvals"
          id: "id"
      approvals:
        created_at: "2022-02-24T20:22:30.097Z"
        comment: "LGTM"
        user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        status: "approved"
      id: 41
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      status: "created"
  API_Entities_Deployments_Approval:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
      status:
        type: "string"
        example: "approved"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-02-24T20:22:30.097Z"
      comment:
        type: "string"
        example: "LGTM"
    description: "API_Entities_Deployments_Approval model"
    example:
      created_at: "2022-02-24T20:22:30.097Z"
      comment: "LGTM"
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      status: "approved"
  API_Entities_Deployments_ApprovalSummary:
    type: "object"
    properties:
      rules:
        $ref: "#/definitions/API_Entities_ProtectedEnvironments_ApprovalRuleForSummary"
    example:
      rules:
        access_level: "access_level"
        access_level_description: "access_level_description"
        group_inheritance_type: "group_inheritance_type"
        user_id: "user_id"
        group_id: "group_id"
        deployment_approvals:
          created_at: "2022-02-24T20:22:30.097Z"
          comment: "LGTM"
          user:
            avatar_url: "https://gravatar.com/avatar/1"
            web_url: "https://gitlab.example.com/root"
            avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
            name: "Administrator"
            id: 1
            state: "active"
            locked: true
            username: "admin"
            custom_attributes:
            - value: "bar"
              key: "foo"
            - value: "bar"
              key: "foo"
          status: "approved"
        required_approvals: "required_approvals"
        id: "id"
  API_Entities_ProtectedEnvironments_ApprovalRuleForSummary:
    type: "object"
    properties:
      id:
        type: "string"
      user_id:
        type: "string"
      group_id:
        type: "string"
      access_level:
        type: "string"
      access_level_description:
        type: "string"
      required_approvals:
        type: "string"
      group_inheritance_type:
        type: "string"
      deployment_approvals:
        $ref: "#/definitions/API_Entities_Deployments_Approval"
    example:
      access_level: "access_level"
      access_level_description: "access_level_description"
      group_inheritance_type: "group_inheritance_type"
      user_id: "user_id"
      group_id: "group_id"
      deployment_approvals:
        created_at: "2022-02-24T20:22:30.097Z"
        comment: "LGTM"
        user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        status: "approved"
      required_approvals: "required_approvals"
      id: "id"
  postApiV4ProjectsIdDeployments:
    type: "object"
    required:
    - "environment"
    - "ref"
    - "sha"
    - "status"
    - "tag"
    properties:
      environment:
        type: "string"
        description: "The name of the environment to create the deployment for"
      sha:
        type: "string"
        description: "The SHA of the commit that is deployed"
      ref:
        type: "string"
        description: "The name of the branch or tag that is deployed"
      tag:
        type: "boolean"
        description: "A boolean that indicates if the deployed ref is a tag (`true`)\
          \ or not (`false`)"
      status:
        type: "string"
        description: "The status of the deployment that is created. One of `running`,\
          \ `success`, `failed`, or `canceled`"
        enum:
        - "running"
        - "success"
        - "failed"
        - "canceled"
    description: "Create a deployment"
  putApiV4ProjectsIdDeploymentsDeploymentId:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        description: "The new status of the deployment. One of `running`, `success`,\
          \ `failed`, or `canceled`"
        enum:
        - "running"
        - "success"
        - "failed"
        - "canceled"
    description: "Update a deployment"
  postApiV4ProjectsIdDeploymentsDeploymentIdApproval:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        description: "The status of the approval (either `approved` or `rejected`)"
        enum:
        - "approved"
        - "rejected"
      comment:
        type: "string"
        description: "A comment to go with the approval"
      represented_as:
        type: "string"
        description: "The name of the User/Group/Role to use for the approval, when\
          \ the user belongs to multiple approval rules"
    description: "Approve or reject a blocked deployment"
  API_Entities_DraftNote:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 2
      author_id:
        type: "integer"
        format: "int32"
        example: 4
      merge_request_id:
        type: "integer"
        format: "int32"
        example: 52
      resolve_discussion:
        type: "boolean"
        example: true
      discussion_id:
        type: "integer"
        format: "int32"
        example: 613
      note:
        type: "string"
        example: "This is a note"
      commit_id:
        type: "integer"
        format: "int32"
        example: 4
      line_code:
        type: "string"
        example: "1c497fbb3a46b78edf0_2_4"
      position:
        type: "object"
        example:
          base_sha: "aa149113"
          start_sha: "b3a0a8c4"
          head_sha: "be3020c7"
          old_path: "example.md"
          new_path: "example.md"
          position_type: "text"
          old_line: 2
          new_line: 4
          line_range:
            start:
              line_code: "1c497fbb3a46b78edf04cc2a2fa33f67e3ffbe2a_2_4"
              type: null
              old_line: 2
              new_line: 4
            end:
              line_code: "1c497fbb3a46b78edf04cc2a2fa33f67e3ffbe2a_2_4"
              type: null
              old_line: 2
              new_line: 4
        properties: {}
    description: "API_Entities_DraftNote model"
    example:
      merge_request_id: 52
      note: "This is a note"
      line_code: "1c497fbb3a46b78edf0_2_4"
      discussion_id: 613
      resolve_discussion: true
      id: 2
      position:
        base_sha: "aa149113"
        start_sha: "b3a0a8c4"
        head_sha: "be3020c7"
        old_path: "example.md"
        new_path: "example.md"
        position_type: "text"
        old_line: 2
        new_line: 4
        line_range:
          start:
            line_code: "1c497fbb3a46b78edf04cc2a2fa33f67e3ffbe2a_2_4"
            type: null
            old_line: 2
            new_line: 4
          end:
            line_code: "1c497fbb3a46b78edf04cc2a2fa33f67e3ffbe2a_2_4"
            type: null
            old_line: 2
            new_line: 4
      author_id: 4
      commit_id: 4
  postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes:
    type: "object"
    required:
    - "note"
    properties:
      note:
        type: "string"
        description: "The content of a note."
      in_reply_to_discussion_id:
        type: "string"
        description: "The ID of a discussion the draft note replies to."
      commit_id:
        type: "string"
        description: "The sha of a commit to associate the draft note to."
      resolve_discussion:
        type: "boolean"
        description: "The associated discussion should be resolved."
      position:
        $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes_position"
    description: "Create a new draft note"
  putApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotesDraftNoteId:
    type: "object"
    properties:
      note:
        type: "string"
        description: "The content of a note."
      position:
        $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes_position"
    description: "Modify an existing draft note"
  API_Entities_Environment:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "deploy"
      slug:
        type: "string"
        example: "deploy"
      external_url:
        type: "string"
        example: "https://deploy.gitlab.example.com"
      created_at:
        type: "string"
        format: "date-time"
        example: "2019-05-25T18:55:13.252Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2019-05-25T18:55:13.252Z"
      tier:
        type: "string"
        example: "development"
      project:
        $ref: "#/definitions/API_Entities_BasicProjectDetails"
      last_deployment:
        $ref: "#/definitions/API_Entities_Deployment"
      state:
        type: "string"
        example: "available"
      auto_stop_at:
        type: "string"
        format: "date-time"
        example: "2019-05-25T18:55:13.252Z"
    description: "API_Entities_Environment model"
    example:
      last_deployment:
        ref: "main"
        environment:
          external_url: "https://deploy.gitlab.example.com"
          updated_at: "2019-05-25T18:55:13.252Z"
          name: "deploy"
          created_at: "2019-05-25T18:55:13.252Z"
          id: 1
          slug: "deploy"
        updated_at: "2016-08-11T11:32:35.444Z"
        deployable:
          finished_at: "2015-12-24T17:54:31.198Z"
          commit:
            author_name: "John Smith"
            authored_date: "2012-05-28T04:42:42-07:00"
            committer_email: "jack@example.com"
            extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
              , \"Jane Doe <janedoe@gitlab.com>\"] }"
            created_at: "2017-07-26T11:08:53.000+02:00"
            short_id: "2695effb"
            parent_ids:
            - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
            - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
            title: "Initial commit"
            message: "Initial commit"
            committer_name: "Jack Smith"
            trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
            committed_date: "2012-05-28T04:42:42-07:00"
            web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
            author_email: "john@example.com"
            id: "2695effb5807a22ff3d138d593fd856244e155e7"
          created_at: "2015-12-24T15:51:21.880Z"
          project:
            ci_job_token_scope_enabled: "false"
          queued_duration: 0.123
          duration: 0.465
          archived: false
          ref: "main"
          allow_failure: true
          runner_manager:
            system_id: "runner-1"
            created_at: "2023-10-24T01:27:06.549Z"
            id: 8
            contacted_at: "2023-10-24T01:27:06.549Z"
            ip_address: "127.0.0.1"
            version: "16.11.0"
            platform: "linux"
            revision: "91a27b2a"
            architecture: "amd64"
            status: "online"
          tag_list:
          - ""
          - ""
          id: 1
          tag: true
          runner:
            paused: false
            is_shared: true
            name: "test"
            description: "test-1-20150125"
            active: true
            runner_type: "instance_type"
            online: true
            id: 8
            ip_address: "127.0.0.1"
            status: "online"
          artifacts:
          - filename: "artifacts.zip"
            size: 1000
            file_type: "archive"
            file_format: "zip"
          - filename: "artifacts.zip"
            size: 1000
            file_type: "archive"
            file_format: "zip"
          coverage: 98.29
          erased_at: "2015-12-24T18:00:29.728Z"
          failure_reason: "script_failure"
          artifacts_expire_at: "2016-01-19T09:05:50.355Z"
          pipeline:
            ref: "feature-branch"
            updated_at: "2022-10-21T16:49:48.000+02:00"
            web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
            iid: 2
            project_id: 3
            created_at: "2022-10-21T16:49:48.000+02:00"
            id: 1
            source: "push"
            sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
            status: "success"
          stage: "deploy"
          web_url: "https://example.com/foo/bar/-/jobs/1"
          artifacts_file:
            filename: "artifacts.zip"
            size: 1000
          name: "deploy_to_production"
          started_at: "2015-12-24T17:54:30.733Z"
          user:
            work_information: "work_information"
            bot: "bot"
            created_at: "created_at"
            bio: "bio"
            linkedin: "linkedin"
            custom_attributes:
            - value: "bar"
              key: "foo"
            - value: "bar"
              key: "foo"
            skype: "skype"
            twitter: "twitter"
            local_time: "local_time"
            id: 1
            state: "active"
            locked: true
            job_title: "job_title"
            avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
            is_followed: "is_followed"
            discord: "discord"
            followers: "followers"
            avatar_url: "https://gravatar.com/avatar/1"
            web_url: "https://gitlab.example.com/root"
            website_url: "website_url"
            organization: "organization"
            following: "following"
            name: "Administrator"
            location: "location"
            pronouns: "pronouns"
            public_email: "public_email"
            username: "admin"
          status: "waiting_for_resource"
        iid: 1
        created_at: "2016-08-11T11:32:35.444Z"
        id: 41
        sha: "99d03678b90d914dbb1b109132516d71a4a03ea8"
        user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        status: "created"
      external_url: "https://deploy.gitlab.example.com"
      updated_at: "2019-05-25T18:55:13.252Z"
      tier: "development"
      auto_stop_at: "2019-05-25T18:55:13.252Z"
      name: "deploy"
      created_at: "2019-05-25T18:55:13.252Z"
      project:
        ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
        repository_storage: "default"
        path_with_namespace: "namespace1/project1"
        topics:
        - "topic"
        - "topic"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
        readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
        custom_attributes:
          value: "bar"
          key: "foo"
        path: "project1"
        license:
          html_url: "http://choosealicense.com/licenses/gpl-3.0"
          name: "GNU General Public License v3.0"
          nickname: "GNU GPLv3"
          key: "gpl-3.0"
          source_url: "source_url"
        web_url: "https://gitlab.example.com/gitlab/gitlab"
        avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
        tag_list:
        - "tag"
        - "tag"
        last_activity_at: "2013-09-30T13:46:02Z"
        name: "project1"
        namespace:
          path: "my_project"
          avatar_url: "https://example.com/avatar/12345"
          web_url: "https://example.com/group/my_project"
          kind: "project"
          parent_id: 1
          name: "project"
          id: 2
          full_path: "group/my_project"
        default_branch: "main"
        id: 1
        name_with_namespace: "John Doe / project1"
        license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
        star_count: 1
        forks_count: 1
      id: 1
      state: "available"
      slug: "deploy"
  postApiV4ProjectsIdEnvironments:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the environment"
      external_url:
        type: "string"
        description: "Place to link to for this environment"
      tier:
        type: "string"
        description: "The tier of the new environment. Allowed values are `production`,\
          \ `staging`, `testing`, `development`, and `other`"
        enum:
        - "production"
        - "staging"
        - "testing"
        - "development"
        - "other"
    description: "Create a new environment"
  putApiV4ProjectsIdEnvironmentsEnvironmentId:
    type: "object"
    properties:
      external_url:
        type: "string"
        description: "The new URL on which this deployment is viewable"
      tier:
        type: "string"
        description: "The tier of the new environment. Allowed values are `production`,\
          \ `staging`, `testing`, `development`, and `other`"
        enum:
        - "production"
        - "staging"
        - "testing"
        - "development"
        - "other"
    description: "Update an existing environment"
  postApiV4ProjectsIdEnvironmentsEnvironmentIdStop:
    type: "object"
    properties:
      force:
        type: "boolean"
        description: "Force environment to stop without executing `on_stop` actions"
        default: false
    description: "Stop an environment"
  postApiV4ProjectsIdEnvironmentsStopStale:
    type: "object"
    required:
    - "before"
    properties:
      before:
        type: "string"
        format: "date-time"
        description: "Stop all environments that were last modified or deployed to\
          \ before this date."
    description: "Stop stale environments"
  API_Entities_ErrorTracking_ProjectSetting:
    type: "object"
    properties:
      active:
        type: "boolean"
      project_name:
        type: "string"
        example: "sample sentry project"
      sentry_external_url:
        type: "string"
        example: "https://sentry.io/myawesomeproject/project"
      api_url:
        type: "string"
        example: "https://sentry.io/api/0/projects/myawesomeproject/project"
      integrated:
        type: "boolean"
    description: "API_Entities_ErrorTracking_ProjectSetting model"
    example:
      api_url: "https://sentry.io/api/0/projects/myawesomeproject/project"
      active: true
      sentry_external_url: "https://sentry.io/myawesomeproject/project"
      project_name: "sample sentry project"
      integrated: true
  patchApiV4ProjectsIdErrorTrackingSettings:
    type: "object"
    required:
    - "active"
    properties:
      active:
        type: "boolean"
        description: "Pass true to enable the already configured Error Tracking settings\
          \ or false to disable it."
      integrated:
        type: "boolean"
        description: "Pass true to enable the integrated Error Tracking backend. Available\
          \ in GitLab 14.2 and later."
    description: "Enable or disable the Error Tracking project settings"
  putApiV4ProjectsIdErrorTrackingSettings:
    type: "object"
    required:
    - "active"
    - "integrated"
    properties:
      active:
        type: "boolean"
        description: "Pass true to enable the configured Error Tracking settings or\
          \ false to disable it."
      integrated:
        type: "boolean"
        description: "Pass true to enable the integrated Error Tracking backend."
    description: "Update Error Tracking project settings. Available in GitLab 15.10\
      \ and later."
  postApiV4ProjectsIdRepositoryFilesFilePath:
    type: "object"
    required:
    - "branch"
    - "commit_message"
    - "content"
    properties:
      branch:
        type: "string"
        example: "main"
        description: "Name of the branch to commit into. To create a new branch, also\
          \ provide `start_branch`."
      commit_message:
        type: "string"
        example: "Initial commit"
        description: "Commit message"
      start_branch:
        type: "string"
        example: "main"
        description: "Name of the branch to start the new commit from"
      author_email:
        type: "string"
        example: "johndoe@example.com"
        description: "The email of the author"
      author_name:
        type: "string"
        example: "John Doe"
        description: "The name of the author"
      content:
        type: "string"
        example: "file content"
        description: "File content"
      encoding:
        type: "string"
        description: "File encoding"
        default: "text"
        enum:
        - "base64"
        - "text"
      last_commit_id:
        type: "string"
        example: "2695effb5807a22ff3d138d593fd856244e155e7"
        description: "Last known commit id for this file"
      execute_filemode:
        type: "boolean"
        description: "Enable / Disable the executable flag on the file path"
    description: "Create new file in repository"
  putApiV4ProjectsIdRepositoryFilesFilePath:
    type: "object"
    required:
    - "branch"
    - "commit_message"
    - "content"
    properties:
      branch:
        type: "string"
        example: "main"
        description: "Name of the branch to commit into. To create a new branch, also\
          \ provide `start_branch`."
      commit_message:
        type: "string"
        example: "Initial commit"
        description: "Commit message"
      start_branch:
        type: "string"
        example: "main"
        description: "Name of the branch to start the new commit from"
      author_email:
        type: "string"
        example: "johndoe@example.com"
        description: "The email of the author"
      author_name:
        type: "string"
        example: "John Doe"
        description: "The name of the author"
      content:
        type: "string"
        example: "file content"
        description: "File content"
      encoding:
        type: "string"
        description: "File encoding"
        default: "text"
        enum:
        - "base64"
        - "text"
      last_commit_id:
        type: "string"
        example: "2695effb5807a22ff3d138d593fd856244e155e7"
        description: "Last known commit id for this file"
      execute_filemode:
        type: "boolean"
        description: "Enable / Disable the executable flag on the file path"
    description: "Update existing file in repository"
  API_Entities_FreezePeriod:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      freeze_start:
        type: "string"
        example: "0 23 * * 5"
      freeze_end:
        type: "string"
        example: "0 8 * * 1"
      cron_timezone:
        type: "string"
        example: "UTC"
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-05-15T17:03:35.702Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2020-05-15T17:03:35.702Z"
    description: "API_Entities_FreezePeriod model"
    example:
      freeze_end: "0 8 * * 1"
      updated_at: "2020-05-15T17:03:35.702Z"
      cron_timezone: "UTC"
      created_at: "2020-05-15T17:03:35.702Z"
      id: 1
      freeze_start: "0 23 * * 5"
  postApiV4ProjectsIdFreezePeriods:
    type: "object"
    required:
    - "freeze_end"
    - "freeze_start"
    properties:
      freeze_start:
        type: "string"
        description: "Start of the freeze period in cron format."
      freeze_end:
        type: "string"
        description: "End of the freeze period in cron format"
      cron_timezone:
        type: "string"
        description: "The time zone for the cron fields, defaults to UTC if not provided"
    description: "Create a freeze period"
  putApiV4ProjectsIdFreezePeriodsFreezePeriodId:
    type: "object"
    properties:
      freeze_start:
        type: "string"
        description: "Start of the freeze period in cron format"
      freeze_end:
        type: "string"
        description: "End of the freeze period in cron format"
      cron_timezone:
        type: "string"
        description: "The time zone for the cron fields"
    description: "Update a freeze period"
  API_Entities_ProjectIntegrationBasic:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 75
      title:
        type: "string"
        example: "Jenkins CI"
      slug:
        type: "integer"
        format: "int32"
        example: "jenkins"
      created_at:
        type: "string"
        format: "date-time"
        example: "2019-11-20T11:20:25.297Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2019-11-20T12:24:37.498Z"
      active:
        type: "boolean"
      commit_events:
        type: "boolean"
      push_events:
        type: "boolean"
      issues_events:
        type: "boolean"
      incident_events:
        type: "boolean"
      alert_events:
        type: "boolean"
      confidential_issues_events:
        type: "boolean"
      merge_requests_events:
        type: "boolean"
      tag_push_events:
        type: "boolean"
      deployment_events:
        type: "boolean"
      note_events:
        type: "boolean"
      confidential_note_events:
        type: "boolean"
      pipeline_events:
        type: "boolean"
      wiki_page_events:
        type: "boolean"
      job_events:
        type: "boolean"
      comment_on_event_enabled:
        type: "boolean"
      vulnerability_events:
        type: "boolean"
    description: "API_Entities_ProjectIntegrationBasic model"
    example:
      alert_events: true
      pipeline_events: true
      commit_events: true
      issues_events: true
      vulnerability_events: true
      created_at: "2019-11-20T11:20:25.297Z"
      active: true
      merge_requests_events: true
      note_events: true
      title: "Jenkins CI"
      incident_events: true
      deployment_events: true
      comment_on_event_enabled: true
      push_events: true
      confidential_note_events: true
      tag_push_events: true
      confidential_issues_events: true
      updated_at: "2019-11-20T12:24:37.498Z"
      wiki_page_events: true
      id: 75
      job_events: true
      slug: "jenkins"
  putApiV4ProjectsIdServicesAppleAppStore:
    type: "object"
    required:
    - "app_store_issuer_id"
    - "app_store_key_id"
    - "app_store_private_key"
    - "app_store_private_key_file_name"
    properties:
      app_store_issuer_id:
        type: "string"
        description: "Apple App Store Connect issuer ID."
      app_store_key_id:
        type: "string"
        description: "Apple App Store Connect key ID."
      app_store_private_key_file_name:
        type: "string"
        description: "Apple App Store Connect private key file name."
      app_store_private_key:
        type: "string"
        description: "Apple App Store Connect private key."
      app_store_protected_refs:
        type: "boolean"
        description: "Set variables on protected branches and tags only."
    description: "Create/Edit Apple App Store integration"
  putApiV4ProjectsIdServicesAsana:
    type: "object"
    required:
    - "api_key"
    properties:
      api_key:
        type: "string"
        description: "User API token. The user must have access to the task. All comments\
          \ are attributed to this user."
      restrict_to_branch:
        type: "string"
        description: "Comma-separated list of branches to be automatically inspected.\
          \ Leave blank to include all branches."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Asana integration"
  putApiV4ProjectsIdServicesAssembla:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The authentication token."
      subdomain:
        type: "string"
        description: "The subdomain setting."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Assembla integration"
  putApiV4ProjectsIdServicesBamboo:
    type: "object"
    required:
    - "bamboo_url"
    - "build_key"
    - "password"
    - "username"
    properties:
      enable_ssl_verification:
        type: "boolean"
        description: "Enable SSL verification. Defaults to `true` (enabled)."
      bamboo_url:
        type: "string"
        description: "Bamboo root URL (for example, `https://bamboo.example.com`)."
      build_key:
        type: "string"
        description: "Bamboo build plan key (for example, `KEY`)."
      username:
        type: "string"
        description: "User with API access to the Bamboo server."
      password:
        type: "string"
        description: "Password of the user."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Bamboo integration"
  putApiV4ProjectsIdServicesBugzilla:
    type: "object"
    required:
    - "issues_url"
    - "new_issue_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      new_issue_url:
        type: "string"
        description: "URL of the new issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Bugzilla integration"
  putApiV4ProjectsIdServicesBuildkite:
    type: "object"
    required:
    - "project_url"
    - "token"
    properties:
      token:
        type: "string"
        description: "Buildkite project GitLab token"
      project_url:
        type: "string"
        description: "The Buildkite pipeline URL"
      enable_ssl_verification:
        type: "boolean"
        description: "DEPRECATED: This parameter has no effect since SSL verification\
          \ will always be enabled"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
    description: "Create/Edit Buildkite integration"
  putApiV4ProjectsIdServicesCampfire:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "API authentication token from Campfire. To get the token, sign\
          \ in to Campfire and select **My info**."
      subdomain:
        type: "string"
        description: "`.campfirenow.com` subdomain when you're signed in."
      room:
        type: "string"
        description: "ID portion of the Campfire room URL."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Campfire integration"
  putApiV4ProjectsIdServicesConfluence:
    type: "object"
    required:
    - "confluence_url"
    properties:
      confluence_url:
        type: "string"
        description: "URL of the Confluence Workspace hosted on `atlassian.net`."
    description: "Create/Edit Confluence integration"
  putApiV4ProjectsIdServicesCustomIssueTracker:
    type: "object"
    required:
    - "issues_url"
    - "new_issue_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      new_issue_url:
        type: "string"
        description: "URL of the new issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Custom Issue Tracker integration"
  putApiV4ProjectsIdServicesDatadog:
    type: "object"
    required:
    - "api_key"
    properties:
      api_key:
        type: "string"
        description: "API key used for authentication with Datadog"
      datadog_site:
        type: "string"
        description: "The Datadog site to send data to. To send data to the EU site,\
          \ use datadoghq.eu"
      api_url:
        type: "string"
        description: "(Advanced) The full URL for your Datadog site"
      archive_trace_events:
        type: "boolean"
        description: "When enabled, job logs are collected by Datadog and displayed\
          \ along with pipeline execution traces."
      datadog_service:
        type: "string"
        description: "Tag all data from this GitLab instance in Datadog. Useful when\
          \ managing several self-managed deployments"
      datadog_env:
        type: "string"
        description: "For self-managed deployments, set the env tag for all the data\
          \ sent to Datadog"
      datadog_tags:
        type: "string"
        description: "Custom tags in Datadog. Specify one tag per line in the format:\
          \ \"key:value\\nkey2:value2\""
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      build_events:
        type: "boolean"
        description: "Trigger event when a build is created."
    description: "Create/Edit Datadog integration"
  putApiV4ProjectsIdServicesDiffblueCover:
    type: "object"
    required:
    - "diffblue_access_token_name"
    - "diffblue_access_token_secret"
    - "diffblue_license_key"
    properties:
      diffblue_license_key:
        type: "string"
        description: "Diffblue Cover license key."
      diffblue_access_token_name:
        type: "string"
        description: "Access token name used by Diffblue Cover in pipelines."
      diffblue_access_token_secret:
        type: "string"
        description: "Access token secret used by Diffblue Cover in pipelines."
    description: "Create/Edit Diffblue Cover integration"
  putApiV4ProjectsIdServicesDiscord:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "Discord webhook (for example, `https://discord.com/api/webhooks/…\
          `)."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines"
      branches_to_be_notified:
        type: "string"
        description: "Branches to send notifications for. Valid options are `all`,\
          \ `default`, `protected`, and `default_and_protected`. The default value\
          \ is `default`."
      push_channel:
        type: "string"
        description: "The name of the channel to receive push_events notifications"
      issue_channel:
        type: "string"
        description: "The name of the channel to receive issues_events notifications"
      incident_channel:
        type: "string"
        description: "The name of the channel to receive incident_events notifications"
      alert_channel:
        type: "string"
        description: "The name of the channel to receive alert_events notifications"
      confidential_issue_channel:
        type: "string"
        description: "The name of the channel to receive confidential_issues_events\
          \ notifications"
      merge_request_channel:
        type: "string"
        description: "The name of the channel to receive merge_requests_events notifications"
      note_channel:
        type: "string"
        description: "The name of the channel to receive note_events notifications"
      confidential_note_channel:
        type: "string"
        description: "The name of the channel to receive confidential_note_events\
          \ notifications"
      tag_push_channel:
        type: "string"
        description: "The name of the channel to receive tag_push_events notifications"
      deployment_channel:
        type: "string"
        description: "The name of the channel to receive deployment_events notifications"
      pipeline_channel:
        type: "string"
        description: "The name of the channel to receive pipeline_events notifications"
      wiki_page_channel:
        type: "string"
        description: "The name of the channel to receive wiki_page_events notifications"
      vulnerability_channel:
        type: "string"
        description: "The name of the channel to receive vulnerability_events notifications"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
      deployment_events:
        type: "boolean"
        description: "Trigger event when a deployment starts or finishes."
    description: "Create/Edit Discord integration"
  putApiV4ProjectsIdServicesDroneCi:
    type: "object"
    required:
    - "drone_url"
    - "token"
    properties:
      token:
        type: "string"
        description: "Drone CI token"
      drone_url:
        type: "string"
        description: "Drone CI URL"
      enable_ssl_verification:
        type: "boolean"
        description: "Enable SSL verification"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
    description: "Create/Edit Drone Ci integration"
  putApiV4ProjectsIdServicesEmailsOnPush:
    type: "object"
    required:
    - "recipients"
    properties:
      recipients:
        type: "string"
        description: "Comma-separated list of recipient email addresses"
      disable_diffs:
        type: "boolean"
        description: "Disable code diffs"
      send_from_committer_email:
        type: "boolean"
        description: "Send from committer"
      branches_to_be_notified:
        type: "string"
        description: "Branches for which notifications are to be sent"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
    description: "Create/Edit Emails On Push integration"
  putApiV4ProjectsIdServicesExternalWiki:
    type: "object"
    required:
    - "external_wiki_url"
    properties:
      external_wiki_url:
        type: "string"
        description: "URL of the external wiki."
    description: "Create/Edit External Wiki integration"
  putApiV4ProjectsIdServicesGitlabSlackApplication:
    type: "object"
    properties:
      channel:
        type: "string"
        description: "Default channel to use if no other channel is configured."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines."
      branches_to_be_notified:
        type: "string"
        description: "Branches to send notifications for. Valid options are `all`,\
          \ `default`, `protected`, and `default_and_protected`. The default value\
          \ is `default`."
      labels_to_be_notified:
        type: "string"
        description: "Labels to send notifications for. Leave blank to receive notifications\
          \ for all events."
      labels_to_be_notified_behavior:
        type: "string"
        description: "Labels to be notified for. Valid options are `match_any` and\
          \ `match_all`. The default value is `match_any`."
      push_channel:
        type: "string"
        description: "The name of the channel to receive push_events notifications"
      issue_channel:
        type: "string"
        description: "The name of the channel to receive issues_events notifications"
      incident_channel:
        type: "string"
        description: "The name of the channel to receive incident_events notifications"
      alert_channel:
        type: "string"
        description: "The name of the channel to receive alert_events notifications"
      confidential_issue_channel:
        type: "string"
        description: "The name of the channel to receive confidential_issues_events\
          \ notifications"
      merge_request_channel:
        type: "string"
        description: "The name of the channel to receive merge_requests_events notifications"
      note_channel:
        type: "string"
        description: "The name of the channel to receive note_events notifications"
      confidential_note_channel:
        type: "string"
        description: "The name of the channel to receive confidential_note_events\
          \ notifications"
      tag_push_channel:
        type: "string"
        description: "The name of the channel to receive tag_push_events notifications"
      deployment_channel:
        type: "string"
        description: "The name of the channel to receive deployment_events notifications"
      pipeline_channel:
        type: "string"
        description: "The name of the channel to receive pipeline_events notifications"
      wiki_page_channel:
        type: "string"
        description: "The name of the channel to receive wiki_page_events notifications"
      vulnerability_channel:
        type: "string"
        description: "The name of the channel to receive vulnerability_events notifications"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
      deployment_events:
        type: "boolean"
        description: "Trigger event when a deployment starts or finishes."
      incident_events:
        type: "boolean"
        description: "Trigger event when an incident is created."
      vulnerability_events:
        type: "boolean"
      alert_events:
        type: "boolean"
        description: "Trigger event when a new, unique alert is recorded."
    description: "Create/Edit Gitlab Slack Application integration"
  putApiV4ProjectsIdServicesGooglePlay:
    type: "object"
    required:
    - "package_name"
    - "service_account_key"
    - "service_account_key_file_name"
    properties:
      package_name:
        type: "string"
        description: "Package name of the app in Google Play."
      service_account_key_file_name:
        type: "string"
        description: "File name of the Google Play service account key."
      service_account_key:
        type: "string"
        description: "Google Play service account key."
      google_play_protected_refs:
        type: "boolean"
        description: "Set variables on protected branches and tags only."
    description: "Create/Edit Google Play integration"
  putApiV4ProjectsIdServicesHangoutsChat:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "The Hangouts Chat webhook. e.g. https://chat.googleapis.com/v1/spaces…"
      branches_to_be_notified:
        type: "string"
        description: "Branches for which notifications are to be sent"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
    description: "Create/Edit Hangouts Chat integration"
  putApiV4ProjectsIdServicesHarbor:
    type: "object"
    required:
    - "password"
    - "project_name"
    - "url"
    - "username"
    properties:
      url:
        type: "string"
        description: "The base URL to the Harbor instance linked to the GitLab project.\
          \ For example, `https://demo.goharbor.io`."
      project_name:
        type: "string"
        description: "The name of the project in the Harbor instance. For example,\
          \ `testproject`."
      username:
        type: "string"
        description: "The username created in the Harbor interface."
      password:
        type: "string"
        description: "The password of the user."
    description: "Create/Edit Harbor integration"
  putApiV4ProjectsIdServicesIrker:
    type: "object"
    required:
    - "recipients"
    properties:
      recipients:
        type: "string"
        description: "Recipients/channels separated by whitespaces"
      default_irc_uri:
        type: "string"
        description: "Default: irc://irc.network.net:6697"
      server_host:
        type: "string"
        description: "Server host. Default localhost"
      server_port:
        type: "integer"
        format: "int32"
        description: "Server port. Default 6659"
      colorize_messages:
        type: "boolean"
        description: "Colorize messages"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Irker integration"
  putApiV4ProjectsIdServicesJenkins:
    type: "object"
    required:
    - "jenkins_url"
    - "project_name"
    properties:
      jenkins_url:
        type: "string"
        description: "Jenkins root URL like https://jenkins.example.com"
      enable_ssl_verification:
        type: "boolean"
        description: "Enable SSL verification"
      project_name:
        type: "string"
        description: "The URL-friendly project name. Example: my_project_name"
      username:
        type: "string"
        description: "A user with access to the Jenkins server, if applicable"
      password:
        type: "string"
        description: "The password of the user"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
    description: "Create/Edit Jenkins integration"
  putApiV4ProjectsIdServicesJira:
    type: "object"
    required:
    - "password"
    - "url"
    properties:
      url:
        type: "string"
        description: "The base URL to the Jira instance web interface which is being\
          \ linked to this GitLab project. E.g., https://jira.example.com"
      api_url:
        type: "string"
        description: "The base URL to the Jira instance API. Web URL value will be\
          \ used if not set. E.g., https://jira-api.example.com"
      jira_auth_type:
        type: "integer"
        format: "int32"
        description: "The authentication method to be used with Jira. `0` means Basic\
          \ Authentication. `1` means Jira personal access token. Defaults to `0`"
      username:
        type: "string"
        description: "The email or username to be used with Jira. For Jira Cloud use\
          \ an email, for Jira Data Center and Jira Server use a username. Required\
          \ when using Basic authentication (`jira_auth_type` is `0`)"
      password:
        type: "string"
        description: "The Jira API token, password, or personal access token to be\
          \ used with Jira. When your authentication method is Basic (`jira_auth_type`\
          \ is `0`) use an API token for Jira Cloud, or a password for Jira Data Center\
          \ or Jira Server. When your authentication method is Jira personal access\
          \ token (`jira_auth_type` is `1`) use a personal access token"
      jira_issue_transition_automatic:
        type: "boolean"
        description: "Enable automatic issue transitions"
      jira_issue_transition_id:
        type: "string"
        description: "The ID of one or more transitions for custom issue transitions"
      jira_issue_prefix:
        type: "string"
        description: "Prefix to match Jira issue keys"
      jira_issue_regex:
        type: "string"
        description: "Regular expression to match Jira issue keys"
      issues_enabled:
        type: "boolean"
        description: "Enable viewing Jira issues in GitLab"
      project_keys:
        type: "array"
        description: "Keys of Jira projects to view issues from in GitLab"
        items:
          type: "string"
      comment_on_event_enabled:
        type: "boolean"
        description: "Enable comments inside Jira issues on each GitLab event (commit\
          \ / merge request)"
      commit_events:
        type: "boolean"
        description: "Trigger event when a commit is created or updated."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
    description: "Create/Edit Jira integration"
  putApiV4ProjectsIdServicesMattermostSlashCommands:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The Mattermost token."
    description: "Create/Edit Mattermost Slash Commands integration"
  putApiV4ProjectsIdServicesSlackSlashCommands:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The Slack token"
    description: "Create/Edit Slack Slash Commands integration"
  putApiV4ProjectsIdServicesPackagist:
    type: "object"
    required:
    - "token"
    - "username"
    properties:
      username:
        type: "string"
        description: "The username"
      token:
        type: "string"
        description: "The Packagist API token"
      server:
        type: "string"
        description: "The server"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
    description: "Create/Edit Packagist integration"
  putApiV4ProjectsIdServicesPhorge:
    type: "object"
    required:
    - "issues_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Phorge integration"
  putApiV4ProjectsIdServicesPipelinesEmail:
    type: "object"
    required:
    - "recipients"
    properties:
      recipients:
        type: "string"
        description: "Comma-separated list of recipient email addresses"
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Notify only broken pipelines"
      notify_only_default_branch:
        type: "boolean"
        description: "Send notifications only for the default branch"
      branches_to_be_notified:
        type: "string"
        description: "Branches for which notifications are to be sent"
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
    description: "Create/Edit Pipelines Email integration"
  putApiV4ProjectsIdServicesPivotaltracker:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The Pivotaltracker token"
      restrict_to_branch:
        type: "string"
        description: "Comma-separated list of branches which will be automatically\
          \ inspected. Leave blank to include all branches."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Pivotaltracker integration"
  putApiV4ProjectsIdServicesPrometheus:
    type: "object"
    required:
    - "api_url"
    - "google_iap_audience_client_id"
    - "google_iap_service_account_json"
    properties:
      manual_configuration:
        type: "boolean"
        description: "When enabled, the default settings will be overridden with your\
          \ custom configuration"
      api_url:
        type: "string"
        description: "Prometheus API Base URL, like http://prometheus.example.com/"
      google_iap_audience_client_id:
        type: "string"
        description: "Client ID of the IAP-secured resource (looks like IAP_CLIENT_ID.apps.googleusercontent.com)"
      google_iap_service_account_json:
        type: "string"
        description: "Contents of the credentials.json file of your service account,\
          \ like: { \"type\": \"service_account\", \"project_id\": ... }"
    description: "Create/Edit Prometheus integration"
  putApiV4ProjectsIdServicesPumble:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "The Pumble chat webhook. For example, https://api.pumble.com/workspaces/x/..."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
    description: "Create/Edit Pumble integration"
  putApiV4ProjectsIdServicesPushover:
    type: "object"
    required:
    - "api_key"
    - "device"
    - "priority"
    - "sound"
    - "user_key"
    properties:
      api_key:
        type: "string"
        description: "The application key"
      user_key:
        type: "string"
        description: "The user key"
      priority:
        type: "string"
        description: "The priority"
      device:
        type: "string"
        description: "Leave blank for all active devices"
      sound:
        type: "string"
        description: "The sound of the notification"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Pushover integration"
  putApiV4ProjectsIdServicesRedmine:
    type: "object"
    required:
    - "issues_url"
    - "new_issue_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      new_issue_url:
        type: "string"
        description: "URL of the new issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Redmine integration"
  putApiV4ProjectsIdServicesEwm:
    type: "object"
    required:
    - "issues_url"
    - "new_issue_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      new_issue_url:
        type: "string"
        description: "URL of the new issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Ewm integration"
  putApiV4ProjectsIdServicesYoutrack:
    type: "object"
    required:
    - "issues_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Youtrack integration"
  putApiV4ProjectsIdServicesClickup:
    type: "object"
    required:
    - "issues_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Clickup integration"
  putApiV4ProjectsIdServicesSlack:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "Slack notifications webhook (for example, `https://hooks.slack.com/services/...`)."
      username:
        type: "string"
        description: "Slack notifications username."
      channel:
        type: "string"
        description: "Default channel to use if no other channel is configured."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines."
      branches_to_be_notified:
        type: "string"
        description: "Branches to send notifications for. Valid options are `all`,\
          \ `default`, `protected`, and `default_and_protected`. The default value\
          \ is `default`."
      labels_to_be_notified:
        type: "string"
        description: "Labels to send notifications for. Leave blank to receive notifications\
          \ for all events."
      labels_to_be_notified_behavior:
        type: "string"
        description: "Labels to be notified for. Valid options are `match_any` and\
          \ `match_all`. The default value is `match_any`."
      push_channel:
        type: "string"
        description: "The name of the channel to receive push_events notifications"
      issue_channel:
        type: "string"
        description: "The name of the channel to receive issues_events notifications"
      incident_channel:
        type: "string"
        description: "The name of the channel to receive incident_events notifications"
      alert_channel:
        type: "string"
        description: "The name of the channel to receive alert_events notifications"
      confidential_issue_channel:
        type: "string"
        description: "The name of the channel to receive confidential_issues_events\
          \ notifications"
      merge_request_channel:
        type: "string"
        description: "The name of the channel to receive merge_requests_events notifications"
      note_channel:
        type: "string"
        description: "The name of the channel to receive note_events notifications"
      confidential_note_channel:
        type: "string"
        description: "The name of the channel to receive confidential_note_events\
          \ notifications"
      tag_push_channel:
        type: "string"
        description: "The name of the channel to receive tag_push_events notifications"
      deployment_channel:
        type: "string"
        description: "The name of the channel to receive deployment_events notifications"
      pipeline_channel:
        type: "string"
        description: "The name of the channel to receive pipeline_events notifications"
      wiki_page_channel:
        type: "string"
        description: "The name of the channel to receive wiki_page_events notifications"
      vulnerability_channel:
        type: "string"
        description: "The name of the channel to receive vulnerability_events notifications"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
      deployment_events:
        type: "boolean"
        description: "Trigger event when a deployment starts or finishes."
      incident_events:
        type: "boolean"
        description: "Trigger event when an incident is created."
      vulnerability_events:
        type: "boolean"
      alert_events:
        type: "boolean"
        description: "Trigger event when a new, unique alert is recorded."
    description: "Create/Edit Slack integration"
  putApiV4ProjectsIdServicesMicrosoftTeams:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "The Microsoft Teams webhook. e.g. https://outlook.office.com/webhook/…"
      branches_to_be_notified:
        type: "string"
        description: "Branches for which notifications are to be sent"
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
    description: "Create/Edit Microsoft Teams integration"
  putApiV4ProjectsIdServicesMattermost:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "Mattermost notifications webhook (for example, `http://mattermost.example.com/hooks/...`)."
      username:
        type: "string"
        description: "Mattermost notifications username."
      channel:
        type: "string"
        description: "Default channel to use if no other channel is configured."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines."
      branches_to_be_notified:
        type: "string"
        description: "Branches to send notifications for. Valid options are `all`,\
          \ `default`, `protected`, and `default_and_protected`. The default value\
          \ is `default`."
      labels_to_be_notified:
        type: "string"
        description: "Labels to send notifications for. Leave blank to receive notifications\
          \ for all events."
      labels_to_be_notified_behavior:
        type: "string"
        description: "Labels to be notified for. Valid options are `match_any` and\
          \ `match_all`. The default value is `match_any`."
      push_channel:
        type: "string"
        description: "The name of the channel to receive push_events notifications"
      issue_channel:
        type: "string"
        description: "The name of the channel to receive issues_events notifications"
      incident_channel:
        type: "string"
        description: "The name of the channel to receive incident_events notifications"
      alert_channel:
        type: "string"
        description: "The name of the channel to receive alert_events notifications"
      confidential_issue_channel:
        type: "string"
        description: "The name of the channel to receive confidential_issues_events\
          \ notifications"
      merge_request_channel:
        type: "string"
        description: "The name of the channel to receive merge_requests_events notifications"
      note_channel:
        type: "string"
        description: "The name of the channel to receive note_events notifications"
      confidential_note_channel:
        type: "string"
        description: "The name of the channel to receive confidential_note_events\
          \ notifications"
      tag_push_channel:
        type: "string"
        description: "The name of the channel to receive tag_push_events notifications"
      deployment_channel:
        type: "string"
        description: "The name of the channel to receive deployment_events notifications"
      pipeline_channel:
        type: "string"
        description: "The name of the channel to receive pipeline_events notifications"
      wiki_page_channel:
        type: "string"
        description: "The name of the channel to receive wiki_page_events notifications"
      vulnerability_channel:
        type: "string"
        description: "The name of the channel to receive vulnerability_events notifications"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
      deployment_events:
        type: "boolean"
        description: "Trigger event when a deployment starts or finishes."
      incident_events:
        type: "boolean"
        description: "Trigger event when an incident is created."
      vulnerability_events:
        type: "boolean"
    description: "Create/Edit Mattermost integration"
  putApiV4ProjectsIdServicesTeamcity:
    type: "object"
    required:
    - "build_type"
    - "password"
    - "teamcity_url"
    - "username"
    properties:
      teamcity_url:
        type: "string"
        description: "TeamCity root URL like https://teamcity.example.com"
      enable_ssl_verification:
        type: "boolean"
        description: "Enable SSL verification"
      build_type:
        type: "string"
        description: "Build configuration ID"
      username:
        type: "string"
        description: "A user with permissions to trigger a manual build"
      password:
        type: "string"
        description: "The password of the user"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
    description: "Create/Edit Teamcity integration"
  putApiV4ProjectsIdServicesTelegram:
    type: "object"
    required:
    - "room"
    - "token"
    properties:
      hostname:
        type: "string"
        description: "Custom hostname of the Telegram API. The default value is `https://api.telegram.org`."
      token:
        type: "string"
        description: "The Telegram chat token. For example, 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11"
      room:
        type: "string"
        description: "Unique identifier for the target chat or username of the target\
          \ channel (in the format @channelusername)"
      thread:
        type: "integer"
        format: "int32"
        description: "Unique identifier for the target message thread (topic in a\
          \ forum supergroup)"
      branches_to_be_notified:
        type: "string"
        description: "Branches for which notifications are to be sent."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
      incident_events:
        type: "boolean"
        description: "Trigger event when an incident is created."
      vulnerability_events:
        type: "boolean"
    description: "Create/Edit Telegram integration"
  putApiV4ProjectsIdServicesUnifyCircuit:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "The Unify Circuit webhook. e.g. https://circuit.com/rest/v2/webhooks/incoming/…"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
    description: "Create/Edit Unify Circuit integration"
  putApiV4ProjectsIdServicesWebexTeams:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "The Webex Teams webhook. For example, https://api.ciscospark.com/v1/webhooks/incoming/..."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines."
      branches_to_be_notified:
        type: "string"
        description: "Branches to send notifications for. Valid options are `all`,\
          \ `default`, `protected`, and `default_and_protected`. The default value\
          \ is `default`."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
    description: "Create/Edit Webex Teams integration"
  putApiV4ProjectsIdServicesZentao:
    type: "object"
    required:
    - "api_token"
    - "url"
    - "zentao_product_xid"
    properties:
      url:
        type: "string"
        description: "The base URL to the ZenTao instance web interface which is being\
          \ linked to this GitLab project. For example, https://www.zentao.net"
      api_url:
        type: "string"
        description: "The base URL to the ZenTao instance API. Web URL value will\
          \ be used if not set. For example, https://www.zentao.net"
      api_token:
        type: "string"
        description: "The API token created from ZenTao dashboard"
      zentao_product_xid:
        type: "string"
        description: "The product ID of ZenTao project"
    description: "Create/Edit Zentao integration"
  putApiV4ProjectsIdServicesSquashTm:
    type: "object"
    required:
    - "url"
    properties:
      url:
        type: "string"
        description: "URL of the Squash TM webhook."
      token:
        type: "string"
        description: "Secret token."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
    description: "Create/Edit Squash Tm integration"
  putApiV4ProjectsIdServicesGithub:
    type: "object"
    required:
    - "repository_url"
    - "token"
    properties:
      token:
        type: "string"
        description: "GitHub API token with `repo:status` OAuth scope."
      repository_url:
        type: "string"
        description: "GitHub repository URL."
      static_context:
        type: "boolean"
        description: "Append the hostname of your GitLab instance to the status check\
          \ name."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
    description: "Create/Edit Github integration"
  putApiV4ProjectsIdServicesGitGuardian:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
    description: "Create/Edit Git Guardian integration"
  putApiV4ProjectsIdServicesGoogleCloudPlatformArtifactRegistry:
    type: "object"
    required:
    - "artifact_registry_location"
    - "artifact_registry_project_id"
    - "artifact_registry_repositories"
    properties:
      artifact_registry_project_id:
        type: "string"
      artifact_registry_repositories:
        type: "string"
      artifact_registry_location:
        type: "string"
    description: "Create/Edit Google Cloud Platform Artifact Registry integration"
  putApiV4ProjectsIdServicesGoogleCloudPlatformWorkloadIdentityFederation:
    type: "object"
    required:
    - "workload_identity_federation_project_id"
    - "workload_identity_federation_project_number"
    - "workload_identity_pool_id"
    - "workload_identity_pool_provider_id"
    properties:
      workload_identity_federation_project_id:
        type: "string"
        description: "Google Cloud project ID for the Workload Identity Federation."
      workload_identity_federation_project_number:
        type: "string"
        description: "Google Cloud project number for the Workload Identity Federation."
      workload_identity_pool_id:
        type: "string"
        description: "ID of the Workload Identity Pool."
      workload_identity_pool_provider_id:
        type: "string"
        description: "ID of the Workload Identity Pool provider."
    description: "Create/Edit Google Cloud Platform Workload Identity Federation integration"
  putApiV4ProjectsIdServicesMockCi:
    type: "object"
    required:
    - "mock_service_url"
    properties:
      enable_ssl_verification:
        type: "boolean"
        description: "Enable SSL verification. Defaults to `true` (enabled)."
      mock_service_url:
        type: "string"
        description: "URL of the Mock CI integration."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Mock Ci integration"
  API_Entities_ProjectIntegration:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 75
      title:
        type: "string"
        example: "Jenkins CI"
      slug:
        type: "integer"
        format: "int32"
        example: "jenkins"
      created_at:
        type: "string"
        format: "date-time"
        example: "2019-11-20T11:20:25.297Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2019-11-20T12:24:37.498Z"
      active:
        type: "boolean"
      commit_events:
        type: "boolean"
      push_events:
        type: "boolean"
      issues_events:
        type: "boolean"
      incident_events:
        type: "boolean"
      alert_events:
        type: "boolean"
      confidential_issues_events:
        type: "boolean"
      merge_requests_events:
        type: "boolean"
      tag_push_events:
        type: "boolean"
      deployment_events:
        type: "boolean"
      note_events:
        type: "boolean"
      confidential_note_events:
        type: "boolean"
      pipeline_events:
        type: "boolean"
      wiki_page_events:
        type: "boolean"
      job_events:
        type: "boolean"
      comment_on_event_enabled:
        type: "boolean"
      vulnerability_events:
        type: "boolean"
      properties:
        type: "object"
        example:
          token: "secr3t"
        properties: {}
    description: "API_Entities_ProjectIntegration model"
    example:
      alert_events: true
      pipeline_events: true
      commit_events: true
      issues_events: true
      vulnerability_events: true
      created_at: "2019-11-20T11:20:25.297Z"
      active: true
      merge_requests_events: true
      note_events: true
      title: "Jenkins CI"
      incident_events: true
      deployment_events: true
      comment_on_event_enabled: true
      push_events: true
      confidential_note_events: true
      tag_push_events: true
      confidential_issues_events: true
      updated_at: "2019-11-20T12:24:37.498Z"
      wiki_page_events: true
      id: 75
      job_events: true
      slug: "jenkins"
      properties:
        token: "secr3t"
  postApiV4ProjectsIdServicesMattermostSlashCommandsTrigger:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The Mattermost token."
    description: "Trigger a slash command for mattermost-slash-commands"
  postApiV4ProjectsIdServicesSlackSlashCommandsTrigger:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The Slack token."
    description: "Trigger a slash command for slack-slash-commands"
  putApiV4ProjectsIdIntegrationsAppleAppStore:
    type: "object"
    required:
    - "app_store_issuer_id"
    - "app_store_key_id"
    - "app_store_private_key"
    - "app_store_private_key_file_name"
    properties:
      app_store_issuer_id:
        type: "string"
        description: "Apple App Store Connect issuer ID."
      app_store_key_id:
        type: "string"
        description: "Apple App Store Connect key ID."
      app_store_private_key_file_name:
        type: "string"
        description: "Apple App Store Connect private key file name."
      app_store_private_key:
        type: "string"
        description: "Apple App Store Connect private key."
      app_store_protected_refs:
        type: "boolean"
        description: "Set variables on protected branches and tags only."
    description: "Create/Edit Apple App Store integration"
  putApiV4ProjectsIdIntegrationsAsana:
    type: "object"
    required:
    - "api_key"
    properties:
      api_key:
        type: "string"
        description: "User API token. The user must have access to the task. All comments\
          \ are attributed to this user."
      restrict_to_branch:
        type: "string"
        description: "Comma-separated list of branches to be automatically inspected.\
          \ Leave blank to include all branches."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Asana integration"
  putApiV4ProjectsIdIntegrationsAssembla:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The authentication token."
      subdomain:
        type: "string"
        description: "The subdomain setting."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Assembla integration"
  putApiV4ProjectsIdIntegrationsBamboo:
    type: "object"
    required:
    - "bamboo_url"
    - "build_key"
    - "password"
    - "username"
    properties:
      enable_ssl_verification:
        type: "boolean"
        description: "Enable SSL verification. Defaults to `true` (enabled)."
      bamboo_url:
        type: "string"
        description: "Bamboo root URL (for example, `https://bamboo.example.com`)."
      build_key:
        type: "string"
        description: "Bamboo build plan key (for example, `KEY`)."
      username:
        type: "string"
        description: "User with API access to the Bamboo server."
      password:
        type: "string"
        description: "Password of the user."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Bamboo integration"
  putApiV4ProjectsIdIntegrationsBugzilla:
    type: "object"
    required:
    - "issues_url"
    - "new_issue_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      new_issue_url:
        type: "string"
        description: "URL of the new issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Bugzilla integration"
  putApiV4ProjectsIdIntegrationsBuildkite:
    type: "object"
    required:
    - "project_url"
    - "token"
    properties:
      token:
        type: "string"
        description: "Buildkite project GitLab token"
      project_url:
        type: "string"
        description: "The Buildkite pipeline URL"
      enable_ssl_verification:
        type: "boolean"
        description: "DEPRECATED: This parameter has no effect since SSL verification\
          \ will always be enabled"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
    description: "Create/Edit Buildkite integration"
  putApiV4ProjectsIdIntegrationsCampfire:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "API authentication token from Campfire. To get the token, sign\
          \ in to Campfire and select **My info**."
      subdomain:
        type: "string"
        description: "`.campfirenow.com` subdomain when you're signed in."
      room:
        type: "string"
        description: "ID portion of the Campfire room URL."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Campfire integration"
  putApiV4ProjectsIdIntegrationsConfluence:
    type: "object"
    required:
    - "confluence_url"
    properties:
      confluence_url:
        type: "string"
        description: "URL of the Confluence Workspace hosted on `atlassian.net`."
    description: "Create/Edit Confluence integration"
  putApiV4ProjectsIdIntegrationsCustomIssueTracker:
    type: "object"
    required:
    - "issues_url"
    - "new_issue_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      new_issue_url:
        type: "string"
        description: "URL of the new issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Custom Issue Tracker integration"
  putApiV4ProjectsIdIntegrationsDatadog:
    type: "object"
    required:
    - "api_key"
    properties:
      api_key:
        type: "string"
        description: "API key used for authentication with Datadog"
      datadog_site:
        type: "string"
        description: "The Datadog site to send data to. To send data to the EU site,\
          \ use datadoghq.eu"
      api_url:
        type: "string"
        description: "(Advanced) The full URL for your Datadog site"
      archive_trace_events:
        type: "boolean"
        description: "When enabled, job logs are collected by Datadog and displayed\
          \ along with pipeline execution traces."
      datadog_service:
        type: "string"
        description: "Tag all data from this GitLab instance in Datadog. Useful when\
          \ managing several self-managed deployments"
      datadog_env:
        type: "string"
        description: "For self-managed deployments, set the env tag for all the data\
          \ sent to Datadog"
      datadog_tags:
        type: "string"
        description: "Custom tags in Datadog. Specify one tag per line in the format:\
          \ \"key:value\\nkey2:value2\""
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      build_events:
        type: "boolean"
        description: "Trigger event when a build is created."
    description: "Create/Edit Datadog integration"
  putApiV4ProjectsIdIntegrationsDiffblueCover:
    type: "object"
    required:
    - "diffblue_access_token_name"
    - "diffblue_access_token_secret"
    - "diffblue_license_key"
    properties:
      diffblue_license_key:
        type: "string"
        description: "Diffblue Cover license key."
      diffblue_access_token_name:
        type: "string"
        description: "Access token name used by Diffblue Cover in pipelines."
      diffblue_access_token_secret:
        type: "string"
        description: "Access token secret used by Diffblue Cover in pipelines."
    description: "Create/Edit Diffblue Cover integration"
  putApiV4ProjectsIdIntegrationsDiscord:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "Discord webhook (for example, `https://discord.com/api/webhooks/…\
          `)."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines"
      branches_to_be_notified:
        type: "string"
        description: "Branches to send notifications for. Valid options are `all`,\
          \ `default`, `protected`, and `default_and_protected`. The default value\
          \ is `default`."
      push_channel:
        type: "string"
        description: "The name of the channel to receive push_events notifications"
      issue_channel:
        type: "string"
        description: "The name of the channel to receive issues_events notifications"
      incident_channel:
        type: "string"
        description: "The name of the channel to receive incident_events notifications"
      alert_channel:
        type: "string"
        description: "The name of the channel to receive alert_events notifications"
      confidential_issue_channel:
        type: "string"
        description: "The name of the channel to receive confidential_issues_events\
          \ notifications"
      merge_request_channel:
        type: "string"
        description: "The name of the channel to receive merge_requests_events notifications"
      note_channel:
        type: "string"
        description: "The name of the channel to receive note_events notifications"
      confidential_note_channel:
        type: "string"
        description: "The name of the channel to receive confidential_note_events\
          \ notifications"
      tag_push_channel:
        type: "string"
        description: "The name of the channel to receive tag_push_events notifications"
      deployment_channel:
        type: "string"
        description: "The name of the channel to receive deployment_events notifications"
      pipeline_channel:
        type: "string"
        description: "The name of the channel to receive pipeline_events notifications"
      wiki_page_channel:
        type: "string"
        description: "The name of the channel to receive wiki_page_events notifications"
      vulnerability_channel:
        type: "string"
        description: "The name of the channel to receive vulnerability_events notifications"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
      deployment_events:
        type: "boolean"
        description: "Trigger event when a deployment starts or finishes."
    description: "Create/Edit Discord integration"
  putApiV4ProjectsIdIntegrationsDroneCi:
    type: "object"
    required:
    - "drone_url"
    - "token"
    properties:
      token:
        type: "string"
        description: "Drone CI token"
      drone_url:
        type: "string"
        description: "Drone CI URL"
      enable_ssl_verification:
        type: "boolean"
        description: "Enable SSL verification"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
    description: "Create/Edit Drone Ci integration"
  putApiV4ProjectsIdIntegrationsEmailsOnPush:
    type: "object"
    required:
    - "recipients"
    properties:
      recipients:
        type: "string"
        description: "Comma-separated list of recipient email addresses"
      disable_diffs:
        type: "boolean"
        description: "Disable code diffs"
      send_from_committer_email:
        type: "boolean"
        description: "Send from committer"
      branches_to_be_notified:
        type: "string"
        description: "Branches for which notifications are to be sent"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
    description: "Create/Edit Emails On Push integration"
  putApiV4ProjectsIdIntegrationsExternalWiki:
    type: "object"
    required:
    - "external_wiki_url"
    properties:
      external_wiki_url:
        type: "string"
        description: "URL of the external wiki."
    description: "Create/Edit External Wiki integration"
  putApiV4ProjectsIdIntegrationsGitlabSlackApplication:
    type: "object"
    properties:
      channel:
        type: "string"
        description: "Default channel to use if no other channel is configured."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines."
      branches_to_be_notified:
        type: "string"
        description: "Branches to send notifications for. Valid options are `all`,\
          \ `default`, `protected`, and `default_and_protected`. The default value\
          \ is `default`."
      labels_to_be_notified:
        type: "string"
        description: "Labels to send notifications for. Leave blank to receive notifications\
          \ for all events."
      labels_to_be_notified_behavior:
        type: "string"
        description: "Labels to be notified for. Valid options are `match_any` and\
          \ `match_all`. The default value is `match_any`."
      push_channel:
        type: "string"
        description: "The name of the channel to receive push_events notifications"
      issue_channel:
        type: "string"
        description: "The name of the channel to receive issues_events notifications"
      incident_channel:
        type: "string"
        description: "The name of the channel to receive incident_events notifications"
      alert_channel:
        type: "string"
        description: "The name of the channel to receive alert_events notifications"
      confidential_issue_channel:
        type: "string"
        description: "The name of the channel to receive confidential_issues_events\
          \ notifications"
      merge_request_channel:
        type: "string"
        description: "The name of the channel to receive merge_requests_events notifications"
      note_channel:
        type: "string"
        description: "The name of the channel to receive note_events notifications"
      confidential_note_channel:
        type: "string"
        description: "The name of the channel to receive confidential_note_events\
          \ notifications"
      tag_push_channel:
        type: "string"
        description: "The name of the channel to receive tag_push_events notifications"
      deployment_channel:
        type: "string"
        description: "The name of the channel to receive deployment_events notifications"
      pipeline_channel:
        type: "string"
        description: "The name of the channel to receive pipeline_events notifications"
      wiki_page_channel:
        type: "string"
        description: "The name of the channel to receive wiki_page_events notifications"
      vulnerability_channel:
        type: "string"
        description: "The name of the channel to receive vulnerability_events notifications"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
      deployment_events:
        type: "boolean"
        description: "Trigger event when a deployment starts or finishes."
      incident_events:
        type: "boolean"
        description: "Trigger event when an incident is created."
      vulnerability_events:
        type: "boolean"
      alert_events:
        type: "boolean"
        description: "Trigger event when a new, unique alert is recorded."
    description: "Create/Edit Gitlab Slack Application integration"
  putApiV4ProjectsIdIntegrationsGooglePlay:
    type: "object"
    required:
    - "package_name"
    - "service_account_key"
    - "service_account_key_file_name"
    properties:
      package_name:
        type: "string"
        description: "Package name of the app in Google Play."
      service_account_key_file_name:
        type: "string"
        description: "File name of the Google Play service account key."
      service_account_key:
        type: "string"
        description: "Google Play service account key."
      google_play_protected_refs:
        type: "boolean"
        description: "Set variables on protected branches and tags only."
    description: "Create/Edit Google Play integration"
  putApiV4ProjectsIdIntegrationsHangoutsChat:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "The Hangouts Chat webhook. e.g. https://chat.googleapis.com/v1/spaces…"
      branches_to_be_notified:
        type: "string"
        description: "Branches for which notifications are to be sent"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
    description: "Create/Edit Hangouts Chat integration"
  putApiV4ProjectsIdIntegrationsHarbor:
    type: "object"
    required:
    - "password"
    - "project_name"
    - "url"
    - "username"
    properties:
      url:
        type: "string"
        description: "The base URL to the Harbor instance linked to the GitLab project.\
          \ For example, `https://demo.goharbor.io`."
      project_name:
        type: "string"
        description: "The name of the project in the Harbor instance. For example,\
          \ `testproject`."
      username:
        type: "string"
        description: "The username created in the Harbor interface."
      password:
        type: "string"
        description: "The password of the user."
    description: "Create/Edit Harbor integration"
  putApiV4ProjectsIdIntegrationsIrker:
    type: "object"
    required:
    - "recipients"
    properties:
      recipients:
        type: "string"
        description: "Recipients/channels separated by whitespaces"
      default_irc_uri:
        type: "string"
        description: "Default: irc://irc.network.net:6697"
      server_host:
        type: "string"
        description: "Server host. Default localhost"
      server_port:
        type: "integer"
        format: "int32"
        description: "Server port. Default 6659"
      colorize_messages:
        type: "boolean"
        description: "Colorize messages"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Irker integration"
  putApiV4ProjectsIdIntegrationsJenkins:
    type: "object"
    required:
    - "jenkins_url"
    - "project_name"
    properties:
      jenkins_url:
        type: "string"
        description: "Jenkins root URL like https://jenkins.example.com"
      enable_ssl_verification:
        type: "boolean"
        description: "Enable SSL verification"
      project_name:
        type: "string"
        description: "The URL-friendly project name. Example: my_project_name"
      username:
        type: "string"
        description: "A user with access to the Jenkins server, if applicable"
      password:
        type: "string"
        description: "The password of the user"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
    description: "Create/Edit Jenkins integration"
  putApiV4ProjectsIdIntegrationsJira:
    type: "object"
    required:
    - "password"
    - "url"
    properties:
      url:
        type: "string"
        description: "The base URL to the Jira instance web interface which is being\
          \ linked to this GitLab project. E.g., https://jira.example.com"
      api_url:
        type: "string"
        description: "The base URL to the Jira instance API. Web URL value will be\
          \ used if not set. E.g., https://jira-api.example.com"
      jira_auth_type:
        type: "integer"
        format: "int32"
        description: "The authentication method to be used with Jira. `0` means Basic\
          \ Authentication. `1` means Jira personal access token. Defaults to `0`"
      username:
        type: "string"
        description: "The email or username to be used with Jira. For Jira Cloud use\
          \ an email, for Jira Data Center and Jira Server use a username. Required\
          \ when using Basic authentication (`jira_auth_type` is `0`)"
      password:
        type: "string"
        description: "The Jira API token, password, or personal access token to be\
          \ used with Jira. When your authentication method is Basic (`jira_auth_type`\
          \ is `0`) use an API token for Jira Cloud, or a password for Jira Data Center\
          \ or Jira Server. When your authentication method is Jira personal access\
          \ token (`jira_auth_type` is `1`) use a personal access token"
      jira_issue_transition_automatic:
        type: "boolean"
        description: "Enable automatic issue transitions"
      jira_issue_transition_id:
        type: "string"
        description: "The ID of one or more transitions for custom issue transitions"
      jira_issue_prefix:
        type: "string"
        description: "Prefix to match Jira issue keys"
      jira_issue_regex:
        type: "string"
        description: "Regular expression to match Jira issue keys"
      issues_enabled:
        type: "boolean"
        description: "Enable viewing Jira issues in GitLab"
      project_keys:
        type: "array"
        description: "Keys of Jira projects to view issues from in GitLab"
        items:
          type: "string"
      comment_on_event_enabled:
        type: "boolean"
        description: "Enable comments inside Jira issues on each GitLab event (commit\
          \ / merge request)"
      commit_events:
        type: "boolean"
        description: "Trigger event when a commit is created or updated."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
    description: "Create/Edit Jira integration"
  putApiV4ProjectsIdIntegrationsMattermostSlashCommands:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The Mattermost token."
    description: "Create/Edit Mattermost Slash Commands integration"
  putApiV4ProjectsIdIntegrationsSlackSlashCommands:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The Slack token"
    description: "Create/Edit Slack Slash Commands integration"
  putApiV4ProjectsIdIntegrationsPackagist:
    type: "object"
    required:
    - "token"
    - "username"
    properties:
      username:
        type: "string"
        description: "The username"
      token:
        type: "string"
        description: "The Packagist API token"
      server:
        type: "string"
        description: "The server"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
    description: "Create/Edit Packagist integration"
  putApiV4ProjectsIdIntegrationsPhorge:
    type: "object"
    required:
    - "issues_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Phorge integration"
  putApiV4ProjectsIdIntegrationsPipelinesEmail:
    type: "object"
    required:
    - "recipients"
    properties:
      recipients:
        type: "string"
        description: "Comma-separated list of recipient email addresses"
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Notify only broken pipelines"
      notify_only_default_branch:
        type: "boolean"
        description: "Send notifications only for the default branch"
      branches_to_be_notified:
        type: "string"
        description: "Branches for which notifications are to be sent"
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
    description: "Create/Edit Pipelines Email integration"
  putApiV4ProjectsIdIntegrationsPivotaltracker:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The Pivotaltracker token"
      restrict_to_branch:
        type: "string"
        description: "Comma-separated list of branches which will be automatically\
          \ inspected. Leave blank to include all branches."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Pivotaltracker integration"
  putApiV4ProjectsIdIntegrationsPrometheus:
    type: "object"
    required:
    - "api_url"
    - "google_iap_audience_client_id"
    - "google_iap_service_account_json"
    properties:
      manual_configuration:
        type: "boolean"
        description: "When enabled, the default settings will be overridden with your\
          \ custom configuration"
      api_url:
        type: "string"
        description: "Prometheus API Base URL, like http://prometheus.example.com/"
      google_iap_audience_client_id:
        type: "string"
        description: "Client ID of the IAP-secured resource (looks like IAP_CLIENT_ID.apps.googleusercontent.com)"
      google_iap_service_account_json:
        type: "string"
        description: "Contents of the credentials.json file of your service account,\
          \ like: { \"type\": \"service_account\", \"project_id\": ... }"
    description: "Create/Edit Prometheus integration"
  putApiV4ProjectsIdIntegrationsPumble:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "The Pumble chat webhook. For example, https://api.pumble.com/workspaces/x/..."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
    description: "Create/Edit Pumble integration"
  putApiV4ProjectsIdIntegrationsPushover:
    type: "object"
    required:
    - "api_key"
    - "device"
    - "priority"
    - "sound"
    - "user_key"
    properties:
      api_key:
        type: "string"
        description: "The application key"
      user_key:
        type: "string"
        description: "The user key"
      priority:
        type: "string"
        description: "The priority"
      device:
        type: "string"
        description: "Leave blank for all active devices"
      sound:
        type: "string"
        description: "The sound of the notification"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Pushover integration"
  putApiV4ProjectsIdIntegrationsRedmine:
    type: "object"
    required:
    - "issues_url"
    - "new_issue_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      new_issue_url:
        type: "string"
        description: "URL of the new issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Redmine integration"
  putApiV4ProjectsIdIntegrationsEwm:
    type: "object"
    required:
    - "issues_url"
    - "new_issue_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      new_issue_url:
        type: "string"
        description: "URL of the new issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Ewm integration"
  putApiV4ProjectsIdIntegrationsYoutrack:
    type: "object"
    required:
    - "issues_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Youtrack integration"
  putApiV4ProjectsIdIntegrationsClickup:
    type: "object"
    required:
    - "issues_url"
    - "project_url"
    properties:
      project_url:
        type: "string"
        description: "URL of the project."
      issues_url:
        type: "string"
        description: "URL of the issue."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Clickup integration"
  putApiV4ProjectsIdIntegrationsSlack:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "Slack notifications webhook (for example, `https://hooks.slack.com/services/...`)."
      username:
        type: "string"
        description: "Slack notifications username."
      channel:
        type: "string"
        description: "Default channel to use if no other channel is configured."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines."
      branches_to_be_notified:
        type: "string"
        description: "Branches to send notifications for. Valid options are `all`,\
          \ `default`, `protected`, and `default_and_protected`. The default value\
          \ is `default`."
      labels_to_be_notified:
        type: "string"
        description: "Labels to send notifications for. Leave blank to receive notifications\
          \ for all events."
      labels_to_be_notified_behavior:
        type: "string"
        description: "Labels to be notified for. Valid options are `match_any` and\
          \ `match_all`. The default value is `match_any`."
      push_channel:
        type: "string"
        description: "The name of the channel to receive push_events notifications"
      issue_channel:
        type: "string"
        description: "The name of the channel to receive issues_events notifications"
      incident_channel:
        type: "string"
        description: "The name of the channel to receive incident_events notifications"
      alert_channel:
        type: "string"
        description: "The name of the channel to receive alert_events notifications"
      confidential_issue_channel:
        type: "string"
        description: "The name of the channel to receive confidential_issues_events\
          \ notifications"
      merge_request_channel:
        type: "string"
        description: "The name of the channel to receive merge_requests_events notifications"
      note_channel:
        type: "string"
        description: "The name of the channel to receive note_events notifications"
      confidential_note_channel:
        type: "string"
        description: "The name of the channel to receive confidential_note_events\
          \ notifications"
      tag_push_channel:
        type: "string"
        description: "The name of the channel to receive tag_push_events notifications"
      deployment_channel:
        type: "string"
        description: "The name of the channel to receive deployment_events notifications"
      pipeline_channel:
        type: "string"
        description: "The name of the channel to receive pipeline_events notifications"
      wiki_page_channel:
        type: "string"
        description: "The name of the channel to receive wiki_page_events notifications"
      vulnerability_channel:
        type: "string"
        description: "The name of the channel to receive vulnerability_events notifications"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
      deployment_events:
        type: "boolean"
        description: "Trigger event when a deployment starts or finishes."
      incident_events:
        type: "boolean"
        description: "Trigger event when an incident is created."
      vulnerability_events:
        type: "boolean"
      alert_events:
        type: "boolean"
        description: "Trigger event when a new, unique alert is recorded."
    description: "Create/Edit Slack integration"
  putApiV4ProjectsIdIntegrationsMicrosoftTeams:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "The Microsoft Teams webhook. e.g. https://outlook.office.com/webhook/…"
      branches_to_be_notified:
        type: "string"
        description: "Branches for which notifications are to be sent"
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
    description: "Create/Edit Microsoft Teams integration"
  putApiV4ProjectsIdIntegrationsMattermost:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "Mattermost notifications webhook (for example, `http://mattermost.example.com/hooks/...`)."
      username:
        type: "string"
        description: "Mattermost notifications username."
      channel:
        type: "string"
        description: "Default channel to use if no other channel is configured."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines."
      branches_to_be_notified:
        type: "string"
        description: "Branches to send notifications for. Valid options are `all`,\
          \ `default`, `protected`, and `default_and_protected`. The default value\
          \ is `default`."
      labels_to_be_notified:
        type: "string"
        description: "Labels to send notifications for. Leave blank to receive notifications\
          \ for all events."
      labels_to_be_notified_behavior:
        type: "string"
        description: "Labels to be notified for. Valid options are `match_any` and\
          \ `match_all`. The default value is `match_any`."
      push_channel:
        type: "string"
        description: "The name of the channel to receive push_events notifications"
      issue_channel:
        type: "string"
        description: "The name of the channel to receive issues_events notifications"
      incident_channel:
        type: "string"
        description: "The name of the channel to receive incident_events notifications"
      alert_channel:
        type: "string"
        description: "The name of the channel to receive alert_events notifications"
      confidential_issue_channel:
        type: "string"
        description: "The name of the channel to receive confidential_issues_events\
          \ notifications"
      merge_request_channel:
        type: "string"
        description: "The name of the channel to receive merge_requests_events notifications"
      note_channel:
        type: "string"
        description: "The name of the channel to receive note_events notifications"
      confidential_note_channel:
        type: "string"
        description: "The name of the channel to receive confidential_note_events\
          \ notifications"
      tag_push_channel:
        type: "string"
        description: "The name of the channel to receive tag_push_events notifications"
      deployment_channel:
        type: "string"
        description: "The name of the channel to receive deployment_events notifications"
      pipeline_channel:
        type: "string"
        description: "The name of the channel to receive pipeline_events notifications"
      wiki_page_channel:
        type: "string"
        description: "The name of the channel to receive wiki_page_events notifications"
      vulnerability_channel:
        type: "string"
        description: "The name of the channel to receive vulnerability_events notifications"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
      deployment_events:
        type: "boolean"
        description: "Trigger event when a deployment starts or finishes."
      incident_events:
        type: "boolean"
        description: "Trigger event when an incident is created."
      vulnerability_events:
        type: "boolean"
    description: "Create/Edit Mattermost integration"
  putApiV4ProjectsIdIntegrationsTeamcity:
    type: "object"
    required:
    - "build_type"
    - "password"
    - "teamcity_url"
    - "username"
    properties:
      teamcity_url:
        type: "string"
        description: "TeamCity root URL like https://teamcity.example.com"
      enable_ssl_verification:
        type: "boolean"
        description: "Enable SSL verification"
      build_type:
        type: "string"
        description: "Build configuration ID"
      username:
        type: "string"
        description: "A user with permissions to trigger a manual build"
      password:
        type: "string"
        description: "The password of the user"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
    description: "Create/Edit Teamcity integration"
  putApiV4ProjectsIdIntegrationsTelegram:
    type: "object"
    required:
    - "room"
    - "token"
    properties:
      hostname:
        type: "string"
        description: "Custom hostname of the Telegram API. The default value is `https://api.telegram.org`."
      token:
        type: "string"
        description: "The Telegram chat token. For example, 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11"
      room:
        type: "string"
        description: "Unique identifier for the target chat or username of the target\
          \ channel (in the format @channelusername)"
      thread:
        type: "integer"
        format: "int32"
        description: "Unique identifier for the target message thread (topic in a\
          \ forum supergroup)"
      branches_to_be_notified:
        type: "string"
        description: "Branches for which notifications are to be sent."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
      incident_events:
        type: "boolean"
        description: "Trigger event when an incident is created."
      vulnerability_events:
        type: "boolean"
    description: "Create/Edit Telegram integration"
  putApiV4ProjectsIdIntegrationsUnifyCircuit:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "The Unify Circuit webhook. e.g. https://circuit.com/rest/v2/webhooks/incoming/…"
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
    description: "Create/Edit Unify Circuit integration"
  putApiV4ProjectsIdIntegrationsWebexTeams:
    type: "object"
    required:
    - "webhook"
    properties:
      webhook:
        type: "string"
        description: "The Webex Teams webhook. For example, https://api.ciscospark.com/v1/webhooks/incoming/..."
      notify_only_broken_pipelines:
        type: "boolean"
        description: "Send notifications for broken pipelines."
      branches_to_be_notified:
        type: "string"
        description: "Branches to send notifications for. Valid options are `all`,\
          \ `default`, `protected`, and `default_and_protected`. The default value\
          \ is `default`."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
      merge_requests_events:
        type: "boolean"
        description: "Trigger event when a merge request is created, updated, or merged."
      note_events:
        type: "boolean"
        description: "Trigger event for new comments."
      confidential_note_events:
        type: "boolean"
        description: "Trigger event for new comments on confidential issues."
      tag_push_events:
        type: "boolean"
        description: "Trigger event for new tags pushed to the repository."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
      wiki_page_events:
        type: "boolean"
        description: "Trigger event when a wiki page is created or updated."
    description: "Create/Edit Webex Teams integration"
  putApiV4ProjectsIdIntegrationsZentao:
    type: "object"
    required:
    - "api_token"
    - "url"
    - "zentao_product_xid"
    properties:
      url:
        type: "string"
        description: "The base URL to the ZenTao instance web interface which is being\
          \ linked to this GitLab project. For example, https://www.zentao.net"
      api_url:
        type: "string"
        description: "The base URL to the ZenTao instance API. Web URL value will\
          \ be used if not set. For example, https://www.zentao.net"
      api_token:
        type: "string"
        description: "The API token created from ZenTao dashboard"
      zentao_product_xid:
        type: "string"
        description: "The product ID of ZenTao project"
    description: "Create/Edit Zentao integration"
  putApiV4ProjectsIdIntegrationsSquashTm:
    type: "object"
    required:
    - "url"
    properties:
      url:
        type: "string"
        description: "URL of the Squash TM webhook."
      token:
        type: "string"
        description: "Secret token."
      issues_events:
        type: "boolean"
        description: "Trigger event when an issue is created, updated, or closed."
      confidential_issues_events:
        type: "boolean"
        description: "Trigger event when a confidential issue is created, updated,\
          \ or closed."
    description: "Create/Edit Squash Tm integration"
  putApiV4ProjectsIdIntegrationsGithub:
    type: "object"
    required:
    - "repository_url"
    - "token"
    properties:
      token:
        type: "string"
        description: "GitHub API token with `repo:status` OAuth scope."
      repository_url:
        type: "string"
        description: "GitHub repository URL."
      static_context:
        type: "boolean"
        description: "Append the hostname of your GitLab instance to the status check\
          \ name."
      pipeline_events:
        type: "boolean"
        description: "Trigger event when a pipeline status changes."
    description: "Create/Edit Github integration"
  putApiV4ProjectsIdIntegrationsGitGuardian:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
    description: "Create/Edit Git Guardian integration"
  putApiV4ProjectsIdIntegrationsGoogleCloudPlatformArtifactRegistry:
    type: "object"
    required:
    - "artifact_registry_location"
    - "artifact_registry_project_id"
    - "artifact_registry_repositories"
    properties:
      artifact_registry_project_id:
        type: "string"
      artifact_registry_repositories:
        type: "string"
      artifact_registry_location:
        type: "string"
    description: "Create/Edit Google Cloud Platform Artifact Registry integration"
  putApiV4ProjectsIdIntegrationsGoogleCloudPlatformWorkloadIdentityFederation:
    type: "object"
    required:
    - "workload_identity_federation_project_id"
    - "workload_identity_federation_project_number"
    - "workload_identity_pool_id"
    - "workload_identity_pool_provider_id"
    properties:
      workload_identity_federation_project_id:
        type: "string"
        description: "Google Cloud project ID for the Workload Identity Federation."
      workload_identity_federation_project_number:
        type: "string"
        description: "Google Cloud project number for the Workload Identity Federation."
      workload_identity_pool_id:
        type: "string"
        description: "ID of the Workload Identity Pool."
      workload_identity_pool_provider_id:
        type: "string"
        description: "ID of the Workload Identity Pool provider."
    description: "Create/Edit Google Cloud Platform Workload Identity Federation integration"
  putApiV4ProjectsIdIntegrationsMockCi:
    type: "object"
    required:
    - "mock_service_url"
    properties:
      enable_ssl_verification:
        type: "boolean"
        description: "Enable SSL verification. Defaults to `true` (enabled)."
      mock_service_url:
        type: "string"
        description: "URL of the Mock CI integration."
      push_events:
        type: "boolean"
        description: "Trigger event for pushes to the repository."
    description: "Create/Edit Mock Ci integration"
  postApiV4ProjectsIdIntegrationsMattermostSlashCommandsTrigger:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The Mattermost token."
    description: "Trigger a slash command for mattermost-slash-commands"
  postApiV4ProjectsIdIntegrationsSlackSlashCommandsTrigger:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The Slack token."
    description: "Trigger a slash command for slack-slash-commands"
  postApiV4ProjectsIdInvitations:
    type: "object"
    required:
    - "access_level"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level (defaults: `30`, developer access level)"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
        - 5
      email:
        type: "array"
        description: "The email address to invite, or multiple emails separated by\
          \ comma"
        items:
          type: "string"
      user_id:
        type: "array"
        description: "The user ID of the new member or multiple IDs separated by commas."
        items:
          type: "string"
      expires_at:
        type: "string"
        format: "date-time"
        description: "Date string in the format YEAR-MONTH-DAY"
      invite_source:
        type: "string"
        description: "Source that triggered the member creation process"
        default: "invitations-api"
    description: "Invite non-members by email address to a group or project."
  putApiV4ProjectsIdInvitationsEmail:
    type: "object"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level (defaults: `30`, developer access level)"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
      expires_at:
        type: "string"
        format: "date-time"
        description: "Date string in ISO 8601 format (`YYYY-MM-DDTHH:MM:SSZ`)"
    description: "Updates a group or project invitation."
  API_Entities_RelatedIssue:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 84
      iid:
        type: "integer"
        format: "int32"
        example: 14
      project_id:
        type: "integer"
        format: "int32"
        example: 4
      title:
        type: "string"
        example: "Impedit et ut et dolores vero provident ullam est"
      description:
        type: "string"
        example: "Repellendus impedit et vel velit dignissimos."
      state:
        type: "string"
        example: "closed"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-08-17T12:46:35.053Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2022-11-14T17:22:01.470Z"
      closed_at:
        type: "string"
        format: "date-time"
        example: "2022-11-15T08:30:55.232Z"
      closed_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      labels:
        type: "array"
        items:
          type: "string"
          example: "bug"
      milestone:
        $ref: "#/definitions/API_Entities_Milestone"
      assignees:
        $ref: "#/definitions/API_Entities_UserBasic"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      type:
        type: "string"
        example: "ISSUE"
        description: "One of [\"ISSUE\", \"INCIDENT\", \"TEST_CASE\", \"REQUIREMENT\"\
          , \"TASK\"]"
      assignee:
        $ref: "#/definitions/API_Entities_UserBasic"
      user_notes_count:
        type: "string"
      merge_requests_count:
        type: "string"
      upvotes:
        type: "string"
      downvotes:
        type: "string"
      due_date:
        type: "string"
        format: "date"
        example: "2022-11-20"
      confidential:
        type: "boolean"
      discussion_locked:
        type: "boolean"
      issue_type:
        type: "string"
        example: "issue"
      web_url:
        type: "string"
        example: "http://example.com/example/example/issues/14"
      time_stats:
        $ref: "#/definitions/API_Entities_IssuableTimeStats"
      task_completion_status:
        type: "string"
      weight:
        type: "string"
      blocking_issues_count:
        type: "string"
      has_tasks:
        type: "string"
      task_status:
        type: "string"
      _links:
        $ref: "#/definitions/API_Entities_RelatedIssue__links"
      references:
        $ref: "#/definitions/API_Entities_IssuableReferences"
      severity:
        type: "string"
        description: "One of [\"UNKNOWN\", \"LOW\", \"MEDIUM\", \"HIGH\", \"CRITICAL\"\
          ]"
      subscribed:
        type: "string"
      moved_to_id:
        type: "string"
      imported:
        type: "string"
      imported_from:
        type: "string"
        example: "github"
      service_desk_reply_to:
        type: "string"
      epic_iid:
        type: "string"
      epic:
        $ref: "#/definitions/EpicBaseEntity"
      iteration:
        $ref: "#/definitions/API_Entities_Iteration"
      health_status:
        type: "string"
      issue_link_id:
        type: "string"
      link_type:
        type: "string"
      link_created_at:
        type: "string"
      link_updated_at:
        type: "string"
    description: "API_Entities_RelatedIssue model"
    example:
      discussion_locked: true
      upvotes: "upvotes"
      references:
        short: "&6"
        relative: "&6"
        full: "test&6"
      iid: 14
      merge_requests_count: "merge_requests_count"
      _links:
        notes: "notes"
        self: "self"
        award_emoji: "award_emoji"
        project: "project"
        closed_as_duplicate_of: "closed_as_duplicate_of"
      description: "Repellendus impedit et vel velit dignissimos."
      created_at: "2022-08-17T12:46:35.053Z"
      assignees:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      link_updated_at: "link_updated_at"
      title: "Impedit et ut et dolores vero provident ullam est"
      type: "ISSUE"
      closed_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      has_tasks: "has_tasks"
      subscribed: "subscribed"
      service_desk_reply_to: "service_desk_reply_to"
      updated_at: "2022-11-14T17:22:01.470Z"
      project_id: 4
      imported: "imported"
      epic_iid: "epic_iid"
      time_stats:
        time_estimate: 12600
        total_time_spent: 3600
        human_time_estimate: "3h 30m"
        human_total_time_spent: "1h"
      link_created_at: "link_created_at"
      iteration:
        sequence: "sequence"
        updated_at: "updated_at"
        web_url: "web_url"
        iid: "iid"
        group_id: "group_id"
        due_date: "due_date"
        description: "description"
        created_at: "created_at"
        id: "id"
        state: "state"
        title: "title"
        start_date: "start_date"
      id: 84
      state: "closed"
      health_status: "health_status"
      confidential: true
      severity: "severity"
      task_status: "task_status"
      closed_at: "2022-11-15T08:30:55.232Z"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      due_date: "2022-11-20"
      issue_type: "issue"
      imported_from: "github"
      weight: "weight"
      epic:
        human_readable_end_date: "human_readable_end_date"
        iid: "iid"
        group_id: "group_id"
        id: "id"
        title: "title"
        human_readable_timestamp: "human_readable_timestamp"
        url: "url"
      downvotes: "downvotes"
      blocking_issues_count: "blocking_issues_count"
      labels:
      - "bug"
      - "bug"
      moved_to_id: "moved_to_id"
      issue_link_id: "issue_link_id"
      link_type: "link_type"
      milestone:
        iid: "iid"
        due_date: "due_date"
        description: "description"
        created_at: "created_at"
        title: "title"
        expired: "expired"
        updated_at: "updated_at"
        web_url: "web_url"
        project_id: "project_id"
        group_id: "group_id"
        id: "id"
        state: "state"
        start_date: "start_date"
      web_url: "http://example.com/example/example/issues/14"
      user_notes_count: "user_notes_count"
      assignee:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      task_completion_status: "task_completion_status"
  EpicBaseEntity:
    type: "object"
    properties:
      id:
        type: "string"
      iid:
        type: "string"
      title:
        type: "string"
      url:
        type: "string"
      group_id:
        type: "string"
      human_readable_end_date:
        type: "string"
      human_readable_timestamp:
        type: "string"
    example:
      human_readable_end_date: "human_readable_end_date"
      iid: "iid"
      group_id: "group_id"
      id: "id"
      title: "title"
      human_readable_timestamp: "human_readable_timestamp"
      url: "url"
  API_Entities_Iteration:
    type: "object"
    properties:
      id:
        type: "string"
      iid:
        type: "string"
      sequence:
        type: "string"
      group_id:
        type: "string"
      title:
        type: "string"
      description:
        type: "string"
      state:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      start_date:
        type: "string"
      due_date:
        type: "string"
      web_url:
        type: "string"
    example:
      sequence: "sequence"
      updated_at: "updated_at"
      web_url: "web_url"
      iid: "iid"
      group_id: "group_id"
      due_date: "due_date"
      description: "description"
      created_at: "created_at"
      id: "id"
      state: "state"
      title: "title"
      start_date: "start_date"
  postApiV4ProjectsIdIssuesIssueIidLinks:
    type: "object"
    required:
    - "target_issue_iid"
    - "target_project_id"
    properties:
      target_project_id:
        type: "string"
        description: "The ID or URL-encoded path of a target project"
      target_issue_iid:
        type: "string"
        description: "The internal ID of a target project’s issue"
      link_type:
        type: "string"
        description: "The type of the relation (“relates_to”, “blocks”, “is_blocked_by”\
          ),defaults to “relates_to”)"
        enum:
        - "relates_to"
        - "blocks"
        - "is_blocked_by"
    description: "Create an issue link"
  API_Entities_IssueLink:
    type: "object"
    properties:
      source_issue:
        $ref: "#/definitions/API_Entities_IssueBasic"
      target_issue:
        $ref: "#/definitions/API_Entities_IssueBasic"
      link_type:
        type: "string"
    description: "API_Entities_IssueLink model"
    example:
      link_type: "link_type"
      source_issue:
        discussion_locked: true
        upvotes: "upvotes"
        iid: 14
        merge_requests_count: "merge_requests_count"
        description: "Repellendus impedit et vel velit dignissimos."
        created_at: "2022-08-17T12:46:35.053Z"
        assignees:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        title: "Impedit et ut et dolores vero provident ullam est"
        type: "ISSUE"
        closed_by:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        updated_at: "2022-11-14T17:22:01.470Z"
        project_id: 4
        time_stats:
          time_estimate: 12600
          total_time_spent: 3600
          human_time_estimate: "3h 30m"
          human_total_time_spent: "1h"
        id: 84
        state: "closed"
        confidential: true
        closed_at: "2022-11-15T08:30:55.232Z"
        author:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        due_date: "2022-11-20"
        issue_type: "issue"
        weight: "weight"
        downvotes: "downvotes"
        blocking_issues_count: "blocking_issues_count"
        labels:
        - "bug"
        - "bug"
        milestone:
          iid: "iid"
          due_date: "due_date"
          description: "description"
          created_at: "created_at"
          title: "title"
          expired: "expired"
          updated_at: "updated_at"
          web_url: "web_url"
          project_id: "project_id"
          group_id: "group_id"
          id: "id"
          state: "state"
          start_date: "start_date"
        web_url: "http://example.com/example/example/issues/14"
        user_notes_count: "user_notes_count"
        assignee:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        task_completion_status: "task_completion_status"
      target_issue:
        discussion_locked: true
        upvotes: "upvotes"
        iid: 14
        merge_requests_count: "merge_requests_count"
        description: "Repellendus impedit et vel velit dignissimos."
        created_at: "2022-08-17T12:46:35.053Z"
        assignees:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        title: "Impedit et ut et dolores vero provident ullam est"
        type: "ISSUE"
        closed_by:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        updated_at: "2022-11-14T17:22:01.470Z"
        project_id: 4
        time_stats:
          time_estimate: 12600
          total_time_spent: 3600
          human_time_estimate: "3h 30m"
          human_total_time_spent: "1h"
        id: 84
        state: "closed"
        confidential: true
        closed_at: "2022-11-15T08:30:55.232Z"
        author:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        due_date: "2022-11-20"
        issue_type: "issue"
        weight: "weight"
        downvotes: "downvotes"
        blocking_issues_count: "blocking_issues_count"
        labels:
        - "bug"
        - "bug"
        milestone:
          iid: "iid"
          due_date: "due_date"
          description: "description"
          created_at: "created_at"
          title: "title"
          expired: "expired"
          updated_at: "updated_at"
          web_url: "web_url"
          project_id: "project_id"
          group_id: "group_id"
          id: "id"
          state: "state"
          start_date: "start_date"
        web_url: "http://example.com/example/example/issues/14"
        user_notes_count: "user_notes_count"
        assignee:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        task_completion_status: "task_completion_status"
  API_Entities_IssueBasic:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 84
      iid:
        type: "integer"
        format: "int32"
        example: 14
      project_id:
        type: "integer"
        format: "int32"
        example: 4
      title:
        type: "string"
        example: "Impedit et ut et dolores vero provident ullam est"
      description:
        type: "string"
        example: "Repellendus impedit et vel velit dignissimos."
      state:
        type: "string"
        example: "closed"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-08-17T12:46:35.053Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2022-11-14T17:22:01.470Z"
      closed_at:
        type: "string"
        format: "date-time"
        example: "2022-11-15T08:30:55.232Z"
      closed_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      labels:
        type: "array"
        items:
          type: "string"
          example: "bug"
      milestone:
        $ref: "#/definitions/API_Entities_Milestone"
      assignees:
        $ref: "#/definitions/API_Entities_UserBasic"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      type:
        type: "string"
        example: "ISSUE"
        description: "One of [\"ISSUE\", \"INCIDENT\", \"TEST_CASE\", \"REQUIREMENT\"\
          , \"TASK\"]"
      assignee:
        $ref: "#/definitions/API_Entities_UserBasic"
      user_notes_count:
        type: "string"
      merge_requests_count:
        type: "string"
      upvotes:
        type: "string"
      downvotes:
        type: "string"
      due_date:
        type: "string"
        format: "date"
        example: "2022-11-20"
      confidential:
        type: "boolean"
      discussion_locked:
        type: "boolean"
      issue_type:
        type: "string"
        example: "issue"
      web_url:
        type: "string"
        example: "http://example.com/example/example/issues/14"
      time_stats:
        $ref: "#/definitions/API_Entities_IssuableTimeStats"
      task_completion_status:
        type: "string"
      weight:
        type: "string"
      blocking_issues_count:
        type: "string"
    example:
      discussion_locked: true
      upvotes: "upvotes"
      iid: 14
      merge_requests_count: "merge_requests_count"
      description: "Repellendus impedit et vel velit dignissimos."
      created_at: "2022-08-17T12:46:35.053Z"
      assignees:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      title: "Impedit et ut et dolores vero provident ullam est"
      type: "ISSUE"
      closed_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      updated_at: "2022-11-14T17:22:01.470Z"
      project_id: 4
      time_stats:
        time_estimate: 12600
        total_time_spent: 3600
        human_time_estimate: "3h 30m"
        human_total_time_spent: "1h"
      id: 84
      state: "closed"
      confidential: true
      closed_at: "2022-11-15T08:30:55.232Z"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      due_date: "2022-11-20"
      issue_type: "issue"
      weight: "weight"
      downvotes: "downvotes"
      blocking_issues_count: "blocking_issues_count"
      labels:
      - "bug"
      - "bug"
      milestone:
        iid: "iid"
        due_date: "due_date"
        description: "description"
        created_at: "created_at"
        title: "title"
        expired: "expired"
        updated_at: "updated_at"
        web_url: "web_url"
        project_id: "project_id"
        group_id: "group_id"
        id: "id"
        state: "state"
        start_date: "start_date"
      web_url: "http://example.com/example/example/issues/14"
      user_notes_count: "user_notes_count"
      assignee:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      task_completion_status: "task_completion_status"
  API_Entities_Ci_Lint_Result:
    type: "object"
    properties:
      valid:
        type: "boolean"
      errors:
        type: "array"
        items:
          type: "string"
          example: "variables config should be a hash of key value pairs"
      warnings:
        type: "array"
        items:
          type: "string"
          example: "jobs:job may allow multiple pipelines ..."
      merged_yaml:
        type: "string"
        example: "---\\n:another_test:\\n  :stage: test\\n\n          :script: echo\
          \ 2\\n:test:\\n  :stage: test\\n  :script: echo 1\\n"
      includes:
        type: "array"
        items:
          type: "object"
          example: "{ \"blob\": \"https://gitlab.com/root/example-project/-/blob/..."
          properties: {}
      jobs:
        type: "array"
        items:
          type: "object"
          example: "{ \"name\": \"test: .... }"
          properties: {}
    description: "API_Entities_Ci_Lint_Result model"
    example:
      valid: true
      merged_yaml: "---\\n:another_test:\\n  :stage: test\\n\n          :script: echo\
        \ 2\\n:test:\\n  :stage: test\\n  :script: echo 1\\n"
      warnings:
      - "jobs:job may allow multiple pipelines ..."
      - "jobs:job may allow multiple pipelines ..."
      jobs:
      - "{ \"name\": \"test: .... }"
      - "{ \"name\": \"test: .... }"
      includes:
      - "{ \"blob\": \"https://gitlab.com/root/example-project/-/blob/..."
      - "{ \"blob\": \"https://gitlab.com/root/example-project/-/blob/..."
      errors:
      - "variables config should be a hash of key value pairs"
      - "variables config should be a hash of key value pairs"
  postApiV4ProjectsIdCiLint:
    type: "object"
    required:
    - "content"
    properties:
      content:
        type: "string"
        description: "Content of .gitlab-ci.yml"
      dry_run:
        type: "boolean"
        description: "Run pipeline creation simulation, or only do static check. This\
          \ is false by default"
        default: false
      include_jobs:
        type: "boolean"
        description: "If the list of jobs that would exist in a static check or pipeline\n\
          \        simulation should be included in the response. This is false by\
          \ default"
      ref:
        type: "string"
        description: "When dry_run is true, sets the branch or tag to use. Defaults\
          \ to the project’s default branch when not set"
    description: "Validate a CI YAML configuration with a namespace"
  putApiV4ProjectsIdPackagesMaven*pathFileNameAuthorize:
    type: "object"
    required:
    - "path"
    properties:
      path:
        type: "string"
        example: "foo/bar/mypkg/1.0-SNAPSHOT"
        description: "Package path"
    description: "Workhorse authorize the maven package file upload"
  putApiV4ProjectsIdPackagesMaven*pathFileName:
    type: "object"
    required:
    - "file"
    - "path"
    properties:
      path:
        type: "string"
        example: "foo/bar/mypkg/1.0-SNAPSHOT"
        description: "Package path"
      file:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
    description: "Upload the maven package file"
  postApiV4ProjectsIdMembers:
    type: "object"
    required:
    - "access_level"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level (defaults: `30`, developer access level)"
      user_id:
        type: "integer"
        format: "int32"
        description: "The user ID of the new member or multiple IDs separated by commas."
      username:
        type: "string"
        description: "The username of the new member or multiple usernames separated\
          \ by commas."
      expires_at:
        type: "string"
        format: "date-time"
        description: "Date string in the format YEAR-MONTH-DAY"
      invite_source:
        type: "string"
        description: "Source that triggered the member creation process"
        default: "members-api"
    description: "Adds a member to a group or project."
  putApiV4ProjectsIdMembersUserId:
    type: "object"
    required:
    - "access_level"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level"
      expires_at:
        type: "string"
        format: "date-time"
        description: "Date string in the format YEAR-MONTH-DAY"
      member_role_id:
        type: "integer"
        format: "int32"
        description: "The ID of the Member Role to be updated"
    description: "Updates a member of a group or project."
  postApiV4ProjectsIdMergeRequestsMergeRequestIidTimeEstimate:
    type: "object"
    required:
    - "duration"
    properties:
      duration:
        type: "string"
        example: "3h30m"
        description: "The duration in human format."
    description: "Set a time estimate for a merge_request"
  postApiV4ProjectsIdMergeRequestsMergeRequestIidAddSpentTime:
    type: "object"
    required:
    - "duration"
    properties:
      duration:
        type: "string"
        description: "The duration in human format."
    description: "Add spent time for a merge_request"
  postApiV4ProjectsIdMergeRequests:
    type: "object"
    required:
    - "source_branch"
    - "target_branch"
    - "title"
    properties:
      title:
        type: "string"
        description: "The title of the merge request."
      source_branch:
        type: "string"
        description: "The source branch."
      target_branch:
        type: "string"
        description: "The target branch."
      target_project_id:
        type: "integer"
        format: "int32"
        description: "The target project of the merge request defaults to the :id\
          \ of the project."
      assignee_id:
        type: "integer"
        format: "int32"
        description: "Assignee user ID."
      assignee_ids:
        type: "array"
        description: "The IDs of the users to assign the merge request to, as a comma-separated\
          \ list. Set to 0 or provide an empty value to unassign all assignees."
        items:
          type: "integer"
          format: "int32"
      reviewer_ids:
        type: "array"
        description: "The IDs of the users to review the merge request, as a comma-separated\
          \ list. Set to 0 or provide an empty value to unassign all reviewers."
        items:
          type: "integer"
          format: "int32"
      description:
        type: "string"
        description: "Description of the merge request. Limited to 1,048,576 characters."
      labels:
        type: "array"
        description: "Comma-separated label names for a merge request. Set to an empty\
          \ string to unassign all labels."
        items:
          type: "string"
      add_labels:
        type: "array"
        description: "Comma-separated label names to add to a merge request."
        items:
          type: "string"
      remove_labels:
        type: "array"
        description: "Comma-separated label names to remove from a merge request."
        items:
          type: "string"
      milestone_id:
        type: "integer"
        format: "int32"
        description: "The global ID of a milestone to assign the merge reques to."
      remove_source_branch:
        type: "boolean"
        description: "Flag indicating if a merge request should remove the source\
          \ branch when merging."
      allow_collaboration:
        type: "boolean"
        description: "Allow commits from members who can merge to the target branch."
      allow_maintainer_to_push:
        type: "boolean"
        description: "[deprecated] See allow_collaboration"
      squash:
        type: "boolean"
        description: "Squash commits into a single commit when merging."
      approvals_before_merge:
        type: "integer"
        format: "int32"
        description: "Number of approvals required before this can be merged"
    description: "Create merge request"
  API_Entities_MergeRequest:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 84
      iid:
        type: "integer"
        format: "int32"
        example: 14
      project_id:
        type: "integer"
        format: "int32"
        example: 4
      title:
        type: "string"
        example: "Impedit et ut et dolores vero provident ullam est"
      description:
        type: "string"
        example: "Repellendus impedit et vel velit dignissimos."
      state:
        type: "string"
        example: "closed"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-08-17T12:46:35.053Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2022-11-14T17:22:01.470Z"
      merged_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      merge_user:
        $ref: "#/definitions/API_Entities_UserBasic"
      merged_at:
        type: "string"
      closed_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      closed_at:
        type: "string"
      title_html:
        type: "string"
      description_html:
        type: "string"
      target_branch:
        type: "string"
      source_branch:
        type: "string"
      user_notes_count:
        type: "string"
      upvotes:
        type: "string"
      downvotes:
        type: "string"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      assignees:
        $ref: "#/definitions/API_Entities_UserBasic"
      assignee:
        $ref: "#/definitions/API_Entities_UserBasic"
      reviewers:
        $ref: "#/definitions/API_Entities_UserBasic"
      source_project_id:
        type: "string"
      target_project_id:
        type: "string"
      labels:
        type: "string"
      draft:
        type: "string"
      imported:
        type: "string"
      imported_from:
        type: "string"
        example: "bitbucket"
      work_in_progress:
        type: "string"
      milestone:
        $ref: "#/definitions/API_Entities_Milestone"
      merge_when_pipeline_succeeds:
        type: "string"
      merge_status:
        type: "string"
      detailed_merge_status:
        type: "string"
      sha:
        type: "string"
      merge_commit_sha:
        type: "string"
      squash_commit_sha:
        type: "string"
      discussion_locked:
        type: "string"
      should_remove_source_branch:
        type: "string"
      force_remove_source_branch:
        type: "string"
      prepared_at:
        type: "string"
      allow_collaboration:
        type: "string"
      allow_maintainer_to_push:
        type: "string"
      reference:
        type: "string"
      references:
        $ref: "#/definitions/API_Entities_IssuableReferences"
      web_url:
        type: "string"
      time_stats:
        $ref: "#/definitions/API_Entities_IssuableTimeStats"
      squash:
        type: "string"
      squash_on_merge:
        type: "string"
      task_completion_status:
        type: "string"
      has_conflicts:
        type: "string"
      blocking_discussions_resolved:
        type: "string"
      approvals_before_merge:
        type: "string"
      subscribed:
        type: "string"
      changes_count:
        type: "string"
      latest_build_started_at:
        type: "string"
      latest_build_finished_at:
        type: "string"
      first_deployed_to_production_at:
        type: "string"
      pipeline:
        $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
      head_pipeline:
        $ref: "#/definitions/API_Entities_Ci_Pipeline"
      diff_refs:
        $ref: "#/definitions/API_Entities_DiffRefs"
      merge_error:
        type: "string"
      rebase_in_progress:
        type: "string"
      diverged_commits_count:
        type: "string"
      first_contribution:
        type: "string"
      user:
        $ref: "#/definitions/API_Entities_MergeRequest_user"
    description: "API_Entities_MergeRequest model"
    example:
      discussion_locked: "discussion_locked"
      upvotes: "upvotes"
      merge_when_pipeline_succeeds: "merge_when_pipeline_succeeds"
      references:
        short: "&6"
        relative: "&6"
        full: "test&6"
      merge_user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      rebase_in_progress: "rebase_in_progress"
      assignees:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      allow_maintainer_to_push: "allow_maintainer_to_push"
      changes_count: "changes_count"
      reference: "reference"
      subscribed: "subscribed"
      squash: "squash"
      project_id: 4
      draft: "draft"
      time_stats:
        time_estimate: 12600
        total_time_spent: 3600
        human_time_estimate: "3h 30m"
        human_total_time_spent: "1h"
      id: 84
      state: "closed"
      closed_at: "closed_at"
      work_in_progress: "work_in_progress"
      squash_on_merge: "squash_on_merge"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      merged_at: "merged_at"
      imported_from: "bitbucket"
      target_branch: "target_branch"
      downvotes: "downvotes"
      should_remove_source_branch: "should_remove_source_branch"
      sha: "sha"
      first_deployed_to_production_at: "first_deployed_to_production_at"
      labels: "labels"
      user_notes_count: "user_notes_count"
      squash_commit_sha: "squash_commit_sha"
      description_html: "description_html"
      assignee:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      prepared_at: "prepared_at"
      task_completion_status: "task_completion_status"
      approvals_before_merge: "approvals_before_merge"
      target_project_id: "target_project_id"
      force_remove_source_branch: "force_remove_source_branch"
      head_pipeline:
        coverage: 98.29
        before_sha: "a91957a858320c0e17f3a0eca7cfacbff50ea29a"
        detailed_status:
          favicon: "/assets/ci_favicons/favicon_status_success.png"
          icon: "status_success"
          tooltip: "passed"
          action:
            path: "/namespace1/project1/-/jobs/2/cancel"
            method: "post"
            confirmation_message: "Are you sure?"
            icon: "cancel"
            button_title: "Cancel this job"
            title: "Cancel"
          illustration: "{\n  \"image\": \"illustrations/empty-state/empty-job-not-triggered-md.svg\"\
            ,\n  \"size\": \"\",\n  \"title\": \"This job has not been triggered yet\"\
            ,\n  \"content\": \"This job depends on upstream jobs that need to succeed\
            \ in order for this job to be triggered\"\n}\n"
          text: "passed"
          label: "passed"
          group: "success"
          has_details: true
          details_path: "/test-group/test-project/-/pipelines/287"
        finished_at: "2015-12-24T17:54:31.198Z"
        iid: 2
        created_at: "2015-12-24T15:51:21.880Z"
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        queued_duration: 63
        yaml_errors: "widgets:build: needs 'widgets:test'"
        duration: 127
        ref: "feature-branch"
        updated_at: "2015-12-24T17:54:31.198Z"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        project_id: 3
        committed_at: "2015-12-24T15:51:21.880Z"
        started_at: "2015-12-24T17:54:30.733Z"
        id: 1
        tag: false
        user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        status: "success"
      has_conflicts: "has_conflicts"
      detailed_merge_status: "detailed_merge_status"
      iid: 14
      description: "Repellendus impedit et vel velit dignissimos."
      created_at: "2022-08-17T12:46:35.053Z"
      merged_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      first_contribution: "first_contribution"
      title: "Impedit et ut et dolores vero provident ullam est"
      allow_collaboration: "allow_collaboration"
      latest_build_started_at: "latest_build_started_at"
      closed_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      source_branch: "source_branch"
      updated_at: "2022-11-14T17:22:01.470Z"
      imported: "imported"
      merge_commit_sha: "merge_commit_sha"
      blocking_discussions_resolved: "blocking_discussions_resolved"
      merge_error: "merge_error"
      diff_refs:
        start_sha: "start_sha"
        base_sha: "base_sha"
        head_sha: "head_sha"
      source_project_id: "source_project_id"
      reviewers:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        status: "success"
      milestone:
        iid: "iid"
        due_date: "due_date"
        description: "description"
        created_at: "created_at"
        title: "title"
        expired: "expired"
        updated_at: "updated_at"
        web_url: "web_url"
        project_id: "project_id"
        group_id: "group_id"
        id: "id"
        state: "state"
        start_date: "start_date"
      web_url: "web_url"
      title_html: "title_html"
      merge_status: "merge_status"
      latest_build_finished_at: "latest_build_finished_at"
      user:
        can_merge: "can_merge"
      diverged_commits_count: "diverged_commits_count"
  API_Entities_DiffRefs:
    type: "object"
    properties:
      base_sha:
        type: "string"
      head_sha:
        type: "string"
      start_sha:
        type: "string"
    example:
      start_sha: "start_sha"
      base_sha: "base_sha"
      head_sha: "head_sha"
  API_Entities_MergeRequestReviewer:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
      state:
        type: "string"
      created_at:
        type: "string"
    description: "API_Entities_MergeRequestReviewer model"
    example:
      created_at: "created_at"
      state: "state"
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
  postApiV4ProjectsIdMergeRequestsMergeRequestIidContextCommits:
    type: "object"
    required:
    - "commits"
    properties:
      commits:
        type: "array"
        description: "The context commits’ SHA."
        items:
          type: "string"
    description: "Create merge request context commits"
  API_Entities_MergeRequestChanges:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 84
      iid:
        type: "integer"
        format: "int32"
        example: 14
      project_id:
        type: "integer"
        format: "int32"
        example: 4
      title:
        type: "string"
        example: "Impedit et ut et dolores vero provident ullam est"
      description:
        type: "string"
        example: "Repellendus impedit et vel velit dignissimos."
      state:
        type: "string"
        example: "closed"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-08-17T12:46:35.053Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2022-11-14T17:22:01.470Z"
      merged_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      merge_user:
        $ref: "#/definitions/API_Entities_UserBasic"
      merged_at:
        type: "string"
      closed_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      closed_at:
        type: "string"
      title_html:
        type: "string"
      description_html:
        type: "string"
      target_branch:
        type: "string"
      source_branch:
        type: "string"
      user_notes_count:
        type: "string"
      upvotes:
        type: "string"
      downvotes:
        type: "string"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      assignees:
        $ref: "#/definitions/API_Entities_UserBasic"
      assignee:
        $ref: "#/definitions/API_Entities_UserBasic"
      reviewers:
        $ref: "#/definitions/API_Entities_UserBasic"
      source_project_id:
        type: "string"
      target_project_id:
        type: "string"
      labels:
        type: "string"
      draft:
        type: "string"
      imported:
        type: "string"
      imported_from:
        type: "string"
        example: "bitbucket"
      work_in_progress:
        type: "string"
      milestone:
        $ref: "#/definitions/API_Entities_Milestone"
      merge_when_pipeline_succeeds:
        type: "string"
      merge_status:
        type: "string"
      detailed_merge_status:
        type: "string"
      sha:
        type: "string"
      merge_commit_sha:
        type: "string"
      squash_commit_sha:
        type: "string"
      discussion_locked:
        type: "string"
      should_remove_source_branch:
        type: "string"
      force_remove_source_branch:
        type: "string"
      prepared_at:
        type: "string"
      allow_collaboration:
        type: "string"
      allow_maintainer_to_push:
        type: "string"
      reference:
        type: "string"
      references:
        $ref: "#/definitions/API_Entities_IssuableReferences"
      web_url:
        type: "string"
      time_stats:
        $ref: "#/definitions/API_Entities_IssuableTimeStats"
      squash:
        type: "string"
      squash_on_merge:
        type: "string"
      task_completion_status:
        type: "string"
      has_conflicts:
        type: "string"
      blocking_discussions_resolved:
        type: "string"
      approvals_before_merge:
        type: "string"
      subscribed:
        type: "string"
      changes_count:
        type: "string"
      latest_build_started_at:
        type: "string"
      latest_build_finished_at:
        type: "string"
      first_deployed_to_production_at:
        type: "string"
      pipeline:
        $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
      head_pipeline:
        $ref: "#/definitions/API_Entities_Ci_Pipeline"
      diff_refs:
        $ref: "#/definitions/API_Entities_DiffRefs"
      merge_error:
        type: "string"
      rebase_in_progress:
        type: "string"
      diverged_commits_count:
        type: "string"
      first_contribution:
        type: "string"
      user:
        $ref: "#/definitions/API_Entities_MergeRequest_user"
      changes:
        $ref: "#/definitions/API_Entities_Diff"
      overflow:
        type: "string"
    description: "API_Entities_MergeRequestChanges model"
    example:
      discussion_locked: "discussion_locked"
      upvotes: "upvotes"
      merge_when_pipeline_succeeds: "merge_when_pipeline_succeeds"
      references:
        short: "&6"
        relative: "&6"
        full: "test&6"
      merge_user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      rebase_in_progress: "rebase_in_progress"
      assignees:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      allow_maintainer_to_push: "allow_maintainer_to_push"
      changes_count: "changes_count"
      reference: "reference"
      subscribed: "subscribed"
      squash: "squash"
      overflow: "overflow"
      project_id: 4
      draft: "draft"
      time_stats:
        time_estimate: 12600
        total_time_spent: 3600
        human_time_estimate: "3h 30m"
        human_total_time_spent: "1h"
      id: 84
      state: "closed"
      closed_at: "closed_at"
      work_in_progress: "work_in_progress"
      squash_on_merge: "squash_on_merge"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      merged_at: "merged_at"
      imported_from: "bitbucket"
      target_branch: "target_branch"
      downvotes: "downvotes"
      should_remove_source_branch: "should_remove_source_branch"
      sha: "sha"
      first_deployed_to_production_at: "first_deployed_to_production_at"
      labels: "labels"
      user_notes_count: "user_notes_count"
      squash_commit_sha: "squash_commit_sha"
      description_html: "description_html"
      assignee:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      prepared_at: "prepared_at"
      task_completion_status: "task_completion_status"
      approvals_before_merge: "approvals_before_merge"
      target_project_id: "target_project_id"
      force_remove_source_branch: "force_remove_source_branch"
      head_pipeline:
        coverage: 98.29
        before_sha: "a91957a858320c0e17f3a0eca7cfacbff50ea29a"
        detailed_status:
          favicon: "/assets/ci_favicons/favicon_status_success.png"
          icon: "status_success"
          tooltip: "passed"
          action:
            path: "/namespace1/project1/-/jobs/2/cancel"
            method: "post"
            confirmation_message: "Are you sure?"
            icon: "cancel"
            button_title: "Cancel this job"
            title: "Cancel"
          illustration: "{\n  \"image\": \"illustrations/empty-state/empty-job-not-triggered-md.svg\"\
            ,\n  \"size\": \"\",\n  \"title\": \"This job has not been triggered yet\"\
            ,\n  \"content\": \"This job depends on upstream jobs that need to succeed\
            \ in order for this job to be triggered\"\n}\n"
          text: "passed"
          label: "passed"
          group: "success"
          has_details: true
          details_path: "/test-group/test-project/-/pipelines/287"
        finished_at: "2015-12-24T17:54:31.198Z"
        iid: 2
        created_at: "2015-12-24T15:51:21.880Z"
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        queued_duration: 63
        yaml_errors: "widgets:build: needs 'widgets:test'"
        duration: 127
        ref: "feature-branch"
        updated_at: "2015-12-24T17:54:31.198Z"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        project_id: 3
        committed_at: "2015-12-24T15:51:21.880Z"
        started_at: "2015-12-24T17:54:30.733Z"
        id: 1
        tag: false
        user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        status: "success"
      has_conflicts: "has_conflicts"
      detailed_merge_status: "detailed_merge_status"
      iid: 14
      changes:
        generated_file: true
        new_path: "doc/update/5.4-to-6.0.md"
        renamed_file: true
        a_mode: "100755"
        deleted_file: true
        b_mode: "100644"
        new_file: true
        diff: "@@ -71,6 +71,8 @@\\n..."
        old_path: "doc/update/5.4-to-6.0.md"
      description: "Repellendus impedit et vel velit dignissimos."
      created_at: "2022-08-17T12:46:35.053Z"
      merged_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      first_contribution: "first_contribution"
      title: "Impedit et ut et dolores vero provident ullam est"
      allow_collaboration: "allow_collaboration"
      latest_build_started_at: "latest_build_started_at"
      closed_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      source_branch: "source_branch"
      updated_at: "2022-11-14T17:22:01.470Z"
      imported: "imported"
      merge_commit_sha: "merge_commit_sha"
      blocking_discussions_resolved: "blocking_discussions_resolved"
      merge_error: "merge_error"
      diff_refs:
        start_sha: "start_sha"
        base_sha: "base_sha"
        head_sha: "head_sha"
      source_project_id: "source_project_id"
      reviewers:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        status: "success"
      milestone:
        iid: "iid"
        due_date: "due_date"
        description: "description"
        created_at: "created_at"
        title: "title"
        expired: "expired"
        updated_at: "updated_at"
        web_url: "web_url"
        project_id: "project_id"
        group_id: "group_id"
        id: "id"
        state: "state"
        start_date: "start_date"
      web_url: "web_url"
      title_html: "title_html"
      merge_status: "merge_status"
      latest_build_finished_at: "latest_build_finished_at"
      user:
        can_merge: "can_merge"
      diverged_commits_count: "diverged_commits_count"
  putApiV4ProjectsIdMergeRequestsMergeRequestIid:
    type: "object"
    properties:
      title:
        type: "string"
        description: "The title of the merge request."
      target_branch:
        type: "string"
        description: "The target branch."
      state_event:
        type: "string"
        description: "New state (close/reopen)."
        enum:
        - "close"
        - "reopen"
      discussion_locked:
        type: "boolean"
        description: "Flag indicating if the merge request’s discussion is locked.\
          \ If the discussion is locked only project members can add, edit or resolve\
          \ comments."
      assignee_id:
        type: "integer"
        format: "int32"
        description: "Assignee user ID."
      assignee_ids:
        type: "array"
        description: "The IDs of the users to assign the merge request to, as a comma-separated\
          \ list. Set to 0 or provide an empty value to unassign all assignees."
        items:
          type: "integer"
          format: "int32"
      reviewer_ids:
        type: "array"
        description: "The IDs of the users to review the merge request, as a comma-separated\
          \ list. Set to 0 or provide an empty value to unassign all reviewers."
        items:
          type: "integer"
          format: "int32"
      description:
        type: "string"
        description: "Description of the merge request. Limited to 1,048,576 characters."
      labels:
        type: "array"
        description: "Comma-separated label names for a merge request. Set to an empty\
          \ string to unassign all labels."
        items:
          type: "string"
      add_labels:
        type: "array"
        description: "Comma-separated label names to add to a merge request."
        items:
          type: "string"
      remove_labels:
        type: "array"
        description: "Comma-separated label names to remove from a merge request."
        items:
          type: "string"
      milestone_id:
        type: "integer"
        format: "int32"
        description: "The global ID of a milestone to assign the merge reques to."
      remove_source_branch:
        type: "boolean"
        description: "Flag indicating if a merge request should remove the source\
          \ branch when merging."
      allow_collaboration:
        type: "boolean"
        description: "Allow commits from members who can merge to the target branch."
      allow_maintainer_to_push:
        type: "boolean"
        description: "[deprecated] See allow_collaboration"
      squash:
        type: "boolean"
        description: "Squash commits into a single commit when merging."
      approvals_before_merge:
        type: "integer"
        format: "int32"
        description: "Number of approvals required before this can be merged"
    description: "Update merge request"
  putApiV4ProjectsIdMergeRequestsMergeRequestIidMerge:
    type: "object"
    properties:
      merge_commit_message:
        type: "string"
        description: "Custom merge commit message."
      squash_commit_message:
        type: "string"
        description: "Custom squash commit message."
      should_remove_source_branch:
        type: "boolean"
        description: "If `true`, removes the source branch."
      merge_when_pipeline_succeeds:
        type: "boolean"
        description: "If `true`, the merge request is merged when the pipeline succeeds."
      sha:
        type: "string"
        description: "If present, then this SHA must match the HEAD of the source\
          \ branch, otherwise the merge fails."
      squash:
        type: "boolean"
        description: "If `true`, the commits are squashed into a single commit on\
          \ merge."
      skip_merge_train:
        type: "boolean"
        description: "If `true` skips train restart when merging immediately in a\
          \ merge train configured project."
    description: "Merge a merge request"
  putApiV4ProjectsIdMergeRequestsMergeRequestIidRebase:
    type: "object"
    properties:
      skip_ci:
        type: "boolean"
        description: "Set to true to skip creating a CI pipeline."
    description: "Rebase a merge request"
  API_Entities_MRNote:
    type: "object"
    properties:
      note:
        type: "string"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
    description: "API_Entities_MRNote model"
    example:
      note: "note"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
  API_Entities_MergeRequestDiff:
    type: "object"
    properties:
      id:
        type: "string"
      head_commit_sha:
        type: "string"
      base_commit_sha:
        type: "string"
      start_commit_sha:
        type: "string"
      created_at:
        type: "string"
      merge_request_id:
        type: "string"
      state:
        type: "string"
      real_size:
        type: "string"
      patch_id_sha:
        type: "string"
    description: "API_Entities_MergeRequestDiff model"
    example:
      merge_request_id: "merge_request_id"
      head_commit_sha: "head_commit_sha"
      start_commit_sha: "start_commit_sha"
      created_at: "created_at"
      real_size: "real_size"
      id: "id"
      state: "state"
      patch_id_sha: "patch_id_sha"
      base_commit_sha: "base_commit_sha"
  API_Entities_MergeRequestDiffFull:
    type: "object"
    properties:
      id:
        type: "string"
      head_commit_sha:
        type: "string"
      base_commit_sha:
        type: "string"
      start_commit_sha:
        type: "string"
      created_at:
        type: "string"
      merge_request_id:
        type: "string"
      state:
        type: "string"
      real_size:
        type: "string"
      patch_id_sha:
        type: "string"
      commits:
        $ref: "#/definitions/API_Entities_Commit"
      diffs:
        $ref: "#/definitions/API_Entities_Diff"
    description: "API_Entities_MergeRequestDiffFull model"
    example:
      merge_request_id: "merge_request_id"
      head_commit_sha: "head_commit_sha"
      start_commit_sha: "start_commit_sha"
      created_at: "created_at"
      commits:
        author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      real_size: "real_size"
      id: "id"
      state: "state"
      patch_id_sha: "patch_id_sha"
      diffs:
        generated_file: true
        new_path: "doc/update/5.4-to-6.0.md"
        renamed_file: true
        a_mode: "100755"
        deleted_file: true
        b_mode: "100644"
        new_file: true
        diff: "@@ -71,6 +71,8 @@\\n..."
        old_path: "doc/update/5.4-to-6.0.md"
      base_commit_sha: "base_commit_sha"
  API_Entities_PackageFile:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 225
      package_id:
        type: "integer"
        format: "int32"
        example: 4
      created_at:
        type: "string"
        format: "date-time"
        example: "2018-11-07T15:25:52.199Z"
      file_name:
        type: "string"
        example: "my-app-1.5-20181107.152550-1.jar"
      size:
        type: "integer"
        format: "int32"
        example: 2421
      file_md5:
        type: "string"
        example: "58e6a45a629910c6ff99145a688971ac"
      file_sha1:
        type: "string"
        example: "ebd193463d3915d7e22219f52740056dfd26cbfe"
      file_sha256:
        type: "string"
        example: "a903393463d3915d7e22219f52740056dfd26cbfeff321b"
      pipelines:
        $ref: "#/definitions/API_Entities_Package_Pipeline"
    description: "API_Entities_PackageFile model"
    example:
      file_sha1: "ebd193463d3915d7e22219f52740056dfd26cbfe"
      pipelines:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        status: "success"
      size: 2421
      file_name: "my-app-1.5-20181107.152550-1.jar"
      file_md5: "58e6a45a629910c6ff99145a688971ac"
      created_at: "2018-11-07T15:25:52.199Z"
      id: 225
      package_id: 4
      file_sha256: "a903393463d3915d7e22219f52740056dfd26cbfeff321b"
  patchApiV4ProjectsIdPages:
    type: "object"
    properties:
      pages_unique_domain_enabled:
        type: "boolean"
        description: "Whether to use unique domain"
      pages_https_only:
        type: "boolean"
        description: "Whether to force HTTPS"
    description: "Update pages settings"
  API_Entities_PagesDomain:
    type: "object"
    properties:
      domain:
        type: "string"
      url:
        type: "string"
      verified:
        type: "string"
      verification_code:
        type: "string"
      enabled_until:
        type: "string"
      auto_ssl_enabled:
        type: "string"
      certificate:
        $ref: "#/definitions/API_Entities_PagesDomainCertificate"
    description: "API_Entities_PagesDomain model"
    example:
      enabled_until: "enabled_until"
      domain: "domain"
      verified: "verified"
      certificate:
        expired: "expired"
        subject: "subject"
        certificate: "certificate"
        certificate_text: "certificate_text"
      verification_code: "verification_code"
      url: "url"
      auto_ssl_enabled: "auto_ssl_enabled"
  API_Entities_PagesDomainCertificate:
    type: "object"
    properties:
      subject:
        type: "string"
      expired:
        type: "string"
      certificate:
        type: "string"
      certificate_text:
        type: "string"
    example:
      expired: "expired"
      subject: "subject"
      certificate: "certificate"
      certificate_text: "certificate_text"
  postApiV4ProjectsIdPagesDomains:
    type: "object"
    required:
    - "domain"
    properties:
      domain:
        type: "string"
        description: "The domain"
      certificate:
        type: "file"
        description: "The certificate"
      key:
        type: "file"
        description: "The key"
      auto_ssl_enabled:
        type: "boolean"
        description: "Enables automatic generation of SSL certificates issued by Let's\
          \ Encrypt for custom domains."
        default: false
      user_provided_certificate:
        type: "string"
      user_provided_key:
        type: "string"
    description: "Create a new pages domain"
  putApiV4ProjectsIdPagesDomainsDomain:
    type: "object"
    properties:
      certificate:
        type: "file"
        description: "The certificate"
      key:
        type: "file"
        description: "The key"
      auto_ssl_enabled:
        type: "boolean"
        description: "Enables automatic generation of SSL certificates issued by Let's\
          \ Encrypt for custom domains."
    description: "Updates a pages domain"
  API_Entities_ClusterProject:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      created_at:
        type: "string"
      domain:
        type: "string"
      enabled:
        type: "string"
      managed:
        type: "string"
      provider_type:
        type: "string"
      platform_type:
        type: "string"
      environment_scope:
        type: "string"
      cluster_type:
        type: "string"
      namespace_per_environment:
        type: "string"
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
      platform_kubernetes:
        $ref: "#/definitions/API_Entities_Platform_Kubernetes"
      provider_gcp:
        $ref: "#/definitions/API_Entities_Provider_Gcp"
      management_project:
        $ref: "#/definitions/API_Entities_ProjectIdentity"
      project:
        $ref: "#/definitions/API_Entities_BasicProjectDetails"
    description: "API_Entities_ClusterProject model"
    example:
      provider_type: "provider_type"
      environment_scope: "environment_scope"
      created_at: "created_at"
      project:
        ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
        repository_storage: "default"
        path_with_namespace: "namespace1/project1"
        topics:
        - "topic"
        - "topic"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
        readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
        custom_attributes:
          value: "bar"
          key: "foo"
        path: "project1"
        license:
          html_url: "http://choosealicense.com/licenses/gpl-3.0"
          name: "GNU General Public License v3.0"
          nickname: "GNU GPLv3"
          key: "gpl-3.0"
          source_url: "source_url"
        web_url: "https://gitlab.example.com/gitlab/gitlab"
        avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
        tag_list:
        - "tag"
        - "tag"
        last_activity_at: "2013-09-30T13:46:02Z"
        name: "project1"
        namespace:
          path: "my_project"
          avatar_url: "https://example.com/avatar/12345"
          web_url: "https://example.com/group/my_project"
          kind: "project"
          parent_id: 1
          name: "project"
          id: 2
          full_path: "group/my_project"
        default_branch: "main"
        id: 1
        name_with_namespace: "John Doe / project1"
        license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
        star_count: 1
        forks_count: 1
      cluster_type: "cluster_type"
      provider_gcp:
        machine_type: "machine_type"
        cluster_id: "cluster_id"
        endpoint: "endpoint"
        zone: "zone"
        status_name: "status_name"
        gcp_project_id: "gcp_project_id"
        num_nodes: "num_nodes"
      enabled: "enabled"
      namespace_per_environment: "namespace_per_environment"
      platform_type: "platform_type"
      managed: "managed"
      domain: "domain"
      platform_kubernetes:
        api_url: "api_url"
        namespace: "namespace"
        authorization_type: "authorization_type"
        ca_cert: "ca_cert"
      name: "name"
      management_project:
        path: "project1"
        path_with_namespace: "namespace1/project1"
        name: "project1"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        id: 1
        name_with_namespace: "John Doe / project1"
      id: "id"
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
  postApiV4ProjectsIdClustersUser:
    type: "object"
    required:
    - "name"
    - "platform_kubernetes_attributes"
    properties:
      name:
        type: "string"
        description: "Cluster name"
      enabled:
        type: "boolean"
        description: "Determines if cluster is active or not, defaults to true"
        default: true
      domain:
        type: "string"
        description: "Cluster base domain"
      environment_scope:
        type: "string"
        description: "The associated environment to the cluster"
        default: "*"
      namespace_per_environment:
        type: "boolean"
        description: "Deploy each environment to a separate Kubernetes namespace"
        default: true
      management_project_id:
        type: "integer"
        format: "int32"
        description: "The ID of the management project"
      managed:
        type: "boolean"
        description: "Determines if GitLab will manage namespaces and service accounts\
          \ for this cluster, defaults to true"
        default: true
      platform_kubernetes_attributes:
        $ref: "#/definitions/postApiV4ProjectsIdClustersUser_platform_kubernetes_attributes"
    description: "Add existing cluster to project"
  putApiV4ProjectsIdClustersClusterId:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Cluster name"
      domain:
        type: "string"
        description: "Cluster base domain"
      environment_scope:
        type: "string"
        description: "The associated environment to the cluster"
      namespace_per_environment:
        type: "boolean"
        description: "Deploy each environment to a separate Kubernetes namespace"
        default: true
      management_project_id:
        type: "integer"
        format: "int32"
        description: "The ID of the management project"
      enabled:
        type: "boolean"
        description: "Determines if cluster is active or not"
      managed:
        type: "boolean"
        description: "Determines if GitLab will manage namespaces and service accounts\
          \ for this cluster"
      platform_kubernetes_attributes:
        $ref: "#/definitions/putApiV4ProjectsIdClustersClusterId_platform_kubernetes_attributes"
    description: "Edit project cluster"
  API_Entities_ContainerRegistry_TagDetails:
    type: "object"
    properties:
      name:
        type: "string"
        example: "latest"
      path:
        type: "string"
        example: "namespace1/project1/test_image_1:latest"
      location:
        type: "string"
        example: "registry.dev/namespace1/project1/test_image_1:latest"
      revision:
        type: "string"
        example: "tagrevision"
      short_revision:
        type: "string"
        example: "shortrevison"
      digest:
        type: "string"
        example: "shadigest"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-01-10T13:39:08.229Z"
      total_size:
        type: "integer"
        format: "int32"
        example: 3
    description: "API_Entities_ContainerRegistry_TagDetails model"
    example:
      path: "namespace1/project1/test_image_1:latest"
      short_revision: "shortrevison"
      name: "latest"
      digest: "shadigest"
      total_size: 3
      created_at: "2022-01-10T13:39:08.229Z"
      location: "registry.dev/namespace1/project1/test_image_1:latest"
      revision: "tagrevision"
  API_Entities_Event:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      project_id:
        type: "integer"
        format: "int32"
        example: 2
      action_name:
        type: "string"
        example: "closed"
      target_id:
        type: "integer"
        format: "int32"
        example: 160
      target_iid:
        type: "integer"
        format: "int32"
        example: 157
      target_type:
        type: "string"
        example: "Issue"
      author_id:
        type: "integer"
        format: "int32"
        example: 25
      target_title:
        type: "string"
        example: "Public project search field"
      created_at:
        type: "string"
        example: "2017-02-09T10:43:19.667Z"
      note:
        $ref: "#/definitions/API_Entities_Note"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      wiki_page:
        $ref: "#/definitions/API_Entities_WikiPageBasic"
      imported:
        type: "boolean"
        example: false
      imported_from:
        type: "string"
        example: "none"
      push_data:
        $ref: "#/definitions/API_Entities_PushEventPayload"
      author_username:
        type: "string"
        example: "root"
    description: "API_Entities_Event model"
    example:
      note:
        noteable_id: "noteable_id"
        internal: "internal"
        author:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        imported_from: "github"
        created_at: "created_at"
        type: "type"
        body: "body"
        commands_changes: "commands_changes"
        noteable_iid: "noteable_iid"
        resolved_by:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        system: "system"
        attachment: "attachment"
        updated_at: "updated_at"
        project_id: "project_id"
        resolvable: "resolvable"
        noteable_type: "noteable_type"
        resolved_at: "resolved_at"
        imported: "imported"
        id: "id"
        position: "position"
        commit_id: "commit_id"
        resolved: "resolved"
        confidential: "confidential"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      push_data:
        commit_count: 1
        ref: "master"
        commit_title: "Add simple search to projects in public area"
        commit_from: "50d4420237a9de7be1304607147aec22e4a14af7"
        action: "pushed"
        ref_type: "branch"
        ref_count: 1
        commit_to: "c5feabde2d8cd023215af4d2ceeb7a64839fc428"
      target_type: "Issue"
      imported_from: "none"
      created_at: "2017-02-09T10:43:19.667Z"
      target_id: 160
      target_iid: 157
      project_id: 2
      action_name: "closed"
      target_title: "Public project search field"
      imported: false
      id: 1
      author_id: 25
      author_username: "root"
      wiki_page:
        format: "markdown"
        title: "deploy"
        slug: "deploy"
  API_Entities_Note:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
      body:
        type: "string"
      attachment:
        type: "string"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      system:
        type: "string"
      noteable_id:
        type: "string"
      noteable_type:
        type: "string"
      project_id:
        type: "string"
      commit_id:
        type: "string"
      position:
        type: "string"
      resolvable:
        type: "string"
      resolved:
        type: "string"
      resolved_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      resolved_at:
        type: "string"
      confidential:
        type: "string"
      internal:
        type: "string"
      imported:
        type: "string"
      imported_from:
        type: "string"
        example: "github"
      noteable_iid:
        type: "string"
      commands_changes:
        type: "string"
    example:
      noteable_id: "noteable_id"
      internal: "internal"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      imported_from: "github"
      created_at: "created_at"
      type: "type"
      body: "body"
      commands_changes: "commands_changes"
      noteable_iid: "noteable_iid"
      resolved_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      system: "system"
      attachment: "attachment"
      updated_at: "updated_at"
      project_id: "project_id"
      resolvable: "resolvable"
      noteable_type: "noteable_type"
      resolved_at: "resolved_at"
      imported: "imported"
      id: "id"
      position: "position"
      commit_id: "commit_id"
      resolved: "resolved"
      confidential: "confidential"
  API_Entities_PushEventPayload:
    type: "object"
    properties:
      commit_count:
        type: "integer"
        format: "int32"
        example: 1
      action:
        type: "string"
        example: "pushed"
      ref_type:
        type: "string"
        example: "branch"
      commit_from:
        type: "string"
        example: "50d4420237a9de7be1304607147aec22e4a14af7"
      commit_to:
        type: "string"
        example: "c5feabde2d8cd023215af4d2ceeb7a64839fc428"
      ref:
        type: "string"
        example: "master"
      commit_title:
        type: "string"
        example: "Add simple search to projects in public area"
      ref_count:
        type: "integer"
        format: "int32"
        example: 1
    example:
      commit_count: 1
      ref: "master"
      commit_title: "Add simple search to projects in public area"
      commit_from: "50d4420237a9de7be1304607147aec22e4a14af7"
      action: "pushed"
      ref_type: "branch"
      ref_count: 1
      commit_to: "c5feabde2d8cd023215af4d2ceeb7a64839fc428"
  API_Entities_ProjectExportStatus:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      description:
        type: "string"
        example: "desc"
      name:
        type: "string"
        example: "project1"
      name_with_namespace:
        type: "string"
        example: "John Doe / project1"
      path:
        type: "string"
        example: "project1"
      path_with_namespace:
        type: "string"
        example: "namespace1/project1"
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-05-07T04:27:17.016Z"
      export_status:
        type: "string"
        example: "finished"
        enum:
        - "queued"
        - "started"
        - "finished"
        - "failed"
      _links:
        $ref: "#/definitions/API_Entities_ProjectExportStatus__links"
    description: "API_Entities_ProjectExportStatus model"
    example:
      path: "project1"
      export_status: "finished"
      _links:
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-test/download_export"
        api_url: "https://gitlab.example.com/api/v4/projects/1/export/download"
      path_with_namespace: "namespace1/project1"
      name: "project1"
      description: "desc"
      created_at: "2020-05-07T04:27:17.016Z"
      id: 1
      name_with_namespace: "John Doe / project1"
  postApiV4ProjectsIdExport:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Override the project description"
      upload:
        $ref: "#/definitions/postApiV4ProjectsIdExport_upload"
    description: "Start export"
  postApiV4ProjectsIdExportRelations:
    type: "object"
    properties:
      batched:
        type: "boolean"
        description: "Whether to export in batches"
    description: "Start relations export"
  API_Entities_ProjectHook:
    type: "object"
    properties:
      id:
        type: "string"
        example: "1"
      url:
        type: "string"
        example: "https://webhook.site"
      name:
        type: "string"
        example: "Hook name"
      description:
        type: "string"
        example: "Hook description"
      created_at:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      push_events:
        type: "boolean"
      tag_push_events:
        type: "boolean"
      merge_requests_events:
        type: "boolean"
      repository_update_events:
        type: "boolean"
      enable_ssl_verification:
        type: "boolean"
      disabled_until:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      url_variables:
        type: "array"
        items:
          type: "object"
          example:
            token: "secr3t"
          properties: {}
      custom_webhook_template:
        type: "string"
        example: "{\"event\":\"{{object_kind}}\"}"
      project_id:
        type: "string"
        example: "1"
      issues_events:
        type: "boolean"
      confidential_issues_events:
        type: "boolean"
      note_events:
        type: "boolean"
      confidential_note_events:
        type: "boolean"
      pipeline_events:
        type: "boolean"
      wiki_page_events:
        type: "boolean"
      deployment_events:
        type: "boolean"
      job_events:
        type: "boolean"
      releases_events:
        type: "boolean"
      push_events_branch_filter:
        type: "string"
        example: "my-branch-*"
      emoji_events:
        type: "boolean"
      resource_access_token_events:
        type: "boolean"
    description: "API_Entities_ProjectHook model"
    example:
      resource_access_token_events: true
      disabled_until: "2012-05-28T04:42:42-07:00"
      emoji_events: true
      issues_events: true
      description: "Hook description"
      created_at: "2012-05-28T04:42:42-07:00"
      push_events: true
      tag_push_events: true
      push_events_branch_filter: "my-branch-*"
      project_id: "1"
      wiki_page_events: true
      id: "1"
      job_events: true
      enable_ssl_verification: true
      repository_update_events: true
      pipeline_events: true
      url_variables:
      - token: "secr3t"
      - token: "secr3t"
      merge_requests_events: true
      note_events: true
      deployment_events: true
      url: "https://webhook.site"
      confidential_note_events: true
      custom_webhook_template: "{\"event\":\"{{object_kind}}\"}"
      confidential_issues_events: true
      name: "Hook name"
      releases_events: true
  postApiV4ProjectsIdHooks:
    type: "object"
    required:
    - "url"
    properties:
      url:
        type: "string"
        example: "http://example.com/hook"
        description: "The URL to send the request to"
      name:
        type: "string"
        description: "Name of the hook"
      description:
        type: "string"
        description: "Description of the hook"
      push_events:
        type: "boolean"
        description: "Trigger hook on push events"
      issues_events:
        type: "boolean"
        description: "Trigger hook on issues events"
      confidential_issues_events:
        type: "boolean"
        description: "Trigger hook on confidential issues events"
      merge_requests_events:
        type: "boolean"
        description: "Trigger hook on merge request events"
      tag_push_events:
        type: "boolean"
        description: "Trigger hook on tag push events"
      note_events:
        type: "boolean"
        description: "Trigger hook on note (comment) events"
      confidential_note_events:
        type: "boolean"
        description: "Trigger hook on confidential note (comment) events"
      job_events:
        type: "boolean"
        description: "Trigger hook on job events"
      pipeline_events:
        type: "boolean"
        description: "Trigger hook on pipeline events"
      wiki_page_events:
        type: "boolean"
        description: "Trigger hook on wiki events"
      deployment_events:
        type: "boolean"
        description: "Trigger hook on deployment events"
      releases_events:
        type: "boolean"
        description: "Trigger hook on release events"
      emoji_events:
        type: "boolean"
        description: "Trigger hook on emoji events"
      resource_access_token_events:
        type: "boolean"
        description: "Trigger hook on project access token expiry events"
      enable_ssl_verification:
        type: "boolean"
        description: "Do SSL verification when triggering the hook"
      token:
        type: "string"
        description: "Secret token to validate received payloads; this will not be\
          \ returned in the response"
      push_events_branch_filter:
        type: "string"
        description: "Trigger hook on specified branch only"
      custom_webhook_template:
        type: "string"
        description: "Custom template for the request payload"
      url_variables:
        type: "array"
        description: "URL variables for interpolation"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdHooks_url_variables"
    description: "Add project hook"
  putApiV4ProjectsIdHooksHookId:
    type: "object"
    properties:
      url:
        type: "string"
        description: "The URL to send the request to"
      name:
        type: "string"
        description: "Name of the hook"
      description:
        type: "string"
        description: "Description of the hook"
      push_events:
        type: "boolean"
        description: "Trigger hook on push events"
      issues_events:
        type: "boolean"
        description: "Trigger hook on issues events"
      confidential_issues_events:
        type: "boolean"
        description: "Trigger hook on confidential issues events"
      merge_requests_events:
        type: "boolean"
        description: "Trigger hook on merge request events"
      tag_push_events:
        type: "boolean"
        description: "Trigger hook on tag push events"
      note_events:
        type: "boolean"
        description: "Trigger hook on note (comment) events"
      confidential_note_events:
        type: "boolean"
        description: "Trigger hook on confidential note (comment) events"
      job_events:
        type: "boolean"
        description: "Trigger hook on job events"
      pipeline_events:
        type: "boolean"
        description: "Trigger hook on pipeline events"
      wiki_page_events:
        type: "boolean"
        description: "Trigger hook on wiki events"
      deployment_events:
        type: "boolean"
        description: "Trigger hook on deployment events"
      releases_events:
        type: "boolean"
        description: "Trigger hook on release events"
      emoji_events:
        type: "boolean"
        description: "Trigger hook on emoji events"
      resource_access_token_events:
        type: "boolean"
        description: "Trigger hook on project access token expiry events"
      enable_ssl_verification:
        type: "boolean"
        description: "Do SSL verification when triggering the hook"
      token:
        type: "string"
        description: "Secret token to validate received payloads; this will not be\
          \ returned in the response"
      push_events_branch_filter:
        type: "string"
        description: "Trigger hook on specified branch only"
      custom_webhook_template:
        type: "string"
        description: "Custom template for the request payload"
      url_variables:
        type: "array"
        description: "URL variables for interpolation"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdHooks_url_variables"
    description: "Edit project hook"
  API_Entities_ProjectImportStatus:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      description:
        type: "string"
        example: "desc"
      name:
        type: "string"
        example: "project1"
      name_with_namespace:
        type: "string"
        example: "John Doe / project1"
      path:
        type: "string"
        example: "project1"
      path_with_namespace:
        type: "string"
        example: "namespace1/project1"
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-05-07T04:27:17.016Z"
      import_status:
        type: "string"
        example: "scheduled"
      import_type:
        type: "string"
        example: "gitlab_project"
      correlation_id:
        type: "string"
        example: "dfcf583058ed4508e4c7c617bd7f0edd"
      failed_relations:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_ProjectImportFailedRelation"
      import_error:
        type: "string"
        example: "Error message"
      stats:
        type: "object"
        properties: {}
    description: "API_Entities_ProjectImportStatus model"
    example:
      path_with_namespace: "namespace1/project1"
      description: "desc"
      created_at: "2020-05-07T04:27:17.016Z"
      import_status: "scheduled"
      import_error: "Error message"
      failed_relations:
      - line_number: 1
        created_at: "2012-05-28T04:42:42-07:00"
        exception_class: "StandardError"
        id: "1"
        source: "ImportRepositoryWorker"
        relation_name: "issues"
        exception_message: "exception_message"
      - line_number: 1
        created_at: "2012-05-28T04:42:42-07:00"
        exception_class: "StandardError"
        id: "1"
        source: "ImportRepositoryWorker"
        relation_name: "issues"
        exception_message: "exception_message"
      path: "project1"
      stats: "{}"
      name: "project1"
      correlation_id: "dfcf583058ed4508e4c7c617bd7f0edd"
      id: 1
      import_type: "gitlab_project"
      name_with_namespace: "John Doe / project1"
  API_Entities_ProjectImportFailedRelation:
    type: "object"
    properties:
      id:
        type: "string"
        example: "1"
      created_at:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      exception_class:
        type: "string"
        example: "StandardError"
      source:
        type: "string"
        example: "ImportRepositoryWorker"
      exception_message:
        type: "string"
      relation_name:
        type: "string"
        example: "issues"
      line_number:
        type: "integer"
        format: "int32"
        example: 1
    example:
      line_number: 1
      created_at: "2012-05-28T04:42:42-07:00"
      exception_class: "StandardError"
      id: "1"
      source: "ImportRepositoryWorker"
      relation_name: "issues"
      exception_message: "exception_message"
  API_Entities_RelationImportTracker:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      project_path:
        type: "string"
        example: "namespace1/project1"
      relation:
        type: "string"
        example: "issues"
      status:
        type: "string"
        example: "pending"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-01-31T15:10:45.080Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2022-01-31T15:10:45.080Z"
    description: "API_Entities_RelationImportTracker model"
    example:
      updated_at: "2022-01-31T15:10:45.080Z"
      project_path: "namespace1/project1"
      created_at: "2022-01-31T15:10:45.080Z"
      id: 1
      relation: "issues"
      status: "pending"
  API_Entities_ProjectJobTokenScope:
    type: "object"
    properties:
      inbound_enabled:
        type: "boolean"
      outbound_enabled:
        type: "boolean"
    description: "API_Entities_ProjectJobTokenScope model"
    example:
      inbound_enabled: true
      outbound_enabled: true
  patchApiV4ProjectsIdJobTokenScope:
    type: "object"
    required:
    - "enabled"
    properties:
      enabled:
        type: "boolean"
        description: "Indicates CI/CD job tokens generated in other projects have\
          \ restricted access to this project."
    description: "Patch CI_JOB_TOKEN access settings."
  postApiV4ProjectsIdJobTokenScopeAllowlist:
    type: "object"
    required:
    - "target_project_id"
    properties:
      target_project_id:
        type: "integer"
        format: "int32"
        example: 2
        description: "ID of target project"
    description: "Add target project to allowlist."
  postApiV4ProjectsIdJobTokenScopeGroupsAllowlist:
    type: "object"
    required:
    - "target_group_id"
    properties:
      target_group_id:
        type: "integer"
        format: "int32"
        example: 2
        description: "ID of target group"
    description: "Add target group to allowlist."
  API_Entities_Projects_RepositoryStorageMove:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-05-07T04:27:17.234Z"
      state:
        type: "string"
        example: "scheduled"
      source_storage_name:
        type: "string"
        example: "default"
      destination_storage_name:
        type: "string"
        example: "storage1"
      error_message:
        type: "string"
        example: "Failed to move repository"
      project:
        $ref: "#/definitions/API_Entities_ProjectIdentity"
    description: "API_Entities_Projects_RepositoryStorageMove model"
    example:
      error_message: "Failed to move repository"
      destination_storage_name: "storage1"
      source_storage_name: "default"
      created_at: "2020-05-07T04:27:17.234Z"
      project:
        path: "project1"
        path_with_namespace: "namespace1/project1"
        name: "project1"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        id: 1
        name_with_namespace: "John Doe / project1"
      id: 1
      state: "scheduled"
  postApiV4ProjectsIdRepositoryStorageMoves:
    type: "object"
    properties:
      destination_storage_name:
        type: "string"
        description: "The destination storage shard"
    description: "Schedule a project repository storage move"
  API_Entities_ProjectSnippet:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      title:
        type: "string"
        example: "test"
      description:
        type: "string"
        example: "Ruby test snippet"
      visibility:
        type: "string"
        example: "public"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      created_at:
        type: "string"
        format: "date-time"
        example: "2012-06-28T10:52:04Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2012-06-28T10:52:04Z"
      project_id:
        type: "integer"
        format: "int32"
        example: 1
      web_url:
        type: "string"
        example: "http://example.com/example/example/snippets/1"
      raw_url:
        type: "string"
        example: "http://example.com/example/example/snippets/1/raw"
      ssh_url_to_repo:
        type: "string"
        example: "ssh://user@gitlab.example.com/snippets/65.git"
      http_url_to_repo:
        type: "string"
        example: "https://gitlab.example.com/snippets/65.git"
      file_name:
        type: "string"
        example: "add.rb"
      files:
        type: "array"
        items:
          type: "string"
          example: "e0d123e5f316bef78bfdf5a008837577"
      imported:
        type: "boolean"
        example: false
      imported_from:
        type: "string"
        example: "none"
      repository_storage:
        type: "string"
    description: "API_Entities_ProjectSnippet model"
    example:
      ssh_url_to_repo: "ssh://user@gitlab.example.com/snippets/65.git"
      visibility: "public"
      repository_storage: "repository_storage"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      file_name: "add.rb"
      imported_from: "none"
      description: "Ruby test snippet"
      created_at: "2012-06-28T10:52:04Z"
      title: "test"
      http_url_to_repo: "https://gitlab.example.com/snippets/65.git"
      updated_at: "2012-06-28T10:52:04Z"
      web_url: "http://example.com/example/example/snippets/1"
      project_id: 1
      imported: false
      files:
      - "e0d123e5f316bef78bfdf5a008837577"
      - "e0d123e5f316bef78bfdf5a008837577"
      id: 1
      raw_url: "http://example.com/example/example/snippets/1/raw"
  postApiV4ProjectsIdSnippets:
    type: "object"
    required:
    - "file_name"
    - "title"
    - "visibility"
    properties:
      title:
        type: "string"
        description: "The title of the snippet"
      description:
        type: "string"
        description: "The description of a snippet"
      visibility:
        type: "string"
        description: "The visibility of the snippet"
        enum:
        - "private"
        - "internal"
        - "public"
      files:
        type: "array"
        description: "An array of files"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdSnippets_files"
      content:
        type: "string"
        description: "The content of a snippet"
      file_name:
        type: "string"
        description: "The name of a snippet file"
    description: "Create a new project snippet"
  putApiV4ProjectsIdSnippetsSnippetId:
    type: "object"
    properties:
      content:
        type: "string"
        description: "The content of the snippet"
      description:
        type: "string"
        description: "The description of a snippet"
      file_name:
        type: "string"
        description: "The file name of the snippet"
      title:
        type: "string"
        description: "The title of the snippet"
      visibility:
        type: "string"
        description: "The visibility of the snippet"
        enum:
        - "private"
        - "internal"
        - "public"
      files:
        type: "array"
        description: "An array of files to update"
        items:
          $ref: "#/definitions/putApiV4ProjectsIdSnippetsSnippetId_files"
    description: "Update an existing project snippet"
  API_Entities_UserAgentDetail:
    type: "object"
    properties:
      user_agent:
        type: "string"
        example: "AppleWebKit/537.36"
      ip_address:
        type: "string"
        example: "127.0.0.1"
      akismet_submitted:
        type: "boolean"
        example: false
    description: "API_Entities_UserAgentDetail model"
    example:
      ip_address: "127.0.0.1"
      akismet_submitted: false
      user_agent: "AppleWebKit/537.36"
  API_Entities_ProjectDailyStatistics:
    type: "object"
    properties:
      fetches:
        $ref: "#/definitions/API_Entities_ProjectDailyStatistics_fetches"
    description: "API_Entities_ProjectDailyStatistics model"
    example:
      fetches:
        total: 3
        days:
        - date: "2022-01-01"
          count: 3
        - date: "2022-01-01"
          count: 3
  API_Entities_ProjectDailyFetches:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int32"
        example: 3
      date:
        type: "string"
        format: "date"
        example: "2022-01-01"
    example:
      date: "2022-01-01"
      count: 3
  API_Entities_TemplatesList:
    type: "object"
    properties:
      key:
        type: "string"
        example: "mit"
      name:
        type: "string"
        example: "MIT License"
    description: "API_Entities_TemplatesList model"
    example:
      name: "MIT License"
      key: "mit"
  API_Entities_License:
    type: "object"
    properties:
      key:
        type: "string"
        example: "gpl-3.0"
      name:
        type: "string"
        example: "GNU General Public License v3.0"
      nickname:
        type: "string"
        example: "GNU GPLv3"
      html_url:
        type: "string"
        example: "http://choosealicense.com/licenses/gpl-3.0"
      source_url:
        type: "string"
      popular:
        type: "boolean"
      description:
        type: "string"
        example: "A simple license"
      conditions:
        type: "array"
        items:
          type: "string"
          example: "include-copyright"
      permissions:
        type: "array"
        items:
          type: "string"
          example: "commercial-use"
      limitations:
        type: "array"
        items:
          type: "string"
          example: "liability"
      content:
        type: "string"
        example: "GNU GENERAL PUBLIC LICENSE"
    description: "API_Entities_License model"
    example:
      permissions:
      - "commercial-use"
      - "commercial-use"
      html_url: "http://choosealicense.com/licenses/gpl-3.0"
      name: "GNU General Public License v3.0"
      nickname: "GNU GPLv3"
      description: "A simple license"
      conditions:
      - "include-copyright"
      - "include-copyright"
      popular: true
      key: "gpl-3.0"
      source_url: "source_url"
      content: "GNU GENERAL PUBLIC LICENSE"
      limitations:
      - "liability"
      - "liability"
  putApiV4ProjectsIdCustomAttributesKey:
    type: "object"
    required:
    - "value"
    properties:
      value:
        type: "string"
        description: "The value of the custom attribute"
    description: "Set a custom attribute on a project"
  postApiV4Projects:
    type: "object"
    properties:
      name:
        type: "string"
        example: "New Project"
        description: "The name of the project"
      path:
        type: "string"
        example: "new_project"
        description: "The path of the repository"
      default_branch:
        type: "string"
        example: "main"
        description: "The default branch of the project"
      description:
        type: "string"
        description: "The description of the project"
      build_git_strategy:
        type: "string"
        description: "The Git strategy. Defaults to `fetch`"
        enum:
        - "fetch"
        - "clone"
      build_timeout:
        type: "integer"
        format: "int32"
        description: "Build timeout"
      auto_cancel_pending_pipelines:
        type: "string"
        description: "Auto-cancel pending pipelines"
        enum:
        - "disabled"
        - "enabled"
      ci_config_path:
        type: "string"
        description: "The path to CI config file. Defaults to `.gitlab-ci.yml`"
      service_desk_enabled:
        type: "boolean"
        description: "Disable or enable the service desk"
      issues_enabled:
        type: "boolean"
        description: "Flag indication if the issue tracker is enabled"
      merge_requests_enabled:
        type: "boolean"
        description: "Flag indication if merge requests are enabled"
      wiki_enabled:
        type: "boolean"
        description: "Flag indication if the wiki is enabled"
      jobs_enabled:
        type: "boolean"
        description: "Flag indication if jobs are enabled"
      snippets_enabled:
        type: "boolean"
        description: "Flag indication if snippets are enabled"
      issues_access_level:
        type: "string"
        description: "Issues access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      repository_access_level:
        type: "string"
        description: "Repository access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      merge_requests_access_level:
        type: "string"
        description: "Merge requests access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      forking_access_level:
        type: "string"
        description: "Forks access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      wiki_access_level:
        type: "string"
        description: "Wiki access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      builds_access_level:
        type: "string"
        description: "Builds access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      snippets_access_level:
        type: "string"
        description: "Snippets access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      pages_access_level:
        type: "string"
        description: "Pages access level. One of `disabled`, `private`, `enabled`\
          \ or `public`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        - "public"
      analytics_access_level:
        type: "string"
        description: "Analytics access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      container_registry_access_level:
        type: "string"
        description: "Controls visibility of the container registry. One of `disabled`,\
          \ `private` or `enabled`. `private` will make the container registry accessible\
          \ only to project members (reporter role and above). `enabled` will make\
          \ the container registry accessible to everyone who has access to the project.\
          \ `disabled` will disable the container registry"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      security_and_compliance_access_level:
        type: "string"
        description: "Security and compliance access level. One of `disabled`, `private`\
          \ or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      releases_access_level:
        type: "string"
        description: "Releases access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      environments_access_level:
        type: "string"
        description: "Environments access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      feature_flags_access_level:
        type: "string"
        description: "Feature flags access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      infrastructure_access_level:
        type: "string"
        description: "Infrastructure access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      monitor_access_level:
        type: "string"
        description: "Monitor access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      model_experiments_access_level:
        type: "string"
        description: "Model experiments access level. One of `disabled`, `private`\
          \ or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      model_registry_access_level:
        type: "string"
        description: "Model registry access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      emails_disabled:
        type: "boolean"
        description: "Deprecated: Use emails_enabled instead."
      emails_enabled:
        type: "boolean"
        description: "Enable email notifications"
      show_default_award_emojis:
        type: "boolean"
        description: "Show default award emojis"
      show_diff_preview_in_email:
        type: "boolean"
        description: "Include the code diff preview in merge request notification\
          \ emails"
      warn_about_potentially_unwanted_characters:
        type: "boolean"
        description: "Warn about potentially unwanted characters"
      enforce_auth_checks_on_uploads:
        type: "boolean"
        description: "Enforce auth check on uploads"
      shared_runners_enabled:
        type: "boolean"
        description: "Flag indication if shared runners are enabled for that project"
      group_runners_enabled:
        type: "boolean"
        description: "Flag indication if group runners are enabled for that project"
      resolve_outdated_diff_discussions:
        type: "boolean"
        description: "Automatically resolve merge request diff threads on lines changed\
          \ with a push"
      remove_source_branch_after_merge:
        type: "boolean"
        description: "Remove the source branch by default after merge"
      container_registry_enabled:
        type: "boolean"
        description: "Deprecated: Use :container_registry_access_level instead. Flag\
          \ indication if the container registry is enabled for that project"
      container_expiration_policy_attributes:
        $ref: "#/definitions/postApiV4Projects_container_expiration_policy_attributes"
      lfs_enabled:
        type: "boolean"
        description: "Flag indication if Git LFS is enabled for that project"
      visibility:
        type: "string"
        description: "The visibility of the project."
        enum:
        - "private"
        - "internal"
        - "public"
      public_builds:
        type: "boolean"
        description: "Deprecated: Use public_jobs instead."
      public_jobs:
        type: "boolean"
        description: "Perform public builds"
      request_access_enabled:
        type: "boolean"
        description: "Allow users to request member access"
      only_allow_merge_if_pipeline_succeeds:
        type: "boolean"
        description: "Only allow to merge if builds succeed"
      allow_merge_on_skipped_pipeline:
        type: "boolean"
        description: "Allow to merge if pipeline is skipped"
      only_allow_merge_if_all_discussions_are_resolved:
        type: "boolean"
        description: "Only allow to merge if all threads are resolved"
      tag_list:
        type: "array"
        description: "Deprecated: Use :topics instead"
        items:
          type: "string"
      topics:
        type: "array"
        description: "The list of topics for a project"
        items:
          type: "string"
      avatar:
        type: "file"
        description: "Avatar image for project"
      printing_merge_request_link_enabled:
        type: "boolean"
        description: "Show link to create/view merge request when pushing from the\
          \ command line"
      merge_method:
        type: "string"
        description: "The merge method used when merging merge requests"
        enum:
        - "ff"
        - "rebase_merge"
        - "merge"
      suggestion_commit_message:
        type: "string"
        description: "The commit message used to apply merge request suggestions"
      merge_commit_template:
        type: "string"
        description: "Template used to create merge commit message"
      squash_commit_template:
        type: "string"
        description: "Template used to create squash commit message"
      issue_branch_template:
        type: "string"
        description: "Template used to create a branch from an issue"
      initialize_with_readme:
        type: "boolean"
        description: "Initialize a project with a README.md"
      auto_devops_enabled:
        type: "boolean"
        description: "Flag indication if Auto DevOps is enabled"
      auto_devops_deploy_strategy:
        type: "string"
        description: "Auto Deploy strategy"
        enum:
        - "continuous"
        - "manual"
        - "timed_incremental"
      autoclose_referenced_issues:
        type: "boolean"
        description: "Flag indication if referenced issues auto-closing is enabled"
      repository_storage:
        type: "string"
        description: "Which storage shard the repository is on. Available only to\
          \ admins"
      packages_enabled:
        type: "boolean"
        description: "Enable project packages feature"
      squash_option:
        type: "string"
        description: "Squash default for project. One of `never`, `always`, `default_on`,\
          \ or `default_off`."
        enum:
        - "never"
        - "always"
        - "default_on"
        - "default_off"
      mr_default_target_self:
        type: "boolean"
        description: "Merge requests of this forked project targets itself by default"
      only_allow_merge_if_all_status_checks_passed:
        type: "boolean"
        description: "Blocks merge requests from merging unless all status checks\
          \ have passed"
      approvals_before_merge:
        type: "integer"
        format: "int32"
        description: "How many approvers should approve merge request by default"
      mirror:
        type: "boolean"
        description: "Enables pull mirroring in a project"
      mirror_trigger_builds:
        type: "boolean"
        description: "Pull mirroring triggers builds"
      external_authorization_classification_label:
        type: "string"
        description: "The classification label for the project"
      requirements_access_level:
        type: "string"
        description: "Requirements feature access level. One of `disabled`, `private`\
          \ or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      prevent_merge_without_jira_issue:
        type: "boolean"
        description: "Require an associated issue from Jira"
      repository_object_format:
        type: "string"
        description: "The object format of the project repository"
        enum:
        - "sha1"
        - "sha256"
      use_custom_template:
        type: "boolean"
        description: "Use custom template"
      group_with_project_templates_id:
        type: "integer"
        format: "int32"
        description: "Group ID that serves as the template source"
      namespace_id:
        type: "integer"
        format: "int32"
        description: "Namespace ID for the new project. Default to the user namespace."
      import_url:
        type: "string"
        description: "URL from which the project is imported"
      template_name:
        type: "string"
        description: "Name of template from which to create project"
      template_project_id:
        type: "integer"
        format: "int32"
        description: "Project ID of template from which to create project"
    description: "Create new project"
  postApiV4ProjectsUserUserId:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "New Project"
        description: "The name of the project"
      path:
        type: "string"
        example: "new_project"
        description: "The path of the repository"
      default_branch:
        type: "string"
        example: "main"
        description: "The default branch of the project"
      description:
        type: "string"
        description: "The description of the project"
      build_git_strategy:
        type: "string"
        description: "The Git strategy. Defaults to `fetch`"
        enum:
        - "fetch"
        - "clone"
      build_timeout:
        type: "integer"
        format: "int32"
        description: "Build timeout"
      auto_cancel_pending_pipelines:
        type: "string"
        description: "Auto-cancel pending pipelines"
        enum:
        - "disabled"
        - "enabled"
      ci_config_path:
        type: "string"
        description: "The path to CI config file. Defaults to `.gitlab-ci.yml`"
      service_desk_enabled:
        type: "boolean"
        description: "Disable or enable the service desk"
      issues_enabled:
        type: "boolean"
        description: "Flag indication if the issue tracker is enabled"
      merge_requests_enabled:
        type: "boolean"
        description: "Flag indication if merge requests are enabled"
      wiki_enabled:
        type: "boolean"
        description: "Flag indication if the wiki is enabled"
      jobs_enabled:
        type: "boolean"
        description: "Flag indication if jobs are enabled"
      snippets_enabled:
        type: "boolean"
        description: "Flag indication if snippets are enabled"
      issues_access_level:
        type: "string"
        description: "Issues access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      repository_access_level:
        type: "string"
        description: "Repository access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      merge_requests_access_level:
        type: "string"
        description: "Merge requests access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      forking_access_level:
        type: "string"
        description: "Forks access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      wiki_access_level:
        type: "string"
        description: "Wiki access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      builds_access_level:
        type: "string"
        description: "Builds access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      snippets_access_level:
        type: "string"
        description: "Snippets access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      pages_access_level:
        type: "string"
        description: "Pages access level. One of `disabled`, `private`, `enabled`\
          \ or `public`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        - "public"
      analytics_access_level:
        type: "string"
        description: "Analytics access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      container_registry_access_level:
        type: "string"
        description: "Controls visibility of the container registry. One of `disabled`,\
          \ `private` or `enabled`. `private` will make the container registry accessible\
          \ only to project members (reporter role and above). `enabled` will make\
          \ the container registry accessible to everyone who has access to the project.\
          \ `disabled` will disable the container registry"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      security_and_compliance_access_level:
        type: "string"
        description: "Security and compliance access level. One of `disabled`, `private`\
          \ or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      releases_access_level:
        type: "string"
        description: "Releases access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      environments_access_level:
        type: "string"
        description: "Environments access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      feature_flags_access_level:
        type: "string"
        description: "Feature flags access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      infrastructure_access_level:
        type: "string"
        description: "Infrastructure access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      monitor_access_level:
        type: "string"
        description: "Monitor access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      model_experiments_access_level:
        type: "string"
        description: "Model experiments access level. One of `disabled`, `private`\
          \ or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      model_registry_access_level:
        type: "string"
        description: "Model registry access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      emails_disabled:
        type: "boolean"
        description: "Deprecated: Use emails_enabled instead."
      emails_enabled:
        type: "boolean"
        description: "Enable email notifications"
      show_default_award_emojis:
        type: "boolean"
        description: "Show default award emojis"
      show_diff_preview_in_email:
        type: "boolean"
        description: "Include the code diff preview in merge request notification\
          \ emails"
      warn_about_potentially_unwanted_characters:
        type: "boolean"
        description: "Warn about potentially unwanted characters"
      enforce_auth_checks_on_uploads:
        type: "boolean"
        description: "Enforce auth check on uploads"
      shared_runners_enabled:
        type: "boolean"
        description: "Flag indication if shared runners are enabled for that project"
      group_runners_enabled:
        type: "boolean"
        description: "Flag indication if group runners are enabled for that project"
      resolve_outdated_diff_discussions:
        type: "boolean"
        description: "Automatically resolve merge request diff threads on lines changed\
          \ with a push"
      remove_source_branch_after_merge:
        type: "boolean"
        description: "Remove the source branch by default after merge"
      container_registry_enabled:
        type: "boolean"
        description: "Deprecated: Use :container_registry_access_level instead. Flag\
          \ indication if the container registry is enabled for that project"
      container_expiration_policy_attributes:
        $ref: "#/definitions/postApiV4Projects_container_expiration_policy_attributes"
      lfs_enabled:
        type: "boolean"
        description: "Flag indication if Git LFS is enabled for that project"
      visibility:
        type: "string"
        description: "The visibility of the project."
        enum:
        - "private"
        - "internal"
        - "public"
      public_builds:
        type: "boolean"
        description: "Deprecated: Use public_jobs instead."
      public_jobs:
        type: "boolean"
        description: "Perform public builds"
      request_access_enabled:
        type: "boolean"
        description: "Allow users to request member access"
      only_allow_merge_if_pipeline_succeeds:
        type: "boolean"
        description: "Only allow to merge if builds succeed"
      allow_merge_on_skipped_pipeline:
        type: "boolean"
        description: "Allow to merge if pipeline is skipped"
      only_allow_merge_if_all_discussions_are_resolved:
        type: "boolean"
        description: "Only allow to merge if all threads are resolved"
      tag_list:
        type: "array"
        description: "Deprecated: Use :topics instead"
        items:
          type: "string"
      topics:
        type: "array"
        description: "The list of topics for a project"
        items:
          type: "string"
      avatar:
        type: "file"
        description: "Avatar image for project"
      printing_merge_request_link_enabled:
        type: "boolean"
        description: "Show link to create/view merge request when pushing from the\
          \ command line"
      merge_method:
        type: "string"
        description: "The merge method used when merging merge requests"
        enum:
        - "ff"
        - "rebase_merge"
        - "merge"
      suggestion_commit_message:
        type: "string"
        description: "The commit message used to apply merge request suggestions"
      merge_commit_template:
        type: "string"
        description: "Template used to create merge commit message"
      squash_commit_template:
        type: "string"
        description: "Template used to create squash commit message"
      issue_branch_template:
        type: "string"
        description: "Template used to create a branch from an issue"
      initialize_with_readme:
        type: "boolean"
        description: "Initialize a project with a README.md"
      auto_devops_enabled:
        type: "boolean"
        description: "Flag indication if Auto DevOps is enabled"
      auto_devops_deploy_strategy:
        type: "string"
        description: "Auto Deploy strategy"
        enum:
        - "continuous"
        - "manual"
        - "timed_incremental"
      autoclose_referenced_issues:
        type: "boolean"
        description: "Flag indication if referenced issues auto-closing is enabled"
      repository_storage:
        type: "string"
        description: "Which storage shard the repository is on. Available only to\
          \ admins"
      packages_enabled:
        type: "boolean"
        description: "Enable project packages feature"
      squash_option:
        type: "string"
        description: "Squash default for project. One of `never`, `always`, `default_on`,\
          \ or `default_off`."
        enum:
        - "never"
        - "always"
        - "default_on"
        - "default_off"
      mr_default_target_self:
        type: "boolean"
        description: "Merge requests of this forked project targets itself by default"
      only_allow_merge_if_all_status_checks_passed:
        type: "boolean"
        description: "Blocks merge requests from merging unless all status checks\
          \ have passed"
      approvals_before_merge:
        type: "integer"
        format: "int32"
        description: "How many approvers should approve merge request by default"
      mirror:
        type: "boolean"
        description: "Enables pull mirroring in a project"
      mirror_trigger_builds:
        type: "boolean"
        description: "Pull mirroring triggers builds"
      external_authorization_classification_label:
        type: "string"
        description: "The classification label for the project"
      requirements_access_level:
        type: "string"
        description: "Requirements feature access level. One of `disabled`, `private`\
          \ or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      prevent_merge_without_jira_issue:
        type: "boolean"
        description: "Require an associated issue from Jira"
      repository_object_format:
        type: "string"
        description: "The object format of the project repository"
        enum:
        - "sha1"
        - "sha256"
      use_custom_template:
        type: "boolean"
        description: "Use custom template"
      group_with_project_templates_id:
        type: "integer"
        format: "int32"
        description: "Group ID that serves as the template source"
      namespace_id:
        type: "integer"
        format: "int32"
        description: "Namespace ID for the new project. Default to the user namespace."
      import_url:
        type: "string"
        description: "URL from which the project is imported"
      template_name:
        type: "string"
        description: "Name of template from which to create project"
      template_project_id:
        type: "integer"
        format: "int32"
        description: "Project ID of template from which to create project"
    description: "Create new project for a specified user. Only available to admin\
      \ users."
  API_Entities_ProjectWithAccess:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      description:
        type: "string"
        example: "desc"
      name:
        type: "string"
        example: "project1"
      name_with_namespace:
        type: "string"
        example: "John Doe / project1"
      path:
        type: "string"
        example: "project1"
      path_with_namespace:
        type: "string"
        example: "namespace1/project1"
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-05-07T04:27:17.016Z"
      default_branch:
        type: "string"
        example: "main"
      tag_list:
        type: "array"
        items:
          type: "string"
          example: "tag"
      topics:
        type: "array"
        items:
          type: "string"
          example: "topic"
      ssh_url_to_repo:
        type: "string"
        example: "git@gitlab.example.com:gitlab/gitlab.git"
      http_url_to_repo:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab.git"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab"
      readme_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
      forks_count:
        type: "integer"
        format: "int32"
        example: 1
      license_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
      license:
        $ref: "#/definitions/API_Entities_LicenseBasic"
      avatar_url:
        type: "string"
        example: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
      star_count:
        type: "integer"
        format: "int32"
        example: 1
      last_activity_at:
        type: "string"
        format: "date-time"
        example: "2013-09-30T13:46:02Z"
      namespace:
        $ref: "#/definitions/API_Entities_NamespaceBasic"
      custom_attributes:
        $ref: "#/definitions/API_Entities_CustomAttribute"
      repository_storage:
        type: "string"
        example: "default"
      container_registry_image_prefix:
        type: "string"
        example: "registry.gitlab.example.com/gitlab/gitlab-client"
      _links:
        $ref: "#/definitions/API_Entities_Project__links"
      packages_enabled:
        type: "boolean"
      empty_repo:
        type: "boolean"
      archived:
        type: "boolean"
      visibility:
        type: "string"
        example: "public"
      owner:
        $ref: "#/definitions/API_Entities_UserBasic"
      resolve_outdated_diff_discussions:
        type: "boolean"
      container_expiration_policy:
        $ref: "#/definitions/API_Entities_ContainerExpirationPolicy"
      repository_object_format:
        type: "string"
        example: "sha1"
      issues_enabled:
        type: "boolean"
      merge_requests_enabled:
        type: "boolean"
      wiki_enabled:
        type: "boolean"
      jobs_enabled:
        type: "boolean"
      snippets_enabled:
        type: "boolean"
      container_registry_enabled:
        type: "boolean"
      service_desk_enabled:
        type: "boolean"
      service_desk_address:
        type: "string"
        example: "address@example.com"
      can_create_merge_request_in:
        type: "boolean"
      issues_access_level:
        type: "string"
        example: "enabled"
      repository_access_level:
        type: "string"
        example: "enabled"
      merge_requests_access_level:
        type: "string"
        example: "enabled"
      forking_access_level:
        type: "string"
        example: "enabled"
      wiki_access_level:
        type: "string"
        example: "enabled"
      builds_access_level:
        type: "string"
        example: "enabled"
      snippets_access_level:
        type: "string"
        example: "enabled"
      pages_access_level:
        type: "string"
        example: "enabled"
      analytics_access_level:
        type: "string"
        example: "enabled"
      container_registry_access_level:
        type: "string"
        example: "enabled"
      security_and_compliance_access_level:
        type: "string"
        example: "enabled"
      releases_access_level:
        type: "string"
        example: "enabled"
      environments_access_level:
        type: "string"
        example: "enabled"
      feature_flags_access_level:
        type: "string"
        example: "enabled"
      infrastructure_access_level:
        type: "string"
        example: "enabled"
      monitor_access_level:
        type: "string"
        example: "enabled"
      model_experiments_access_level:
        type: "string"
        example: "enabled"
      model_registry_access_level:
        type: "string"
        example: "enabled"
      emails_disabled:
        type: "boolean"
      emails_enabled:
        type: "boolean"
      shared_runners_enabled:
        type: "boolean"
      lfs_enabled:
        type: "boolean"
      creator_id:
        type: "integer"
        format: "int32"
        example: 1
      forked_from_project:
        $ref: "#/definitions/API_Entities_BasicProjectDetails"
      mr_default_target_self:
        type: "boolean"
      import_url:
        type: "string"
        example: "https://gitlab.com/gitlab/gitlab.git"
      import_type:
        type: "string"
        example: "git"
      import_status:
        type: "string"
        example: "none"
      import_error:
        type: "string"
        example: "Import error"
      open_issues_count:
        type: "integer"
        format: "int32"
        example: 1
      description_html:
        type: "string"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2020-05-07T04:27:17.016Z"
      ci_default_git_depth:
        type: "integer"
        format: "int32"
        example: 20
      ci_forward_deployment_enabled:
        type: "boolean"
      ci_forward_deployment_rollback_allowed:
        type: "boolean"
      ci_job_token_scope_enabled:
        type: "boolean"
      ci_separated_caches:
        type: "boolean"
      ci_allow_fork_pipelines_to_run_in_parent_project:
        type: "boolean"
      build_git_strategy:
        type: "string"
        example: "fetch"
      keep_latest_artifact:
        type: "boolean"
      restrict_user_defined_variables:
        type: "boolean"
      ci_pipeline_variables_minimum_override_role:
        type: "string"
      runners_token:
        type: "string"
        example: "b8547b1dc37721d05889db52fa2f02"
      runner_token_expiration_interval:
        type: "integer"
        format: "int32"
        example: 3600
      group_runners_enabled:
        type: "boolean"
      auto_cancel_pending_pipelines:
        type: "string"
        example: "enabled"
      build_timeout:
        type: "integer"
        format: "int32"
        example: 3600
      auto_devops_enabled:
        type: "boolean"
      auto_devops_deploy_strategy:
        type: "string"
        example: "continuous"
      ci_config_path:
        type: "string"
        example: ""
      public_jobs:
        type: "boolean"
      shared_with_groups:
        type: "array"
        items:
          type: "string"
      only_allow_merge_if_pipeline_succeeds:
        type: "boolean"
      allow_merge_on_skipped_pipeline:
        type: "boolean"
      request_access_enabled:
        type: "boolean"
      only_allow_merge_if_all_discussions_are_resolved:
        type: "boolean"
      remove_source_branch_after_merge:
        type: "boolean"
      printing_merge_request_link_enabled:
        type: "boolean"
      merge_method:
        type: "string"
        example: "merge"
      squash_option:
        type: "string"
        example: "default_off"
      enforce_auth_checks_on_uploads:
        type: "boolean"
      suggestion_commit_message:
        type: "string"
        example: "Suggestion message"
      merge_commit_template:
        type: "string"
        example: "%(title)"
      squash_commit_template:
        type: "string"
        example: "%(source_branch)"
      issue_branch_template:
        type: "string"
        example: "%(title)"
      statistics:
        $ref: "#/definitions/API_Entities_ProjectStatistics"
      warn_about_potentially_unwanted_characters:
        type: "boolean"
      autoclose_referenced_issues:
        type: "boolean"
      approvals_before_merge:
        type: "string"
      mirror:
        type: "string"
      mirror_user_id:
        type: "string"
      mirror_trigger_builds:
        type: "string"
      only_mirror_protected_branches:
        type: "string"
      mirror_overwrites_diverged_branches:
        type: "string"
      external_authorization_classification_label:
        type: "string"
      marked_for_deletion_at:
        type: "string"
      marked_for_deletion_on:
        type: "string"
      requirements_enabled:
        type: "string"
      requirements_access_level:
        type: "string"
      security_and_compliance_enabled:
        type: "string"
      compliance_frameworks:
        type: "string"
      issues_template:
        type: "string"
      merge_requests_template:
        type: "string"
      ci_restrict_pipeline_cancellation_role:
        type: "string"
      merge_pipelines_enabled:
        type: "string"
      merge_trains_enabled:
        type: "string"
      merge_trains_skip_train_allowed:
        type: "string"
      only_allow_merge_if_all_status_checks_passed:
        type: "string"
      allow_pipeline_trigger_approve_deployment:
        type: "boolean"
      prevent_merge_without_jira_issue:
        type: "string"
      permissions:
        $ref: "#/definitions/API_Entities_ProjectWithAccess_permissions"
    description: "API_Entities_ProjectWithAccess model"
    example:
      ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
      only_allow_merge_if_all_discussions_are_resolved: true
      enforce_auth_checks_on_uploads: true
      security_and_compliance_access_level: "enabled"
      custom_attributes:
        value: "bar"
        key: "foo"
      path: "project1"
      monitor_access_level: "enabled"
      merge_pipelines_enabled: "merge_pipelines_enabled"
      permissions:
        project_access:
          access_level: "access_level"
          notification_level: "notification_level"
        group_access:
          access_level: "access_level"
          notification_level: "notification_level"
      repository_access_level: "enabled"
      wiki_access_level: "enabled"
      shared_runners_enabled: true
      id: 1
      import_type: "git"
      feature_flags_access_level: "enabled"
      merge_requests_access_level: "enabled"
      merge_trains_enabled: "merge_trains_enabled"
      group_runners_enabled: true
      allow_merge_on_skipped_pipeline: true
      lfs_enabled: true
      ci_separated_caches: true
      resolve_outdated_diff_discussions: true
      builds_access_level: "enabled"
      shared_with_groups:
      - "shared_with_groups"
      - "shared_with_groups"
      security_and_compliance_enabled: "security_and_compliance_enabled"
      pages_access_level: "enabled"
      service_desk_enabled: true
      creator_id: 1
      ci_forward_deployment_enabled: true
      default_branch: "main"
      auto_devops_deploy_strategy: "continuous"
      description_html: "description_html"
      can_create_merge_request_in: true
      ci_allow_fork_pipelines_to_run_in_parent_project: true
      runners_token: "b8547b1dc37721d05889db52fa2f02"
      mirror: "mirror"
      merge_trains_skip_train_allowed: "merge_trains_skip_train_allowed"
      restrict_user_defined_variables: true
      container_registry_image_prefix: "registry.gitlab.example.com/gitlab/gitlab-client"
      auto_cancel_pending_pipelines: "enabled"
      snippets_enabled: true
      created_at: "2020-05-07T04:27:17.016Z"
      ci_default_git_depth: 20
      model_experiments_access_level: "enabled"
      ci_pipeline_variables_minimum_override_role: "ci_pipeline_variables_minimum_override_role"
      archived: true
      marked_for_deletion_at: "marked_for_deletion_at"
      updated_at: "2020-05-07T04:27:17.016Z"
      tag_list:
      - "tag"
      - "tag"
      issues_access_level: "enabled"
      issue_branch_template: "%(title)"
      warn_about_potentially_unwanted_characters: true
      ci_restrict_pipeline_cancellation_role: "ci_restrict_pipeline_cancellation_role"
      printing_merge_request_link_enabled: true
      topics:
      - "topic"
      - "topic"
      import_url: "https://gitlab.com/gitlab/gitlab.git"
      ci_forward_deployment_rollback_allowed: true
      squash_option: "default_off"
      jobs_enabled: true
      import_error: "Import error"
      environments_access_level: "enabled"
      forked_from_project:
        ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
        repository_storage: "default"
        path_with_namespace: "namespace1/project1"
        topics:
        - "topic"
        - "topic"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
        readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
        custom_attributes:
          value: "bar"
          key: "foo"
        path: "project1"
        license:
          html_url: "http://choosealicense.com/licenses/gpl-3.0"
          name: "GNU General Public License v3.0"
          nickname: "GNU GPLv3"
          key: "gpl-3.0"
          source_url: "source_url"
        web_url: "https://gitlab.example.com/gitlab/gitlab"
        avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
        tag_list:
        - "tag"
        - "tag"
        last_activity_at: "2013-09-30T13:46:02Z"
        name: "project1"
        namespace:
          path: "my_project"
          avatar_url: "https://example.com/avatar/12345"
          web_url: "https://example.com/group/my_project"
          kind: "project"
          parent_id: 1
          name: "project"
          id: 2
          full_path: "group/my_project"
        default_branch: "main"
        id: 1
        name_with_namespace: "John Doe / project1"
        license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
        star_count: 1
        forks_count: 1
      squash_commit_template: "%(source_branch)"
      only_allow_merge_if_pipeline_succeeds: true
      analytics_access_level: "enabled"
      avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
      wiki_enabled: true
      remove_source_branch_after_merge: true
      mirror_overwrites_diverged_branches: "mirror_overwrites_diverged_branches"
      star_count: 1
      statistics:
        commit_count: "commit_count"
        container_registry_size: "container_registry_size"
        wiki_size: "wiki_size"
        packages_size: "packages_size"
        lfs_objects_size: "lfs_objects_size"
        job_artifacts_size: "job_artifacts_size"
        repository_size: "repository_size"
        storage_size: "storage_size"
        uploads_size: "uploads_size"
        snippets_size: "snippets_size"
        pipeline_artifacts_size: "pipeline_artifacts_size"
      _links:
        merge_requests: "https://gitlab.example.com/api/v4/projects/4/merge_requests"
        cluster_agents: "https://gitlab.example.com/api/v4/projects/4/cluster_agents"
        members: "https://gitlab.example.com/api/v4/projects/4/members"
        self: "https://gitlab.example.com/api/v4/projects/4"
        repo_branches: "https://gitlab.example.com/api/v4/projects/4/repository/branches"
        issues: "https://gitlab.example.com/api/v4/projects/4/issues"
        events: "https://gitlab.example.com/api/v4/projects/4/events"
        labels: "https://gitlab.example.com/api/v4/projects/4/labels"
      request_access_enabled: true
      only_mirror_protected_branches: "only_mirror_protected_branches"
      runner_token_expiration_interval: 3600
      build_timeout: 3600
      infrastructure_access_level: "enabled"
      marked_for_deletion_on: "marked_for_deletion_on"
      mirror_trigger_builds: "mirror_trigger_builds"
      ci_job_token_scope_enabled: true
      emails_enabled: true
      visibility: "public"
      requirements_access_level: "requirements_access_level"
      merge_requests_enabled: true
      forking_access_level: "enabled"
      merge_commit_template: "%(title)"
      mr_default_target_self: true
      suggestion_commit_message: "Suggestion message"
      container_registry_access_level: "enabled"
      license:
        html_url: "http://choosealicense.com/licenses/gpl-3.0"
        name: "GNU General Public License v3.0"
        nickname: "GNU GPLv3"
        key: "gpl-3.0"
        source_url: "source_url"
      auto_devops_enabled: true
      mirror_user_id: "mirror_user_id"
      requirements_enabled: "requirements_enabled"
      compliance_frameworks: "compliance_frameworks"
      name: "project1"
      external_authorization_classification_label: "external_authorization_classification_label"
      approvals_before_merge: "approvals_before_merge"
      name_with_namespace: "John Doe / project1"
      license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
      model_registry_access_level: "enabled"
      autoclose_referenced_issues: true
      issues_enabled: true
      service_desk_address: "address@example.com"
      repository_storage: "default"
      open_issues_count: 1
      prevent_merge_without_jira_issue: "prevent_merge_without_jira_issue"
      packages_enabled: true
      keep_latest_artifact: true
      description: "desc"
      import_status: "none"
      ci_config_path: ""
      merge_requests_template: "merge_requests_template"
      only_allow_merge_if_all_status_checks_passed: "only_allow_merge_if_all_status_checks_passed"
      build_git_strategy: "fetch"
      last_activity_at: "2013-09-30T13:46:02Z"
      container_expiration_policy:
        keep_n: "keep_n"
        next_run_at: "next_run_at"
        name_regex_keep: "name_regex_keep"
        older_than: "older_than"
        name_regex: "name_regex"
        cadence: "cadence"
        enabled: "enabled"
      container_registry_enabled: true
      issues_template: "issues_template"
      allow_pipeline_trigger_approve_deployment: true
      owner:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      emails_disabled: true
      path_with_namespace: "namespace1/project1"
      releases_access_level: "enabled"
      snippets_access_level: "enabled"
      http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
      readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
      merge_method: "merge"
      repository_object_format: "sha1"
      web_url: "https://gitlab.example.com/gitlab/gitlab"
      public_jobs: true
      namespace:
        path: "my_project"
        avatar_url: "https://example.com/avatar/12345"
        web_url: "https://example.com/group/my_project"
        kind: "project"
        parent_id: 1
        name: "project"
        id: 2
        full_path: "group/my_project"
      empty_repo: true
      forks_count: 1
  API_Entities_ProjectAccess:
    type: "object"
    properties:
      access_level:
        type: "string"
      notification_level:
        type: "string"
    example:
      access_level: "access_level"
      notification_level: "notification_level"
  API_Entities_GroupAccess:
    type: "object"
    properties:
      access_level:
        type: "string"
      notification_level:
        type: "string"
    example:
      access_level: "access_level"
      notification_level: "notification_level"
  postApiV4ProjectsIdFork:
    type: "object"
    properties:
      namespace:
        type: "string"
        example: "gitlab"
        description: "(deprecated) The ID or name of the namespace that the project\
          \ will be forked into"
      namespace_id:
        type: "integer"
        format: "int32"
        example: 1
        description: "The ID of the namespace that the project will be forked into"
      namespace_path:
        type: "string"
        example: "new_path/gitlab"
        description: "The path of the namespace that the project will be forked into"
      path:
        type: "string"
        example: "fork"
        description: "The path that will be assigned to the fork"
      name:
        type: "string"
        example: "Fork"
        description: "The name that will be assigned to the fork"
      description:
        type: "string"
        example: "Description"
        description: "The description that will be assigned to the fork"
      visibility:
        type: "string"
        description: "The visibility of the fork"
        enum:
        - "private"
        - "internal"
        - "public"
      mr_default_target_self:
        type: "boolean"
        description: "Merge requests of this forked project targets itself by default"
      branches:
        type: "string"
        description: "Branches to fork"
    description: "Fork new project for the current user or provided namespace."
  putApiV4ProjectsId:
    type: "object"
    properties:
      name:
        type: "string"
        example: "project"
        description: "The name of the project"
      default_branch:
        type: "string"
        example: "main"
        description: "The default branch of the project"
      path:
        type: "string"
        example: "group/project"
        description: "The path of the repository"
      description:
        type: "string"
        description: "The description of the project"
      build_git_strategy:
        type: "string"
        description: "The Git strategy. Defaults to `fetch`"
        enum:
        - "fetch"
        - "clone"
      build_timeout:
        type: "integer"
        format: "int32"
        description: "Build timeout"
      auto_cancel_pending_pipelines:
        type: "string"
        description: "Auto-cancel pending pipelines"
        enum:
        - "disabled"
        - "enabled"
      ci_config_path:
        type: "string"
        description: "The path to CI config file. Defaults to `.gitlab-ci.yml`"
      service_desk_enabled:
        type: "boolean"
        description: "Disable or enable the service desk"
      issues_enabled:
        type: "boolean"
        description: "Flag indication if the issue tracker is enabled"
      merge_requests_enabled:
        type: "boolean"
        description: "Flag indication if merge requests are enabled"
      wiki_enabled:
        type: "boolean"
        description: "Flag indication if the wiki is enabled"
      jobs_enabled:
        type: "boolean"
        description: "Flag indication if jobs are enabled"
      snippets_enabled:
        type: "boolean"
        description: "Flag indication if snippets are enabled"
      issues_access_level:
        type: "string"
        description: "Issues access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      repository_access_level:
        type: "string"
        description: "Repository access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      merge_requests_access_level:
        type: "string"
        description: "Merge requests access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      forking_access_level:
        type: "string"
        description: "Forks access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      wiki_access_level:
        type: "string"
        description: "Wiki access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      builds_access_level:
        type: "string"
        description: "Builds access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      snippets_access_level:
        type: "string"
        description: "Snippets access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      pages_access_level:
        type: "string"
        description: "Pages access level. One of `disabled`, `private`, `enabled`\
          \ or `public`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
        - "public"
      analytics_access_level:
        type: "string"
        description: "Analytics access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      container_registry_access_level:
        type: "string"
        description: "Controls visibility of the container registry. One of `disabled`,\
          \ `private` or `enabled`. `private` will make the container registry accessible\
          \ only to project members (reporter role and above). `enabled` will make\
          \ the container registry accessible to everyone who has access to the project.\
          \ `disabled` will disable the container registry"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      security_and_compliance_access_level:
        type: "string"
        description: "Security and compliance access level. One of `disabled`, `private`\
          \ or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      releases_access_level:
        type: "string"
        description: "Releases access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      environments_access_level:
        type: "string"
        description: "Environments access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      feature_flags_access_level:
        type: "string"
        description: "Feature flags access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      infrastructure_access_level:
        type: "string"
        description: "Infrastructure access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      monitor_access_level:
        type: "string"
        description: "Monitor access level. One of `disabled`, `private` or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      model_experiments_access_level:
        type: "string"
        description: "Model experiments access level. One of `disabled`, `private`\
          \ or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      model_registry_access_level:
        type: "string"
        description: "Model registry access level. One of `disabled`, `private` or\
          \ `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      emails_disabled:
        type: "boolean"
        description: "Deprecated: Use emails_enabled instead."
      emails_enabled:
        type: "boolean"
        description: "Enable email notifications"
      show_default_award_emojis:
        type: "boolean"
        description: "Show default award emojis"
      show_diff_preview_in_email:
        type: "boolean"
        description: "Include the code diff preview in merge request notification\
          \ emails"
      warn_about_potentially_unwanted_characters:
        type: "boolean"
        description: "Warn about potentially unwanted characters"
      enforce_auth_checks_on_uploads:
        type: "boolean"
        description: "Enforce auth check on uploads"
      shared_runners_enabled:
        type: "boolean"
        description: "Flag indication if shared runners are enabled for that project"
      group_runners_enabled:
        type: "boolean"
        description: "Flag indication if group runners are enabled for that project"
      resolve_outdated_diff_discussions:
        type: "boolean"
        description: "Automatically resolve merge request diff threads on lines changed\
          \ with a push"
      remove_source_branch_after_merge:
        type: "boolean"
        description: "Remove the source branch by default after merge"
      container_registry_enabled:
        type: "boolean"
        description: "Deprecated: Use :container_registry_access_level instead. Flag\
          \ indication if the container registry is enabled for that project"
      container_expiration_policy_attributes:
        $ref: "#/definitions/postApiV4Projects_container_expiration_policy_attributes"
      lfs_enabled:
        type: "boolean"
        description: "Flag indication if Git LFS is enabled for that project"
      visibility:
        type: "string"
        description: "The visibility of the project."
        enum:
        - "private"
        - "internal"
        - "public"
      public_builds:
        type: "boolean"
        description: "Deprecated: Use public_jobs instead."
      public_jobs:
        type: "boolean"
        description: "Perform public builds"
      request_access_enabled:
        type: "boolean"
        description: "Allow users to request member access"
      only_allow_merge_if_pipeline_succeeds:
        type: "boolean"
        description: "Only allow to merge if builds succeed"
      allow_merge_on_skipped_pipeline:
        type: "boolean"
        description: "Allow to merge if pipeline is skipped"
      only_allow_merge_if_all_discussions_are_resolved:
        type: "boolean"
        description: "Only allow to merge if all threads are resolved"
      tag_list:
        type: "array"
        description: "Deprecated: Use :topics instead"
        items:
          type: "string"
      topics:
        type: "array"
        description: "The list of topics for a project"
        items:
          type: "string"
      avatar:
        type: "file"
        description: "Avatar image for project"
      printing_merge_request_link_enabled:
        type: "boolean"
        description: "Show link to create/view merge request when pushing from the\
          \ command line"
      merge_method:
        type: "string"
        description: "The merge method used when merging merge requests"
        enum:
        - "ff"
        - "rebase_merge"
        - "merge"
      suggestion_commit_message:
        type: "string"
        description: "The commit message used to apply merge request suggestions"
      merge_commit_template:
        type: "string"
        description: "Template used to create merge commit message"
      squash_commit_template:
        type: "string"
        description: "Template used to create squash commit message"
      issue_branch_template:
        type: "string"
        description: "Template used to create a branch from an issue"
      initialize_with_readme:
        type: "boolean"
        description: "Initialize a project with a README.md"
      auto_devops_enabled:
        type: "boolean"
        description: "Flag indication if Auto DevOps is enabled"
      auto_devops_deploy_strategy:
        type: "string"
        description: "Auto Deploy strategy"
        enum:
        - "continuous"
        - "manual"
        - "timed_incremental"
      autoclose_referenced_issues:
        type: "boolean"
        description: "Flag indication if referenced issues auto-closing is enabled"
      repository_storage:
        type: "string"
        description: "Which storage shard the repository is on. Available only to\
          \ admins"
      packages_enabled:
        type: "boolean"
        description: "Enable project packages feature"
      squash_option:
        type: "string"
        description: "Squash default for project. One of `never`, `always`, `default_on`,\
          \ or `default_off`."
        enum:
        - "never"
        - "always"
        - "default_on"
        - "default_off"
      mr_default_target_self:
        type: "boolean"
        description: "Merge requests of this forked project targets itself by default"
      only_allow_merge_if_all_status_checks_passed:
        type: "boolean"
        description: "Blocks merge requests from merging unless all status checks\
          \ have passed"
      approvals_before_merge:
        type: "integer"
        format: "int32"
        description: "How many approvers should approve merge request by default"
      mirror:
        type: "boolean"
        description: "Enables pull mirroring in a project"
      mirror_trigger_builds:
        type: "boolean"
        description: "Pull mirroring triggers builds"
      external_authorization_classification_label:
        type: "string"
        description: "The classification label for the project"
      requirements_access_level:
        type: "string"
        description: "Requirements feature access level. One of `disabled`, `private`\
          \ or `enabled`"
        enum:
        - "disabled"
        - "private"
        - "enabled"
      prevent_merge_without_jira_issue:
        type: "boolean"
        description: "Require an associated issue from Jira"
      ci_default_git_depth:
        type: "integer"
        format: "int32"
        description: "Default number of revisions for shallow cloning"
      keep_latest_artifact:
        type: "boolean"
        description: "Indicates if the latest artifact should be kept for this project."
      ci_forward_deployment_enabled:
        type: "boolean"
        description: "Prevent older deployment jobs that are still pending"
      ci_forward_deployment_rollback_allowed:
        type: "boolean"
        description: "Allow job retries for rollback deployments"
      ci_allow_fork_pipelines_to_run_in_parent_project:
        type: "boolean"
        description: "Allow fork merge request pipelines to run in parent project"
      ci_separated_caches:
        type: "boolean"
        description: "Enable or disable separated caches based on branch protection."
      restrict_user_defined_variables:
        type: "boolean"
        description: "Restrict ability to override variables when triggering a pipeline"
      ci_pipeline_variables_minimum_override_role:
        type: "string"
        description: "Limit ability to override CI/CD variables when triggering a\
          \ pipeline to only users with at least the set minimum role"
        enum:
        - "no_one_allowed"
        - "developer"
        - "maintainer"
        - "owner"
      allow_pipeline_trigger_approve_deployment:
        type: "boolean"
        description: "Allow pipeline triggerer to approve deployments"
      mirror_user_id:
        type: "integer"
        format: "int32"
        description: "User responsible for all the activity surrounding a pull mirror\
          \ event. Can only be set by admins"
      only_mirror_protected_branches:
        type: "boolean"
        description: "Only mirror protected branches"
      mirror_branch_regex:
        type: "string"
        description: "Only mirror branches match regex"
      mirror_overwrites_diverged_branches:
        type: "boolean"
        description: "Pull mirror overwrites diverged branches"
      import_url:
        type: "string"
        description: "URL from which the project is imported"
      fallback_approvals_required:
        type: "integer"
        format: "int32"
        description: "Overall approvals required when no rule is present"
      issues_template:
        type: "string"
        description: "Default description for Issues. Description is parsed with GitLab\
          \ Flavored Markdown."
      merge_requests_template:
        type: "string"
        description: "Default description for merge requests. Description is parsed\
          \ with GitLab Flavored Markdown."
      merge_pipelines_enabled:
        type: "boolean"
        description: "Enable merged results pipelines."
      merge_trains_enabled:
        type: "boolean"
        description: "Enable merge trains."
      merge_trains_skip_train_allowed:
        type: "boolean"
        description: "Allow merge train merge requests to be merged without waiting\
          \ for pipelines to finish."
      ci_restrict_pipeline_cancellation_role:
        type: "string"
        description: "Roles allowed to cancel pipelines and jobs."
    description: "Update an existing project"
  postApiV4ProjectsIdShare:
    type: "object"
    required:
    - "group_access"
    - "group_id"
    properties:
      group_id:
        type: "integer"
        format: "int32"
        example: 1
        description: "The ID of a group"
      group_access:
        type: "integer"
        format: "int32"
        description: "The group access level"
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
      expires_at:
        type: "string"
        format: "date"
        description: "Share expiration date"
    description: "Share the project with a group"
  API_Entities_ProjectGroupLink:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      project_id:
        type: "integer"
        format: "int32"
        example: 1
      group_id:
        type: "integer"
        format: "int32"
        example: 1
      group_access:
        type: "integer"
        format: "int32"
        example: 10
      expires_at:
        type: "string"
        format: "date"
        example: "2016-09-26"
    description: "API_Entities_ProjectGroupLink model"
    example:
      expires_at: "2016-09-26"
      project_id: 1
      group_id: 1
      id: 1
      group_access: 10
  postApiV4ProjectsIdUploads:
    type: "object"
    required:
    - "file"
    properties:
      file:
        type: "file"
        description: "The attachment file to be uploaded"
    description: "Upload a file"
  API_Entities_ProjectUpload:
    type: "object"
    properties:
      alt:
        type: "string"
      url:
        type: "string"
      full_path:
        type: "string"
      markdown:
        type: "string"
    description: "API_Entities_ProjectUpload model"
    example:
      alt: "alt"
      markdown: "markdown"
      full_path: "full_path"
      url: "url"
  API_Entities_PublicGroupDetails:
    type: "object"
    properties:
      id:
        type: "string"
      web_url:
        type: "string"
      name:
        type: "string"
      avatar_url:
        type: "string"
      full_name:
        type: "string"
      full_path:
        type: "string"
    description: "API_Entities_PublicGroupDetails model"
    example:
      full_name: "full_name"
      web_url: "web_url"
      avatar_url: "avatar_url"
      name: "name"
      id: "id"
      full_path: "full_path"
  postApiV4ProjectsIdHousekeeping:
    type: "object"
    properties:
      task:
        type: "string"
        description: "`prune` to trigger manual prune of unreachable objects or `eager`\
          \ to trigger eager housekeeping."
        default: "eager"
        enum:
        - "eager"
        - "prune"
    description: "Start the housekeeping task for a project"
  putApiV4ProjectsIdTransfer:
    type: "object"
    required:
    - "namespace"
    properties:
      namespace:
        type: "string"
        example: "gitlab"
        description: "The ID or path of the new namespace"
    description: "Transfer a project to a new namespace"
  API_Entities_ProjectRepositoryStorage:
    type: "object"
    properties:
      disk_path:
        type: "string"
        example: "@hashed/6b/86/6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"
      project_id:
        type: "integer"
        format: "int32"
        example: 1
      repository_storage:
        type: "string"
        example: "default"
      created_at:
        type: "string"
        format: "date-time"
        example: "2012-10-12T17:04:47Z"
    description: "API_Entities_ProjectRepositoryStorage model"
    example:
      project_id: 1
      repository_storage: "default"
      created_at: "2012-10-12T17:04:47Z"
      disk_path: "@hashed/6b/86/6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"
  API_Entities_ProtectedBranch:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "main"
      push_access_levels:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_ProtectedRefAccess"
      merge_access_levels:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_ProtectedRefAccess"
      allow_force_push:
        type: "boolean"
      unprotect_access_levels:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_ProtectedRefAccess"
      code_owner_approval_required:
        type: "boolean"
      inherited:
        type: "boolean"
    description: "API_Entities_ProtectedBranch model"
    example:
      push_access_levels:
      - access_level: 40
        access_level_description: "Maintainers"
        deploy_key_id: 1
        user_id: 1
        group_id: 1
        id: 1
      - access_level: 40
        access_level_description: "Maintainers"
        deploy_key_id: 1
        user_id: 1
        group_id: 1
        id: 1
      merge_access_levels:
      - access_level: 40
        access_level_description: "Maintainers"
        deploy_key_id: 1
        user_id: 1
        group_id: 1
        id: 1
      - access_level: 40
        access_level_description: "Maintainers"
        deploy_key_id: 1
        user_id: 1
        group_id: 1
        id: 1
      inherited: true
      name: "main"
      id: 1
      allow_force_push: true
      unprotect_access_levels:
      - access_level: 40
        access_level_description: "Maintainers"
        deploy_key_id: 1
        user_id: 1
        group_id: 1
        id: 1
      - access_level: 40
        access_level_description: "Maintainers"
        deploy_key_id: 1
        user_id: 1
        group_id: 1
        id: 1
      code_owner_approval_required: true
  API_Entities_ProtectedRefAccess:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      access_level:
        type: "integer"
        format: "int32"
        example: 40
      access_level_description:
        type: "string"
        example: "Maintainers"
      deploy_key_id:
        type: "integer"
        format: "int32"
        example: 1
      user_id:
        type: "integer"
        format: "int32"
        example: 1
      group_id:
        type: "integer"
        format: "int32"
        example: 1
    example:
      access_level: 40
      access_level_description: "Maintainers"
      deploy_key_id: 1
      user_id: 1
      group_id: 1
      id: 1
  postApiV4ProjectsIdProtectedBranches:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "main"
        description: "The name of the protected branch"
      push_access_level:
        type: "integer"
        format: "int32"
        description: "Access levels allowed to push (defaults: `40`, maintainer access\
          \ level)"
        enum:
        - 30
        - 40
        - 60
        - 0
      merge_access_level:
        type: "integer"
        format: "int32"
        description: "Access levels allowed to merge (defaults: `40`, maintainer access\
          \ level)"
        enum:
        - 30
        - 40
        - 60
        - 0
      allow_force_push:
        type: "boolean"
        description: "Allow force push for all users with push access."
        default: false
      unprotect_access_level:
        type: "integer"
        format: "int32"
        description: "Access levels allowed to unprotect (defaults: `40`, maintainer\
          \ access level)"
        enum:
        - 30
        - 40
        - 60
      allowed_to_push:
        type: "array"
        description: "An array of users/groups allowed to push"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdProtectedBranches_allowed_to_push"
      allowed_to_merge:
        type: "array"
        description: "An array of users/groups allowed to merge"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdProtectedBranches_allowed_to_push"
      allowed_to_unprotect:
        type: "array"
        description: "An array of users/groups allowed to unprotect"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdProtectedBranches_allowed_to_unprotect"
      code_owner_approval_required:
        type: "boolean"
        description: "Prevent pushes to this branch if it matches an item in CODEOWNERS"
        default: false
    description: "Protect a single branch"
  patchApiV4ProjectsIdProtectedBranchesName:
    type: "object"
    properties:
      allow_force_push:
        type: "boolean"
        description: "Allow force push for all users with push access."
      unprotect_access_level:
        type: "integer"
        format: "int32"
        description: "Access levels allowed to unprotect (defaults: `40`, maintainer\
          \ access level)"
        enum:
        - 30
        - 40
        - 60
      allowed_to_push:
        type: "array"
        description: "An array of users/groups allowed to push"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdProtectedBranches_allowed_to_push"
      allowed_to_merge:
        type: "array"
        description: "An array of users/groups allowed to merge"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdProtectedBranches_allowed_to_push"
      allowed_to_unprotect:
        type: "array"
        description: "An array of users/groups allowed to unprotect"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdProtectedBranches_allowed_to_unprotect"
      code_owner_approval_required:
        type: "boolean"
        description: "Prevent pushes to this branch if it matches an item in CODEOWNERS"
        default: false
    description: "Update a protected branch"
  API_Entities_ProtectedTag:
    type: "object"
    properties:
      name:
        type: "string"
        example: "release-1-0"
      create_access_levels:
        $ref: "#/definitions/API_Entities_ProtectedRefAccess"
    description: "API_Entities_ProtectedTag model"
    example:
      create_access_levels:
        access_level: 40
        access_level_description: "Maintainers"
        deploy_key_id: 1
        user_id: 1
        group_id: 1
        id: 1
      name: "release-1-0"
  postApiV4ProjectsIdProtectedTags:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "release-1-0"
        description: "The name of the protected tag"
      create_access_level:
        type: "integer"
        format: "int32"
        example: 30
        description: "Access levels allowed to create (defaults: `40`, maintainer\
          \ access level)"
        enum:
        - 30
        - 40
        - 60
        - 0
      allowed_to_create:
        type: "array"
        description: "An array of users/groups allowed to create"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdProtectedTags_allowed_to_create"
    description: "Protect a single tag or wildcard"
  postApiV4ProjectsIdReleases:
    type: "object"
    required:
    - "tag_name"
    properties:
      tag_name:
        type: "string"
        description: "The tag where the release is created from"
      tag_message:
        type: "string"
        description: "Message to use if creating a new annotated tag"
      name:
        type: "string"
        description: "The release name"
      description:
        type: "string"
        description: "The description of the release. You can use Markdown"
      ref:
        type: "string"
        description: "If a tag specified in `tag_name` doesn't exist, the release\
          \ is created from `ref` and tagged with `tag_name`. It can be a commit SHA,\
          \ another tag name, or a branch name."
      assets:
        $ref: "#/definitions/postApiV4ProjectsIdReleases_assets"
      milestones:
        type: "array"
        description: "The title of each milestone the release is associated with.\
          \ GitLab Premium customers can specify group milestones. Cannot be combined\
          \ with `milestone_ids` parameter."
        items:
          type: "string"
      milestone_ids:
        type: "string"
        description: "The ID of each milestone the release is associated with. GitLab\
          \ Premium customers can specify group milestones. Cannot be combined with\
          \ `milestones` parameter."
      released_at:
        type: "string"
        format: "date-time"
        description: "Date and time for the release. Defaults to the current time.\
          \ Expected in ISO 8601 format (`2019-03-15T08:00:00Z`). Only provide this\
          \ field if creating an upcoming or historical release."
      legacy_catalog_publish:
        type: "boolean"
        description: "If true, the release will be published to the CI catalog. This\
          \ parameter is for internal use only and will be removed in a future release.\
          \ If the feature flag ci_release_cli_catalog_publish_option is disabled,\
          \ this parameter will be ignored and the release will published to the CI\
          \ catalog as it was before this parameter was introduced."
    description: "Create a release"
  putApiV4ProjectsIdReleasesTagName:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The release name"
      description:
        type: "string"
        description: "The description of the release. You can use Markdown"
      released_at:
        type: "string"
        format: "date-time"
        description: "The date when the release is/was ready. Expected in ISO 8601\
          \ format (`2019-03-15T08:00:00Z`)"
      milestones:
        type: "array"
        description: "The title of each milestone to associate with the release. GitLab\
          \ Premium customers can specify group milestones. Cannot be combined with\
          \ `milestone_ids` parameter. To remove all milestones from the release,\
          \ specify `[]`"
        items:
          type: "string"
      milestone_ids:
        type: "string"
        description: "The ID of each milestone the release is associated with. GitLab\
          \ Premium customers can specify group milestones. Cannot be combined with\
          \ `milestones` parameter. To remove all milestones from the release, specify\
          \ `[]`"
    description: "Update a release"
  API_Entities_RemoteMirror:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 101486
      enabled:
        type: "boolean"
        example: true
      url:
        type: "string"
        example: "https://*****:*****@example.com/gitlab/example.git"
      update_status:
        type: "string"
        example: "finished"
      last_update_at:
        type: "string"
        format: "date-time"
        example: "2020-01-06T17:32:02.823Z"
      last_update_started_at:
        type: "string"
        format: "date-time"
        example: "2020-01-06T17:32:02.823Z"
      last_successful_update_at:
        type: "string"
        format: "date-time"
        example: "2020-01-06T17:31:55.864Z"
      last_error:
        type: "integer"
        format: "int32"
        example: "The remote mirror URL is invalid."
      only_protected_branches:
        type: "boolean"
      keep_divergent_refs:
        type: "boolean"
      auth_method:
        type: "string"
        example: "password"
      mirror_branch_regex:
        type: "string"
    description: "API_Entities_RemoteMirror model"
    example:
      keep_divergent_refs: true
      update_status: "finished"
      auth_method: "password"
      only_protected_branches: true
      last_update_at: "2020-01-06T17:32:02.823Z"
      last_update_started_at: "2020-01-06T17:32:02.823Z"
      last_successful_update_at: "2020-01-06T17:31:55.864Z"
      id: 101486
      last_error: "The remote mirror URL is invalid."
      enabled: true
      url: "https://*****:*****@example.com/gitlab/example.git"
      mirror_branch_regex: "mirror_branch_regex"
  postApiV4ProjectsIdRemoteMirrors:
    type: "object"
    required:
    - "url"
    properties:
      url:
        type: "string"
        example: "https://*****:*****@example.com/gitlab/example.git"
        description: "The URL for a remote mirror"
      enabled:
        type: "boolean"
        description: "Determines if the mirror is enabled"
      auth_method:
        type: "string"
        description: "Determines the mirror authentication method"
        enum:
        - "ssh_public_key"
        - "password"
      keep_divergent_refs:
        type: "boolean"
        description: "Determines if divergent refs are kept on the target"
      only_protected_branches:
        type: "boolean"
        description: "Determines if only protected branches are mirrored"
      mirror_branch_regex:
        type: "string"
        description: "Determines if only matched branches are mirrored"
    description: "Create remote mirror for a project"
  putApiV4ProjectsIdRemoteMirrorsMirrorId:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        example: true
        description: "Determines if the mirror is enabled"
      auth_method:
        type: "string"
        description: "Determines the mirror authentication method"
      keep_divergent_refs:
        type: "boolean"
        description: "Determines if divergent refs are kept on the target"
      only_protected_branches:
        type: "boolean"
        description: "Determines if only protected branches are mirrored"
      mirror_branch_regex:
        type: "string"
        description: "Determines if only matched branches are mirrored"
    description: "Update the attributes of a single remote mirror"
  API_Entities_TreeObject:
    type: "object"
    properties:
      id:
        type: "string"
        example: "a1e8f8d745cc87e3a9248358d9352bb7f9a0aeba"
      name:
        type: "string"
        example: "html"
      type:
        type: "string"
        example: "tree"
      path:
        type: "string"
        example: "files/html"
      mode:
        type: "string"
        example: "040000"
    description: "API_Entities_TreeObject model"
    example:
      mode: "040000"
      path: "files/html"
      name: "html"
      id: "a1e8f8d745cc87e3a9248358d9352bb7f9a0aeba"
      type: "tree"
  API_Entities_Compare:
    type: "object"
    properties:
      commit:
        $ref: "#/definitions/API_Entities_Commit"
      commits:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_Commit"
      diffs:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_Diff"
      compare_timeout:
        type: "boolean"
      compare_same_ref:
        type: "boolean"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab/gitlab-foss/-/compare/main...feature"
    description: "API_Entities_Compare model"
    example:
      web_url: "https://gitlab.example.com/gitlab/gitlab-foss/-/compare/main...feature"
      compare_timeout: true
      compare_same_ref: true
      commit:
        author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      commits:
      - author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      - author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      diffs:
      - generated_file: true
        new_path: "doc/update/5.4-to-6.0.md"
        renamed_file: true
        a_mode: "100755"
        deleted_file: true
        b_mode: "100644"
        new_file: true
        diff: "@@ -71,6 +71,8 @@\\n..."
        old_path: "doc/update/5.4-to-6.0.md"
      - generated_file: true
        new_path: "doc/update/5.4-to-6.0.md"
        renamed_file: true
        a_mode: "100755"
        deleted_file: true
        b_mode: "100644"
        new_file: true
        diff: "@@ -71,6 +71,8 @@\\n..."
        old_path: "doc/update/5.4-to-6.0.md"
  API_Entities_Contributor:
    type: "object"
    properties:
      name:
        type: "string"
        example: "John Doe"
      email:
        type: "string"
        example: "johndoe@example.com"
      commits:
        type: "integer"
        format: "int32"
        example: 117
      additions:
        type: "integer"
        format: "int32"
        example: 3
      deletions:
        type: "integer"
        format: "int32"
        example: 5
    description: "API_Entities_Contributor model"
    example:
      additions: 3
      deletions: 5
      name: "John Doe"
      commits: 117
      email: "johndoe@example.com"
  API_Entities_Changelog:
    type: "object"
    properties:
      notes:
        type: "string"
    description: "API_Entities_Changelog model"
    example:
      notes: "notes"
  postApiV4ProjectsIdRepositoryChangelog:
    type: "object"
    required:
    - "version"
    properties:
      version:
        type: "string"
        example: "1.0.0"
        description: "The version of the release, using the semantic versioning format"
      from:
        type: "string"
        example: "ed899a2f4b50b4370feeea94676502b42383c746"
        description: "The first commit in the range of commits to use for the changelog"
      to:
        type: "string"
        example: "6104942438c14ec7bd21c6cd5bd995272b3faff6"
        description: "The last commit in the range of commits to use for the changelog"
      date:
        type: "string"
        format: "date-time"
        example: "2021-09-20T11:50:22.001+00:00"
        description: "The date and time of the release"
      trailer:
        type: "string"
        example: "Changelog"
        description: "The Git trailer to use for determining if commits are to be\
          \ included in the changelog"
        default: "Changelog"
      branch:
        type: "string"
        example: "main"
        description: "The branch to commit the changelog changes to"
      config_file:
        type: "string"
        example: ".gitlab/changelog_config.yml"
        description: "The file path to the configuration file as stored in the project's\
          \ Git repository. Defaults to '.gitlab/changelog_config.yml'"
      file:
        type: "string"
        example: "CHANGELOG.md"
        description: "The file to commit the changelog changes to"
        default: "CHANGELOG.md"
      message:
        type: "string"
        example: "Initial commit"
        description: "The commit message to use when committing the changelog"
    description: "Generates a changelog section for a release and commits it in a\
      \ changelog file"
  postApiV4ProjectsIdAccessTokens:
    type: "object"
    required:
    - "expires_at"
    - "name"
    - "scopes"
    properties:
      name:
        type: "string"
        example: "test"
        description: "Resource access token name"
      scopes:
        type: "array"
        example:
        - "api"
        - "read_repository"
        description: "The permissions of the token"
        items:
          type: "string"
          enum:
          - "api"
          - "read_api"
          - "create_runner"
          - "k8s_proxy"
          - "read_repository"
          - "write_repository"
          - "read_observability"
          - "write_observability"
          - "ai_features"
      expires_at:
        type: "string"
        format: "date"
        example: "\"2021-01-31"
        description: "The expiration date of the token"
      access_level:
        type: "integer"
        format: "int32"
        example: 40
        description: "The access level of the token in the project"
        default: 40
        enum:
        - 10
        - 20
        - 30
        - 40
        - 50
    description: "Create a resource access token"
  postApiV4ProjectsIdAccessTokensTokenIdRotate:
    type: "object"
    properties:
      expires_at:
        type: "string"
        format: "date"
        example: "2021-01-31"
        description: "The expiration date of the token"
    description: "Rotate a resource access token"
  API_Entities_ResourceMilestoneEvent:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 142
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
      created_at:
        type: "string"
        format: "date-time"
        example: "2018-08-20T13:38:20.077Z"
      resource_type:
        type: "string"
        example: "Issue"
      resource_id:
        type: "integer"
        format: "int32"
        example: 253
      milestone:
        $ref: "#/definitions/API_Entities_Milestone"
      action:
        type: "string"
        example: "add"
      state:
        type: "string"
        example: "active"
    description: "API_Entities_ResourceMilestoneEvent model"
    example:
      milestone:
        iid: "iid"
        due_date: "due_date"
        description: "description"
        created_at: "created_at"
        title: "title"
        expired: "expired"
        updated_at: "updated_at"
        web_url: "web_url"
        project_id: "project_id"
        group_id: "group_id"
        id: "id"
        state: "state"
        start_date: "start_date"
      resource_type: "Issue"
      created_at: "2018-08-20T13:38:20.077Z"
      resource_id: 253
      action: "add"
      id: 142
      state: "active"
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
  putApiV4ProjectsIdRepositorySubmodulesSubmodule:
    type: "object"
    required:
    - "branch"
    - "commit_sha"
    properties:
      commit_sha:
        type: "string"
        example: "ed899a2f4b50b4370feeea94676502b42383c746"
        description: "Commit sha to update the submodule to."
      branch:
        type: "string"
        example: "main"
        description: "Name of the branch to commit into."
      commit_message:
        type: "string"
        example: "Commit message"
        description: "Commit message. If no message is provided a default one will\
          \ be set."
    description: "Update existing submodule reference in repository"
  API_Entities_Tag:
    type: "object"
    properties:
      name:
        type: "string"
        example: "v1.0.0"
      message:
        type: "string"
        example: "Release v1.0.0"
      target:
        type: "string"
        example: "2695effb5807a22ff3d138d593fd856244e155e7"
      commit:
        $ref: "#/definitions/API_Entities_Commit"
      release:
        $ref: "#/definitions/API_Entities_TagRelease"
      protected:
        type: "boolean"
        example: true
      created_at:
        type: "string"
        format: "date-time"
        example: "2023-10-12T02:16:52.000Z"
    description: "API_Entities_Tag model"
    example:
      protected: true
      release:
        tag_name: "1.0.0"
        description: "Amazing release. Wow"
      name: "v1.0.0"
      commit:
        author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      created_at: "2023-10-12T02:16:52.000Z"
      message: "Release v1.0.0"
      target: "2695effb5807a22ff3d138d593fd856244e155e7"
  API_Entities_TagRelease:
    type: "object"
    properties:
      tag_name:
        type: "string"
        example: "1.0.0"
      description:
        type: "string"
        example: "Amazing release. Wow"
    example:
      tag_name: "1.0.0"
      description: "Amazing release. Wow"
  postApiV4ProjectsIdRepositoryTags:
    type: "object"
    required:
    - "ref"
    - "tag_name"
    properties:
      tag_name:
        type: "string"
        example: "v.1.0.0"
        description: "The name of the tag"
      ref:
        type: "string"
        example: "2695effb5807a22ff3d138d593fd856244e155e7"
        description: "The commit sha or branch name"
      message:
        type: "string"
        example: "Release 1.0.0"
        description: "Specifying a message creates an annotated tag"
    description: "Create a new repository tag"
  API_Entities_TagSignature:
    type: "object"
    properties:
      signature_type:
        type: "string"
        example: "PGP"
      signature:
        type: "string"
    description: "API_Entities_TagSignature model"
    example:
      signature: "signature"
      signature_type: "PGP"
  postApiV4ProjectsIdWikis:
    type: "object"
    required:
    - "content"
    - "title"
    properties:
      title:
        type: "string"
        description: "Title of a wiki page"
      front_matter:
        $ref: "#/definitions/postApiV4GroupsIdWikis_front_matter"
      content:
        type: "string"
        description: "Content of a wiki page"
      format:
        type: "string"
        description: "Format of a wiki page. Available formats are markdown, rdoc,\
          \ asciidoc and org"
        default: "markdown"
        enum:
        - "markdown"
        - "rdoc"
        - "asciidoc"
        - "org"
    description: "Create a wiki page"
  putApiV4ProjectsIdWikisSlug:
    type: "object"
    properties:
      title:
        type: "string"
        description: "Title of a wiki page"
      front_matter:
        $ref: "#/definitions/postApiV4GroupsIdWikis_front_matter"
      content:
        type: "string"
        description: "Content of a wiki page"
      format:
        type: "string"
        description: "Format of a wiki page. Available formats are markdown, rdoc,\
          \ asciidoc and org"
        default: "markdown"
        enum:
        - "markdown"
        - "rdoc"
        - "asciidoc"
        - "org"
    description: "Update a wiki page"
  postApiV4ProjectsIdWikisAttachments:
    type: "object"
    required:
    - "file"
    properties:
      file:
        type: "file"
        description: "The attachment file to be uploaded"
      branch:
        type: "string"
        description: "The name of the branch"
    description: "Upload an attachment to the wiki repository"
  API_Entities_MetricImage:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 23
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-11-13T00:06:18.084Z"
      filename:
        type: "string"
        example: "file.png"
      file_path:
        type: "string"
        example: "/uploads/-/system/alert_metric_image/file/23/file.png"
      url:
        type: "string"
        example: "https://example.com/metric"
      url_text:
        type: "string"
        example: "An example metric"
    description: "API_Entities_MetricImage model"
    example:
      file_path: "/uploads/-/system/alert_metric_image/file/23/file.png"
      url_text: "An example metric"
      filename: "file.png"
      created_at: "2020-11-13T00:06:18.084Z"
      id: 23
      url: "https://example.com/metric"
  API_Entities_Clusters_AgentTokenBasic:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      agent_id:
        type: "string"
      status:
        type: "string"
      created_at:
        type: "string"
      created_by_user_id:
        type: "string"
    description: "API_Entities_Clusters_AgentTokenBasic model"
    example:
      agent_id: "agent_id"
      name: "name"
      description: "description"
      created_at: "created_at"
      id: "id"
      created_by_user_id: "created_by_user_id"
      status: "status"
  API_Entities_Clusters_AgentToken:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      agent_id:
        type: "string"
      status:
        type: "string"
      created_at:
        type: "string"
      created_by_user_id:
        type: "string"
      last_used_at:
        type: "string"
    description: "API_Entities_Clusters_AgentToken model"
    example:
      last_used_at: "last_used_at"
      agent_id: "agent_id"
      name: "name"
      description: "description"
      created_at: "created_at"
      id: "id"
      created_by_user_id: "created_by_user_id"
      status: "status"
  postApiV4ProjectsIdClusterAgentsAgentIdTokens:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name for the token"
      description:
        type: "string"
        description: "The description for the token"
    description: "Create an agent token"
  API_Entities_Clusters_AgentTokenWithToken:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      agent_id:
        type: "string"
      status:
        type: "string"
      created_at:
        type: "string"
      created_by_user_id:
        type: "string"
      last_used_at:
        type: "string"
      token:
        type: "string"
    description: "API_Entities_Clusters_AgentTokenWithToken model"
    example:
      last_used_at: "last_used_at"
      agent_id: "agent_id"
      name: "name"
      description: "description"
      created_at: "created_at"
      id: "id"
      created_by_user_id: "created_by_user_id"
      status: "status"
      token: "token"
  postApiV4ProjectsIdPackagesComposer:
    type: "object"
    properties:
      branch:
        type: "string"
        example: "release"
        description: "The name of the branch"
      tag:
        type: "string"
        example: "v1.0.0"
        description: "The name of the tag"
    description: "Composer packages endpoint for registering packages"
  API_Entities_ConanPackage_ConanPackageSnapshot:
    type: "object"
    properties:
      package_snapshot:
        type: "object"
        example: "{ \"conan_package.tgz\": \"749b29bdf72587081ca03ec033ee59dc\" }"
        properties: {}
    description: "API_Entities_ConanPackage_ConanPackageSnapshot model"
    example:
      package_snapshot: "{ \"conan_package.tgz\": \"749b29bdf72587081ca03ec033ee59dc\"\
        \ }"
  API_Entities_ConanPackage_ConanRecipeSnapshot:
    type: "object"
    properties:
      recipe_snapshot:
        type: "object"
        example: "{ \"conan_sources.tgz\": \"eadf19b33f4c3c7e113faabf26e76277\" }"
        properties: {}
    description: "API_Entities_ConanPackage_ConanRecipeSnapshot model"
    example:
      recipe_snapshot: "{ \"conan_sources.tgz\": \"eadf19b33f4c3c7e113faabf26e76277\"\
        \ }"
  API_Entities_ConanPackage_ConanPackageManifest:
    type: "object"
    properties:
      package_urls:
        type: "object"
        example: "{ \"conan_package.tgz\": \"https://gitlab.example.com/api/v4/packages/conan/v1/files/my-package/1.0/my-group+my-project/stable/packages/103f6067a947f366ef91fc1b7da351c588d1827f/0/conan_package.tgz\""
        properties: {}
    description: "API_Entities_ConanPackage_ConanPackageManifest model"
    example:
      package_urls: "{ \"conan_package.tgz\": \"https://gitlab.example.com/api/v4/packages/conan/v1/files/my-package/1.0/my-group+my-project/stable/packages/103f6067a947f366ef91fc1b7da351c588d1827f/0/conan_package.tgz\""
  API_Entities_ConanPackage_ConanRecipeManifest:
    type: "object"
    properties:
      recipe_urls:
        type: "object"
        example: "{ \"conan_sources.tgz\": \"https://gitlab.example.com/api/v4/packages/conan/v1/files/my-package/1.0/my-group+my-project/stable/0/export/conan_sources.tgz\"\
          \ }"
        properties: {}
    description: "API_Entities_ConanPackage_ConanRecipeManifest model"
    example:
      recipe_urls: "{ \"conan_sources.tgz\": \"https://gitlab.example.com/api/v4/packages/conan/v1/files/my-package/1.0/my-group+my-project/stable/0/export/conan_sources.tgz\"\
        \ }"
  API_Entities_ConanPackage_ConanUploadUrls:
    type: "object"
    properties:
      upload_urls:
        type: "object"
        example: "{ \"conan_package.tgz\": \"https://gitlab.example.com/api/v4/packages/conan/v1/files/my-package/1.0/my-group+my-project/stable/0/package/103f6067a947f366ef91fc1b7da351c588d1827f/0/conan_package.tgz\"\
          \ }"
        properties: {}
    description: "API_Entities_ConanPackage_ConanUploadUrls model"
    example:
      upload_urls: "{ \"conan_package.tgz\": \"https://gitlab.example.com/api/v4/packages/conan/v1/files/my-package/1.0/my-group+my-project/stable/0/package/103f6067a947f366ef91fc1b7da351c588d1827f/0/conan_package.tgz\"\
        \ }"
  putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName:
    type: "object"
    required:
    - "file"
    properties:
      file:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
    description: "Upload recipe package files"
  ? putApiV4ProjectsIdPackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName
  : type: "object"
    required:
    - "file"
    properties:
      file:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
    description: "Upload package files"
  putApiV4ProjectsIdPackagesDebianFileName:
    type: "object"
    required:
    - "component"
    - "file"
    properties:
      file:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
      distribution:
        type: "string"
        description: "The Debian Codename or Suite"
      component:
        type: "string"
        description: "The Debian Component"
    description: "Upload Debian package"
  putApiV4ProjectsIdPackagesDebianFileNameAuthorize:
    type: "object"
    required:
    - "component"
    properties:
      distribution:
        type: "string"
        description: "The Debian Codename or Suite"
      component:
        type: "string"
        description: "The Debian Component"
    description: "Authorize Debian package upload"
  API_Entities_ErrorTracking_ClientKey:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      active:
        type: "boolean"
      public_key:
        type: "string"
        example: "glet_aa77551d849c083f76d0bc545ed053a3"
      sentry_dsn:
        type: "string"
        example: "https://glet_aa77551d849c083f76d0bc545ed053a3@example.com/errortracking/api/v1/projects/5"
    description: "API_Entities_ErrorTracking_ClientKey model"
    example:
      public_key: "glet_aa77551d849c083f76d0bc545ed053a3"
      active: true
      id: 1
      sentry_dsn: "https://glet_aa77551d849c083f76d0bc545ed053a3@example.com/errortracking/api/v1/projects/5"
  API_Entities_FeatureFlag:
    type: "object"
    properties:
      name:
        type: "string"
        example: "merge_train"
      description:
        type: "string"
        example: "merge train feature flag"
      active:
        type: "boolean"
      version:
        type: "string"
        example: "new_version_flag"
      created_at:
        type: "string"
        format: "date-time"
        example: "2019-11-04T08:13:51.423Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2019-11-04T08:13:51.423Z"
      scopes:
        type: "string"
      strategies:
        $ref: "#/definitions/API_Entities_FeatureFlag_Strategy"
    description: "API_Entities_FeatureFlag model"
    example:
      updated_at: "2019-11-04T08:13:51.423Z"
      strategies:
        name: "userWithId"
        id: 1
        scopes:
          environment_scope: "production"
          id: 1
        user_list:
          iid: 1
          name: "user_list"
          user_xids: "user1,user2"
          id: 1
        parameters: "{\"userIds\": \"user1\"}"
      name: "merge_train"
      description: "merge train feature flag"
      active: true
      created_at: "2019-11-04T08:13:51.423Z"
      scopes: "scopes"
      version: "new_version_flag"
  API_Entities_FeatureFlag_Strategy:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "userWithId"
      parameters:
        type: "string"
        example: "{\"userIds\": \"user1\"}"
      scopes:
        $ref: "#/definitions/API_Entities_FeatureFlag_Scope"
      user_list:
        $ref: "#/definitions/API_Entities_FeatureFlag_BasicUserList"
    example:
      name: "userWithId"
      id: 1
      scopes:
        environment_scope: "production"
        id: 1
      user_list:
        iid: 1
        name: "user_list"
        user_xids: "user1,user2"
        id: 1
      parameters: "{\"userIds\": \"user1\"}"
  API_Entities_FeatureFlag_Scope:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      environment_scope:
        type: "string"
        example: "production"
    example:
      environment_scope: "production"
      id: 1
  API_Entities_FeatureFlag_BasicUserList:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      iid:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "user_list"
      user_xids:
        type: "string"
        example: "user1,user2"
    example:
      iid: 1
      name: "user_list"
      user_xids: "user1,user2"
      id: 1
  postApiV4ProjectsIdFeatureFlags:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the feature flag"
      description:
        type: "string"
        description: "The description of the feature flag"
      active:
        type: "boolean"
        description: "The active state of the flag. Defaults to `true`. Supported\
          \ in GitLab 13.3 and later"
      version:
        type: "string"
        description: "The version of the feature flag. Must be `new_version_flag`.\
          \ Omit to create a Legacy feature flag."
      strategies:
        type: "array"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdFeatureFlags_strategies"
    description: "Create a new feature flag"
  putApiV4ProjectsIdFeatureFlagsFeatureFlagName:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The new name of the feature flag. Supported in GitLab 13.3 and\
          \ later"
      description:
        type: "string"
        description: "The description of the feature flag"
      active:
        type: "boolean"
        description: "The active state of the flag. Supported in GitLab 13.3 and later"
      strategies:
        type: "array"
        items:
          $ref: "#/definitions/putApiV4ProjectsIdFeatureFlagsFeatureFlagName_strategies"
    description: "Update a feature flag"
  API_Entities_FeatureFlag_UserList:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      iid:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "user_list"
      user_xids:
        type: "string"
        example: "user1,user2"
      project_id:
        type: "integer"
        format: "int32"
        example: 2
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-02-04T08:13:10.507Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2020-02-04T08:13:10.507Z"
      path:
        type: "string"
      edit_path:
        type: "string"
    description: "API_Entities_FeatureFlag_UserList model"
    example:
      path: "path"
      updated_at: "2020-02-04T08:13:10.507Z"
      iid: 1
      project_id: 2
      name: "user_list"
      created_at: "2020-02-04T08:13:10.507Z"
      user_xids: "user1,user2"
      id: 1
      edit_path: "edit_path"
  postApiV4ProjectsIdFeatureFlagsUserLists:
    type: "object"
    required:
    - "name"
    - "user_xids"
    properties:
      name:
        type: "string"
        description: "The name of the list"
      user_xids:
        type: "string"
        description: "A comma separated list of external user ids"
    description: "Create a feature flag user list"
  putApiV4ProjectsIdFeatureFlagsUserListsIid:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the list"
      user_xids:
        type: "string"
        description: "A comma separated list of external user ids"
    description: "Update a feature flag user list"
  putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileNameAuthorize:
    type: "object"
    required:
    - "package_version"
    - "path"
    properties:
      package_version:
        type: "string"
        description: "Package version"
      status:
        type: "string"
        description: "Package status"
        enum:
        - "default"
        - "hidden"
      path:
        type: "integer"
        format: "int32"
    description: "Workhorse authorize generic package file"
  putApiV4ProjectsIdPackagesGenericPackageName*packageVersion(*path)FileName:
    type: "object"
    required:
    - "file"
    - "package_version"
    properties:
      package_version:
        type: "string"
        description: "Package version"
      path:
        type: "string"
        description: "File directory path"
      status:
        type: "string"
        description: "Package status"
        enum:
        - "default"
        - "hidden"
      file:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
      select:
        type: "string"
        enum:
        - "package_file"
    description: "Upload package file"
  API_Entities_GoModuleVersion:
    type: "object"
    properties:
      Version:
        type: "string"
        example: "v1.0.0"
      Time:
        type: "string"
        example: "1617822312 -0600"
    description: "API_Entities_GoModuleVersion model"
    example:
      Version: "v1.0.0"
      Time: "1617822312 -0600"
  postApiV4ProjectsIdPackagesHelmApiChannelCharts:
    type: "object"
    required:
    - "chart"
    properties:
      chart:
        type: "file"
        description: "The chart file to be published (generated by Multipart middleware)"
    description: "Upload a chart"
  API_Entities_MergeRequestApprovals:
    type: "object"
    properties:
      user_has_approved:
        type: "boolean"
      user_can_approve:
        type: "boolean"
      approved:
        type: "boolean"
      approved_by:
        $ref: "#/definitions/API_Entities_Approvals"
    description: "API_Entities_MergeRequestApprovals model"
    example:
      user_can_approve: true
      approved: true
      approved_by:
        user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
      user_has_approved: true
  API_Entities_Approvals:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/API_Entities_UserBasic"
    example:
      user:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
  postApiV4ProjectsIdMergeRequestsMergeRequestIidApprove:
    type: "object"
    properties:
      sha:
        type: "string"
        description: "When present, must have the HEAD SHA of the source branch"
      approval_password:
        type: "string"
        example: "secret"
        description: "Current user's password if project is set to require explicit\
          \ auth on approval"
    description: "Approve a merge request"
  EE_API_Entities_MergeRequestApprovalState:
    type: "object"
    properties:
      approval_rules_overwritten:
        type: "boolean"
      rules:
        type: "array"
        items:
          $ref: "#/definitions/EE_API_Entities_MergeRequestApprovalStateRule"
    description: "EE_API_Entities_MergeRequestApprovalState model"
    example:
      rules:
      - approvals_required: 2
        groups:
        - request_access_enabled: "request_access_enabled"
          repository_storage: "repository_storage"
          ldap_access: "ldap_access"
          description: "description"
          share_with_group_lock: "share_with_group_lock"
          created_at: "created_at"
          mentions_disabled: "mentions_disabled"
          custom_attributes:
            value: "bar"
            key: "foo"
          marked_for_deletion_on: "marked_for_deletion_on"
          lock_duo_features_enabled: "lock_duo_features_enabled"
          path: "path"
          file_template_project_id: "file_template_project_id"
          ldap_cn: "ldap_cn"
          project_creation_level: "project_creation_level"
          wiki_access_level: "wiki_access_level"
          emails_enabled: true
          lock_math_rendering_limits_enabled: true
          id: "id"
          full_path: "full_path"
          lfs_enabled: "lfs_enabled"
          emails_disabled: true
          default_branch_protection_defaults: "default_branch_protection_defaults"
          visibility: "visibility"
          two_factor_grace_period: "two_factor_grace_period"
          require_two_factor_authentication: "require_two_factor_authentication"
          math_rendering_limits_enabled: true
          ldap_group_links:
            filter: "id >= 500"
            provider: "ldapmain"
            cn: "ldap-group-1"
            group_access: 10
          subgroup_creation_level: "subgroup_creation_level"
          auto_devops_enabled: "auto_devops_enabled"
          full_name: "full_name"
          web_url: "web_url"
          avatar_url: "avatar_url"
          saml_group_links:
            access_level: 40
            name: "saml-group-1"
            member_role_id: 12
          parent_id: "parent_id"
          organization_id: "organization_id"
          duo_features_enabled: "duo_features_enabled"
          name: "name"
          shared_runners_setting: "shared_runners_setting"
          default_branch: "default_branch"
          default_branch_protection: "default_branch_protection"
          statistics:
            wiki_size: "wiki_size"
            packages_size: "packages_size"
            lfs_objects_size: "lfs_objects_size"
            job_artifacts_size: "job_artifacts_size"
            repository_size: "repository_size"
            storage_size: "storage_size"
            uploads_size: "uploads_size"
            snippets_size: "snippets_size"
            pipeline_artifacts_size: "pipeline_artifacts_size"
        - request_access_enabled: "request_access_enabled"
          repository_storage: "repository_storage"
          ldap_access: "ldap_access"
          description: "description"
          share_with_group_lock: "share_with_group_lock"
          created_at: "created_at"
          mentions_disabled: "mentions_disabled"
          custom_attributes:
            value: "bar"
            key: "foo"
          marked_for_deletion_on: "marked_for_deletion_on"
          lock_duo_features_enabled: "lock_duo_features_enabled"
          path: "path"
          file_template_project_id: "file_template_project_id"
          ldap_cn: "ldap_cn"
          project_creation_level: "project_creation_level"
          wiki_access_level: "wiki_access_level"
          emails_enabled: true
          lock_math_rendering_limits_enabled: true
          id: "id"
          full_path: "full_path"
          lfs_enabled: "lfs_enabled"
          emails_disabled: true
          default_branch_protection_defaults: "default_branch_protection_defaults"
          visibility: "visibility"
          two_factor_grace_period: "two_factor_grace_period"
          require_two_factor_authentication: "require_two_factor_authentication"
          math_rendering_limits_enabled: true
          ldap_group_links:
            filter: "id >= 500"
            provider: "ldapmain"
            cn: "ldap-group-1"
            group_access: 10
          subgroup_creation_level: "subgroup_creation_level"
          auto_devops_enabled: "auto_devops_enabled"
          full_name: "full_name"
          web_url: "web_url"
          avatar_url: "avatar_url"
          saml_group_links:
            access_level: 40
            name: "saml-group-1"
            member_role_id: 12
          parent_id: "parent_id"
          organization_id: "organization_id"
          duo_features_enabled: "duo_features_enabled"
          name: "name"
          shared_runners_setting: "shared_runners_setting"
          default_branch: "default_branch"
          default_branch_protection: "default_branch_protection"
          statistics:
            wiki_size: "wiki_size"
            packages_size: "packages_size"
            lfs_objects_size: "lfs_objects_size"
            job_artifacts_size: "job_artifacts_size"
            repository_size: "repository_size"
            storage_size: "storage_size"
            uploads_size: "uploads_size"
            snippets_size: "snippets_size"
            pipeline_artifacts_size: "pipeline_artifacts_size"
        section: "Backend"
        overridden: true
        eligible_approvers:
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        users:
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        code_owner: true
        approved_by:
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        approved: true
        rule_type: "regular"
        source_rule:
          approvals_required: 2
        name: "QA"
        contains_hidden_groups: true
        id: 1
      - approvals_required: 2
        groups:
        - request_access_enabled: "request_access_enabled"
          repository_storage: "repository_storage"
          ldap_access: "ldap_access"
          description: "description"
          share_with_group_lock: "share_with_group_lock"
          created_at: "created_at"
          mentions_disabled: "mentions_disabled"
          custom_attributes:
            value: "bar"
            key: "foo"
          marked_for_deletion_on: "marked_for_deletion_on"
          lock_duo_features_enabled: "lock_duo_features_enabled"
          path: "path"
          file_template_project_id: "file_template_project_id"
          ldap_cn: "ldap_cn"
          project_creation_level: "project_creation_level"
          wiki_access_level: "wiki_access_level"
          emails_enabled: true
          lock_math_rendering_limits_enabled: true
          id: "id"
          full_path: "full_path"
          lfs_enabled: "lfs_enabled"
          emails_disabled: true
          default_branch_protection_defaults: "default_branch_protection_defaults"
          visibility: "visibility"
          two_factor_grace_period: "two_factor_grace_period"
          require_two_factor_authentication: "require_two_factor_authentication"
          math_rendering_limits_enabled: true
          ldap_group_links:
            filter: "id >= 500"
            provider: "ldapmain"
            cn: "ldap-group-1"
            group_access: 10
          subgroup_creation_level: "subgroup_creation_level"
          auto_devops_enabled: "auto_devops_enabled"
          full_name: "full_name"
          web_url: "web_url"
          avatar_url: "avatar_url"
          saml_group_links:
            access_level: 40
            name: "saml-group-1"
            member_role_id: 12
          parent_id: "parent_id"
          organization_id: "organization_id"
          duo_features_enabled: "duo_features_enabled"
          name: "name"
          shared_runners_setting: "shared_runners_setting"
          default_branch: "default_branch"
          default_branch_protection: "default_branch_protection"
          statistics:
            wiki_size: "wiki_size"
            packages_size: "packages_size"
            lfs_objects_size: "lfs_objects_size"
            job_artifacts_size: "job_artifacts_size"
            repository_size: "repository_size"
            storage_size: "storage_size"
            uploads_size: "uploads_size"
            snippets_size: "snippets_size"
            pipeline_artifacts_size: "pipeline_artifacts_size"
        - request_access_enabled: "request_access_enabled"
          repository_storage: "repository_storage"
          ldap_access: "ldap_access"
          description: "description"
          share_with_group_lock: "share_with_group_lock"
          created_at: "created_at"
          mentions_disabled: "mentions_disabled"
          custom_attributes:
            value: "bar"
            key: "foo"
          marked_for_deletion_on: "marked_for_deletion_on"
          lock_duo_features_enabled: "lock_duo_features_enabled"
          path: "path"
          file_template_project_id: "file_template_project_id"
          ldap_cn: "ldap_cn"
          project_creation_level: "project_creation_level"
          wiki_access_level: "wiki_access_level"
          emails_enabled: true
          lock_math_rendering_limits_enabled: true
          id: "id"
          full_path: "full_path"
          lfs_enabled: "lfs_enabled"
          emails_disabled: true
          default_branch_protection_defaults: "default_branch_protection_defaults"
          visibility: "visibility"
          two_factor_grace_period: "two_factor_grace_period"
          require_two_factor_authentication: "require_two_factor_authentication"
          math_rendering_limits_enabled: true
          ldap_group_links:
            filter: "id >= 500"
            provider: "ldapmain"
            cn: "ldap-group-1"
            group_access: 10
          subgroup_creation_level: "subgroup_creation_level"
          auto_devops_enabled: "auto_devops_enabled"
          full_name: "full_name"
          web_url: "web_url"
          avatar_url: "avatar_url"
          saml_group_links:
            access_level: 40
            name: "saml-group-1"
            member_role_id: 12
          parent_id: "parent_id"
          organization_id: "organization_id"
          duo_features_enabled: "duo_features_enabled"
          name: "name"
          shared_runners_setting: "shared_runners_setting"
          default_branch: "default_branch"
          default_branch_protection: "default_branch_protection"
          statistics:
            wiki_size: "wiki_size"
            packages_size: "packages_size"
            lfs_objects_size: "lfs_objects_size"
            job_artifacts_size: "job_artifacts_size"
            repository_size: "repository_size"
            storage_size: "storage_size"
            uploads_size: "uploads_size"
            snippets_size: "snippets_size"
            pipeline_artifacts_size: "pipeline_artifacts_size"
        section: "Backend"
        overridden: true
        eligible_approvers:
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        users:
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        code_owner: true
        approved_by:
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        - avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        approved: true
        rule_type: "regular"
        source_rule:
          approvals_required: 2
        name: "QA"
        contains_hidden_groups: true
        id: 1
      approval_rules_overwritten: true
  EE_API_Entities_MergeRequestApprovalStateRule:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "QA"
      rule_type:
        type: "string"
        example: "regular"
      eligible_approvers:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_UserBasic"
      approvals_required:
        type: "integer"
        format: "int32"
        example: 2
      users:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_UserBasic"
      groups:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_Group"
      contains_hidden_groups:
        type: "boolean"
      section:
        type: "string"
        example: "Backend"
      source_rule:
        $ref: "#/definitions/EE_API_Entities_MergeRequestApprovalRule_SourceRule"
      overridden:
        type: "boolean"
      code_owner:
        type: "boolean"
      approved_by:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_UserBasic"
      approved:
        type: "boolean"
    example:
      approvals_required: 2
      groups:
      - request_access_enabled: "request_access_enabled"
        repository_storage: "repository_storage"
        ldap_access: "ldap_access"
        description: "description"
        share_with_group_lock: "share_with_group_lock"
        created_at: "created_at"
        mentions_disabled: "mentions_disabled"
        custom_attributes:
          value: "bar"
          key: "foo"
        marked_for_deletion_on: "marked_for_deletion_on"
        lock_duo_features_enabled: "lock_duo_features_enabled"
        path: "path"
        file_template_project_id: "file_template_project_id"
        ldap_cn: "ldap_cn"
        project_creation_level: "project_creation_level"
        wiki_access_level: "wiki_access_level"
        emails_enabled: true
        lock_math_rendering_limits_enabled: true
        id: "id"
        full_path: "full_path"
        lfs_enabled: "lfs_enabled"
        emails_disabled: true
        default_branch_protection_defaults: "default_branch_protection_defaults"
        visibility: "visibility"
        two_factor_grace_period: "two_factor_grace_period"
        require_two_factor_authentication: "require_two_factor_authentication"
        math_rendering_limits_enabled: true
        ldap_group_links:
          filter: "id >= 500"
          provider: "ldapmain"
          cn: "ldap-group-1"
          group_access: 10
        subgroup_creation_level: "subgroup_creation_level"
        auto_devops_enabled: "auto_devops_enabled"
        full_name: "full_name"
        web_url: "web_url"
        avatar_url: "avatar_url"
        saml_group_links:
          access_level: 40
          name: "saml-group-1"
          member_role_id: 12
        parent_id: "parent_id"
        organization_id: "organization_id"
        duo_features_enabled: "duo_features_enabled"
        name: "name"
        shared_runners_setting: "shared_runners_setting"
        default_branch: "default_branch"
        default_branch_protection: "default_branch_protection"
        statistics:
          wiki_size: "wiki_size"
          packages_size: "packages_size"
          lfs_objects_size: "lfs_objects_size"
          job_artifacts_size: "job_artifacts_size"
          repository_size: "repository_size"
          storage_size: "storage_size"
          uploads_size: "uploads_size"
          snippets_size: "snippets_size"
          pipeline_artifacts_size: "pipeline_artifacts_size"
      - request_access_enabled: "request_access_enabled"
        repository_storage: "repository_storage"
        ldap_access: "ldap_access"
        description: "description"
        share_with_group_lock: "share_with_group_lock"
        created_at: "created_at"
        mentions_disabled: "mentions_disabled"
        custom_attributes:
          value: "bar"
          key: "foo"
        marked_for_deletion_on: "marked_for_deletion_on"
        lock_duo_features_enabled: "lock_duo_features_enabled"
        path: "path"
        file_template_project_id: "file_template_project_id"
        ldap_cn: "ldap_cn"
        project_creation_level: "project_creation_level"
        wiki_access_level: "wiki_access_level"
        emails_enabled: true
        lock_math_rendering_limits_enabled: true
        id: "id"
        full_path: "full_path"
        lfs_enabled: "lfs_enabled"
        emails_disabled: true
        default_branch_protection_defaults: "default_branch_protection_defaults"
        visibility: "visibility"
        two_factor_grace_period: "two_factor_grace_period"
        require_two_factor_authentication: "require_two_factor_authentication"
        math_rendering_limits_enabled: true
        ldap_group_links:
          filter: "id >= 500"
          provider: "ldapmain"
          cn: "ldap-group-1"
          group_access: 10
        subgroup_creation_level: "subgroup_creation_level"
        auto_devops_enabled: "auto_devops_enabled"
        full_name: "full_name"
        web_url: "web_url"
        avatar_url: "avatar_url"
        saml_group_links:
          access_level: 40
          name: "saml-group-1"
          member_role_id: 12
        parent_id: "parent_id"
        organization_id: "organization_id"
        duo_features_enabled: "duo_features_enabled"
        name: "name"
        shared_runners_setting: "shared_runners_setting"
        default_branch: "default_branch"
        default_branch_protection: "default_branch_protection"
        statistics:
          wiki_size: "wiki_size"
          packages_size: "packages_size"
          lfs_objects_size: "lfs_objects_size"
          job_artifacts_size: "job_artifacts_size"
          repository_size: "repository_size"
          storage_size: "storage_size"
          uploads_size: "uploads_size"
          snippets_size: "snippets_size"
          pipeline_artifacts_size: "pipeline_artifacts_size"
      section: "Backend"
      overridden: true
      eligible_approvers:
      - avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      - avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      users:
      - avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      - avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      code_owner: true
      approved_by:
      - avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      - avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      approved: true
      rule_type: "regular"
      source_rule:
        approvals_required: 2
      name: "QA"
      contains_hidden_groups: true
      id: 1
  EE_API_Entities_MergeRequestApprovalRule_SourceRule:
    type: "object"
    properties:
      approvals_required:
        type: "integer"
        format: "int32"
        example: 2
    example:
      approvals_required: 2
  postApiV4ProjectsIdMergeRequestsMergeRequestIidApprovals:
    type: "object"
    required:
    - "approvals_required"
    properties:
      approvals_required:
        type: "integer"
        format: "int32"
        example: 2
        description: "The amount of approvals required. Must be higher than the project\
          \ approvals"
    description: "Deprecated in 16.0: Use the merge request approvals API instead.\
      \ Change approval-related configuration"
  EE_API_Entities_ApprovalState:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 84
      iid:
        type: "integer"
        format: "int32"
        example: 14
      project_id:
        type: "integer"
        format: "int32"
        example: 4
      title:
        type: "string"
        example: "Impedit et ut et dolores vero provident ullam est"
      description:
        type: "string"
        example: "Repellendus impedit et vel velit dignissimos."
      state:
        type: "string"
        example: "closed"
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-08-17T12:46:35.053Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2022-11-14T17:22:01.470Z"
      merge_status:
        type: "string"
        example: "can_be_merged"
      approved:
        type: "boolean"
      approvals_required:
        type: "integer"
        format: "int32"
        example: 2
      approvals_left:
        type: "integer"
        format: "int32"
        example: 2
      require_password_to_approve:
        type: "boolean"
      approved_by:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_Approvals"
      suggested_approvers:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_UserBasic"
      approvers:
        type: "string"
      approver_groups:
        type: "string"
      user_has_approved:
        type: "boolean"
      user_can_approve:
        type: "boolean"
      approval_rules_left:
        type: "array"
        items:
          $ref: "#/definitions/EE_API_Entities_ApprovalRuleShort"
      has_approval_rules:
        type: "boolean"
      merge_request_approvers_available:
        type: "boolean"
      multiple_approval_rules_available:
        type: "boolean"
      invalid_approvers_rules:
        type: "array"
        items:
          $ref: "#/definitions/EE_API_Entities_ApprovalRuleShort"
    description: "EE_API_Entities_ApprovalState model"
    example:
      invalid_approvers_rules:
      - rule_type: "regular"
        name: "QA"
        id: 1
      - rule_type: "regular"
        name: "QA"
        id: 1
      approvals_required: 2
      iid: 14
      require_password_to_approve: true
      user_has_approved: true
      description: "Repellendus impedit et vel velit dignissimos."
      created_at: "2022-08-17T12:46:35.053Z"
      approvers: "approvers"
      title: "Impedit et ut et dolores vero provident ullam est"
      has_approval_rules: true
      merge_request_approvers_available: true
      approved: true
      approved_by:
      - user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
      - user:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
      user_can_approve: true
      updated_at: "2022-11-14T17:22:01.470Z"
      project_id: 4
      merge_status: "can_be_merged"
      suggested_approvers:
      - avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      - avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      multiple_approval_rules_available: true
      id: 84
      state: "closed"
      approvals_left: 2
      approval_rules_left:
      - rule_type: "regular"
        name: "QA"
        id: 1
      - rule_type: "regular"
        name: "QA"
        id: 1
      approver_groups: "approver_groups"
  EE_API_Entities_ApprovalRuleShort:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "QA"
      rule_type:
        type: "string"
        example: "regular"
    example:
      rule_type: "regular"
      name: "QA"
      id: 1
  putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileNameAuthorize:
    type: "object"
    properties:
      path:
        type: "string"
        description: "File directory path"
      status:
        type: "string"
        description: "Package status"
        enum:
        - "default"
        - "hidden"
    description: "Workhorse authorize model package file"
  putApiV4ProjectsIdPackagesMlModelsModelVersionIdFiles(*path)FileName:
    type: "object"
    required:
    - "file"
    properties:
      path:
        type: "string"
        description: "File directory path"
      status:
        type: "string"
        description: "Package status"
        enum:
        - "default"
        - "hidden"
      file:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
    description: "Workhorse upload model package file"
  putApiV4ProjectsIdPackagesNpmPackageName:
    type: "object"
    required:
    - "versions"
    properties:
      versions:
        type: "object"
        description: "Package version info"
        properties: {}
    description: "Create or deprecate NPM package"
  putApiV4ProjectsIdPackagesNpmPackage*packageNameDistTagsTag:
    type: "object"
    required:
    - "package_name"
    properties:
      package_name:
        type: "string"
        description: "Package name"
    description: "Create or Update the given tag for the given NPM package and version"
  putApiV4ProjectsIdPackagesNuget:
    type: "object"
    required:
    - "package"
    properties:
      package:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
    description: "The NuGet V3 Feed Package Publish endpoint"
  putApiV4ProjectsIdPackagesNugetSymbolpackage:
    type: "object"
    required:
    - "package"
    properties:
      package:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
    description: "The NuGet Symbol Package Publish endpoint"
  putApiV4ProjectsIdPackagesNugetV2:
    type: "object"
    required:
    - "package"
    properties:
      package:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
    description: "The NuGet V2 Feed Package Publish endpoint"
  API_Entities_Nuget_PackagesVersions:
    type: "object"
    properties:
      versions:
        type: "array"
        items:
          type: "string"
          example: "1.3.0.17"
    description: "API_Entities_Nuget_PackagesVersions model"
    example:
      versions:
      - "1.3.0.17"
      - "1.3.0.17"
  postApiV4ProjectsIdDebianDistributions:
    type: "object"
    required:
    - "codename"
    properties:
      codename:
        type: "string"
        example: "sid"
        description: "The Debian Codename"
      suite:
        type: "string"
        example: "unstable"
        description: "The Debian Suite"
      origin:
        type: "string"
        example: "Grep"
        description: "The Debian Origin"
      label:
        type: "string"
        example: "grep.be"
        description: "The Debian Label"
      version:
        type: "string"
        example: "12"
        description: "The Debian Version"
      description:
        type: "string"
        example: "My description"
        description: "The Debian Description"
      valid_time_duration_seconds:
        type: "integer"
        format: "int32"
        example: 604800
        description: "The duration before the Release file should be considered expired\
          \ by the client"
      components:
        type: "array"
        example: "main"
        description: "The list of Components"
        items:
          type: "string"
      architectures:
        type: "array"
        example: "amd64"
        description: "The list of Architectures"
        items:
          type: "string"
    description: "Create a Debian Distribution"
  putApiV4ProjectsIdDebianDistributionsCodename:
    type: "object"
    properties:
      suite:
        type: "string"
        example: "unstable"
        description: "The Debian Suite"
      origin:
        type: "string"
        example: "Grep"
        description: "The Debian Origin"
      label:
        type: "string"
        example: "grep.be"
        description: "The Debian Label"
      version:
        type: "string"
        example: "12"
        description: "The Debian Version"
      description:
        type: "string"
        example: "My description"
        description: "The Debian Description"
      valid_time_duration_seconds:
        type: "integer"
        format: "int32"
        example: 604800
        description: "The duration before the Release file should be considered expired\
          \ by the client"
      components:
        type: "array"
        example: "main"
        description: "The list of Components"
        items:
          type: "string"
      architectures:
        type: "array"
        example: "amd64"
        description: "The list of Architectures"
        items:
          type: "string"
    description: "Update a Debian Distribution"
  postApiV4ProjectsIdPackagesPypi:
    type: "object"
    required:
    - "content"
    - "name"
    - "version"
    properties:
      content:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
      name:
        type: "string"
        example: "my.pypi.package"
      version:
        type: "string"
        example: "1.3.7"
      requires_python:
        type: "string"
        example: ">=3.7"
      md5_digest:
        type: "string"
        example: "900150983cd24fb0d6963f7d28e17f72"
      sha256_digest:
        type: "string"
        example: "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
      metadata_version:
        type: "string"
        example: "2.3"
      author_email:
        type: "string"
        example: "cschultz@example.com, snoopy@peanuts.com"
      description:
        type: "string"
      description_content_type:
        type: "string"
        example: "text/markdown; charset=UTF-8; variant=GFM"
      summary:
        type: "string"
        example: "A module for collecting votes from beagles."
      keywords:
        type: "string"
        example: "dog,puppy,voting,election"
    description: "The PyPi Package upload endpoint"
  postApiV4ProjectsIdReleasesTagNameAssetsLinks:
    type: "object"
    required:
    - "name"
    - "url"
    properties:
      name:
        type: "string"
        description: "The name of the link. Link names must be unique in the release"
      url:
        type: "string"
        description: "The URL of the link. Link URLs must be unique in the release."
      direct_asset_path:
        type: "string"
        description: "Optional path for a direct asset link"
      filepath:
        type: "string"
        description: "Deprecated: optional path for a direct asset link"
      link_type:
        type: "string"
        description: "The type of the link: `other`, `runbook`, `image`, or `package`.\
          \ Defaults to `other`"
        default: "other"
        enum:
        - "other"
        - "runbook"
        - "image"
        - "package"
    description: "Create a release link"
  putApiV4ProjectsIdReleasesTagNameAssetsLinksLinkId:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the link"
      url:
        type: "string"
        description: "The URL of the link"
      direct_asset_path:
        type: "string"
        description: "Optional path for a direct asset link"
      filepath:
        type: "string"
        description: "Deprecated: optional path for a direct asset link"
      link_type:
        type: "string"
        description: "The type of the link: `other`, `runbook`, `image`, or `package`.\
          \ Defaults to `other`"
        default: "other"
        enum:
        - "other"
        - "runbook"
        - "image"
        - "package"
    description: "Update a release link"
  postApiV4ProjectsIdPackagesRubygemsApiV1Gems:
    type: "object"
    required:
    - "file"
    properties:
      file:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
    description: "Upload a gem"
  putApiV4ProjectsIdPackagesTerraformModulesModuleNameModuleSystem*moduleVersionFileAuthorize:
    type: "object"
    required:
    - "module_version"
    properties:
      module_version:
        type: "string"
        description: "Module version"
    description: "Workhorse authorize Terraform Module package file"
  postApiV4ProjectsIdTerraformStateNameLock:
    type: "object"
    required:
    - "Created"
    - "ID"
    - "Info"
    - "Operation"
    - "Path"
    - "Version"
    - "Who"
    properties:
      ID:
        type: "string"
        description: "Terraform state lock ID"
      Operation:
        type: "string"
        description: "Terraform operation"
      Info:
        type: "string"
        description: "Terraform info"
      Who:
        type: "string"
        description: "Terraform state lock owner"
      Version:
        type: "string"
        description: "Terraform version"
      Created:
        type: "string"
        description: "Terraform state lock timestamp"
      Path:
        type: "string"
        description: "Terraform path"
    description: "Lock a Terraform state of a certain name"
  putApiV4ProjectsIdHooksHookIdUrlVariablesKey:
    type: "object"
    required:
    - "value"
    properties:
      value:
        type: "string"
        description: "The value of the variable"
    description: "Set a url variable"
  API_Entities_BatchedBackgroundMigration:
    type: "object"
    properties:
      id:
        type: "string"
        example: "1234"
      job_class_name:
        type: "string"
        example: "CopyColumnUsingBackgroundMigrationJob"
      table_name:
        type: "string"
        example: "events"
      column_name:
        type: "string"
        example: "id"
      status:
        type: "string"
        example: "active"
      progress:
        type: "number"
        format: "float"
        example: 50.0
      created_at:
        type: "string"
        format: "date-time"
        example: "2022-11-28T16:26:39+02:00"
    description: "API_Entities_BatchedBackgroundMigration model"
    example:
      job_class_name: "CopyColumnUsingBackgroundMigrationJob"
      column_name: "id"
      progress: 50.0
      created_at: "2022-11-28T16:26:39+02:00"
      id: "1234"
      table_name: "events"
      status: "active"
  putApiV4AdminBatchedBackgroundMigrationsIdResume:
    type: "object"
    properties:
      database:
        type: "string"
        description: "The name of the database"
        default: "main"
        enum:
        - "main"
        - "ci"
        - "main_clusterwide"
        - "embedding"
        - "geo"
    description: "Resume a batched background migration"
  putApiV4AdminBatchedBackgroundMigrationsIdPause:
    type: "object"
    properties:
      database:
        type: "string"
        description: "The name of the database"
        default: "main"
        enum:
        - "main"
        - "ci"
        - "main_clusterwide"
        - "embedding"
        - "geo"
    description: "Pause a batched background migration"
  postApiV4AdminCiVariables:
    type: "object"
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
        description: "The key of the variable. Max 255 characters"
      description:
        type: "string"
        description: "The description of the variable"
      value:
        type: "string"
        description: "The value of a variable"
      protected:
        type: "boolean"
        description: "Whether the variable is protected"
      masked:
        type: "boolean"
        description: "Whether the variable is masked"
      raw:
        type: "boolean"
        description: "Whether the variable will be expanded"
      variable_type:
        type: "string"
        description: "The type of a variable. Available types are: env_var (default)\
          \ and file"
        enum:
        - "env_var"
        - "file"
    description: "Create a new instance-level variable"
  putApiV4AdminCiVariablesKey:
    type: "object"
    properties:
      description:
        type: "string"
        description: "The description of the variable"
      value:
        type: "string"
        description: "The value of a variable"
      protected:
        type: "boolean"
        description: "Whether the variable is protected"
      masked:
        type: "boolean"
        description: "Whether the variable is masked"
      raw:
        type: "boolean"
        description: "Whether the variable will be expanded"
      variable_type:
        type: "string"
        description: "The type of a variable. Available types are: env_var (default)\
          \ and file"
        enum:
        - "env_var"
        - "file"
    description: "Update an instance-level variable"
  API_Entities_Dictionary_Table:
    type: "object"
    properties:
      table_name:
        type: "string"
        example: "users"
      feature_categories:
        type: "array"
        items:
          type: "string"
          example: "database"
    description: "API_Entities_Dictionary_Table model"
    example:
      feature_categories:
      - "database"
      - "database"
      table_name: "users"
  postApiV4AdminClustersAdd:
    type: "object"
    required:
    - "name"
    - "platform_kubernetes_attributes"
    properties:
      name:
        type: "string"
        description: "Cluster name"
      enabled:
        type: "boolean"
        description: "Determines if cluster is active or not, defaults to true"
        default: true
      environment_scope:
        type: "string"
        description: "The associated environment to the cluster"
        default: "*"
      namespace_per_environment:
        type: "boolean"
        description: "Deploy each environment to a separate Kubernetes namespace"
        default: true
      domain:
        type: "string"
        description: "Cluster base domain"
      management_project_id:
        type: "integer"
        format: "int32"
        description: "The ID of the management project"
      managed:
        type: "boolean"
        description: "Determines if GitLab will manage namespaces and service accounts\
          \ for this cluster, defaults to true"
        default: true
      platform_kubernetes_attributes:
        $ref: "#/definitions/postApiV4ProjectsIdClustersUser_platform_kubernetes_attributes"
    description: "Add existing instance cluster"
  putApiV4AdminClustersClusterId:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Cluster name"
      enabled:
        type: "boolean"
        description: "Enable or disable Gitlab's connection to your Kubernetes cluster"
      environment_scope:
        type: "string"
        description: "The associated environment to the cluster"
      namespace_per_environment:
        type: "boolean"
        description: "Deploy each environment to a separate Kubernetes namespace"
        default: true
      domain:
        type: "string"
        description: "Cluster base domain"
      management_project_id:
        type: "integer"
        format: "int32"
        description: "The ID of the management project"
      managed:
        type: "boolean"
        description: "Determines if GitLab will manage namespaces and service accounts\
          \ for this cluster"
      platform_kubernetes_attributes:
        $ref: "#/definitions/putApiV4ProjectsIdClustersClusterId_platform_kubernetes_attributes"
    description: "Edit instance cluster"
  postApiV4AdminMigrationsTimestampMark:
    type: "object"
    properties:
      database:
        type: "string"
        description: "The name of the database"
        default: "main"
        enum:
        - "main"
        - "ci"
        - "main_clusterwide"
        - "embedding"
        - "geo"
    description: "Mark the migration as successfully executed"
  API_Entities_System_BroadcastMessage:
    type: "object"
    properties:
      id:
        type: "string"
      message:
        type: "string"
      starts_at:
        type: "string"
      ends_at:
        type: "string"
      color:
        type: "string"
      font:
        type: "string"
      target_access_levels:
        type: "string"
      target_path:
        type: "string"
      broadcast_type:
        type: "string"
      dismissable:
        type: "string"
      active:
        type: "string"
    description: "API_Entities_System_BroadcastMessage model"
    example:
      starts_at: "starts_at"
      color: "color"
      dismissable: "dismissable"
      active: "active"
      id: "id"
      ends_at: "ends_at"
      message: "message"
      target_path: "target_path"
      font: "font"
      target_access_levels: "target_access_levels"
      broadcast_type: "broadcast_type"
  postApiV4BroadcastMessages:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
        description: "Message to display"
      starts_at:
        type: "string"
        format: "date-time"
        description: "Starting time"
      ends_at:
        type: "string"
        format: "date-time"
        description: "Ending time"
      color:
        type: "string"
        description: "Background color"
      font:
        type: "string"
        description: "Foreground color"
      target_access_levels:
        type: "array"
        description: "Target user roles"
        items:
          type: "integer"
          format: "int32"
          enum:
          - 10
          - 20
          - 30
          - 40
          - 50
      target_path:
        type: "string"
        description: "Target path"
      broadcast_type:
        type: "string"
        description: "Broadcast type. Defaults to banner"
        default: ""
        enum:
        - "banner"
        - "notification"
      dismissable:
        type: "boolean"
        description: "Is dismissable"
    description: "Create a broadcast message"
  putApiV4BroadcastMessagesId:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Message to display"
      starts_at:
        type: "string"
        format: "date-time"
        description: "Starting time"
      ends_at:
        type: "string"
        format: "date-time"
        description: "Ending time"
      color:
        type: "string"
        description: "Background color"
      font:
        type: "string"
        description: "Foreground color"
      target_access_levels:
        type: "array"
        description: "Target user roles"
        items:
          type: "integer"
          format: "int32"
          enum:
          - 10
          - 20
          - 30
          - 40
          - 50
      target_path:
        type: "string"
        description: "Target path"
      broadcast_type:
        type: "string"
        description: "Broadcast Type"
        enum:
        - "banner"
        - "notification"
      dismissable:
        type: "boolean"
        description: "Is dismissable"
    description: "Update a broadcast message"
  postApiV4Applications:
    type: "object"
    required:
    - "name"
    - "redirect_uri"
    - "scopes"
    properties:
      name:
        type: "string"
        example: "MyApplication"
        description: "Name of the application."
      redirect_uri:
        type: "string"
        example: "https://redirect.uri"
        description: "Redirect URI of the application."
      scopes:
        type: "string"
        description: "Scopes of the application. You can specify multiple scopes by\
          \ separating\\\n                                 each scope using a space"
      confidential:
        type: "boolean"
        description: "The application is used where the client secret can be kept\
          \ confidential. Native mobile apps \\\n                        and Single\
          \ Page Apps are considered non-confidential. Defaults to true if not supplied"
        default: true
    description: "Create a new application"
  API_Entities_ApplicationWithSecret:
    type: "object"
    properties:
      id:
        type: "string"
      application_id:
        type: "string"
        example: "5832fc6e14300a0d962240a8144466eef4ee93ef0d218477e55f11cf12fc3737"
      application_name:
        type: "string"
        example: "MyApplication"
      callback_url:
        type: "string"
        example: "https://redirect.uri"
      confidential:
        type: "boolean"
        example: true
      secret:
        type: "string"
        example: "ee1dd64b6adc89cf7e2c23099301ccc2c61b441064e9324d963c46902a85ec34"
    description: "API_Entities_ApplicationWithSecret model"
    example:
      callback_url: "https://redirect.uri"
      application_name: "MyApplication"
      id: "id"
      secret: "ee1dd64b6adc89cf7e2c23099301ccc2c61b441064e9324d963c46902a85ec34"
      application_id: "5832fc6e14300a0d962240a8144466eef4ee93ef0d218477e55f11cf12fc3737"
      confidential: true
  API_Entities_Application:
    type: "object"
    properties:
      id:
        type: "string"
      application_id:
        type: "string"
        example: "5832fc6e14300a0d962240a8144466eef4ee93ef0d218477e55f11cf12fc3737"
      application_name:
        type: "string"
        example: "MyApplication"
      callback_url:
        type: "string"
        example: "https://redirect.uri"
      confidential:
        type: "boolean"
        example: true
    description: "API_Entities_Application model"
    example:
      callback_url: "https://redirect.uri"
      application_name: "MyApplication"
      id: "id"
      application_id: "5832fc6e14300a0d962240a8144466eef4ee93ef0d218477e55f11cf12fc3737"
      confidential: true
  API_Entities_Avatar:
    type: "object"
    properties:
      avatar_url:
        type: "string"
    description: "API_Entities_Avatar model"
    example:
      avatar_url: "avatar_url"
  API_Entities_BulkImport:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      status:
        type: "string"
        example: "finished"
        enum:
        - "created"
        - "started"
        - "finished"
        - "timeout"
        - "failed"
      source_type:
        type: "string"
        example: "gitlab"
      created_at:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      has_failures:
        type: "boolean"
        example: false
    description: "API_Entities_BulkImport model"
    example:
      has_failures: false
      updated_at: "2012-05-28T04:42:42-07:00"
      created_at: "2012-05-28T04:42:42-07:00"
      source_type: "gitlab"
      id: 1
      status: "finished"
  API_Entities_BulkImports:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      bulk_import_id:
        type: "integer"
        format: "int32"
        example: 1
      status:
        type: "string"
        example: "created"
        enum:
        - "created"
        - "started"
        - "finished"
        - "timeout"
        - "failed"
      entity_type:
        type: "string"
        enum:
        - "group"
        - "project"
      source_full_path:
        type: "string"
        example: "source_group"
      destination_full_path:
        type: "string"
        example: "some_group/source_project"
      destination_name:
        type: "string"
        example: "destination_slug"
      destination_slug:
        type: "string"
        example: "destination_slug"
      destination_namespace:
        type: "string"
        example: "destination_path"
      parent_id:
        type: "integer"
        format: "int32"
        example: 1
      namespace_id:
        type: "integer"
        format: "int32"
        example: 1
      project_id:
        type: "integer"
        format: "int32"
        example: 1
      created_at:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      failures:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_BulkImports_EntityFailure"
      migrate_projects:
        type: "boolean"
        example: true
      has_failures:
        type: "boolean"
        example: false
      stats:
        type: "object"
        properties: {}
    description: "API_Entities_BulkImports model"
    example:
      failures:
      - exception_class: "Exception"
        source_url: "https://source.gitlab.com/group/-/epics/1"
        relation: "label"
        exception_message: "error message"
        correlation_id_value: "dfcf583058ed4508e4c7c617bd7f0edd"
        source_title: "title"
      - exception_class: "Exception"
        source_url: "https://source.gitlab.com/group/-/epics/1"
        relation: "label"
        exception_message: "error message"
        correlation_id_value: "dfcf583058ed4508e4c7c617bd7f0edd"
        source_title: "title"
      destination_slug: "destination_slug"
      source_full_path: "source_group"
      destination_full_path: "some_group/source_project"
      created_at: "2012-05-28T04:42:42-07:00"
      destination_name: "destination_slug"
      bulk_import_id: 1
      destination_namespace: "destination_path"
      has_failures: false
      entity_type: "group"
      namespace_id: 1
      updated_at: "2012-05-28T04:42:42-07:00"
      project_id: 1
      stats: "{}"
      parent_id: 1
      migrate_projects: true
      id: 1
      status: "created"
  API_Entities_BulkImports_EntityFailure:
    type: "object"
    properties:
      relation:
        type: "string"
        example: "label"
      exception_message:
        type: "string"
        example: "error message"
      exception_class:
        type: "string"
        example: "Exception"
      correlation_id_value:
        type: "string"
        example: "dfcf583058ed4508e4c7c617bd7f0edd"
      source_url:
        type: "string"
        example: "https://source.gitlab.com/group/-/epics/1"
      source_title:
        type: "string"
        example: "title"
    description: "API_Entities_BulkImports_EntityFailure model"
    example:
      exception_class: "Exception"
      source_url: "https://source.gitlab.com/group/-/epics/1"
      relation: "label"
      exception_message: "error message"
      correlation_id_value: "dfcf583058ed4508e4c7c617bd7f0edd"
      source_title: "title"
  postApiV4Runners:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "Registration token"
      description:
        type: "string"
        description: "Description of the runner"
      maintainer_note:
        type: "string"
        description: "Deprecated: see `maintenance_note`"
      maintenance_note:
        type: "string"
        description: "Free-form maintenance notes for the runner (1024 characters)"
      info:
        $ref: "#/definitions/postApiV4Runners_info"
      active:
        type: "boolean"
        description: "Deprecated: Use `paused` instead. Specifies if the runner is\
          \ allowed to receive new jobs"
      paused:
        type: "boolean"
        description: "Specifies if the runner should ignore new jobs"
      locked:
        type: "boolean"
        description: "Specifies if the runner should be locked for the current project"
      access_level:
        type: "string"
        description: "The access level of the runner"
        enum:
        - "not_protected"
        - "ref_protected"
      run_untagged:
        type: "boolean"
        description: "Specifies if the runner should handle untagged jobs"
      tag_list:
        type: "array"
        description: "A list of runner tags"
        items:
          type: "string"
      maximum_timeout:
        type: "integer"
        format: "int32"
        description: "Maximum timeout that limits the amount of time (in seconds)\
          \ that runners can run jobs"
    description: "Register a new runner"
  API_Entities_Ci_RunnerRegistrationDetails:
    type: "object"
    properties:
      id:
        type: "string"
      token:
        type: "string"
      token_expires_at:
        type: "string"
    description: "API_Entities_Ci_RunnerRegistrationDetails model"
    example:
      token_expires_at: "token_expires_at"
      id: "id"
      token: "token"
  postApiV4RunnersVerify:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The runner's authentication token"
      system_id:
        type: "string"
        description: "The runner's system identifier"
    description: "Validate authentication credentials"
  postApiV4RunnersResetAuthenticationToken:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The current authentication token of the runner"
    description: "Reset runner authentication token with current token"
  API_Entities_Ci_RunnerDetails:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 8
      description:
        type: "string"
        example: "test-1-20150125"
      ip_address:
        type: "string"
        example: "127.0.0.1"
      active:
        type: "boolean"
        example: true
      paused:
        type: "boolean"
        example: false
      is_shared:
        type: "boolean"
        example: true
      runner_type:
        type: "string"
        example: "instance_type"
        enum:
        - "instance_type"
        - "group_type"
        - "project_type"
      name:
        type: "string"
        example: "test"
      online:
        type: "boolean"
        example: true
      status:
        type: "string"
        example: "online"
      tag_list:
        type: "string"
      run_untagged:
        type: "string"
      locked:
        type: "string"
      maximum_timeout:
        type: "string"
      access_level:
        type: "string"
      version:
        type: "string"
      revision:
        type: "string"
      platform:
        type: "string"
      architecture:
        type: "string"
      contacted_at:
        type: "string"
      maintenance_note:
        type: "string"
      projects:
        $ref: "#/definitions/API_Entities_BasicProjectDetails"
      groups:
        $ref: "#/definitions/API_Entities_BasicGroupDetails"
    description: "API_Entities_Ci_RunnerDetails model"
    example:
      paused: false
      projects:
        ssh_url_to_repo: "git@gitlab.example.com:gitlab/gitlab.git"
        repository_storage: "default"
        path_with_namespace: "namespace1/project1"
        topics:
        - "topic"
        - "topic"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        http_url_to_repo: "https://gitlab.example.com/gitlab/gitlab.git"
        readme_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/README.md"
        custom_attributes:
          value: "bar"
          key: "foo"
        path: "project1"
        license:
          html_url: "http://choosealicense.com/licenses/gpl-3.0"
          name: "GNU General Public License v3.0"
          nickname: "GNU GPLv3"
          key: "gpl-3.0"
          source_url: "source_url"
        web_url: "https://gitlab.example.com/gitlab/gitlab"
        avatar_url: "http://example.com/uploads/project/avatar/3/uploads/avatar.png"
        tag_list:
        - "tag"
        - "tag"
        last_activity_at: "2013-09-30T13:46:02Z"
        name: "project1"
        namespace:
          path: "my_project"
          avatar_url: "https://example.com/avatar/12345"
          web_url: "https://example.com/group/my_project"
          kind: "project"
          parent_id: 1
          name: "project"
          id: 2
          full_path: "group/my_project"
        default_branch: "main"
        id: 1
        name_with_namespace: "John Doe / project1"
        license_url: "https://gitlab.example.com/gitlab/gitlab/blob/master/LICENCE"
        star_count: 1
        forks_count: 1
      description: "test-1-20150125"
      active: true
      runner_type: "instance_type"
      groups:
        web_url: "web_url"
        name: "name"
        id: "id"
      ip_address: "127.0.0.1"
      contacted_at: "contacted_at"
      version: "version"
      platform: "platform"
      revision: "revision"
      access_level: "access_level"
      maximum_timeout: "maximum_timeout"
      maintenance_note: "maintenance_note"
      tag_list: "tag_list"
      is_shared: true
      name: "test"
      online: true
      id: 8
      run_untagged: "run_untagged"
      locked: "locked"
      status: "online"
      architecture: "architecture"
  putApiV4RunnersId:
    type: "object"
    properties:
      description:
        type: "string"
        description: "The description of the runner"
      active:
        type: "boolean"
        description: "Deprecated: Use `paused` instead. Flag indicating whether the\
          \ runner is allowed to receive jobs"
      paused:
        type: "boolean"
        description: "Specifies if the runner should ignore new jobs"
      tag_list:
        type: "array"
        example: "['macos', 'shell']"
        description: "The list of tags for a runner"
        items:
          type: "string"
      run_untagged:
        type: "boolean"
        description: "Specifies if the runner can execute untagged jobs"
      locked:
        type: "boolean"
        description: "Specifies if the runner is locked"
      access_level:
        type: "string"
        description: "The access level of the runner"
        enum:
        - "not_protected"
        - "ref_protected"
      maximum_timeout:
        type: "integer"
        format: "int32"
        description: "Maximum timeout that limits the amount of time (in seconds)\
          \ that runners can run jobs"
      maintenance_note:
        type: "string"
        description: "Free-form maintenance notes for the runner (1024 characters)"
    description: "Update runner's details"
  API_Entities_Ci_JobBasicWithProject:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      status:
        type: "string"
        example: "waiting_for_resource"
      stage:
        type: "string"
        example: "deploy"
      name:
        type: "string"
        example: "deploy_to_production"
      ref:
        type: "string"
        example: "main"
      tag:
        type: "boolean"
      coverage:
        type: "number"
        format: "float"
        example: 98.29
      allow_failure:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T15:51:21.880Z"
      started_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:30.733Z"
      finished_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T17:54:31.198Z"
      erased_at:
        type: "string"
        format: "date-time"
        example: "2015-12-24T18:00:29.728Z"
      duration:
        type: "number"
        format: "float"
        example: 0.465
        description: "Time spent running"
      queued_duration:
        type: "number"
        format: "float"
        example: 0.123
        description: "Time spent enqueued"
      user:
        $ref: "#/definitions/API_Entities_User"
      commit:
        $ref: "#/definitions/API_Entities_Commit"
      pipeline:
        $ref: "#/definitions/API_Entities_Ci_PipelineBasic"
      failure_reason:
        type: "string"
        example: "script_failure"
      web_url:
        type: "string"
        example: "https://example.com/foo/bar/-/jobs/1"
      project:
        $ref: "#/definitions/API_Entities_ProjectIdentity"
    description: "API_Entities_Ci_JobBasicWithProject model"
    example:
      coverage: 98.29
      finished_at: "2015-12-24T17:54:31.198Z"
      commit:
        author_name: "John Smith"
        authored_date: "2012-05-28T04:42:42-07:00"
        committer_email: "jack@example.com"
        extended_trailers: "{ \"Signed-off-by\": [\"John Doe <johndoe@gitlab.com>\"\
          , \"Jane Doe <janedoe@gitlab.com>\"] }"
        created_at: "2017-07-26T11:08:53.000+02:00"
        short_id: "2695effb"
        parent_ids:
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        - "2a4b78934375d7f53875269ffd4f45fd83a84ebe"
        title: "Initial commit"
        message: "Initial commit"
        committer_name: "Jack Smith"
        trailers: "{ \"Merged-By\": \"Jane Doe janedoe@gitlab.com\" }"
        committed_date: "2012-05-28T04:42:42-07:00"
        web_url: "https://gitlab.example.com/janedoe/gitlab-foss/-/commit/ed899a2f4b50b4370feeea94676502b42383c746"
        author_email: "john@example.com"
        id: "2695effb5807a22ff3d138d593fd856244e155e7"
      created_at: "2015-12-24T15:51:21.880Z"
      erased_at: "2015-12-24T18:00:29.728Z"
      project:
        path: "project1"
        path_with_namespace: "namespace1/project1"
        name: "project1"
        description: "desc"
        created_at: "2020-05-07T04:27:17.016Z"
        id: 1
        name_with_namespace: "John Doe / project1"
      failure_reason: "script_failure"
      queued_duration: 0.123
      duration: 0.465
      pipeline:
        ref: "feature-branch"
        updated_at: "2022-10-21T16:49:48.000+02:00"
        web_url: "https://gitlab.example.com/gitlab-org/gitlab-foss/-/pipelines/61"
        iid: 2
        project_id: 3
        created_at: "2022-10-21T16:49:48.000+02:00"
        id: 1
        source: "push"
        sha: "0ec9e58fdfca6cdd6652c083c9edb53abc0bad52"
        status: "success"
      ref: "main"
      allow_failure: true
      stage: "deploy"
      web_url: "https://example.com/foo/bar/-/jobs/1"
      name: "deploy_to_production"
      started_at: "2015-12-24T17:54:30.733Z"
      id: 1
      tag: true
      user:
        work_information: "work_information"
        bot: "bot"
        created_at: "created_at"
        bio: "bio"
        linkedin: "linkedin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
        skype: "skype"
        twitter: "twitter"
        local_time: "local_time"
        id: 1
        state: "active"
        locked: true
        job_title: "job_title"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        is_followed: "is_followed"
        discord: "discord"
        followers: "followers"
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        website_url: "website_url"
        organization: "organization"
        following: "following"
        name: "Administrator"
        location: "location"
        pronouns: "pronouns"
        public_email: "public_email"
        username: "admin"
      status: "waiting_for_resource"
  postApiV4JobsRequest:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "Runner's authentication token"
      system_id:
        type: "string"
        description: "Runner's system identifier"
      last_update:
        type: "string"
        description: "Runner's queue last_update token"
      info:
        $ref: "#/definitions/postApiV4JobsRequest_info"
      session:
        $ref: "#/definitions/postApiV4JobsRequest_session"
    description: "Request a job"
  putApiV4JobsId:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "Job token"
      state:
        type: "string"
        description: "Job's status: success, failed"
      checksum:
        type: "string"
        description: "Job's trace CRC32 checksum"
      failure_reason:
        type: "string"
        description: "Job's failure_reason"
      output:
        $ref: "#/definitions/putApiV4JobsId_output"
      exit_code:
        type: "integer"
        format: "int32"
        description: "Job's exit code"
    description: "Update a job"
  patchApiV4JobsIdTrace:
    type: "object"
    properties:
      token:
        type: "string"
        description: "Job's authentication token"
      debug_trace:
        type: "boolean"
        description: "Enable or Disable the debug trace"
    description: "Append a patch to the job trace"
  postApiV4JobsIdArtifactsAuthorize:
    type: "object"
    properties:
      token:
        type: "string"
        description: "Job's authentication token"
      filesize:
        type: "integer"
        format: "int32"
        description: "Size of artifact file"
      artifact_type:
        type: "string"
        description: "The type of artifact"
        default: "archive"
        enum:
        - "archive"
        - "metadata"
        - "trace"
        - "junit"
        - "sast"
        - "dependency_scanning"
        - "container_scanning"
        - "dast"
        - "codequality"
        - "license_scanning"
        - "performance"
        - "metrics"
        - "metrics_referee"
        - "network_referee"
        - "lsif"
        - "dotenv"
        - "cobertura"
        - "terraform"
        - "accessibility"
        - "cluster_applications"
        - "secret_detection"
        - "requirements"
        - "coverage_fuzzing"
        - "browser_performance"
        - "load_performance"
        - "api_fuzzing"
        - "cluster_image_scanning"
        - "cyclonedx"
        - "requirements_v2"
        - "annotations"
        - "repository_xray"
    description: "Authorize uploading job artifact"
  postApiV4JobsIdArtifacts:
    type: "object"
    required:
    - "file"
    properties:
      file:
        type: "file"
        description: "The artifact file to store (generated by Multipart middleware)"
      token:
        type: "string"
        description: "Job's authentication token"
      expire_in:
        type: "string"
        description: "Specify when artifact should expire"
      artifact_type:
        type: "string"
        description: "The type of artifact"
        default: "archive"
        enum:
        - "archive"
        - "metadata"
        - "trace"
        - "junit"
        - "sast"
        - "dependency_scanning"
        - "container_scanning"
        - "dast"
        - "codequality"
        - "license_scanning"
        - "performance"
        - "metrics"
        - "metrics_referee"
        - "network_referee"
        - "lsif"
        - "dotenv"
        - "cobertura"
        - "terraform"
        - "accessibility"
        - "cluster_applications"
        - "secret_detection"
        - "requirements"
        - "coverage_fuzzing"
        - "browser_performance"
        - "load_performance"
        - "api_fuzzing"
        - "cluster_image_scanning"
        - "cyclonedx"
        - "requirements_v2"
        - "annotations"
        - "repository_xray"
      artifact_format:
        type: "string"
        description: "The format of artifact"
        default: "zip"
        enum:
        - "raw"
        - "zip"
        - "gzip"
      metadata:
        type: "file"
        description: "The artifact metadata to store (generated by Multipart middleware)"
      accessibility:
        type: "string"
        description: "Specify accessibility level of artifact private/public"
    description: "Upload a job artifact"
  putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionExportFileName:
    type: "object"
    required:
    - "file"
    properties:
      file:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
    description: "Upload recipe package files"
  ? putApiV4PackagesConanV1FilesPackageNamePackageVersionPackageUsernamePackageChannelRecipeRevisionPackageConanPackageReferencePackageRevisionFileName
  : type: "object"
    required:
    - "file"
    properties:
      file:
        type: "file"
        description: "The package file to be published (generated by Multipart middleware)"
    description: "Upload package files"
  putApiV4PackagesNpmPackage*packageNameDistTagsTag:
    type: "object"
    required:
    - "package_name"
    properties:
      package_name:
        type: "string"
        description: "Package name"
    description: "Create or Update the given tag for the given NPM package and version"
  API_Entities_Terraform_ModuleVersions:
    type: "object"
    properties:
      modules:
        type: "string"
    description: "API_Entities_Terraform_ModuleVersions model"
    example:
      modules: "modules"
  API_Entities_Terraform_ModuleVersion:
    type: "object"
    properties:
      name:
        type: "string"
      provider:
        type: "string"
      providers:
        type: "string"
      root:
        type: "string"
      source:
        type: "string"
      submodules:
        type: "string"
      version:
        type: "string"
      versions:
        type: "string"
    description: "API_Entities_Terraform_ModuleVersion model"
    example:
      provider: "provider"
      versions: "versions"
      root: "root"
      submodules: "submodules"
      name: "name"
      source: "source"
      version: "version"
      providers: "providers"
  putApiV4UsersIdCustomAttributesKey:
    type: "object"
    required:
    - "value"
    properties:
      value:
        type: "string"
        description: "The value of the custom attribute"
    description: "Set a custom attribute on a user"
  postApiV4Users:
    type: "object"
    required:
    - "email"
    - "name"
    - "username"
    properties:
      email:
        type: "string"
        description: "The email of the user"
      password:
        type: "string"
        description: "The password of the new user"
      reset_password:
        type: "boolean"
        description: "Flag indicating the user will be sent a password reset token"
      skip_confirmation:
        type: "boolean"
        description: "Flag indicating the account is confirmed"
      force_random_password:
        type: "boolean"
        description: "Flag indicating a random password will be set"
      name:
        type: "string"
        description: "The name of the user"
      username:
        type: "string"
        description: "The username of the user"
      skype:
        type: "string"
        description: "The Skype username"
      linkedin:
        type: "string"
        description: "The LinkedIn username"
      twitter:
        type: "string"
        description: "The Twitter username"
      discord:
        type: "string"
        description: "The Discord user ID"
      website_url:
        type: "string"
        description: "The website of the user"
      organization:
        type: "string"
        description: "The organization of the user"
      projects_limit:
        type: "integer"
        format: "int32"
        description: "The number of projects a user can create"
      extern_uid:
        type: "string"
        description: "The external authentication provider UID"
      provider:
        type: "string"
        description: "The external provider"
      bio:
        type: "string"
        description: "The biography of the user"
      location:
        type: "string"
        description: "The location of the user"
      pronouns:
        type: "string"
        description: "The pronouns of the user"
      public_email:
        type: "string"
        description: "The public email of the user"
      commit_email:
        type: "string"
        description: "The commit email, _private for private commit email"
      admin:
        type: "boolean"
        description: "Flag indicating the user is an administrator"
      can_create_group:
        type: "boolean"
        description: "Flag indicating the user can create groups"
      external:
        type: "boolean"
        description: "Flag indicating the user is an external user"
      avatar:
        type: "file"
        description: "Avatar image for user"
      theme_id:
        type: "integer"
        format: "int32"
        description: "The GitLab theme for the user"
      color_scheme_id:
        type: "integer"
        format: "int32"
        description: "The color scheme for the file viewer"
      private_profile:
        type: "boolean"
        description: "Flag indicating the user has a private profile"
      note:
        type: "string"
        description: "Admin note for this user"
      view_diffs_file_by_file:
        type: "boolean"
        description: "Flag indicating the user sees only one file diff per page"
      shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        description: "Compute minutes quota for this user"
      extra_shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        description: "(admin-only) Extra compute minutes quota for this user"
      group_id_for_saml:
        type: "integer"
        format: "int32"
        description: "ID for group where SAML has been configured"
      auditor:
        type: "boolean"
        description: "Flag indicating auditor status of the user"
    description: "Create a user. Available only for admins."
  API_Entities_UserWithAdmin:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      username:
        type: "string"
        example: "admin"
      name:
        type: "string"
        example: "Administrator"
      state:
        type: "string"
        example: "active"
      locked:
        type: "boolean"
      avatar_url:
        type: "string"
        example: "https://gravatar.com/avatar/1"
      avatar_path:
        type: "string"
        example: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      custom_attributes:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_CustomAttribute"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/root"
      created_at:
        type: "string"
      bio:
        type: "string"
      location:
        type: "string"
      public_email:
        type: "string"
      skype:
        type: "string"
      linkedin:
        type: "string"
      twitter:
        type: "string"
      discord:
        type: "string"
      website_url:
        type: "string"
      organization:
        type: "string"
      job_title:
        type: "string"
      pronouns:
        type: "string"
      bot:
        type: "string"
      work_information:
        type: "string"
      followers:
        type: "string"
      following:
        type: "string"
      is_followed:
        type: "string"
      local_time:
        type: "string"
      last_sign_in_at:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:01.670Z"
      confirmed_at:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:01.670Z"
      last_activity_on:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:01.670Z"
      email:
        type: "string"
        example: "john@example.com"
      theme_id:
        type: "integer"
        format: "int32"
        example: 2
      color_scheme_id:
        type: "integer"
        format: "int32"
        example: 1
      projects_limit:
        type: "integer"
        format: "int32"
        example: 10
      current_sign_in_at:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:01.670Z"
      identities:
        $ref: "#/definitions/API_Entities_Identity"
      can_create_group:
        type: "boolean"
        example: true
      can_create_project:
        type: "boolean"
        example: true
      two_factor_enabled:
        type: "boolean"
        example: true
      external:
        type: "string"
      private_profile:
        type: "boolean"
        example: false
      commit_email:
        type: "string"
      shared_runners_minutes_limit:
        type: "string"
      extra_shared_runners_minutes_limit:
        type: "string"
      scim_identities:
        $ref: "#/definitions/API_Entities_ScimIdentity"
      is_admin:
        type: "string"
      note:
        type: "string"
      namespace_id:
        type: "string"
      created_by:
        $ref: "#/definitions/API_Entities_UserBasic"
      email_reset_offered_at:
        type: "string"
      using_license_seat:
        type: "string"
      is_auditor:
        type: "string"
      provisioned_by_group_id:
        type: "string"
      enterprise_group_id:
        type: "string"
      enterprise_group_associated_at:
        type: "string"
    description: "API_Entities_UserWithAdmin model"
    example:
      can_create_project: true
      private_profile: false
      provisioned_by_group_id: "provisioned_by_group_id"
      bio: "bio"
      projects_limit: 10
      last_activity_on: "2015-09-03T07:24:01.670Z"
      custom_attributes:
      - value: "bar"
        key: "foo"
      - value: "bar"
        key: "foo"
      is_admin: "is_admin"
      using_license_seat: "using_license_seat"
      twitter: "twitter"
      local_time: "local_time"
      enterprise_group_associated_at: "enterprise_group_associated_at"
      id: 1
      state: "active"
      locked: true
      job_title: "job_title"
      current_sign_in_at: "2015-09-03T07:24:01.670Z"
      two_factor_enabled: true
      scim_identities:
        group_id: "group_id"
        active: "active"
        extern_uid: "extern_uid"
      shared_runners_minutes_limit: "shared_runners_minutes_limit"
      is_followed: "is_followed"
      created_by:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      external: "external"
      discord: "discord"
      followers: "followers"
      namespace_id: "namespace_id"
      extra_shared_runners_minutes_limit: "extra_shared_runners_minutes_limit"
      following: "following"
      name: "Administrator"
      pronouns: "pronouns"
      public_email: "public_email"
      note: "note"
      work_information: "work_information"
      commit_email: "commit_email"
      bot: "bot"
      theme_id: 2
      created_at: "created_at"
      linkedin: "linkedin"
      can_create_group: true
      enterprise_group_id: "enterprise_group_id"
      skype: "skype"
      identities:
        provider: "provider"
        saml_provider_id: "saml_provider_id"
        extern_uid: "extern_uid"
      last_sign_in_at: "2015-09-03T07:24:01.670Z"
      color_scheme_id: 1
      confirmed_at: "2015-09-03T07:24:01.670Z"
      email: "john@example.com"
      avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
      is_auditor: "is_auditor"
      avatar_url: "https://gravatar.com/avatar/1"
      web_url: "https://gitlab.example.com/root"
      website_url: "website_url"
      organization: "organization"
      email_reset_offered_at: "email_reset_offered_at"
      location: "location"
      username: "admin"
  putApiV4UsersId:
    type: "object"
    properties:
      email:
        type: "string"
        description: "The email of the user"
      password:
        type: "string"
        description: "The password of the new user"
      skip_reconfirmation:
        type: "boolean"
        description: "Flag indicating the account skips the confirmation by email"
      name:
        type: "string"
        description: "The name of the user"
      username:
        type: "string"
        description: "The username of the user"
      skype:
        type: "string"
        description: "The Skype username"
      linkedin:
        type: "string"
        description: "The LinkedIn username"
      twitter:
        type: "string"
        description: "The Twitter username"
      discord:
        type: "string"
        description: "The Discord user ID"
      website_url:
        type: "string"
        description: "The website of the user"
      organization:
        type: "string"
        description: "The organization of the user"
      projects_limit:
        type: "integer"
        format: "int32"
        description: "The number of projects a user can create"
      extern_uid:
        type: "string"
        description: "The external authentication provider UID"
      provider:
        type: "string"
        description: "The external provider"
      bio:
        type: "string"
        description: "The biography of the user"
      location:
        type: "string"
        description: "The location of the user"
      pronouns:
        type: "string"
        description: "The pronouns of the user"
      public_email:
        type: "string"
        description: "The public email of the user"
      commit_email:
        type: "string"
        description: "The commit email, _private for private commit email"
      admin:
        type: "boolean"
        description: "Flag indicating the user is an administrator"
      can_create_group:
        type: "boolean"
        description: "Flag indicating the user can create groups"
      external:
        type: "boolean"
        description: "Flag indicating the user is an external user"
      avatar:
        type: "file"
        description: "Avatar image for user"
      theme_id:
        type: "integer"
        format: "int32"
        description: "The GitLab theme for the user"
      color_scheme_id:
        type: "integer"
        format: "int32"
        description: "The color scheme for the file viewer"
      private_profile:
        type: "boolean"
        description: "Flag indicating the user has a private profile"
      note:
        type: "string"
        description: "Admin note for this user"
      view_diffs_file_by_file:
        type: "boolean"
        description: "Flag indicating the user sees only one file diff per page"
      shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        description: "Compute minutes quota for this user"
      extra_shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        description: "(admin-only) Extra compute minutes quota for this user"
      group_id_for_saml:
        type: "integer"
        format: "int32"
        description: "ID for group where SAML has been configured"
      auditor:
        type: "boolean"
        description: "Flag indicating auditor status of the user"
    description: "Update a user. Available only for admins."
  postApiV4UsersUserIdKeys:
    type: "object"
    required:
    - "key"
    - "title"
    properties:
      key:
        type: "string"
        description: "The new SSH key"
      title:
        type: "string"
        description: "The title of the new SSH key"
      expires_at:
        type: "string"
        format: "date-time"
        description: "The expiration date of the SSH key in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)"
      usage_type:
        type: "string"
        description: "Scope of usage for the SSH key"
        default: "auth_and_signing"
        enum:
        - "auth_and_signing"
        - "auth"
        - "signing"
    description: "Add an SSH key to a specified user. Available only for admins."
  API_Entities_SSHKey:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      title:
        type: "string"
        example: "Sample key 25"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:44.627Z"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-09-03T07:24:44.627Z"
      key:
        type: "string"
        example: "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt1256k6Yjz\\\
          \n      GGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCdd\\\
          \n      NaP0L+hM7zhFNzjFvpaMgJw0="
      usage_type:
        type: "string"
        example: "auth"
    description: "API_Entities_SSHKey model"
    example:
      expires_at: "2020-09-03T07:24:44.627Z"
      usage_type: "auth"
      created_at: "2015-09-03T07:24:44.627Z"
      id: 1
      title: "Sample key 25"
      key: "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt1256k6Yjz\\\
        \n      GGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCdd\\\
        \n      NaP0L+hM7zhFNzjFvpaMgJw0="
  postApiV4UsersIdGpgKeys:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "The new GPG key"
    description: "Add a GPG key to a specified user. Available only for admins."
  API_Entities_GpgKey:
    type: "object"
    properties:
      id:
        type: "string"
      key:
        type: "string"
      created_at:
        type: "string"
    description: "API_Entities_GpgKey model"
    example:
      created_at: "created_at"
      id: "id"
      key: "key"
  postApiV4UsersIdEmails:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
        description: "The email of the user"
      skip_confirmation:
        type: "boolean"
        description: "Skip confirmation of email and assume it is verified"
    description: "Add an email address to a specified user. Available only for admins."
  API_Entities_Email:
    type: "object"
    properties:
      id:
        type: "string"
      email:
        type: "string"
      confirmed_at:
        type: "string"
    description: "API_Entities_Email model"
    example:
      id: "id"
      confirmed_at: "confirmed_at"
      email: "email"
  API_Entities_Membership:
    type: "object"
    properties:
      source_id:
        type: "string"
      source_name:
        type: "string"
      source_type:
        type: "string"
      access_level:
        type: "string"
    description: "API_Entities_Membership model"
    example:
      access_level: "access_level"
      source_type: "source_type"
      source_id: "source_id"
      source_name: "source_name"
  API_Entities_ImpersonationToken:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 2
      name:
        type: "string"
        example: "John Doe"
      revoked:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      scopes:
        type: "array"
        example: ""
      user_id:
        type: "integer"
        format: "int32"
        example: 3
      last_used_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      active:
        type: "boolean"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      impersonation:
        type: "string"
    description: "API_Entities_ImpersonationToken model"
    example:
      last_used_at: "2020-08-31T15:53:00.073Z"
      expires_at: "2020-08-31T15:53:00.073Z"
      impersonation: "impersonation"
      user_id: 3
      name: "John Doe"
      created_at: "2000-01-23T04:56:07.000+00:00"
      active: true
      id: 2
      scopes: ""
      revoked: true
  postApiV4UsersUserIdImpersonationTokens:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the impersonation token"
      expires_at:
        type: "string"
        format: "date"
        description: "The expiration date in the format YEAR-MONTH-DAY of the impersonation\
          \ token"
      scopes:
        type: "array"
        description: "The array of scopes of the impersonation token"
        items:
          type: "string"
    description: "Create a impersonation token. Available only for admins."
  API_Entities_ImpersonationTokenWithToken:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 2
      name:
        type: "string"
        example: "John Doe"
      revoked:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      scopes:
        type: "array"
        example: ""
      user_id:
        type: "integer"
        format: "int32"
        example: 3
      last_used_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      active:
        type: "boolean"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      token:
        type: "string"
      impersonation:
        type: "string"
    description: "API_Entities_ImpersonationTokenWithToken model"
    example:
      last_used_at: "2020-08-31T15:53:00.073Z"
      expires_at: "2020-08-31T15:53:00.073Z"
      impersonation: "impersonation"
      user_id: 3
      name: "John Doe"
      created_at: "2000-01-23T04:56:07.000+00:00"
      active: true
      id: 2
      scopes: ""
      revoked: true
      token: "token"
  postApiV4UsersUserIdPersonalAccessTokens:
    type: "object"
    required:
    - "name"
    - "scopes"
    properties:
      name:
        type: "string"
        description: "The name of the personal access token"
      scopes:
        type: "array"
        description: "The array of scopes of the personal access token"
        items:
          type: "string"
          enum:
          - "api"
          - "read_api"
          - "read_user"
          - "create_runner"
          - "k8s_proxy"
          - "read_repository"
          - "write_repository"
          - "read_observability"
          - "write_observability"
          - "ai_features"
          - "sudo"
          - "admin_mode"
          - "read_service_ping"
      expires_at:
        type: "string"
        format: "date"
        description: "The expiration date in the format YEAR-MONTH-DAY of the personal\
          \ access token"
    description: "Create a personal access token. Available only for admins."
  API_Entities_PersonalAccessTokenWithToken:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 2
      name:
        type: "string"
        example: "John Doe"
      revoked:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      scopes:
        type: "array"
        example: ""
      user_id:
        type: "integer"
        format: "int32"
        example: 3
      last_used_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      active:
        type: "boolean"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      token:
        type: "string"
    description: "API_Entities_PersonalAccessTokenWithToken model"
    example:
      last_used_at: "2020-08-31T15:53:00.073Z"
      expires_at: "2020-08-31T15:53:00.073Z"
      user_id: 3
      name: "John Doe"
      created_at: "2000-01-23T04:56:07.000+00:00"
      active: true
      id: 2
      scopes: ""
      revoked: true
      token: "token"
  API_Entities_Feature:
    type: "object"
    properties:
      name:
        type: "string"
        example: "experimental_feature"
      state:
        type: "string"
        example: "off"
      gates:
        $ref: "#/definitions/API_Entities_FeatureGate"
      definition:
        $ref: "#/definitions/API_Entities_Feature_Definition"
    description: "API_Entities_Feature model"
    example:
      gates:
        value: 34
        key: "percentage_of_actors"
      name: "experimental_feature"
      definition:
        introduced_by_url: "introduced_by_url"
        milestone: "milestone"
        name: "name"
        log_state_changes: "log_state_changes"
        rollout_issue_url: "rollout_issue_url"
        type: "type"
        default_enabled: "default_enabled"
        feature_issue_url: "feature_issue_url"
        group: "group"
      state: "off"
  API_Entities_FeatureGate:
    type: "object"
    properties:
      key:
        type: "string"
        example: "percentage_of_actors"
      value:
        type: "integer"
        format: "int32"
        example: 34
    example:
      value: 34
      key: "percentage_of_actors"
  API_Entities_Feature_Definition:
    type: "object"
    properties:
      name:
        type: "string"
      feature_issue_url:
        type: "string"
      introduced_by_url:
        type: "string"
      rollout_issue_url:
        type: "string"
      milestone:
        type: "string"
      log_state_changes:
        type: "string"
      type:
        type: "string"
      group:
        type: "string"
      default_enabled:
        type: "string"
    description: "API_Entities_Feature_Definition model"
    example:
      introduced_by_url: "introduced_by_url"
      milestone: "milestone"
      name: "name"
      log_state_changes: "log_state_changes"
      rollout_issue_url: "rollout_issue_url"
      type: "type"
      default_enabled: "default_enabled"
      feature_issue_url: "feature_issue_url"
      group: "group"
  postApiV4FeaturesName:
    type: "object"
    required:
    - "value"
    properties:
      value:
        type: "string"
        description: "`true` or `false` to enable/disable, or an integer for percentage\
          \ of time"
      key:
        type: "string"
        description: "`percentage_of_actors` or `percentage_of_time` (default)"
      feature_group:
        type: "string"
        description: "A Feature group name"
      user:
        type: "string"
        description: "A GitLab username or comma-separated multiple usernames"
      group:
        type: "string"
        description: "A GitLab group's path, for example `gitlab-org`, or comma-separated\
          \ multiple group paths"
      namespace:
        type: "string"
        description: "A GitLab group or user namespace's path, for example `john-doe`,\
          \ or comma-separated multiple namespace paths. Introduced in GitLab 15.0."
      project:
        type: "string"
        description: "A projects path, for example `gitlab-org/gitlab-foss`, or comma-separated\
          \ multiple project paths"
      repository:
        type: "string"
        description: "A repository path, for example `gitlab-org/gitlab-test.git`,\
          \ `gitlab-org/gitlab-test.wiki.git`, `snippets/21.git`, to name a few. Use\
          \ comma to separate multiple repository paths"
      force:
        type: "boolean"
        description: "Skip feature flag validation checks, such as a YAML definition"
    description: "Set or create a feature"
  EE_API_Entities_Geo_PipelineRefs:
    type: "object"
    properties:
      pipeline_refs:
        type: "array"
        items:
          type: "string"
          example: ""
    description: "EE_API_Entities_Geo_PipelineRefs model"
    example:
      pipeline_refs:
      - ""
      - ""
  postApiV4GeoStatus:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/postApiV4GeoStatus_data"
    description: "Posts the current node status to the primary site"
  EE_API_Entities_GeoNodeStatus:
    type: "object"
    properties:
      geo_node_id:
        type: "string"
      projects_count:
        type: "string"
      container_repositories_replication_enabled:
        type: "string"
      lfs_objects_count:
        type: "string"
      lfs_objects_checksum_total_count:
        type: "string"
      lfs_objects_checksummed_count:
        type: "string"
      lfs_objects_checksum_failed_count:
        type: "string"
      lfs_objects_synced_count:
        type: "string"
      lfs_objects_failed_count:
        type: "string"
      lfs_objects_registry_count:
        type: "string"
      lfs_objects_verification_total_count:
        type: "string"
      lfs_objects_verified_count:
        type: "string"
      lfs_objects_verification_failed_count:
        type: "string"
      merge_request_diffs_count:
        type: "string"
      merge_request_diffs_checksum_total_count:
        type: "string"
      merge_request_diffs_checksummed_count:
        type: "string"
      merge_request_diffs_checksum_failed_count:
        type: "string"
      merge_request_diffs_synced_count:
        type: "string"
      merge_request_diffs_failed_count:
        type: "string"
      merge_request_diffs_registry_count:
        type: "string"
      merge_request_diffs_verification_total_count:
        type: "string"
      merge_request_diffs_verified_count:
        type: "string"
      merge_request_diffs_verification_failed_count:
        type: "string"
      package_files_count:
        type: "string"
      package_files_checksum_total_count:
        type: "string"
      package_files_checksummed_count:
        type: "string"
      package_files_checksum_failed_count:
        type: "string"
      package_files_synced_count:
        type: "string"
      package_files_failed_count:
        type: "string"
      package_files_registry_count:
        type: "string"
      package_files_verification_total_count:
        type: "string"
      package_files_verified_count:
        type: "string"
      package_files_verification_failed_count:
        type: "string"
      terraform_state_versions_count:
        type: "string"
      terraform_state_versions_checksum_total_count:
        type: "string"
      terraform_state_versions_checksummed_count:
        type: "string"
      terraform_state_versions_checksum_failed_count:
        type: "string"
      terraform_state_versions_synced_count:
        type: "string"
      terraform_state_versions_failed_count:
        type: "string"
      terraform_state_versions_registry_count:
        type: "string"
      terraform_state_versions_verification_total_count:
        type: "string"
      terraform_state_versions_verified_count:
        type: "string"
      terraform_state_versions_verification_failed_count:
        type: "string"
      snippet_repositories_count:
        type: "string"
      snippet_repositories_checksum_total_count:
        type: "string"
      snippet_repositories_checksummed_count:
        type: "string"
      snippet_repositories_checksum_failed_count:
        type: "string"
      snippet_repositories_synced_count:
        type: "string"
      snippet_repositories_failed_count:
        type: "string"
      snippet_repositories_registry_count:
        type: "string"
      snippet_repositories_verification_total_count:
        type: "string"
      snippet_repositories_verified_count:
        type: "string"
      snippet_repositories_verification_failed_count:
        type: "string"
      group_wiki_repositories_count:
        type: "string"
      group_wiki_repositories_checksum_total_count:
        type: "string"
      group_wiki_repositories_checksummed_count:
        type: "string"
      group_wiki_repositories_checksum_failed_count:
        type: "string"
      group_wiki_repositories_synced_count:
        type: "string"
      group_wiki_repositories_failed_count:
        type: "string"
      group_wiki_repositories_registry_count:
        type: "string"
      group_wiki_repositories_verification_total_count:
        type: "string"
      group_wiki_repositories_verified_count:
        type: "string"
      group_wiki_repositories_verification_failed_count:
        type: "string"
      pipeline_artifacts_count:
        type: "string"
      pipeline_artifacts_checksum_total_count:
        type: "string"
      pipeline_artifacts_checksummed_count:
        type: "string"
      pipeline_artifacts_checksum_failed_count:
        type: "string"
      pipeline_artifacts_synced_count:
        type: "string"
      pipeline_artifacts_failed_count:
        type: "string"
      pipeline_artifacts_registry_count:
        type: "string"
      pipeline_artifacts_verification_total_count:
        type: "string"
      pipeline_artifacts_verified_count:
        type: "string"
      pipeline_artifacts_verification_failed_count:
        type: "string"
      pages_deployments_count:
        type: "string"
      pages_deployments_checksum_total_count:
        type: "string"
      pages_deployments_checksummed_count:
        type: "string"
      pages_deployments_checksum_failed_count:
        type: "string"
      pages_deployments_synced_count:
        type: "string"
      pages_deployments_failed_count:
        type: "string"
      pages_deployments_registry_count:
        type: "string"
      pages_deployments_verification_total_count:
        type: "string"
      pages_deployments_verified_count:
        type: "string"
      pages_deployments_verification_failed_count:
        type: "string"
      uploads_count:
        type: "string"
      uploads_checksum_total_count:
        type: "string"
      uploads_checksummed_count:
        type: "string"
      uploads_checksum_failed_count:
        type: "string"
      uploads_synced_count:
        type: "string"
      uploads_failed_count:
        type: "string"
      uploads_registry_count:
        type: "string"
      uploads_verification_total_count:
        type: "string"
      uploads_verified_count:
        type: "string"
      uploads_verification_failed_count:
        type: "string"
      job_artifacts_count:
        type: "string"
      job_artifacts_checksum_total_count:
        type: "string"
      job_artifacts_checksummed_count:
        type: "string"
      job_artifacts_checksum_failed_count:
        type: "string"
      job_artifacts_synced_count:
        type: "string"
      job_artifacts_failed_count:
        type: "string"
      job_artifacts_registry_count:
        type: "string"
      job_artifacts_verification_total_count:
        type: "string"
      job_artifacts_verified_count:
        type: "string"
      job_artifacts_verification_failed_count:
        type: "string"
      ci_secure_files_count:
        type: "string"
      ci_secure_files_checksum_total_count:
        type: "string"
      ci_secure_files_checksummed_count:
        type: "string"
      ci_secure_files_checksum_failed_count:
        type: "string"
      ci_secure_files_synced_count:
        type: "string"
      ci_secure_files_failed_count:
        type: "string"
      ci_secure_files_registry_count:
        type: "string"
      ci_secure_files_verification_total_count:
        type: "string"
      ci_secure_files_verified_count:
        type: "string"
      ci_secure_files_verification_failed_count:
        type: "string"
      container_repositories_count:
        type: "string"
      container_repositories_checksum_total_count:
        type: "string"
      container_repositories_checksummed_count:
        type: "string"
      container_repositories_checksum_failed_count:
        type: "string"
      container_repositories_synced_count:
        type: "string"
      container_repositories_failed_count:
        type: "string"
      container_repositories_registry_count:
        type: "string"
      container_repositories_verification_total_count:
        type: "string"
      container_repositories_verified_count:
        type: "string"
      container_repositories_verification_failed_count:
        type: "string"
      dependency_proxy_blobs_count:
        type: "string"
      dependency_proxy_blobs_checksum_total_count:
        type: "string"
      dependency_proxy_blobs_checksummed_count:
        type: "string"
      dependency_proxy_blobs_checksum_failed_count:
        type: "string"
      dependency_proxy_blobs_synced_count:
        type: "string"
      dependency_proxy_blobs_failed_count:
        type: "string"
      dependency_proxy_blobs_registry_count:
        type: "string"
      dependency_proxy_blobs_verification_total_count:
        type: "string"
      dependency_proxy_blobs_verified_count:
        type: "string"
      dependency_proxy_blobs_verification_failed_count:
        type: "string"
      dependency_proxy_manifests_count:
        type: "string"
      dependency_proxy_manifests_checksum_total_count:
        type: "string"
      dependency_proxy_manifests_checksummed_count:
        type: "string"
      dependency_proxy_manifests_checksum_failed_count:
        type: "string"
      dependency_proxy_manifests_synced_count:
        type: "string"
      dependency_proxy_manifests_failed_count:
        type: "string"
      dependency_proxy_manifests_registry_count:
        type: "string"
      dependency_proxy_manifests_verification_total_count:
        type: "string"
      dependency_proxy_manifests_verified_count:
        type: "string"
      dependency_proxy_manifests_verification_failed_count:
        type: "string"
      project_wiki_repositories_count:
        type: "string"
      project_wiki_repositories_checksum_total_count:
        type: "string"
      project_wiki_repositories_checksummed_count:
        type: "string"
      project_wiki_repositories_checksum_failed_count:
        type: "string"
      project_wiki_repositories_synced_count:
        type: "string"
      project_wiki_repositories_failed_count:
        type: "string"
      project_wiki_repositories_registry_count:
        type: "string"
      project_wiki_repositories_verification_total_count:
        type: "string"
      project_wiki_repositories_verified_count:
        type: "string"
      project_wiki_repositories_verification_failed_count:
        type: "string"
      design_management_repositories_count:
        type: "string"
      design_management_repositories_checksum_total_count:
        type: "string"
      design_management_repositories_checksummed_count:
        type: "string"
      design_management_repositories_checksum_failed_count:
        type: "string"
      design_management_repositories_synced_count:
        type: "string"
      design_management_repositories_failed_count:
        type: "string"
      design_management_repositories_registry_count:
        type: "string"
      design_management_repositories_verification_total_count:
        type: "string"
      design_management_repositories_verified_count:
        type: "string"
      design_management_repositories_verification_failed_count:
        type: "string"
      project_repositories_count:
        type: "string"
      project_repositories_checksum_total_count:
        type: "string"
      project_repositories_checksummed_count:
        type: "string"
      project_repositories_checksum_failed_count:
        type: "string"
      project_repositories_synced_count:
        type: "string"
      project_repositories_failed_count:
        type: "string"
      project_repositories_registry_count:
        type: "string"
      project_repositories_verification_total_count:
        type: "string"
      project_repositories_verified_count:
        type: "string"
      project_repositories_verification_failed_count:
        type: "string"
      git_fetch_event_count_weekly:
        type: "string"
      git_push_event_count_weekly:
        type: "string"
      proxy_remote_requests_event_count_weekly:
        type: "string"
      proxy_local_requests_event_count_weekly:
        type: "string"
      repositories_checked_in_percentage:
        type: "string"
      replication_slots_used_in_percentage:
        type: "string"
      lfs_objects_synced_in_percentage:
        type: "string"
      lfs_objects_verified_in_percentage:
        type: "string"
      merge_request_diffs_synced_in_percentage:
        type: "string"
      merge_request_diffs_verified_in_percentage:
        type: "string"
      package_files_synced_in_percentage:
        type: "string"
      package_files_verified_in_percentage:
        type: "string"
      terraform_state_versions_synced_in_percentage:
        type: "string"
      terraform_state_versions_verified_in_percentage:
        type: "string"
      snippet_repositories_synced_in_percentage:
        type: "string"
      snippet_repositories_verified_in_percentage:
        type: "string"
      group_wiki_repositories_synced_in_percentage:
        type: "string"
      group_wiki_repositories_verified_in_percentage:
        type: "string"
      pipeline_artifacts_synced_in_percentage:
        type: "string"
      pipeline_artifacts_verified_in_percentage:
        type: "string"
      pages_deployments_synced_in_percentage:
        type: "string"
      pages_deployments_verified_in_percentage:
        type: "string"
      uploads_synced_in_percentage:
        type: "string"
      uploads_verified_in_percentage:
        type: "string"
      job_artifacts_synced_in_percentage:
        type: "string"
      job_artifacts_verified_in_percentage:
        type: "string"
      ci_secure_files_synced_in_percentage:
        type: "string"
      ci_secure_files_verified_in_percentage:
        type: "string"
      container_repositories_synced_in_percentage:
        type: "string"
      container_repositories_verified_in_percentage:
        type: "string"
      dependency_proxy_blobs_synced_in_percentage:
        type: "string"
      dependency_proxy_blobs_verified_in_percentage:
        type: "string"
      dependency_proxy_manifests_synced_in_percentage:
        type: "string"
      dependency_proxy_manifests_verified_in_percentage:
        type: "string"
      project_wiki_repositories_synced_in_percentage:
        type: "string"
      project_wiki_repositories_verified_in_percentage:
        type: "string"
      design_management_repositories_synced_in_percentage:
        type: "string"
      design_management_repositories_verified_in_percentage:
        type: "string"
      project_repositories_synced_in_percentage:
        type: "string"
      project_repositories_verified_in_percentage:
        type: "string"
      repositories_count:
        type: "string"
      replication_slots_count:
        type: "string"
      replication_slots_used_count:
        type: "string"
      healthy:
        type: "string"
      health:
        type: "string"
      health_status:
        type: "string"
      missing_oauth_application:
        type: "string"
      db_replication_lag_seconds:
        type: "string"
      replication_slots_max_retained_wal_bytes:
        type: "string"
      repositories_checked_count:
        type: "string"
      repositories_checked_failed_count:
        type: "string"
      last_event_id:
        type: "string"
      last_event_timestamp:
        type: "string"
      cursor_last_event_id:
        type: "string"
      cursor_last_event_timestamp:
        type: "string"
      last_successful_status_check_timestamp:
        type: "string"
      version:
        type: "string"
      revision:
        type: "string"
      selective_sync_type:
        type: "string"
      namespaces:
        $ref: "#/definitions/API_Entities_NamespaceBasic"
      updated_at:
        type: "string"
      storage_shards:
        $ref: "#/definitions/StorageShardEntity"
      storage_shards_match:
        type: "string"
      _links:
        $ref: "#/definitions/EE_API_Entities_GeoNodeStatus__links"
    description: "EE_API_Entities_GeoNodeStatus model"
    example:
      selective_sync_type: "selective_sync_type"
      package_files_synced_in_percentage: "package_files_synced_in_percentage"
      dependency_proxy_manifests_verified_in_percentage: "dependency_proxy_manifests_verified_in_percentage"
      project_repositories_synced_in_percentage: "project_repositories_synced_in_percentage"
      group_wiki_repositories_synced_in_percentage: "group_wiki_repositories_synced_in_percentage"
      job_artifacts_checksum_total_count: "job_artifacts_checksum_total_count"
      project_wiki_repositories_checksum_total_count: "project_wiki_repositories_checksum_total_count"
      pages_deployments_checksum_total_count: "pages_deployments_checksum_total_count"
      lfs_objects_checksum_failed_count: "lfs_objects_checksum_failed_count"
      replication_slots_used_count: "replication_slots_used_count"
      terraform_state_versions_checksum_failed_count: "terraform_state_versions_checksum_failed_count"
      job_artifacts_registry_count: "job_artifacts_registry_count"
      ci_secure_files_synced_in_percentage: "ci_secure_files_synced_in_percentage"
      uploads_count: "uploads_count"
      package_files_verification_total_count: "package_files_verification_total_count"
      ci_secure_files_synced_count: "ci_secure_files_synced_count"
      terraform_state_versions_verification_total_count: "terraform_state_versions_verification_total_count"
      pages_deployments_failed_count: "pages_deployments_failed_count"
      project_repositories_checksum_total_count: "project_repositories_checksum_total_count"
      ci_secure_files_failed_count: "ci_secure_files_failed_count"
      version: "version"
      container_repositories_checksum_failed_count: "container_repositories_checksum_failed_count"
      terraform_state_versions_verification_failed_count: "terraform_state_versions_verification_failed_count"
      package_files_checksum_total_count: "package_files_checksum_total_count"
      job_artifacts_synced_in_percentage: "job_artifacts_synced_in_percentage"
      snippet_repositories_verification_failed_count: "snippet_repositories_verification_failed_count"
      group_wiki_repositories_checksum_failed_count: "group_wiki_repositories_checksum_failed_count"
      pipeline_artifacts_count: "pipeline_artifacts_count"
      terraform_state_versions_checksum_total_count: "terraform_state_versions_checksum_total_count"
      pages_deployments_synced_count: "pages_deployments_synced_count"
      git_fetch_event_count_weekly: "git_fetch_event_count_weekly"
      snippet_repositories_count: "snippet_repositories_count"
      storage_shards:
        name: "name"
      lfs_objects_count: "lfs_objects_count"
      snippet_repositories_synced_count: "snippet_repositories_synced_count"
      container_repositories_verification_failed_count: "container_repositories_verification_failed_count"
      ci_secure_files_verified_in_percentage: "ci_secure_files_verified_in_percentage"
      pipeline_artifacts_checksum_total_count: "pipeline_artifacts_checksum_total_count"
      project_repositories_verification_total_count: "project_repositories_verification_total_count"
      design_management_repositories_synced_in_percentage: "design_management_repositories_synced_in_percentage"
      dependency_proxy_manifests_verification_failed_count: "dependency_proxy_manifests_verification_failed_count"
      updated_at: "updated_at"
      dependency_proxy_manifests_synced_in_percentage: "dependency_proxy_manifests_synced_in_percentage"
      uploads_checksummed_count: "uploads_checksummed_count"
      design_management_repositories_checksum_failed_count: "design_management_repositories_checksum_failed_count"
      ci_secure_files_verification_total_count: "ci_secure_files_verification_total_count"
      pipeline_artifacts_checksummed_count: "pipeline_artifacts_checksummed_count"
      project_wiki_repositories_checksummed_count: "project_wiki_repositories_checksummed_count"
      merge_request_diffs_registry_count: "merge_request_diffs_registry_count"
      lfs_objects_registry_count: "lfs_objects_registry_count"
      project_wiki_repositories_verification_failed_count: "project_wiki_repositories_verification_failed_count"
      project_wiki_repositories_registry_count: "project_wiki_repositories_registry_count"
      dependency_proxy_blobs_checksum_failed_count: "dependency_proxy_blobs_checksum_failed_count"
      job_artifacts_verification_failed_count: "job_artifacts_verification_failed_count"
      repositories_checked_in_percentage: "repositories_checked_in_percentage"
      terraform_state_versions_checksummed_count: "terraform_state_versions_checksummed_count"
      dependency_proxy_blobs_synced_in_percentage: "dependency_proxy_blobs_synced_in_percentage"
      package_files_checksummed_count: "package_files_checksummed_count"
      snippet_repositories_failed_count: "snippet_repositories_failed_count"
      project_wiki_repositories_verified_in_percentage: "project_wiki_repositories_verified_in_percentage"
      replication_slots_max_retained_wal_bytes: "replication_slots_max_retained_wal_bytes"
      ci_secure_files_count: "ci_secure_files_count"
      terraform_state_versions_verified_in_percentage: "terraform_state_versions_verified_in_percentage"
      package_files_verified_in_percentage: "package_files_verified_in_percentage"
      group_wiki_repositories_verification_failed_count: "group_wiki_repositories_verification_failed_count"
      project_wiki_repositories_checksum_failed_count: "project_wiki_repositories_checksum_failed_count"
      design_management_repositories_failed_count: "design_management_repositories_failed_count"
      _links:
        node: "node"
        self: "self"
      uploads_registry_count: "uploads_registry_count"
      design_management_repositories_verification_total_count: "design_management_repositories_verification_total_count"
      uploads_verification_total_count: "uploads_verification_total_count"
      uploads_checksum_failed_count: "uploads_checksum_failed_count"
      snippet_repositories_verified_count: "snippet_repositories_verified_count"
      design_management_repositories_registry_count: "design_management_repositories_registry_count"
      job_artifacts_failed_count: "job_artifacts_failed_count"
      container_repositories_synced_count: "container_repositories_synced_count"
      pages_deployments_verification_failed_count: "pages_deployments_verification_failed_count"
      ci_secure_files_checksummed_count: "ci_secure_files_checksummed_count"
      lfs_objects_synced_in_percentage: "lfs_objects_synced_in_percentage"
      dependency_proxy_blobs_verified_in_percentage: "dependency_proxy_blobs_verified_in_percentage"
      lfs_objects_checksum_total_count: "lfs_objects_checksum_total_count"
      design_management_repositories_verified_in_percentage: "design_management_repositories_verified_in_percentage"
      design_management_repositories_verification_failed_count: "design_management_repositories_verification_failed_count"
      merge_request_diffs_synced_count: "merge_request_diffs_synced_count"
      git_push_event_count_weekly: "git_push_event_count_weekly"
      group_wiki_repositories_registry_count: "group_wiki_repositories_registry_count"
      merge_request_diffs_verified_in_percentage: "merge_request_diffs_verified_in_percentage"
      terraform_state_versions_verified_count: "terraform_state_versions_verified_count"
      snippet_repositories_checksum_failed_count: "snippet_repositories_checksum_failed_count"
      job_artifacts_verification_total_count: "job_artifacts_verification_total_count"
      project_wiki_repositories_verification_total_count: "project_wiki_repositories_verification_total_count"
      job_artifacts_verified_in_percentage: "job_artifacts_verified_in_percentage"
      group_wiki_repositories_checksum_total_count: "group_wiki_repositories_checksum_total_count"
      dependency_proxy_manifests_verification_total_count: "dependency_proxy_manifests_verification_total_count"
      storage_shards_match: "storage_shards_match"
      container_repositories_verification_total_count: "container_repositories_verification_total_count"
      repositories_count: "repositories_count"
      project_wiki_repositories_synced_in_percentage: "project_wiki_repositories_synced_in_percentage"
      project_repositories_checksummed_count: "project_repositories_checksummed_count"
      snippet_repositories_registry_count: "snippet_repositories_registry_count"
      pipeline_artifacts_verified_in_percentage: "pipeline_artifacts_verified_in_percentage"
      terraform_state_versions_count: "terraform_state_versions_count"
      pages_deployments_checksummed_count: "pages_deployments_checksummed_count"
      merge_request_diffs_verification_total_count: "merge_request_diffs_verification_total_count"
      pages_deployments_verified_count: "pages_deployments_verified_count"
      geo_node_id: "geo_node_id"
      merge_request_diffs_count: "merge_request_diffs_count"
      project_repositories_verification_failed_count: "project_repositories_verification_failed_count"
      dependency_proxy_blobs_checksummed_count: "dependency_proxy_blobs_checksummed_count"
      job_artifacts_checksummed_count: "job_artifacts_checksummed_count"
      project_repositories_checksum_failed_count: "project_repositories_checksum_failed_count"
      pipeline_artifacts_failed_count: "pipeline_artifacts_failed_count"
      ci_secure_files_verified_count: "ci_secure_files_verified_count"
      replication_slots_used_in_percentage: "replication_slots_used_in_percentage"
      merge_request_diffs_checksum_total_count: "merge_request_diffs_checksum_total_count"
      terraform_state_versions_synced_count: "terraform_state_versions_synced_count"
      pages_deployments_checksum_failed_count: "pages_deployments_checksum_failed_count"
      uploads_verified_in_percentage: "uploads_verified_in_percentage"
      db_replication_lag_seconds: "db_replication_lag_seconds"
      project_repositories_verified_in_percentage: "project_repositories_verified_in_percentage"
      merge_request_diffs_verified_count: "merge_request_diffs_verified_count"
      package_files_verified_count: "package_files_verified_count"
      package_files_synced_count: "package_files_synced_count"
      healthy: "healthy"
      pages_deployments_verified_in_percentage: "pages_deployments_verified_in_percentage"
      container_repositories_count: "container_repositories_count"
      project_repositories_synced_count: "project_repositories_synced_count"
      pages_deployments_synced_in_percentage: "pages_deployments_synced_in_percentage"
      uploads_failed_count: "uploads_failed_count"
      job_artifacts_checksum_failed_count: "job_artifacts_checksum_failed_count"
      design_management_repositories_checksum_total_count: "design_management_repositories_checksum_total_count"
      lfs_objects_synced_count: "lfs_objects_synced_count"
      proxy_local_requests_event_count_weekly: "proxy_local_requests_event_count_weekly"
      dependency_proxy_blobs_failed_count: "dependency_proxy_blobs_failed_count"
      missing_oauth_application: "missing_oauth_application"
      dependency_proxy_blobs_verified_count: "dependency_proxy_blobs_verified_count"
      design_management_repositories_checksummed_count: "design_management_repositories_checksummed_count"
      job_artifacts_count: "job_artifacts_count"
      dependency_proxy_blobs_synced_count: "dependency_proxy_blobs_synced_count"
      ci_secure_files_verification_failed_count: "ci_secure_files_verification_failed_count"
      dependency_proxy_manifests_synced_count: "dependency_proxy_manifests_synced_count"
      snippet_repositories_synced_in_percentage: "snippet_repositories_synced_in_percentage"
      dependency_proxy_manifests_failed_count: "dependency_proxy_manifests_failed_count"
      group_wiki_repositories_verified_in_percentage: "group_wiki_repositories_verified_in_percentage"
      container_repositories_replication_enabled: "container_repositories_replication_enabled"
      uploads_verification_failed_count: "uploads_verification_failed_count"
      uploads_checksum_total_count: "uploads_checksum_total_count"
      package_files_checksum_failed_count: "package_files_checksum_failed_count"
      snippet_repositories_checksum_total_count: "snippet_repositories_checksum_total_count"
      dependency_proxy_manifests_checksum_failed_count: "dependency_proxy_manifests_checksum_failed_count"
      dependency_proxy_blobs_verification_failed_count: "dependency_proxy_blobs_verification_failed_count"
      lfs_objects_verification_total_count: "lfs_objects_verification_total_count"
      snippet_repositories_verified_in_percentage: "snippet_repositories_verified_in_percentage"
      dependency_proxy_blobs_verification_total_count: "dependency_proxy_blobs_verification_total_count"
      group_wiki_repositories_verified_count: "group_wiki_repositories_verified_count"
      project_wiki_repositories_failed_count: "project_wiki_repositories_failed_count"
      lfs_objects_verification_failed_count: "lfs_objects_verification_failed_count"
      group_wiki_repositories_count: "group_wiki_repositories_count"
      project_wiki_repositories_synced_count: "project_wiki_repositories_synced_count"
      lfs_objects_failed_count: "lfs_objects_failed_count"
      merge_request_diffs_synced_in_percentage: "merge_request_diffs_synced_in_percentage"
      dependency_proxy_blobs_registry_count: "dependency_proxy_blobs_registry_count"
      group_wiki_repositories_synced_count: "group_wiki_repositories_synced_count"
      snippet_repositories_checksummed_count: "snippet_repositories_checksummed_count"
      group_wiki_repositories_failed_count: "group_wiki_repositories_failed_count"
      group_wiki_repositories_checksummed_count: "group_wiki_repositories_checksummed_count"
      merge_request_diffs_checksummed_count: "merge_request_diffs_checksummed_count"
      project_repositories_count: "project_repositories_count"
      repositories_checked_count: "repositories_checked_count"
      package_files_count: "package_files_count"
      lfs_objects_checksummed_count: "lfs_objects_checksummed_count"
      replication_slots_count: "replication_slots_count"
      uploads_verified_count: "uploads_verified_count"
      package_files_registry_count: "package_files_registry_count"
      repositories_checked_failed_count: "repositories_checked_failed_count"
      container_repositories_synced_in_percentage: "container_repositories_synced_in_percentage"
      health: "health"
      snippet_repositories_verification_total_count: "snippet_repositories_verification_total_count"
      project_repositories_registry_count: "project_repositories_registry_count"
      cursor_last_event_timestamp: "cursor_last_event_timestamp"
      ci_secure_files_registry_count: "ci_secure_files_registry_count"
      last_event_timestamp: "last_event_timestamp"
      pages_deployments_verification_total_count: "pages_deployments_verification_total_count"
      dependency_proxy_manifests_checksummed_count: "dependency_proxy_manifests_checksummed_count"
      pages_deployments_count: "pages_deployments_count"
      last_successful_status_check_timestamp: "last_successful_status_check_timestamp"
      pages_deployments_registry_count: "pages_deployments_registry_count"
      pipeline_artifacts_verification_failed_count: "pipeline_artifacts_verification_failed_count"
      design_management_repositories_synced_count: "design_management_repositories_synced_count"
      container_repositories_failed_count: "container_repositories_failed_count"
      ci_secure_files_checksum_failed_count: "ci_secure_files_checksum_failed_count"
      proxy_remote_requests_event_count_weekly: "proxy_remote_requests_event_count_weekly"
      package_files_verification_failed_count: "package_files_verification_failed_count"
      health_status: "health_status"
      job_artifacts_synced_count: "job_artifacts_synced_count"
      dependency_proxy_manifests_verified_count: "dependency_proxy_manifests_verified_count"
      dependency_proxy_blobs_count: "dependency_proxy_blobs_count"
      container_repositories_verified_count: "container_repositories_verified_count"
      pipeline_artifacts_registry_count: "pipeline_artifacts_registry_count"
      design_management_repositories_verified_count: "design_management_repositories_verified_count"
      merge_request_diffs_failed_count: "merge_request_diffs_failed_count"
      container_repositories_verified_in_percentage: "container_repositories_verified_in_percentage"
      merge_request_diffs_checksum_failed_count: "merge_request_diffs_checksum_failed_count"
      terraform_state_versions_registry_count: "terraform_state_versions_registry_count"
      revision: "revision"
      container_repositories_checksummed_count: "container_repositories_checksummed_count"
      container_repositories_registry_count: "container_repositories_registry_count"
      lfs_objects_verified_in_percentage: "lfs_objects_verified_in_percentage"
      ci_secure_files_checksum_total_count: "ci_secure_files_checksum_total_count"
      namespaces:
        path: "my_project"
        avatar_url: "https://example.com/avatar/12345"
        web_url: "https://example.com/group/my_project"
        kind: "project"
        parent_id: 1
        name: "project"
        id: 2
        full_path: "group/my_project"
      projects_count: "projects_count"
      group_wiki_repositories_verification_total_count: "group_wiki_repositories_verification_total_count"
      package_files_failed_count: "package_files_failed_count"
      cursor_last_event_id: "cursor_last_event_id"
      job_artifacts_verified_count: "job_artifacts_verified_count"
      dependency_proxy_manifests_count: "dependency_proxy_manifests_count"
      terraform_state_versions_synced_in_percentage: "terraform_state_versions_synced_in_percentage"
      terraform_state_versions_failed_count: "terraform_state_versions_failed_count"
      pipeline_artifacts_verified_count: "pipeline_artifacts_verified_count"
      pipeline_artifacts_verification_total_count: "pipeline_artifacts_verification_total_count"
      pipeline_artifacts_synced_count: "pipeline_artifacts_synced_count"
      dependency_proxy_blobs_checksum_total_count: "dependency_proxy_blobs_checksum_total_count"
      project_wiki_repositories_count: "project_wiki_repositories_count"
      dependency_proxy_manifests_registry_count: "dependency_proxy_manifests_registry_count"
      pipeline_artifacts_checksum_failed_count: "pipeline_artifacts_checksum_failed_count"
      design_management_repositories_count: "design_management_repositories_count"
      project_repositories_verified_count: "project_repositories_verified_count"
      merge_request_diffs_verification_failed_count: "merge_request_diffs_verification_failed_count"
      uploads_synced_in_percentage: "uploads_synced_in_percentage"
      container_repositories_checksum_total_count: "container_repositories_checksum_total_count"
      uploads_synced_count: "uploads_synced_count"
      project_repositories_failed_count: "project_repositories_failed_count"
      pipeline_artifacts_synced_in_percentage: "pipeline_artifacts_synced_in_percentage"
      last_event_id: "last_event_id"
      project_wiki_repositories_verified_count: "project_wiki_repositories_verified_count"
      lfs_objects_verified_count: "lfs_objects_verified_count"
      dependency_proxy_manifests_checksum_total_count: "dependency_proxy_manifests_checksum_total_count"
  StorageShardEntity:
    type: "object"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  postApiV4GeoProxyGitSshInfoRefsUploadPack:
    type: "object"
    required:
    - "data"
    - "secret_token"
    properties:
      secret_token:
        type: "string"
        description: "Secret token to authenticate by gitlab shell"
      data:
        $ref: "#/definitions/postApiV4GeoProxyGitSshInfoRefsUploadPack_data"
    description: "Responsible for making HTTP GET /repo.git/info/refs?service=git-upload-pack\n\
      \                  request from secondary gitlab-shell to primary"
  postApiV4GeoProxyGitSshUploadPack:
    type: "object"
    required:
    - "data"
    - "output"
    - "secret_token"
    properties:
      secret_token:
        type: "string"
      data:
        $ref: "#/definitions/postApiV4GeoProxyGitSshUploadPack_data"
      output:
        type: "string"
        description: "Output from git-upload-pack"
    description: "Responsible for making HTTP POST /repo.git/git-upload-pack\n   \
      \               request from secondary gitlab-shell to primary"
  postApiV4GeoProxyGitSshInfoRefsReceivePack:
    type: "object"
    required:
    - "data"
    - "secret_token"
    properties:
      secret_token:
        type: "string"
      data:
        $ref: "#/definitions/postApiV4GeoProxyGitSshUploadPack_data"
    description: "Responsible for making HTTP GET /repo.git/info/refs?service=git-receive-pack\n\
      \                  request from secondary gitlab-shell to primary"
  postApiV4GeoProxyGitSshReceivePack:
    type: "object"
    required:
    - "data"
    - "output"
    - "secret_token"
    properties:
      secret_token:
        type: "string"
      data:
        $ref: "#/definitions/postApiV4GeoProxyGitSshUploadPack_data"
      output:
        type: "string"
        description: "Output from git-receive-pack"
    description: "Responsible for making HTTP POST /repo.git/info/refs?service=git-receive-pack\n\
      \                  request from secondary gitlab-shell to primary"
  postApiV4IntegrationsSlackEvents:
    type: "object"
    properties:
      token:
        type: "string"
        description: "(Deprecated by Slack) The request token, unused by GitLab"
      team_id:
        type: "string"
        description: "The Slack workspace ID of where the event occurred"
      api_app_id:
        type: "string"
        description: "The Slack app ID"
      event:
        type: "object"
        description: "The event object with variable properties"
        properties: {}
      type:
        type: "string"
        description: "The kind of event this is, usually `event_callback`"
      event_id:
        type: "string"
        description: "A unique identifier for this specific event"
      event_time:
        type: "integer"
        format: "int32"
        description: "The epoch timestamp in seconds when this event was dispatched"
      authed_users:
        type: "array"
        description: "(Deprecated by Slack) An array of Slack user IDs"
        items:
          type: "string"
    description: "Receive Slack events"
  postApiV4IntegrationsJiraConnectSubscriptions:
    type: "object"
    required:
    - "jwt"
    - "namespace_path"
    properties:
      jwt:
        type: "string"
        description: "JWT token for authorization with the Jira Connect installation"
      namespace_path:
        type: "string"
        description: "Path for the namespace that should be subscribed"
    description: "Subscribe a namespace to a JiraConnectInstallation"
  API_Entities_BasicSuccess:
    type: "object"
    properties:
      success:
        type: "object"
        properties: {}
    description: "API_Entities_BasicSuccess model"
    example:
      success: "{}"
  API_Entities_SSHKeyWithUser:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      title:
        type: "string"
        example: "Sample key 25"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-09-03T07:24:44.627Z"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-09-03T07:24:44.627Z"
      key:
        type: "string"
        example: "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt1256k6Yjz\\\
          \n      GGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCdd\\\
          \n      NaP0L+hM7zhFNzjFvpaMgJw0="
      usage_type:
        type: "string"
        example: "auth"
      user:
        $ref: "#/definitions/API_Entities_UserPublic"
    description: "API_Entities_SSHKeyWithUser model"
    example:
      expires_at: "2020-09-03T07:24:44.627Z"
      usage_type: "auth"
      created_at: "2015-09-03T07:24:44.627Z"
      id: 1
      title: "Sample key 25"
      user:
        can_create_project: true
        private_profile: false
        work_information: "work_information"
        commit_email: "commit_email"
        bot: "bot"
        theme_id: 2
        created_at: "created_at"
        bio: "bio"
        projects_limit: 10
        linkedin: "linkedin"
        last_activity_on: "2015-09-03T07:24:01.670Z"
        can_create_group: true
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
        skype: "skype"
        twitter: "twitter"
        identities:
          provider: "provider"
          saml_provider_id: "saml_provider_id"
          extern_uid: "extern_uid"
        local_time: "local_time"
        last_sign_in_at: "2015-09-03T07:24:01.670Z"
        color_scheme_id: 1
        id: 1
        state: "active"
        locked: true
        confirmed_at: "2015-09-03T07:24:01.670Z"
        job_title: "job_title"
        email: "john@example.com"
        current_sign_in_at: "2015-09-03T07:24:01.670Z"
        two_factor_enabled: true
        scim_identities:
          group_id: "group_id"
          active: "active"
          extern_uid: "extern_uid"
        shared_runners_minutes_limit: "shared_runners_minutes_limit"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        is_followed: "is_followed"
        external: "external"
        discord: "discord"
        followers: "followers"
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        website_url: "website_url"
        extra_shared_runners_minutes_limit: "extra_shared_runners_minutes_limit"
        organization: "organization"
        following: "following"
        name: "Administrator"
        location: "location"
        pronouns: "pronouns"
        public_email: "public_email"
        username: "admin"
      key: "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt1256k6Yjz\\\
        \n      GGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCdd\\\
        \n      NaP0L+hM7zhFNzjFvpaMgJw0="
  postApiV4Markdown:
    type: "object"
    required:
    - "text"
    properties:
      text:
        type: "string"
        description: "The Markdown text to render"
      gfm:
        type: "boolean"
        description: "Render text using GitLab Flavored Markdown. Default is false"
      project:
        type: "string"
        description: "Use project as a context when creating references using GitLab\
          \ Flavored Markdown"
    description: "Render an arbitrary Markdown document"
  API_Entities_Markdown:
    type: "object"
    properties:
      html:
        type: "string"
        example: "<p dir=\\\"auto\\\">Hello world!</p>\""
    description: "API_Entities_Markdown model"
    example:
      html: "<p dir=\\\"auto\\\">Hello world!</p>\""
  putApiV4NamespacesId:
    type: "object"
    properties:
      shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        description: "Compute minutes quota for this namespace"
      extra_shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        description: "Extra compute minutes for this namespace"
      additional_purchased_storage_size:
        type: "integer"
        format: "int32"
        description: "Additional storage size for this namespace"
      additional_purchased_storage_ends_on:
        type: "string"
        format: "date"
        description: "End of subscription of the additional purchased storage"
      gitlab_subscription_attributes:
        $ref: "#/definitions/putApiV4NamespacesId_gitlab_subscription_attributes"
    description: "Update a namespace"
  API_Entities_Namespace:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 2
      name:
        type: "string"
        example: "project"
      path:
        type: "string"
        example: "my_project"
      kind:
        type: "string"
        example: "project"
      full_path:
        type: "string"
        example: "group/my_project"
      parent_id:
        type: "integer"
        format: "int32"
        example: 1
      avatar_url:
        type: "string"
        example: "https://example.com/avatar/12345"
      web_url:
        type: "string"
        example: "https://example.com/group/my_project"
      members_count_with_descendants:
        type: "integer"
        format: "int32"
        example: 5
      root_repository_size:
        type: "integer"
        format: "int32"
        example: 123
      projects_count:
        type: "integer"
        format: "int32"
        example: 123
      shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        example: 133
      extra_shared_runners_minutes_limit:
        type: "integer"
        format: "int32"
        example: 133
      additional_purchased_storage_size:
        type: "integer"
        format: "int32"
        example: 1000
      additional_purchased_storage_ends_on:
        type: "string"
        format: "date"
        example: "2022-06-18"
      billable_members_count:
        type: "integer"
        format: "int32"
        example: 2
      seats_in_use:
        type: "integer"
        format: "int32"
        example: 5
      max_seats_used:
        type: "integer"
        format: "int32"
        example: 100
      max_seats_used_changed_at:
        type: "string"
        format: "date"
        example: "2022-06-18"
      end_date:
        type: "string"
        format: "date"
        example: "2022-06-18"
      plan:
        type: "string"
        example: "default"
      trial_ends_on:
        type: "string"
        format: "date"
        example: "2022-06-18"
      trial:
        type: "boolean"
    description: "API_Entities_Namespace model"
    example:
      max_seats_used: 100
      end_date: "2022-06-18"
      seats_in_use: 5
      additional_purchased_storage_ends_on: "2022-06-18"
      members_count_with_descendants: 5
      shared_runners_minutes_limit: 133
      kind: "project"
      projects_count: 123
      trial: true
      path: "my_project"
      avatar_url: "https://example.com/avatar/12345"
      web_url: "https://example.com/group/my_project"
      billable_members_count: 2
      extra_shared_runners_minutes_limit: 133
      parent_id: 1
      trial_ends_on: "2022-06-18"
      root_repository_size: 123
      max_seats_used_changed_at: "2022-06-18"
      name: "project"
      id: 2
      full_path: "group/my_project"
      additional_purchased_storage_size: 1000
      plan: "default"
  postApiV4NamespacesIdGitlabSubscription:
    type: "object"
    required:
    - "start_date"
    properties:
      start_date:
        type: "string"
        format: "date"
        description: "The date when subscription was started"
      seats:
        type: "integer"
        format: "int32"
        description: "Number of seats in subscription"
      max_seats_used:
        type: "integer"
        format: "int32"
        description: "Highest number of active users in the last month"
      plan_code:
        type: "string"
        description: "Subscription tier code"
      end_date:
        type: "string"
        format: "date"
        description: "End date of subscription"
      auto_renew:
        type: "boolean"
        description: "Whether subscription will auto renew on end date"
      trial:
        type: "boolean"
        description: "Whether the subscription is a trial"
      trial_ends_on:
        type: "string"
        format: "date"
        description: "End date of trial"
      trial_starts_on:
        type: "string"
        format: "date"
        description: "Start date of trial"
      trial_extension_type:
        type: "integer"
        format: "int32"
        description: "Whether subscription is an extended or reactivated trial"
    description: "Create a subscription for the namespace"
  API_Entities_GitlabSubscription:
    type: "object"
    properties:
      plan:
        $ref: "#/definitions/API_Entities_GitlabSubscription_plan"
      usage:
        $ref: "#/definitions/API_Entities_GitlabSubscription_usage"
      billing:
        $ref: "#/definitions/API_Entities_GitlabSubscription_billing"
    description: "API_Entities_GitlabSubscription model"
    example:
      usage:
        max_seats_used: "max_seats_used"
        seats_in_use: "seats_in_use"
        seats_owed: "seats_owed"
        seats_in_subscription: "seats_in_subscription"
      plan:
        exclude_guests: "exclude_guests"
        code: "code"
        auto_renew: "auto_renew"
        upgradable: "upgradable"
        name: "name"
        trial: "trial"
      billing:
        subscription_end_date: "subscription_end_date"
        trial_ends_on: "trial_ends_on"
        subscription_start_date: "subscription_start_date"
  putApiV4NamespacesIdGitlabSubscription:
    type: "object"
    properties:
      start_date:
        type: "string"
        format: "date"
        description: "Start date of subscription"
      seats:
        type: "integer"
        format: "int32"
        description: "Number of seats in subscription"
      max_seats_used:
        type: "integer"
        format: "int32"
        description: "Highest number of active users in the last month"
      plan_code:
        type: "string"
        description: "Subscription tier code"
      end_date:
        type: "string"
        format: "date"
        description: "End date of subscription"
      auto_renew:
        type: "boolean"
        description: "Whether subscription will auto renew on end date"
      trial:
        type: "boolean"
        description: "Whether the subscription is a trial"
      trial_ends_on:
        type: "string"
        format: "date"
        description: "End date of trial"
      trial_starts_on:
        type: "string"
        format: "date"
        description: "Start date of trial"
      trial_extension_type:
        type: "integer"
        format: "int32"
        description: "Whether subscription is an extended or reactivated trial"
    description: "Update the subscription for the namespace"
  postApiV4NamespacesIdStorageLimitExclusion:
    type: "object"
    required:
    - "reason"
    properties:
      reason:
        type: "string"
        description: "The reason the Namespace is being excluded"
    description: "Creates a storage limit exclusion for a Namespace"
  API_Entities_Namespaces_Storage_LimitExclusion:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      namespace_id:
        type: "integer"
        format: "int32"
        example: 123
      namespace_name:
        type: "string"
        example: "GitLab"
      reason:
        type: "string"
        example: "a reason"
    description: "API_Entities_Namespaces_Storage_LimitExclusion model"
    example:
      reason: "a reason"
      namespace_id: 123
      id: 1
      namespace_name: "GitLab"
  API_Entities_NamespaceExistence:
    type: "object"
    properties:
      exists:
        type: "boolean"
      suggests:
        type: "array"
        items:
          type: "string"
          example: "my-group1"
    description: "API_Entities_NamespaceExistence model"
    example:
      suggests:
      - "my-group1"
      - "my-group1"
      exists: true
  API_Entities_PagesDomainBasic:
    type: "object"
    properties:
      domain:
        type: "string"
      url:
        type: "string"
      project_id:
        type: "string"
      verified:
        type: "string"
      verification_code:
        type: "string"
      enabled_until:
        type: "string"
      auto_ssl_enabled:
        type: "string"
      certificate_expiration:
        $ref: "#/definitions/API_Entities_PagesDomainCertificateExpiration"
    description: "API_Entities_PagesDomainBasic model"
    example:
      enabled_until: "enabled_until"
      project_id: "project_id"
      domain: "domain"
      verified: "verified"
      verification_code: "verification_code"
      certificate_expiration:
        expired: "expired"
        expiration: "expiration"
      url: "url"
      auto_ssl_enabled: "auto_ssl_enabled"
  API_Entities_PagesDomainCertificateExpiration:
    type: "object"
    properties:
      expired:
        type: "string"
      expiration:
        type: "string"
    example:
      expired: "expired"
      expiration: "expiration"
  API_Entities_PersonalAccessToken:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 2
      name:
        type: "string"
        example: "John Doe"
      revoked:
        type: "boolean"
      created_at:
        type: "string"
        format: "date-time"
      scopes:
        type: "array"
        example: ""
      user_id:
        type: "integer"
        format: "int32"
        example: 3
      last_used_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
      active:
        type: "boolean"
      expires_at:
        type: "string"
        format: "date-time"
        example: "2020-08-31T15:53:00.073Z"
    description: "API_Entities_PersonalAccessToken model"
    example:
      last_used_at: "2020-08-31T15:53:00.073Z"
      expires_at: "2020-08-31T15:53:00.073Z"
      user_id: 3
      name: "John Doe"
      created_at: "2000-01-23T04:56:07.000+00:00"
      active: true
      id: 2
      scopes: ""
      revoked: true
  postApiV4PersonalAccessTokensSelfRotate:
    type: "object"
    properties:
      expires_at:
        type: "string"
        format: "date"
        example: "2021-01-31"
        description: "The expiration date of the token"
    description: "Rotate a personal access token"
  postApiV4PersonalAccessTokensIdRotate:
    type: "object"
    properties:
      expires_at:
        type: "string"
        format: "date"
        example: "2021-01-31"
        description: "The expiration date of the token"
    description: "Rotate personal access token"
  postApiV4ProjectRepositoryStorageMoves:
    type: "object"
    required:
    - "source_storage_name"
    properties:
      source_storage_name:
        type: "string"
        description: "The source storage shard"
        enum:
        - "default"
      destination_storage_name:
        type: "string"
        description: "The destination storage shard"
        enum:
        - "default"
    description: "Schedule bulk project repository storage moves"
  API_Entities_Snippet:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      title:
        type: "string"
        example: "test"
      description:
        type: "string"
        example: "Ruby test snippet"
      visibility:
        type: "string"
        example: "public"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      created_at:
        type: "string"
        format: "date-time"
        example: "2012-06-28T10:52:04Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2012-06-28T10:52:04Z"
      project_id:
        type: "integer"
        format: "int32"
        example: 1
      web_url:
        type: "string"
        example: "http://example.com/example/example/snippets/1"
      raw_url:
        type: "string"
        example: "http://example.com/example/example/snippets/1/raw"
      ssh_url_to_repo:
        type: "string"
        example: "ssh://user@gitlab.example.com/snippets/65.git"
      http_url_to_repo:
        type: "string"
        example: "https://gitlab.example.com/snippets/65.git"
      file_name:
        type: "string"
        example: "add.rb"
      files:
        type: "array"
        items:
          type: "string"
          example: "e0d123e5f316bef78bfdf5a008837577"
      imported:
        type: "boolean"
        example: false
      imported_from:
        type: "string"
        example: "none"
      repository_storage:
        type: "string"
    description: "API_Entities_Snippet model"
    example:
      ssh_url_to_repo: "ssh://user@gitlab.example.com/snippets/65.git"
      visibility: "public"
      repository_storage: "repository_storage"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      file_name: "add.rb"
      imported_from: "none"
      description: "Ruby test snippet"
      created_at: "2012-06-28T10:52:04Z"
      title: "test"
      http_url_to_repo: "https://gitlab.example.com/snippets/65.git"
      updated_at: "2012-06-28T10:52:04Z"
      web_url: "http://example.com/example/example/snippets/1"
      project_id: 1
      imported: false
      files:
      - "e0d123e5f316bef78bfdf5a008837577"
      - "e0d123e5f316bef78bfdf5a008837577"
      id: 1
      raw_url: "http://example.com/example/example/snippets/1/raw"
  API_Entities_PersonalSnippet:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      title:
        type: "string"
        example: "test"
      description:
        type: "string"
        example: "Ruby test snippet"
      visibility:
        type: "string"
        example: "public"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      created_at:
        type: "string"
        format: "date-time"
        example: "2012-06-28T10:52:04Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2012-06-28T10:52:04Z"
      project_id:
        type: "integer"
        format: "int32"
        example: 1
      web_url:
        type: "string"
        example: "http://example.com/example/example/snippets/1"
      raw_url:
        type: "string"
        example: "http://example.com/example/example/snippets/1/raw"
      ssh_url_to_repo:
        type: "string"
        example: "ssh://user@gitlab.example.com/snippets/65.git"
      http_url_to_repo:
        type: "string"
        example: "https://gitlab.example.com/snippets/65.git"
      file_name:
        type: "string"
        example: "add.rb"
      files:
        type: "array"
        items:
          type: "string"
          example: "e0d123e5f316bef78bfdf5a008837577"
      imported:
        type: "boolean"
        example: false
      imported_from:
        type: "string"
        example: "none"
      repository_storage:
        type: "string"
    description: "API_Entities_PersonalSnippet model"
    example:
      ssh_url_to_repo: "ssh://user@gitlab.example.com/snippets/65.git"
      visibility: "public"
      repository_storage: "repository_storage"
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      file_name: "add.rb"
      imported_from: "none"
      description: "Ruby test snippet"
      created_at: "2012-06-28T10:52:04Z"
      title: "test"
      http_url_to_repo: "https://gitlab.example.com/snippets/65.git"
      updated_at: "2012-06-28T10:52:04Z"
      web_url: "http://example.com/example/example/snippets/1"
      project_id: 1
      imported: false
      files:
      - "e0d123e5f316bef78bfdf5a008837577"
      - "e0d123e5f316bef78bfdf5a008837577"
      id: 1
      raw_url: "http://example.com/example/example/snippets/1/raw"
  postApiV4Snippets:
    type: "object"
    required:
    - "file_name"
    - "title"
    properties:
      title:
        type: "string"
        description: "The title of a snippet"
      description:
        type: "string"
        description: "The description of a snippet"
      visibility:
        type: "string"
        description: "The visibility of the snippet"
        default: "internal"
        enum:
        - "private"
        - "internal"
        - "public"
      files:
        type: "array"
        description: "An array of files"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdSnippets_files"
      content:
        type: "string"
        description: "The content of a snippet"
      file_name:
        type: "string"
        description: "The name of a snippet file"
    description: "Create new snippet"
  putApiV4SnippetsId:
    type: "object"
    properties:
      content:
        type: "string"
        description: "The content of a snippet"
      description:
        type: "string"
        description: "The description of a snippet"
      file_name:
        type: "string"
        description: "The name of a snippet file"
      title:
        type: "string"
        description: "The title of a snippet"
      visibility:
        type: "string"
        description: "The visibility of the snippet"
        enum:
        - "private"
        - "internal"
        - "public"
      files:
        type: "array"
        description: "An array of files to update"
        items:
          $ref: "#/definitions/putApiV4ProjectsIdSnippetsSnippetId_files"
    description: "Update an existing snippet"
  API_Entities_Snippets_RepositoryStorageMove:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      created_at:
        type: "string"
        format: "date-time"
        example: "2020-05-07T04:27:17.234Z"
      state:
        type: "string"
        example: "scheduled"
      source_storage_name:
        type: "string"
        example: "default"
      destination_storage_name:
        type: "string"
        example: "storage1"
      error_message:
        type: "string"
        example: "Failed to move repository"
      snippet:
        $ref: "#/definitions/API_Entities_BasicSnippet"
    description: "API_Entities_Snippets_RepositoryStorageMove model"
    example:
      error_message: "Failed to move repository"
      snippet:
        ssh_url_to_repo: "ssh://user@gitlab.example.com/snippets/65.git"
        visibility: "public"
        updated_at: "2012-06-28T10:52:04Z"
        web_url: "http://example.com/example/example/snippets/1"
        project_id: 1
        author:
          avatar_url: "https://gravatar.com/avatar/1"
          web_url: "https://gitlab.example.com/root"
          avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
          name: "Administrator"
          id: 1
          state: "active"
          locked: true
          username: "admin"
          custom_attributes:
          - value: "bar"
            key: "foo"
          - value: "bar"
            key: "foo"
        description: "Ruby test snippet"
        created_at: "2012-06-28T10:52:04Z"
        id: 1
        title: "test"
        http_url_to_repo: "https://gitlab.example.com/snippets/65.git"
        raw_url: "http://example.com/example/example/snippets/1/raw"
      destination_storage_name: "storage1"
      source_storage_name: "default"
      created_at: "2020-05-07T04:27:17.234Z"
      id: 1
      state: "scheduled"
  API_Entities_BasicSnippet:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      title:
        type: "string"
        example: "test"
      description:
        type: "string"
        example: "Ruby test snippet"
      visibility:
        type: "string"
        example: "public"
      author:
        $ref: "#/definitions/API_Entities_UserBasic"
      created_at:
        type: "string"
        format: "date-time"
        example: "2012-06-28T10:52:04Z"
      updated_at:
        type: "string"
        format: "date-time"
        example: "2012-06-28T10:52:04Z"
      project_id:
        type: "integer"
        format: "int32"
        example: 1
      web_url:
        type: "string"
        example: "http://example.com/example/example/snippets/1"
      raw_url:
        type: "string"
        example: "http://example.com/example/example/snippets/1/raw"
      ssh_url_to_repo:
        type: "string"
        example: "ssh://user@gitlab.example.com/snippets/65.git"
      http_url_to_repo:
        type: "string"
        example: "https://gitlab.example.com/snippets/65.git"
    example:
      ssh_url_to_repo: "ssh://user@gitlab.example.com/snippets/65.git"
      visibility: "public"
      updated_at: "2012-06-28T10:52:04Z"
      web_url: "http://example.com/example/example/snippets/1"
      project_id: 1
      author:
        avatar_url: "https://gravatar.com/avatar/1"
        web_url: "https://gitlab.example.com/root"
        avatar_path: "/user/avatar/28/The-Big-Lebowski-400-400.png"
        name: "Administrator"
        id: 1
        state: "active"
        locked: true
        username: "admin"
        custom_attributes:
        - value: "bar"
          key: "foo"
        - value: "bar"
          key: "foo"
      description: "Ruby test snippet"
      created_at: "2012-06-28T10:52:04Z"
      id: 1
      title: "test"
      http_url_to_repo: "https://gitlab.example.com/snippets/65.git"
      raw_url: "http://example.com/example/example/snippets/1/raw"
  postApiV4SnippetsIdRepositoryStorageMoves:
    type: "object"
    properties:
      destination_storage_name:
        type: "string"
        description: "The destination storage shard"
    description: "Schedule a snippet repository storage move"
  postApiV4SnippetRepositoryStorageMoves:
    type: "object"
    required:
    - "source_storage_name"
    properties:
      source_storage_name:
        type: "string"
        description: "The source storage shard"
        enum:
        - "default"
      destination_storage_name:
        type: "string"
        description: "The destination storage shard"
        enum:
        - "default"
    description: "Schedule bulk snippet repository storage moves"
  putApiV4SuggestionsIdApply:
    type: "object"
    properties:
      commit_message:
        type: "string"
        description: "A custom commit message to use instead of the default generated\
          \ message or the project's default message"
    description: "Apply suggestion patch in the Merge Request it was created"
  API_Entities_Suggestion:
    type: "object"
    properties:
      id:
        type: "string"
      from_line:
        type: "string"
      to_line:
        type: "string"
      appliable:
        type: "string"
      applied:
        type: "string"
      from_content:
        type: "string"
      to_content:
        type: "string"
    description: "API_Entities_Suggestion model"
    example:
      from_line: "from_line"
      to_line: "to_line"
      appliable: "appliable"
      applied: "applied"
      from_content: "from_content"
      id: "id"
      to_content: "to_content"
  putApiV4SuggestionsBatchApply:
    type: "object"
    required:
    - "ids"
    properties:
      ids:
        type: "array"
        description: "An array of the suggestion IDs"
        items:
          type: "integer"
          format: "int32"
      commit_message:
        type: "string"
        description: "A custom commit message to use instead of the default generated\
          \ message or the project's default message"
    description: "Apply multiple suggestion patches in the Merge Request where they\
      \ were created"
  API_Entities_Hook:
    type: "object"
    properties:
      id:
        type: "string"
        example: "1"
      url:
        type: "string"
        example: "https://webhook.site"
      name:
        type: "string"
        example: "Hook name"
      description:
        type: "string"
        example: "Hook description"
      created_at:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      push_events:
        type: "boolean"
      tag_push_events:
        type: "boolean"
      merge_requests_events:
        type: "boolean"
      repository_update_events:
        type: "boolean"
      enable_ssl_verification:
        type: "boolean"
      disabled_until:
        type: "string"
        format: "date-time"
        example: "2012-05-28T04:42:42-07:00"
      url_variables:
        type: "array"
        items:
          type: "object"
          example:
            token: "secr3t"
          properties: {}
      custom_webhook_template:
        type: "string"
        example: "{\"event\":\"{{object_kind}}\"}"
    description: "API_Entities_Hook model"
    example:
      repository_update_events: true
      disabled_until: "2012-05-28T04:42:42-07:00"
      url_variables:
      - token: "secr3t"
      - token: "secr3t"
      description: "Hook description"
      created_at: "2012-05-28T04:42:42-07:00"
      merge_requests_events: true
      url: "https://webhook.site"
      push_events: true
      tag_push_events: true
      custom_webhook_template: "{\"event\":\"{{object_kind}}\"}"
      name: "Hook name"
      id: "1"
      enable_ssl_verification: true
  postApiV4Hooks:
    type: "object"
    required:
    - "url"
    properties:
      url:
        type: "string"
        example: "http://example.com/hook"
        description: "The URL to send the request to"
      name:
        type: "string"
        description: "Name of the hook"
      description:
        type: "string"
        description: "Description of the hook"
      token:
        type: "string"
        description: "Secret token to validate received payloads; this isn't returned\
          \ in the response"
      push_events:
        type: "boolean"
        description: "When true, the hook fires on push events"
      tag_push_events:
        type: "boolean"
        description: "When true, the hook fires on new tags being pushed"
      merge_requests_events:
        type: "boolean"
        description: "Trigger hook on merge requests events"
      repository_update_events:
        type: "boolean"
        description: "Trigger hook on repository update events"
      enable_ssl_verification:
        type: "boolean"
        description: "Do SSL verification when triggering the hook"
      url_variables:
        type: "array"
        description: "URL variables for interpolation"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdHooks_url_variables"
    description: "Add new system hook"
  putApiV4HooksHookId:
    type: "object"
    properties:
      url:
        type: "string"
        description: "The URL to send the request to"
      name:
        type: "string"
        description: "Name of the hook"
      description:
        type: "string"
        description: "Description of the hook"
      token:
        type: "string"
        description: "Secret token to validate received payloads; this isn't returned\
          \ in the response"
      push_events:
        type: "boolean"
        description: "When true, the hook fires on push events"
      tag_push_events:
        type: "boolean"
        description: "When true, the hook fires on new tags being pushed"
      merge_requests_events:
        type: "boolean"
        description: "Trigger hook on merge requests events"
      repository_update_events:
        type: "boolean"
        description: "Trigger hook on repository update events"
      enable_ssl_verification:
        type: "boolean"
        description: "Do SSL verification when triggering the hook"
      url_variables:
        type: "array"
        description: "URL variables for interpolation"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdHooks_url_variables"
    description: "Edit system hook"
  putApiV4HooksHookIdUrlVariablesKey:
    type: "object"
    required:
    - "value"
    properties:
      value:
        type: "string"
        description: "The value of the variable"
    description: "Set a url variable"
  postApiV4FeatureFlagsUnleashProjectIdClientRegister:
    type: "object"
    properties:
      instance_id:
        type: "string"
        description: "The instance ID of Unleash Client"
      app_name:
        type: "string"
        description: "The application name of Unleash Client"
  postApiV4FeatureFlagsUnleashProjectIdClientMetrics:
    type: "object"
    properties:
      instance_id:
        type: "string"
        description: "The instance ID of Unleash Client"
      app_name:
        type: "string"
        description: "The application name of Unleash Client"
  postApiV4UsageDataIncrementCounter:
    type: "object"
    required:
    - "event"
    properties:
      event:
        type: "string"
        example: "i_quickactions_page"
        description: "The event name that should be tracked"
    description: "Track usage data event"
  postApiV4UsageDataIncrementUniqueUsers:
    type: "object"
    required:
    - "event"
    properties:
      event:
        type: "string"
        example: "i_quickactions_page"
        description: "The event name that should be tracked"
    description: "Track usage data event for the current user"
  postApiV4UsageDataTrackEvent:
    type: "object"
    required:
    - "event"
    properties:
      event:
        type: "string"
        example: "i_quickactions_page"
        description: "The event name that should be tracked"
      namespace_id:
        type: "integer"
        format: "int32"
        example: 1234
        description: "Namespace ID"
      project_id:
        type: "integer"
        format: "int32"
        example: 1234
        description: "Project ID"
    description: "Track gitlab internal events"
  postApiV4UserKeys:
    type: "object"
    required:
    - "key"
    - "title"
    properties:
      key:
        type: "string"
        description: "The new SSH key"
      title:
        type: "string"
        description: "The title of the new SSH key"
      expires_at:
        type: "string"
        format: "date-time"
        description: "The expiration date of the SSH key in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)"
      usage_type:
        type: "string"
        description: "Scope of usage for the SSH key"
        default: "auth_and_signing"
        enum:
        - "auth_and_signing"
        - "auth"
        - "signing"
    description: "Add a new SSH key to the currently authenticated user"
  postApiV4UserGpgKeys:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        description: "The new GPG key"
    description: "Add a new GPG key to the currently authenticated user"
  putApiV4UserUserIdCreditCardValidation:
    type: "object"
    required:
    - "credit_card_expiration_month"
    - "credit_card_expiration_year"
    - "credit_card_holder_name"
    - "credit_card_mask_number"
    - "credit_card_type"
    - "credit_card_validated_at"
    properties:
      credit_card_validated_at:
        type: "string"
        format: "date-time"
        description: "The time when the user's credit card was validated"
      credit_card_expiration_month:
        type: "integer"
        format: "int32"
        description: "The month the credit card expires"
      credit_card_expiration_year:
        type: "integer"
        format: "int32"
        description: "The year the credit card expires"
      credit_card_holder_name:
        type: "string"
        description: "The credit card holder name"
      credit_card_mask_number:
        type: "string"
        description: "The last 4 digits of credit card number"
      credit_card_type:
        type: "string"
        description: "The credit card network name"
      zuora_payment_method_xid:
        type: "string"
        description: "The Zuora payment method ID"
    description: "Update a user's credit_card_validation"
  API_Entities_UserCreditCardValidations:
    type: "object"
    properties:
      user_id:
        type: "string"
      credit_card_validated_at:
        type: "string"
    description: "API_Entities_UserCreditCardValidations model"
    example:
      user_id: "user_id"
      credit_card_validated_at: "credit_card_validated_at"
  putApiV4UserPreferences:
    type: "object"
    properties:
      view_diffs_file_by_file:
        type: "boolean"
        description: "Flag indicating the user sees only one file diff per page"
      show_whitespace_in_diffs:
        type: "boolean"
        description: "Flag indicating the user sees whitespace changes in diffs"
      pass_user_identities_to_ci_jwt:
        type: "boolean"
        description: "Flag indicating the user passes their external identities to\
          \ a CI job as part of a JSON web token."
    description: "Update the current user's preferences"
  API_Entities_UserPreferences:
    type: "object"
    properties:
      id:
        type: "string"
      user_id:
        type: "string"
      view_diffs_file_by_file:
        type: "string"
      show_whitespace_in_diffs:
        type: "string"
      pass_user_identities_to_ci_jwt:
        type: "string"
    description: "API_Entities_UserPreferences model"
    example:
      show_whitespace_in_diffs: "show_whitespace_in_diffs"
      user_id: "user_id"
      id: "id"
      view_diffs_file_by_file: "view_diffs_file_by_file"
      pass_user_identities_to_ci_jwt: "pass_user_identities_to_ci_jwt"
  postApiV4UserEmails:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
        description: "The new email"
    description: "Add new email address to the currently authenticated user"
  putApiV4UserStatus:
    type: "object"
    properties:
      emoji:
        type: "string"
        description: "The emoji to set on the status"
      message:
        type: "string"
        description: "The status message to set"
      availability:
        type: "string"
        description: "The availability of user to set"
      clear_status_after:
        type: "string"
        description: "Automatically clear emoji, message and availability fields after\
          \ a certain time"
        enum:
        - "30_minutes"
        - "3_hours"
        - "8_hours"
        - "1_day"
        - "3_days"
        - "7_days"
        - "30_days"
    description: "Set the status of the current user"
  API_Entities_UserStatus:
    type: "object"
    properties:
      emoji:
        type: "string"
      message:
        type: "string"
      availability:
        type: "string"
      message_html:
        type: "string"
      clear_status_at:
        type: "string"
    description: "API_Entities_UserStatus model"
    example:
      message_html: "message_html"
      emoji: "emoji"
      availability: "availability"
      message: "message"
      clear_status_at: "clear_status_at"
  patchApiV4UserStatus:
    type: "object"
    properties:
      emoji:
        type: "string"
        description: "The emoji to set on the status"
      message:
        type: "string"
        description: "The status message to set"
      availability:
        type: "string"
        description: "The availability of user to set"
      clear_status_after:
        type: "string"
        description: "Automatically clear emoji, message and availability fields after\
          \ a certain time"
        enum:
        - "30_minutes"
        - "3_hours"
        - "8_hours"
        - "1_day"
        - "3_days"
        - "7_days"
        - "30_days"
    description: "Set the status of the current user"
  putApiV4UserAvatar:
    type: "object"
    required:
    - "avatar"
    properties:
      avatar:
        type: "file"
        description: "The avatar file (generated by Multipart middleware)"
    description: "Set the avatar of the current user"
  postApiV4UserRunners:
    type: "object"
    required:
    - "group_id"
    - "project_id"
    - "runner_type"
    properties:
      runner_type:
        type: "string"
        description: "Specifies the scope of the runner"
        enum:
        - "instance_type"
        - "group_type"
        - "project_type"
      group_id:
        type: "integer"
        format: "int32"
        example: 1
        description: "The ID of the group that the runner is created in"
      project_id:
        type: "integer"
        format: "int32"
        example: 1
        description: "The ID of the project that the runner is created in"
      description:
        type: "string"
        description: "Description of the runner"
      maintenance_note:
        type: "string"
        description: "Free-form maintenance notes for the runner (1024 characters)"
      paused:
        type: "boolean"
        description: "Specifies if the runner should ignore new jobs (defaults to\
          \ false)"
      locked:
        type: "boolean"
        description: "Specifies if the runner should be locked for the current project\
          \ (defaults to false)"
      access_level:
        type: "string"
        description: "The access level of the runner"
        enum:
        - "not_protected"
        - "ref_protected"
      run_untagged:
        type: "boolean"
        description: "Specifies if the runner should handle untagged jobs  (defaults\
          \ to true)"
      tag_list:
        type: "array"
        description: "A list of runner tags"
        items:
          type: "string"
      maximum_timeout:
        type: "integer"
        format: "int32"
        description: "Maximum timeout that limits the amount of time (in seconds)\
          \ that runners can run jobs"
    description: "Create a runner owned by currently authenticated user"
  postApiV4UserPersonalAccessTokens:
    type: "object"
    required:
    - "name"
    - "scopes"
    properties:
      name:
        type: "string"
        description: "The name of the personal access token"
      scopes:
        type: "array"
        description: "The array of scopes of the personal access token"
        items:
          type: "string"
          enum:
          - "k8s_proxy"
      expires_at:
        type: "string"
        format: "date"
        description: "The expiration date in the format YEAR-MONTH-DAY of the personal\
          \ access token"
    description: "Create a personal access token with limited scopes for the currently\
      \ authenticated user"
  API_Entities_UserCounts:
    type: "object"
    properties:
      merge_requests:
        type: "integer"
        format: "int32"
        example: 10
      assigned_issues:
        type: "integer"
        format: "int32"
        example: 10
      assigned_merge_requests:
        type: "integer"
        format: "int32"
        example: 10
      review_requested_merge_requests:
        type: "integer"
        format: "int32"
        example: 10
      todos:
        type: "integer"
        format: "int32"
        example: 10
    description: "API_Entities_UserCounts model"
    example:
      review_requested_merge_requests: 10
      merge_requests: 10
      assigned_issues: 10
      assigned_merge_requests: 10
      todos: 10
  API_Entities_PlanLimit:
    type: "object"
    properties:
      ci_instance_level_variables:
        type: "integer"
        format: "int32"
        example: 25
      ci_pipeline_size:
        type: "integer"
        format: "int32"
        example: 0
      ci_active_jobs:
        type: "integer"
        format: "int32"
        example: 0
      ci_project_subscriptions:
        type: "integer"
        format: "int32"
        example: 2
      ci_pipeline_schedules:
        type: "integer"
        format: "int32"
        example: 10
      ci_needs_size_limit:
        type: "integer"
        format: "int32"
        example: 50
      ci_registered_group_runners:
        type: "integer"
        format: "int32"
        example: 1000
      ci_registered_project_runners:
        type: "integer"
        format: "int32"
        example: 1000
      conan_max_file_size:
        type: "integer"
        format: "int32"
        example: "3221225472"
      enforcement_limit:
        type: "integer"
        format: "int32"
        example: 15000
      generic_packages_max_file_size:
        type: "integer"
        format: "int32"
        example: "5368709120"
      helm_max_file_size:
        type: "integer"
        format: "int32"
        example: 5242880
      limits_history:
        type: "object"
        example: "{\"enforcement_limit\"=>[{\"timestamp\"=>1686909124, \"user_id\"\
          =>1, \"username\"=>\"x\", \"value\"=>5}],\n                   \"notification_limit\"\
          =>[{\"timestamp\"=>1686909124, \"user_id\"=>2, \"username\"=>\"y\", \"value\"\
          =>7}]}"
        properties: {}
      maven_max_file_size:
        type: "integer"
        format: "int32"
        example: "3221225472"
      notification_limit:
        type: "integer"
        format: "int32"
        example: 15000
      npm_max_file_size:
        type: "integer"
        format: "int32"
        example: 524288000
      nuget_max_file_size:
        type: "integer"
        format: "int32"
        example: 524288000
      pipeline_hierarchy_size:
        type: "integer"
        format: "int32"
        example: 1000
      pypi_max_file_size:
        type: "integer"
        format: "int32"
        example: "3221225472"
      terraform_module_max_file_size:
        type: "integer"
        format: "int32"
        example: 1073741824
      storage_size_limit:
        type: "integer"
        format: "int32"
        example: 15000
    description: "API_Entities_PlanLimit model"
    example:
      ci_registered_group_runners: 1000
      nuget_max_file_size: 524288000
      ci_project_subscriptions: 2
      terraform_module_max_file_size: 1073741824
      notification_limit: 15000
      conan_max_file_size: "3221225472"
      maven_max_file_size: "3221225472"
      helm_max_file_size: 5242880
      pipeline_hierarchy_size: 1000
      npm_max_file_size: 524288000
      ci_registered_project_runners: 1000
      generic_packages_max_file_size: "5368709120"
      ci_active_jobs: 0
      ci_pipeline_schedules: 10
      ci_needs_size_limit: 50
      limits_history: "{\"enforcement_limit\"=>[{\"timestamp\"=>1686909124, \"user_id\"\
        =>1, \"username\"=>\"x\", \"value\"=>5}],\n                   \"notification_limit\"\
        =>[{\"timestamp\"=>1686909124, \"user_id\"=>2, \"username\"=>\"y\", \"value\"\
        =>7}]}"
      ci_pipeline_size: 0
      enforcement_limit: 15000
      ci_instance_level_variables: 25
      storage_size_limit: 15000
      pypi_max_file_size: "3221225472"
  putApiV4ApplicationPlanLimits:
    type: "object"
    required:
    - "plan_name"
    properties:
      plan_name:
        type: "string"
        description: "Name of the plan to update"
        enum:
        - "default"
        - "free"
        - "bronze"
        - "silver"
        - "premium"
        - "gold"
        - "ultimate"
        - "ultimate_trial"
        - "ultimate_trial_paid_customer"
        - "premium_trial"
        - "opensource"
      ci_instance_level_variables:
        type: "integer"
        format: "int32"
        description: "Maximum number of Instance-level CI/CD variables that can be\
          \ defined"
      ci_pipeline_size:
        type: "integer"
        format: "int32"
        description: "Maximum number of jobs in a single pipeline"
      ci_active_jobs:
        type: "integer"
        format: "int32"
        description: "Total number of jobs in currently active pipelines"
      ci_project_subscriptions:
        type: "integer"
        format: "int32"
        description: "Maximum number of pipeline subscriptions to and from a project"
      ci_pipeline_schedules:
        type: "integer"
        format: "int32"
        description: "Maximum number of pipeline schedules"
      ci_needs_size_limit:
        type: "integer"
        format: "int32"
        description: "Maximum number of needs dependencies that a job can have"
      ci_registered_group_runners:
        type: "integer"
        format: "int32"
        description: "Maximum number of runners registered per group"
      ci_registered_project_runners:
        type: "integer"
        format: "int32"
        description: "Maximum number of runners registered per project"
      conan_max_file_size:
        type: "integer"
        format: "int32"
        description: "Maximum Conan package file size in bytes"
      enforcement_limit:
        type: "integer"
        format: "int32"
        description: "Maximum storage size for the root namespace enforcement in MiB"
      generic_packages_max_file_size:
        type: "integer"
        format: "int32"
        description: "Maximum generic package file size in bytes"
      helm_max_file_size:
        type: "integer"
        format: "int32"
        description: "Maximum Helm chart file size in bytes"
      maven_max_file_size:
        type: "integer"
        format: "int32"
        description: "Maximum Maven package file size in bytes"
      notification_limit:
        type: "integer"
        format: "int32"
        description: "Maximum storage size for the root namespace notifications in\
          \ MiB"
      npm_max_file_size:
        type: "integer"
        format: "int32"
        description: "Maximum NPM package file size in bytes"
      nuget_max_file_size:
        type: "integer"
        format: "int32"
        description: "Maximum NuGet package file size in bytes"
      pypi_max_file_size:
        type: "integer"
        format: "int32"
        description: "Maximum PyPI package file size in bytes"
      terraform_module_max_file_size:
        type: "integer"
        format: "int32"
        description: "Maximum Terraform Module package file size in bytes"
      storage_size_limit:
        type: "integer"
        format: "int32"
        description: "Maximum storage size for the root namespace in MiB"
      pipeline_hierarchy_size:
        type: "integer"
        format: "int32"
        description: "Maximum number of downstream pipelines in a pipeline's hierarchy\
          \ tree"
    description: "Change plan limits"
  API_Entities_Appearance:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      pwa_name:
        type: "string"
      pwa_short_name:
        type: "string"
      pwa_description:
        type: "string"
      logo:
        type: "string"
      pwa_icon:
        type: "string"
      header_logo:
        type: "string"
      favicon:
        type: "string"
      new_project_guidelines:
        type: "string"
      member_guidelines:
        type: "string"
      profile_image_guidelines:
        type: "string"
      header_message:
        type: "string"
      footer_message:
        type: "string"
      message_background_color:
        type: "string"
      message_font_color:
        type: "string"
      email_header_and_footer_enabled:
        type: "string"
    description: "API_Entities_Appearance model"
    example:
      footer_message: "footer_message"
      pwa_short_name: "pwa_short_name"
      profile_image_guidelines: "profile_image_guidelines"
      pwa_icon: "pwa_icon"
      favicon: "favicon"
      email_header_and_footer_enabled: "email_header_and_footer_enabled"
      message_background_color: "message_background_color"
      description: "description"
      pwa_description: "pwa_description"
      header_message: "header_message"
      title: "title"
      header_logo: "header_logo"
      pwa_name: "pwa_name"
      new_project_guidelines: "new_project_guidelines"
      member_guidelines: "member_guidelines"
      logo: "logo"
      message_font_color: "message_font_color"
  API_Entities_ApplicationStatistics:
    type: "object"
    properties:
      forks:
        type: "integer"
        format: "int32"
        example: 6
        description: "Approximate number of repo forks"
      issues:
        type: "integer"
        format: "int32"
        example: 121
        description: "Approximate number of issues"
      merge_requests:
        type: "integer"
        format: "int32"
        example: 49
        description: "Approximate number of merge requests"
      notes:
        type: "integer"
        format: "int32"
        example: 6
        description: "Approximate number of notes"
      snippets:
        type: "integer"
        format: "int32"
        example: 4
        description: "Approximate number of snippets"
      ssh_keys:
        type: "integer"
        format: "int32"
        example: 11
        description: "Approximate number of SSH keys"
      milestones:
        type: "integer"
        format: "int32"
        example: 3
        description: "Approximate number of milestones"
      users:
        type: "integer"
        format: "int32"
        example: 22
        description: "Approximate number of users"
      projects:
        type: "integer"
        format: "int32"
        example: 4
        description: "Approximate number of projects"
      groups:
        type: "integer"
        format: "int32"
        example: 1
        description: "Approximate number of projects"
      active_users:
        type: "integer"
        format: "int32"
        example: 21
        description: "Number of active users"
    description: "API_Entities_ApplicationStatistics model"
    example:
      forks: 6
      notes: 6
      ssh_keys: 11
      projects: 4
      active_users: 21
      merge_requests: 49
      snippets: 4
      groups: 1
      milestones: 3
      issues: 121
      users: 22
  postApiV4ImportBitbucket:
    type: "object"
    required:
    - "bitbucket_app_password"
    - "bitbucket_username"
    - "repo_path"
    - "target_namespace"
    properties:
      bitbucket_username:
        type: "string"
        description: "BitBucket username"
      bitbucket_app_password:
        type: "string"
        description: "BitBucket app password"
      repo_path:
        type: "string"
        description: "Repository path"
      target_namespace:
        type: "string"
        description: "Target namespace"
      new_name:
        type: "string"
        description: "New repository name"
    description: "Import a BitBucket Cloud repository"
  ProjectImportEntity:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "GitLab"
      full_path:
        type: "string"
        example: "gitlab-org/gitlab"
      full_name:
        type: "string"
        example: "GitLab Org / GitLab"
      refs_url:
        type: "string"
      import_source:
        type: "string"
        example: "source/source-repo"
      import_status:
        type: "string"
        example: "scheduled"
        enum:
        - "scheduled"
        - "started"
        - "finished"
        - "failed"
        - "canceled"
      human_import_status_name:
        type: "string"
        example: "canceled"
      provider_link:
        type: "string"
        example: "/source/source-repo"
      import_error:
        type: "string"
      import_warning:
        type: "string"
      relation_type:
        type: "string"
    description: "ProjectImportEntity model"
    example:
      human_import_status_name: "canceled"
      full_name: "GitLab Org / GitLab"
      name: "GitLab"
      import_status: "scheduled"
      import_error: "import_error"
      id: 1
      refs_url: "refs_url"
      relation_type: "relation_type"
      full_path: "gitlab-org/gitlab"
      import_source: "source/source-repo"
      provider_link: "/source/source-repo"
      import_warning: "import_warning"
  postApiV4ImportBitbucketServer:
    type: "object"
    required:
    - "bitbucket_server_project"
    - "bitbucket_server_repo"
    - "bitbucket_server_url"
    - "bitbucket_server_username"
    - "personal_access_token"
    properties:
      bitbucket_server_url:
        type: "string"
        description: "Bitbucket Server URL"
      bitbucket_server_username:
        type: "string"
        description: "BitBucket Server Username"
      personal_access_token:
        type: "string"
        description: "BitBucket Server personal access token/password"
      bitbucket_server_project:
        type: "string"
        description: "BitBucket Server Project Key"
      bitbucket_server_repo:
        type: "string"
        description: "BitBucket Server Repository Name"
      new_name:
        type: "string"
        description: "New repo name"
      new_namespace:
        type: "string"
        description: "Namespace to import repo into"
      timeout_strategy:
        type: "string"
        description: "Strategy for behavior on timeouts"
        enum:
        - "optimistic"
        - "pessimistic"
    description: "Import a BitBucket Server repository"
  ProjectEntity:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 1
      name:
        type: "string"
        example: "GitLab"
      full_path:
        type: "string"
        example: "gitlab-org/gitlab"
      full_name:
        type: "string"
        example: "GitLab Org / GitLab"
      refs_url:
        type: "string"
    description: "ProjectEntity model"
    example:
      full_name: "GitLab Org / GitLab"
      name: "GitLab"
      id: 1
      refs_url: "refs_url"
      full_path: "gitlab-org/gitlab"
  postApiV4ImportGithub:
    type: "object"
    required:
    - "personal_access_token"
    - "repo_id"
    - "target_namespace"
    properties:
      personal_access_token:
        type: "string"
        description: "GitHub personal access token"
      repo_id:
        type: "integer"
        format: "int32"
        description: "GitHub repository ID"
      new_name:
        type: "string"
        description: "New repo name"
      target_namespace:
        type: "string"
        description: "Namespace or group to import repository into"
      github_hostname:
        type: "string"
        description: "Custom GitHub enterprise hostname"
      optional_stages:
        type: "object"
        description: "Optional stages of import to be performed"
        properties: {}
      timeout_strategy:
        type: "string"
        description: "Strategy for behavior on timeouts"
        enum:
        - "optimistic"
        - "pessimistic"
    description: "Import a GitHub project"
  postApiV4ImportGithubCancel:
    type: "object"
    required:
    - "project_id"
    properties:
      project_id:
        type: "integer"
        format: "int32"
        description: "ID of importing project to be canceled"
    description: "Cancel GitHub project import"
  postApiV4ImportGithubGists:
    type: "object"
    required:
    - "personal_access_token"
    properties:
      personal_access_token:
        type: "string"
        description: "GitHub personal access token"
    description: "Import User Gists"
  postApiV4SlackTrigger:
    type: "object"
    required:
    - "text"
    properties:
      text:
        type: "string"
        description: "Text of the slack command"
    description: "Trigger a global slack command"
  API_Entities_Metadata:
    type: "object"
    properties:
      version:
        type: "string"
        example: "15.2-pre"
      revision:
        type: "string"
        example: "c401a659d0c"
      kas:
        $ref: "#/definitions/API_Entities_Metadata_kas"
      enterprise:
        type: "boolean"
    description: "API_Entities_Metadata model"
    example:
      enterprise: true
      kas:
        externalUrl: "grpc://gitlab.example.com:8150"
        version: "15.0.0"
        enabled: true
      version: "15.2-pre"
      revision: "c401a659d0c"
  API_Entities_Projects_Topic:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      title:
        type: "string"
      description:
        type: "string"
      total_projects_count:
        type: "string"
      avatar_url:
        type: "string"
    description: "API_Entities_Projects_Topic model"
    example:
      total_projects_count: "total_projects_count"
      avatar_url: "avatar_url"
      name: "name"
      description: "description"
      id: "id"
      title: "title"
  API_Entities_Web_Commits:
    type: "object"
    properties:
      public_key:
        type: "string"
    example:
      public_key: "public_key"
  postApiV4Topics:
    type: "object"
    required:
    - "name"
    - "title"
    properties:
      name:
        type: "string"
        description: "Slug (name)"
      title:
        type: "string"
        description: "Title"
      description:
        type: "string"
        description: "Description"
      avatar:
        type: "file"
        description: "Avatar image for topic"
    description: "Create a topic"
  putApiV4TopicsId:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Slug (name)"
      title:
        type: "string"
        description: "Title"
      description:
        type: "string"
        description: "Description"
      avatar:
        type: "file"
        description: "Avatar image for topic"
    description: "Update a topic"
  postApiV4TopicsMerge:
    type: "object"
    required:
    - "source_topic_id"
    - "target_topic_id"
    properties:
      source_topic_id:
        type: "integer"
        format: "int32"
        description: "ID of source project topic"
      target_topic_id:
        type: "integer"
        format: "int32"
        description: "ID of target project topic"
    description: "Merge topics"
  API_Entities_Group_statistics:
    type: "object"
    properties:
      storage_size:
        type: "string"
      repository_size:
        type: "string"
      wiki_size:
        type: "string"
      lfs_objects_size:
        type: "string"
      job_artifacts_size:
        type: "string"
      pipeline_artifacts_size:
        type: "string"
      packages_size:
        type: "string"
      snippets_size:
        type: "string"
      uploads_size:
        type: "string"
    example:
      wiki_size: "wiki_size"
      packages_size: "packages_size"
      lfs_objects_size: "lfs_objects_size"
      job_artifacts_size: "job_artifacts_size"
      repository_size: "repository_size"
      storage_size: "storage_size"
      uploads_size: "uploads_size"
      snippets_size: "snippets_size"
      pipeline_artifacts_size: "pipeline_artifacts_size"
  postApiV4Groups_default_branch_protection_defaults_allowed_to_push:
    type: "object"
    required:
    - "access_level"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        description: "A valid access level"
        enum:
        - 30
        - 40
  postApiV4Groups_default_branch_protection_defaults:
    type: "object"
    properties:
      allowed_to_push:
        type: "array"
        description: "An array of access levels allowed to push"
        items:
          $ref: "#/definitions/postApiV4Groups_default_branch_protection_defaults_allowed_to_push"
      allow_force_push:
        type: "boolean"
        description: "Allow force push for all users with push access."
      allowed_to_merge:
        type: "array"
        description: "An array of access levels allowed to merge"
        items:
          $ref: "#/definitions/postApiV4Groups_default_branch_protection_defaults_allowed_to_push"
      code_owner_approval_required:
        type: "boolean"
        description: "Require approval from code owners"
      developer_can_initial_push:
        type: "boolean"
        description: "Allow developers to initial push"
    description: "Determine if developers can push to default branch"
  API_Entities_Project__links:
    type: "object"
    properties:
      self:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/4"
      issues:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/4/issues"
      merge_requests:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/4/merge_requests"
      repo_branches:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/4/repository/branches"
      labels:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/4/labels"
      events:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/4/events"
      members:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/4/members"
      cluster_agents:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/4/cluster_agents"
    example:
      merge_requests: "https://gitlab.example.com/api/v4/projects/4/merge_requests"
      cluster_agents: "https://gitlab.example.com/api/v4/projects/4/cluster_agents"
      members: "https://gitlab.example.com/api/v4/projects/4/members"
      self: "https://gitlab.example.com/api/v4/projects/4"
      repo_branches: "https://gitlab.example.com/api/v4/projects/4/repository/branches"
      issues: "https://gitlab.example.com/api/v4/projects/4/issues"
      events: "https://gitlab.example.com/api/v4/projects/4/events"
      labels: "https://gitlab.example.com/api/v4/projects/4/labels"
  postApiV4GroupsIdClustersUser_platform_kubernetes_attributes:
    type: "object"
    required:
    - "api_url"
    - "token"
    properties:
      api_url:
        type: "string"
        description: "URL to access the Kubernetes API"
      token:
        type: "string"
        description: "Token to authenticate against Kubernetes"
      ca_cert:
        type: "string"
        description: "TLS certificate (needed if API is using a self-signed TLS certificate)"
      namespace:
        type: "string"
        description: "Unique namespace related to Group"
      authorization_type:
        type: "string"
        description: "Cluster authorization type, defaults to RBAC"
        default: "rbac"
        enum:
        - "unknown_authorization"
        - "rbac"
        - "abac"
    description: "Platform Kubernetes data"
  putApiV4GroupsIdClustersClusterId_platform_kubernetes_attributes:
    type: "object"
    properties:
      api_url:
        type: "string"
        description: "URL to access the Kubernetes API"
      token:
        type: "string"
        description: "Token to authenticate against Kubernetes"
      ca_cert:
        type: "string"
        description: "TLS certificate (needed if API is using a self-signed TLS certificate)"
      namespace:
        type: "string"
        description: "Unique namespace related to Group"
    description: "Platform Kubernetes data"
  API_Entities_Package__links:
    type: "object"
    properties:
      web_path:
        type: "string"
      delete_api_path:
        type: "string"
    example:
      delete_api_path: "delete_api_path"
      web_path: "web_path"
  EE_API_Entities_BillableMembership_access_level:
    type: "object"
    properties:
      string_value:
        type: "string"
      integer_value:
        type: "string"
      custom_role:
        type: "string"
    example:
      string_value: "string_value"
      custom_role: "custom_role"
      integer_value: "integer_value"
  API_Entities_Release_assets:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int32"
        example: 2
      sources:
        $ref: "#/definitions/API_Entities_Releases_Source"
      links:
        $ref: "#/definitions/API_Entities_Releases_Link"
    example:
      sources:
        format: "zip"
        url: "https://gitlab.example.com/root/app/-/archive/v1.0/app-v1.0.zip"
      count: 2
      links:
        link_type: "other"
        direct_asset_url: "https://gitlab.example.com/root/app/-/releases/v1.0/downloads/app-v1.0.dmg"
        name: "app-v1.0.dmg"
        id: 1
        url: "https://gitlab.example.com/root/app/-/jobs/688/artifacts/raw/bin/app-v1.0.dmg"
  API_Entities_Release__links:
    type: "object"
    properties:
      closed_issues_url:
        type: "string"
      closed_merge_requests_url:
        type: "string"
      edit_url:
        type: "string"
      merged_merge_requests_url:
        type: "string"
      opened_issues_url:
        type: "string"
      opened_merge_requests_url:
        type: "string"
      self:
        type: "string"
    example:
      closed_issues_url: "closed_issues_url"
      opened_issues_url: "opened_issues_url"
      merged_merge_requests_url: "merged_merge_requests_url"
      edit_url: "edit_url"
      self: "self"
      closed_merge_requests_url: "closed_merge_requests_url"
      opened_merge_requests_url: "opened_merge_requests_url"
  API_Entities_MilestoneWithStats_issue_stats:
    type: "object"
    properties:
      total:
        type: "string"
      closed:
        type: "string"
    example:
      total: "total"
      closed: "closed"
  postApiV4GroupsIdWikis_front_matter:
    type: "object"
    properties:
      title:
        type: "string"
        description: "Front matter title of a wiki page"
  API_Entities_WikiAttachment_link:
    type: "object"
    properties:
      url:
        type: "string"
        example: "uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png"
      markdown:
        type: "string"
        example: "![dk](uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png)"
    example:
      markdown: "![dk](uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png)"
      url: "uploads/6a061c4cf9f1c28cb22c384b4b8d4e3c/dk.png"
  API_Entities_Ci_Job_project:
    type: "object"
    properties:
      ci_job_token_scope_enabled:
        type: "string"
        example: "false"
    example:
      ci_job_token_scope_enabled: "false"
  postApiV4ProjectsIdJobsJobIdPlay_job_variables_attributes:
    type: "object"
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
        example: "foo"
        description: "The name of the variable"
      value:
        type: "string"
        example: "bar"
        description: "The value of the variable"
  postApiV4ProjectsIdPipeline_variables:
    type: "object"
    properties:
      key:
        type: "string"
        example: "UPLOAD_TO_S3"
        description: "The key of the variable"
      value:
        type: "string"
        example: "true"
        description: "The value of the variable"
      variable_type:
        type: "string"
        description: "The type of variable, must be one of env_var or file. Defaults\
          \ to env_var"
        default: "env_var"
        enum:
        - "env_var"
        - "file"
  DetailedStatusEntity_action:
    type: "object"
    properties:
      icon:
        type: "string"
        example: "cancel"
      title:
        type: "string"
        example: "Cancel"
      path:
        type: "string"
        example: "/namespace1/project1/-/jobs/2/cancel"
      method:
        type: "string"
        example: "post"
      button_title:
        type: "string"
        example: "Cancel this job"
      confirmation_message:
        type: "string"
        example: "Are you sure?"
    example:
      path: "/namespace1/project1/-/jobs/2/cancel"
      method: "post"
      confirmation_message: "Are you sure?"
      icon: "cancel"
      button_title: "Cancel this job"
      title: "Cancel"
  putApiV4ProjectsIdVariablesKey_filter:
    type: "object"
    properties:
      environment_scope:
        type: "string"
        description: "The environment scope of a variable"
    description: "Available filters: [environment_scope]. Example: filter[environment_scope]=production"
  postApiV4ProjectsIdRepositoryCommits_actions:
    type: "object"
    required:
    - "action"
    - "content"
    - "execute_filemode"
    - "file_path"
    - "previous_path"
    properties:
      action:
        type: "string"
        description: "The action to perform, `create`, `delete`, `move`, `update`,\
          \ `chmod`"
        enum:
        - "create"
        - "update"
        - "move"
        - "delete"
        - "chmod"
      file_path:
        type: "string"
        example: "lib/class.rb"
        description: "Full path to the file."
      previous_path:
        type: "string"
        example: "lib/class.rb"
        description: "Original full path to the file being moved."
      content:
        type: "string"
        example: "Some file content"
        description: "File content"
      encoding:
        type: "string"
        description: "`text` or `base64`"
        default: "text"
        enum:
        - "text"
        - "base64"
      last_commit_id:
        type: "string"
        example: "2695effb5807a22ff3d138d593fd856244e155e7"
        description: "Last known file commit id"
      execute_filemode:
        type: "boolean"
        description: "When `true/false` enables/disables the execute flag on the file."
  postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes_position_line_range_start:
    type: "object"
    properties:
      line_code:
        type: "string"
        description: "Start line code for multi-line note"
      type:
        type: "string"
        description: "Start line type for multi-line note"
      old_line:
        type: "string"
        description: "Start old_line line number"
      new_line:
        type: "string"
        description: "Start new_line line number"
  postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes_position_line_range_end:
    type: "object"
    properties:
      line_code:
        type: "string"
        description: "End line code for multi-line note"
      type:
        type: "string"
        description: "End line type for multi-line note"
      old_line:
        type: "string"
        description: "End old_line line number"
      new_line:
        type: "string"
        description: "End new_line line number"
  postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes_position_line_range:
    type: "object"
    properties:
      start:
        $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes_position_line_range_start"
      end:
        $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes_position_line_range_end"
    description: "Multi-line start and end"
  postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes_position:
    type: "object"
    required:
    - "base_sha"
    - "head_sha"
    - "position_type"
    - "start_sha"
    properties:
      base_sha:
        type: "string"
        description: "Base commit SHA in the source branch"
      start_sha:
        type: "string"
        description: "SHA referencing commit in target branch"
      head_sha:
        type: "string"
        description: "SHA referencing HEAD of this merge request"
      position_type:
        type: "string"
        description: "Type of the position reference"
        enum:
        - "text"
        - "image"
      new_path:
        type: "string"
        description: "File path after change"
      new_line:
        type: "integer"
        format: "int32"
        description: "Line number after change"
      old_path:
        type: "string"
        description: "File path before change"
      old_line:
        type: "integer"
        format: "int32"
        description: "Line number before change"
      width:
        type: "integer"
        format: "int32"
        description: "Width of the image"
      height:
        type: "integer"
        format: "int32"
        description: "Height of the image"
      x:
        type: "integer"
        format: "int32"
        description: "X coordinate in the image"
      "y":
        type: "integer"
        format: "int32"
        description: "Y coordinate in the image"
      line_range:
        $ref: "#/definitions/postApiV4ProjectsIdMergeRequestsMergeRequestIidDraftNotes_position_line_range"
  API_Entities_RelatedIssue__links:
    type: "object"
    properties:
      self:
        type: "string"
      notes:
        type: "string"
      award_emoji:
        type: "string"
      project:
        type: "string"
      closed_as_duplicate_of:
        type: "string"
    example:
      notes: "notes"
      self: "self"
      award_emoji: "award_emoji"
      project: "project"
      closed_as_duplicate_of: "closed_as_duplicate_of"
  API_Entities_MergeRequest_user:
    type: "object"
    properties:
      can_merge:
        type: "string"
    example:
      can_merge: "can_merge"
  postApiV4ProjectsIdClustersUser_platform_kubernetes_attributes:
    type: "object"
    required:
    - "api_url"
    - "token"
    properties:
      api_url:
        type: "string"
        description: "URL to access the Kubernetes API"
      token:
        type: "string"
        description: "Token to authenticate against Kubernetes"
      ca_cert:
        type: "string"
        description: "TLS certificate (needed if API is using a self-signed TLS certificate)"
      namespace:
        type: "string"
        description: "Unique namespace related to Project"
      authorization_type:
        type: "string"
        description: "Cluster authorization type, defaults to RBAC"
        default: "rbac"
        enum:
        - "unknown_authorization"
        - "rbac"
        - "abac"
    description: "Platform Kubernetes data"
  putApiV4ProjectsIdClustersClusterId_platform_kubernetes_attributes:
    type: "object"
    properties:
      api_url:
        type: "string"
        description: "URL to access the Kubernetes API"
      token:
        type: "string"
        description: "Token to authenticate against Kubernetes"
      ca_cert:
        type: "string"
        description: "TLS certificate (needed if API is using a self-signed TLS certificate)"
      namespace:
        type: "string"
        description: "Unique namespace related to Project"
    description: "Platform Kubernetes data"
  API_Entities_ProjectExportStatus__links:
    type: "object"
    properties:
      api_url:
        type: "string"
        example: "https://gitlab.example.com/api/v4/projects/1/export/download"
      web_url:
        type: "string"
        example: "https://gitlab.example.com/gitlab-org/gitlab-test/download_export"
    example:
      web_url: "https://gitlab.example.com/gitlab-org/gitlab-test/download_export"
      api_url: "https://gitlab.example.com/api/v4/projects/1/export/download"
  postApiV4ProjectsIdExport_upload:
    type: "object"
    properties:
      url:
        type: "string"
        description: "The URL to upload the project"
      http_method:
        type: "string"
        description: "HTTP method to upload the exported project"
        default: "PUT"
        enum:
        - "PUT"
        - "POST"
  postApiV4ProjectsIdHooks_url_variables:
    type: "object"
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
        example: "token"
        description: "Name of the variable"
      value:
        type: "string"
        example: "123"
        description: "Value of the variable"
  postApiV4ProjectsIdSnippets_files:
    type: "object"
    required:
    - "content"
    - "file_path"
    properties:
      file_path:
        type: "string"
        description: "The path of a snippet file"
      content:
        type: "string"
        description: "The content of a snippet file"
  putApiV4ProjectsIdSnippetsSnippetId_files:
    type: "object"
    required:
    - "action"
    properties:
      action:
        type: "string"
        description: "The type of action to perform on the file, must be one of: create,\
          \ update, delete, move"
        enum:
        - "create"
        - "update"
        - "delete"
        - "move"
      content:
        type: "string"
        description: "The content of a snippet"
      file_path:
        type: "string"
        description: "The file path of a snippet file"
      previous_path:
        type: "string"
        description: "The previous path of a snippet file"
  API_Entities_ProjectDailyStatistics_fetches:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
        example: 3
      days:
        type: "array"
        items:
          $ref: "#/definitions/API_Entities_ProjectDailyFetches"
    example:
      total: 3
      days:
      - date: "2022-01-01"
        count: 3
      - date: "2022-01-01"
        count: 3
  postApiV4Projects_container_expiration_policy_attributes:
    type: "object"
    properties:
      cadence:
        type: "string"
        description: "Container expiration policy cadence for recurring job"
      keep_n:
        type: "integer"
        format: "int32"
        description: "Container expiration policy number of images to keep"
      older_than:
        type: "string"
        description: "Container expiration policy remove images older than value"
      name_regex:
        type: "string"
        description: "Container expiration policy regex for image removal"
      name_regex_keep:
        type: "string"
        description: "Container expiration policy regex for image retention"
      enabled:
        type: "boolean"
        description: "Flag indication if container expiration policy is enabled"
  API_Entities_ProjectWithAccess_permissions:
    type: "object"
    properties:
      project_access:
        $ref: "#/definitions/API_Entities_ProjectAccess"
      group_access:
        $ref: "#/definitions/API_Entities_GroupAccess"
    example:
      project_access:
        access_level: "access_level"
        notification_level: "notification_level"
      group_access:
        access_level: "access_level"
        notification_level: "notification_level"
  postApiV4ProjectsIdProtectedBranches_allowed_to_push:
    type: "object"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        enum:
        - 30
        - 40
        - 60
        - 0
      user_id:
        type: "integer"
        format: "int32"
        example: 1
      group_id:
        type: "integer"
        format: "int32"
        example: 1
      id:
        type: "integer"
        format: "int32"
        example: 1
      _destroy:
        type: "boolean"
        description: "Delete the object when true"
  postApiV4ProjectsIdProtectedBranches_allowed_to_unprotect:
    type: "object"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        enum:
        - 30
        - 40
        - 60
      user_id:
        type: "integer"
        format: "int32"
        example: 1
      group_id:
        type: "integer"
        format: "int32"
        example: 1
      id:
        type: "integer"
        format: "int32"
        example: 1
      _destroy:
        type: "boolean"
        description: "Delete the object when true"
  postApiV4ProjectsIdProtectedTags_allowed_to_create:
    type: "object"
    properties:
      access_level:
        type: "integer"
        format: "int32"
        enum:
        - 30
        - 40
        - 60
        - 0
      user_id:
        type: "integer"
        format: "int32"
      group_id:
        type: "integer"
        format: "int32"
  postApiV4ProjectsIdReleases_assets_links:
    type: "object"
    required:
    - "name"
    - "url"
    properties:
      name:
        type: "string"
        description: "The name of the link. Link names must be unique within the release"
      url:
        type: "string"
        description: "The URL of the link. Link URLs must be unique within the release"
      direct_asset_path:
        type: "string"
        description: "Optional path for a direct asset link"
      filepath:
        type: "string"
        description: "Deprecated: optional path for a direct asset link"
      link_type:
        type: "string"
        description: "The type of the link: `other`, `runbook`, `image`, `package`.\
          \ Defaults to `other`"
  postApiV4ProjectsIdReleases_assets:
    type: "object"
    properties:
      links:
        type: "array"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdReleases_assets_links"
  postApiV4ProjectsIdFeatureFlags_scopes:
    type: "object"
    required:
    - "environment_scope"
    properties:
      environment_scope:
        type: "string"
        description: "The environment scope of the scope"
  postApiV4ProjectsIdFeatureFlags_strategies:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The strategy name. Can be `default`, `gradualRolloutUserId`,\
          \ `userWithId`, or `gitlabUserList`. In GitLab 13.5 and later, can be `flexibleRollout`"
      parameters:
        type: "string"
        description: "The strategy parameters as a JSON-formatted string e.g. `{\"\
          userIds\":\"user1\"}`"
      user_list_id:
        type: "integer"
        format: "int32"
        description: "The ID of the feature flag user list. If strategy is `gitlabUserList`."
      scopes:
        type: "array"
        items:
          $ref: "#/definitions/postApiV4ProjectsIdFeatureFlags_scopes"
  putApiV4ProjectsIdFeatureFlagsFeatureFlagName_scopes:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "The scope id"
      environment_scope:
        type: "string"
        description: "The environment scope of the scope"
      _destroy:
        type: "boolean"
        description: "Delete the scope when true"
  putApiV4ProjectsIdFeatureFlagsFeatureFlagName_strategies:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "The feature flag strategy ID"
      name:
        type: "string"
        description: "The strategy name"
      parameters:
        type: "string"
        description: "The strategy parameters as a JSON-formatted string e.g. `{\"\
          userIds\":\"user1\"}`"
      user_list_id:
        type: "integer"
        format: "int32"
        description: "The ID of the feature flag user list"
      _destroy:
        type: "boolean"
        description: "Delete the strategy when true"
      scopes:
        type: "array"
        items:
          $ref: "#/definitions/putApiV4ProjectsIdFeatureFlagsFeatureFlagName_scopes"
  postApiV4Runners_info:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Runner's name"
      version:
        type: "string"
        description: "Runner's version"
      revision:
        type: "string"
        description: "Runner's revision"
      platform:
        type: "string"
        description: "Runner's platform"
      architecture:
        type: "string"
        description: "Runner's architecture"
    description: "Runner's metadata"
  postApiV4JobsRequest_info_config:
    type: "object"
    properties:
      gpus:
        type: "string"
        description: "GPUs enabled"
    description: "Runner's config"
  postApiV4JobsRequest_info:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Runner's name"
      version:
        type: "string"
        description: "Runner's version"
      revision:
        type: "string"
        description: "Runner's revision"
      platform:
        type: "string"
        description: "Runner's platform"
      architecture:
        type: "string"
        description: "Runner's architecture"
      executor:
        type: "string"
        description: "Runner's executor"
      features:
        type: "object"
        description: "Runner's features"
        properties: {}
      config:
        $ref: "#/definitions/postApiV4JobsRequest_info_config"
    description: "Runner's metadata"
  postApiV4JobsRequest_session:
    type: "object"
    properties:
      url:
        type: "string"
        description: "Session's url"
      certificate:
        type: "string"
        description: "Session's certificate"
      authorization:
        type: "string"
        description: "Session's authorization"
    description: "Runner's session data"
  putApiV4JobsId_output:
    type: "object"
    properties:
      checksum:
        type: "string"
        description: "Job's trace CRC32 checksum"
      bytesize:
        type: "integer"
        format: "int32"
        description: "Job's trace size in bytes"
    description: "Build log state"
  postApiV4GeoStatus_data_status:
    type: "object"
    properties:
      projects_count:
        type: "integer"
        format: "int32"
        description: "Projects count"
      container_repositories_replication_enabled:
        type: "boolean"
        description: "Container repositories replication enabled"
      lfs_objects_count:
        type: "integer"
        format: "int32"
        description: "LFS objects count"
      lfs_objects_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "LFS objects checksum total count"
      lfs_objects_checksummed_count:
        type: "integer"
        format: "int32"
        description: "LFS objects checksummed count"
      lfs_objects_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "LFS objects checksum failed count"
      lfs_objects_synced_count:
        type: "integer"
        format: "int32"
        description: "LFS objects synced count"
      lfs_objects_failed_count:
        type: "integer"
        format: "int32"
        description: "LFS objects failed count"
      lfs_objects_registry_count:
        type: "integer"
        format: "int32"
        description: "LFS objects registry count"
      lfs_objects_verification_total_count:
        type: "integer"
        format: "int32"
        description: "LFS objects verification total count"
      lfs_objects_verified_count:
        type: "integer"
        format: "int32"
        description: "LFS objects verified count"
      lfs_objects_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "LFS objects verification failed count"
      merge_request_diffs_count:
        type: "integer"
        format: "int32"
        description: "Merge request diffs count"
      merge_request_diffs_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "Merge request diffs checksum total count"
      merge_request_diffs_checksummed_count:
        type: "integer"
        format: "int32"
        description: "Merge request diffs checksummed count"
      merge_request_diffs_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "Merge request diffs checksum failed count"
      merge_request_diffs_synced_count:
        type: "integer"
        format: "int32"
        description: "Merge request diffs synced count"
      merge_request_diffs_failed_count:
        type: "integer"
        format: "int32"
        description: "Merge request diffs failed count"
      merge_request_diffs_registry_count:
        type: "integer"
        format: "int32"
        description: "Merge request diffs registry count"
      merge_request_diffs_verification_total_count:
        type: "integer"
        format: "int32"
        description: "Merge request diffs verification total count"
      merge_request_diffs_verified_count:
        type: "integer"
        format: "int32"
        description: "Merge request diffs verified count"
      merge_request_diffs_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "Merge request diffs verified count"
      package_files_count:
        type: "integer"
        format: "int32"
        description: "Packages files count"
      package_files_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "Packages files checksum total count"
      package_files_checksummed_count:
        type: "integer"
        format: "int32"
        description: "Packages files checksummed count"
      package_files_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "Packages files checksum failed count"
      package_files_synced_count:
        type: "integer"
        format: "int32"
        description: "Packages files synced count"
      package_files_failed_count:
        type: "integer"
        format: "int32"
        description: "Packages files failed count"
      package_files_registry_count:
        type: "integer"
        format: "int32"
        description: "Packages files registry count"
      package_files_verification_total_count:
        type: "integer"
        format: "int32"
        description: "Packages files verification total count"
      package_files_verified_count:
        type: "integer"
        format: "int32"
        description: "Packages files verified count"
      package_files_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "Packages files verification failed count"
      terraform_state_versions_count:
        type: "integer"
        format: "int32"
        description: "Terraform state versions count"
      terraform_state_versions_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "Terraform state versions checksum total count"
      terraform_state_versions_checksummed_count:
        type: "integer"
        format: "int32"
        description: "Terraform state versions checksummed count"
      terraform_state_versions_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "Terraform state versions checksum failed count"
      terraform_state_versions_synced_count:
        type: "integer"
        format: "int32"
        description: "Terraform state versions synced count"
      terraform_state_versions_failed_count:
        type: "integer"
        format: "int32"
        description: "Terraform state versions failed count"
      terraform_state_versions_registry_count:
        type: "integer"
        format: "int32"
        description: "Terraform state versions registry count"
      terraform_state_versions_verification_total_count:
        type: "integer"
        format: "int32"
        description: "Terraform state versions verification total count"
      terraform_state_versions_verified_count:
        type: "integer"
        format: "int32"
        description: "Terraform state versions verified count"
      terraform_state_versions_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "Terraform state versions verification failed count"
      snippet_repositories_count:
        type: "integer"
        format: "int32"
        description: "Snippet repositories count"
      snippet_repositories_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "Snippet repositories checksum total count"
      snippet_repositories_checksummed_count:
        type: "integer"
        format: "int32"
        description: "Snippet repositories checksummed count"
      snippet_repositories_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "Snippet repositories checksum failed count"
      snippet_repositories_synced_count:
        type: "integer"
        format: "int32"
        description: "Snippet repositories synced count"
      snippet_repositories_failed_count:
        type: "integer"
        format: "int32"
        description: "Snippet repositories failed count"
      snippet_repositories_registry_count:
        type: "integer"
        format: "int32"
        description: "Snippet repositories registry count"
      snippet_repositories_verification_total_count:
        type: "integer"
        format: "int32"
        description: "Snippet repositories verification total count"
      snippet_repositories_verified_count:
        type: "integer"
        format: "int32"
        description: "Snippet repositories verified count"
      snippet_repositories_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "Snippet repositories verification failed count"
      group_wiki_repositories_count:
        type: "integer"
        format: "int32"
        description: "Group wiki repositories count"
      group_wiki_repositories_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "Group wiki repositories checksum total count"
      group_wiki_repositories_checksummed_count:
        type: "integer"
        format: "int32"
        description: "Group wiki repositories checksummed count"
      group_wiki_repositories_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "Group wiki repositories checksum failed count"
      group_wiki_repositories_synced_count:
        type: "integer"
        format: "int32"
        description: "Group wiki repositories synced count"
      group_wiki_repositories_failed_count:
        type: "integer"
        format: "int32"
        description: "Group wiki repositories failed count"
      group_wiki_repositories_registry_count:
        type: "integer"
        format: "int32"
        description: "Group wiki repositories registry count"
      group_wiki_repositories_verification_total_count:
        type: "integer"
        format: "int32"
        description: "Group wiki repositories verification total count"
      group_wiki_repositories_verified_count:
        type: "integer"
        format: "int32"
        description: "Group wiki repositories verified count"
      group_wiki_repositories_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "Group wiki repositories verification failed count"
      pipeline_artifacts_count:
        type: "integer"
        format: "int32"
        description: "Pipeline artifacts count"
      pipeline_artifacts_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "Pipeline artifacts checksum total count"
      pipeline_artifacts_checksummed_count:
        type: "integer"
        format: "int32"
        description: "Pipeline artifacts checksummed count"
      pipeline_artifacts_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "Pipeline artifacts checksum failed count"
      pipeline_artifacts_synced_count:
        type: "integer"
        format: "int32"
        description: "Pipeline artifacts synced count"
      pipeline_artifacts_failed_count:
        type: "integer"
        format: "int32"
        description: "Pipeline artifacts failed count"
      pipeline_artifacts_registry_count:
        type: "integer"
        format: "int32"
        description: "Pipeline artifacts registry count"
      pipeline_artifacts_verification_total_count:
        type: "integer"
        format: "int32"
        description: "Pipeline artifacts verification total count"
      pipeline_artifacts_verified_count:
        type: "integer"
        format: "int32"
        description: "Pipeline artifacts verified count"
      pipeline_artifacts_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "Pipeline artifacts verification failed count"
      pages_deployments_count:
        type: "integer"
        format: "int32"
        description: "Pages deployments count"
      pages_deployments_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "Pages deployments checksum total count"
      pages_deployments_checksummed_count:
        type: "integer"
        format: "int32"
        description: "Pages deployments checksummed count"
      pages_deployments_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "Pages deployments checksum failed count"
      pages_deployments_synced_count:
        type: "integer"
        format: "int32"
        description: "Pages deployments synced count"
      pages_deployments_failed_count:
        type: "integer"
        format: "int32"
        description: "Pages deployments failed count"
      pages_deployments_registry_count:
        type: "integer"
        format: "int32"
        description: "Pages deployments registry count"
      pages_deployments_verification_total_count:
        type: "integer"
        format: "int32"
        description: "Pages deployments verification total count"
      pages_deployments_verified_count:
        type: "integer"
        format: "int32"
        description: "Pages deployments verified count"
      pages_deployments_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "Pages deployments verification failed count"
      uploads_count:
        type: "integer"
        format: "int32"
        description: "Uploads count"
      uploads_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "Uploads checksum total count"
      uploads_checksummed_count:
        type: "integer"
        format: "int32"
        description: "Uploads checksummed count"
      uploads_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "Uploads checksum failed count"
      uploads_synced_count:
        type: "integer"
        format: "int32"
        description: "Uploads synced count"
      uploads_failed_count:
        type: "integer"
        format: "int32"
        description: "Uploads failed count"
      uploads_registry_count:
        type: "integer"
        format: "int32"
        description: "Uploads registry count"
      uploads_verification_total_count:
        type: "integer"
        format: "int32"
        description: "Uploads verification total count"
      uploads_verified_count:
        type: "integer"
        format: "int32"
        description: "Uploads verified count"
      uploads_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "Uploads verification failed count"
      job_artifacts_count:
        type: "integer"
        format: "int32"
        description: "Job artifacts count"
      job_artifacts_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "Job artifacts checksum total count"
      job_artifacts_checksummed_count:
        type: "integer"
        format: "int32"
        description: "Job artifacts checksummed count"
      job_artifacts_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "Job artifacts checksum failed count"
      job_artifacts_synced_count:
        type: "integer"
        format: "int32"
        description: "Job artifacts synced count"
      job_artifacts_failed_count:
        type: "integer"
        format: "int32"
        description: "Job artifacts failed count"
      job_artifacts_registry_count:
        type: "integer"
        format: "int32"
        description: "Job artifacts registry count"
      job_artifacts_verification_total_count:
        type: "integer"
        format: "int32"
        description: "Job artifacts verification total count"
      job_artifacts_verified_count:
        type: "integer"
        format: "int32"
        description: "Job artifacts verified count"
      job_artifacts_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "Job artifacts verification failed count"
      ci_secure_files_count:
        type: "integer"
        format: "int32"
        description: "CI secure files count"
      ci_secure_files_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "CI secure files checksum total count"
      ci_secure_files_checksummed_count:
        type: "integer"
        format: "int32"
        description: "CI secure files checksummed count"
      ci_secure_files_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "CI secure files checksum failed count"
      ci_secure_files_synced_count:
        type: "integer"
        format: "int32"
        description: "CI secure files synced count"
      ci_secure_files_failed_count:
        type: "integer"
        format: "int32"
        description: "CI secure files failed count"
      ci_secure_files_registry_count:
        type: "integer"
        format: "int32"
        description: "CI secure files registry count"
      ci_secure_files_verification_total_count:
        type: "integer"
        format: "int32"
        description: "CI secure files verification total count"
      ci_secure_files_verified_count:
        type: "integer"
        format: "int32"
        description: "CI secure files verified count"
      ci_secure_files_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "CI secure files verification failed count"
      container_repositories_count:
        type: "integer"
        format: "int32"
        description: "Container repositories count"
      container_repositories_checksum_total_count:
        type: "integer"
        format: "int32"
        description: "Container repositories checksum total count"
      container_repositories_checksummed_count:
        type: "integer"
        format: "int32"
        description: "Container repositories checksummed count"
      container_repositories_checksum_failed_count:
        type: "integer"
        format: "int32"
        description: "Container repositories checksum failed count"
      container_repositories_synced_count:
        type: "integer"
        format: "int32"
        description: "Container repositories synced count"
      container_repositories_failed_count:
        type: "integer"
        format: "int32"
        description: "Container repositories failed count"
      container_repositories_registry_count:
        type: "integer"
        format: "int32"
        description: "Container repositories registry count"
      container_repositories_verification_total_count:
        type: "integer"
        format: "int32"
        description: "Container repositories verification total count"
      container_repositories_verified_count:
        type: "integer"
        format: "int32"
        description: "Container repositories verified count"
      container_repositories_verification_failed_count:
        type: "integer"
        format: "int32"
        description: "Container repositories verification failed count"
      git_fetch_event_count_weekly:
        type: "integer"
        format: "int32"
        description: "Git fetch event count weekly"
      git_push_event_count_weekly:
        type: "integer"
        format: "int32"
        description: "Git push event count weekly"
      proxy_remote_requests_event_count_weekly:
        type: "integer"
        format: "int32"
        description: "Proxy remote requests event count weekly"
      proxy_local_requests_event_count_weekly:
        type: "integer"
        format: "int32"
        description: "Proxy local requests event count weekly"
  postApiV4GeoStatus_data:
    type: "object"
    required:
    - "geo_node_id"
    properties:
      geo_node_id:
        type: "integer"
        format: "int32"
        description: "Geo Node ID to look up its status"
      db_replication_lag_seconds:
        type: "integer"
        format: "int32"
        description: "DB replication lag in seconds"
      last_event_id:
        type: "integer"
        format: "int32"
        description: "Last event ID"
      last_event_date:
        type: "string"
        format: "date-time"
        description: "Last event date"
      cursor_last_event_id:
        type: "integer"
        format: "int32"
        description: "Cursor last event ID"
      cursor_last_event_date:
        type: "string"
        format: "date-time"
        description: "Cursor last event date"
      last_successful_status_check_at:
        type: "string"
        format: "date-time"
        description: "Last successful status check date"
      status_message:
        type: "string"
        description: "Status message"
      replication_slots_count:
        type: "integer"
        format: "int32"
        description: "Replication slots count"
      replication_slots_used_count:
        type: "integer"
        format: "int32"
        description: "Replication slots used count"
      replication_slots_max_retained_wal_bytes:
        type: "integer"
        format: "int32"
        description: "Maximum number of bytes retained in the WAL on the primary"
      version:
        type: "string"
        description: "Gitlab version"
      revision:
        type: "string"
        description: "Gitlab revision"
      status:
        $ref: "#/definitions/postApiV4GeoStatus_data_status"
  EE_API_Entities_GeoNodeStatus__links:
    type: "object"
    properties:
      self:
        type: "string"
      node:
        type: "string"
    example:
      node: "node"
      self: "self"
  postApiV4GeoProxyGitSshInfoRefsUploadPack_data:
    type: "object"
    required:
    - "gl_id"
    - "primary_repo"
    properties:
      gl_id:
        type: "string"
        description: "GitLab identifier of user that initiated the clone/pull"
      primary_repo:
        type: "string"
        description: "Primary repository to clone/pull"
  postApiV4GeoProxyGitSshUploadPack_data:
    type: "object"
    required:
    - "gl_id"
    - "primary_repo"
    properties:
      gl_id:
        type: "string"
      primary_repo:
        type: "string"
  putApiV4NamespacesId_gitlab_subscription_attributes:
    type: "object"
    properties:
      start_date:
        type: "string"
        format: "date"
        description: "Start date of subscription"
      seats:
        type: "integer"
        format: "int32"
        description: "Number of seats in subscription"
      max_seats_used:
        type: "integer"
        format: "int32"
        description: "Highest number of active users in the last month"
      plan_code:
        type: "string"
        description: "Subscription tier code"
      end_date:
        type: "string"
        format: "date"
        description: "End date of subscription"
      auto_renew:
        type: "boolean"
        description: "Whether subscription will auto renew on end date"
      trial:
        type: "boolean"
        description: "Whether the subscription is a trial"
      trial_ends_on:
        type: "string"
        format: "date"
        description: "End date of trial"
      trial_starts_on:
        type: "string"
        format: "date"
        description: "Start date of trial"
      trial_extension_type:
        type: "integer"
        format: "int32"
        description: "Whether subscription is an extended or reactivated trial"
  API_Entities_GitlabSubscription_plan:
    type: "object"
    properties:
      code:
        type: "string"
      name:
        type: "string"
      trial:
        type: "string"
      auto_renew:
        type: "string"
      upgradable:
        type: "string"
      exclude_guests:
        type: "string"
    example:
      exclude_guests: "exclude_guests"
      code: "code"
      auto_renew: "auto_renew"
      upgradable: "upgradable"
      name: "name"
      trial: "trial"
  API_Entities_GitlabSubscription_usage:
    type: "object"
    properties:
      seats_in_subscription:
        type: "string"
      seats_in_use:
        type: "string"
      max_seats_used:
        type: "string"
      seats_owed:
        type: "string"
    example:
      max_seats_used: "max_seats_used"
      seats_in_use: "seats_in_use"
      seats_owed: "seats_owed"
      seats_in_subscription: "seats_in_subscription"
  API_Entities_GitlabSubscription_billing:
    type: "object"
    properties:
      subscription_start_date:
        type: "string"
      subscription_end_date:
        type: "string"
      trial_ends_on:
        type: "string"
    example:
      subscription_end_date: "subscription_end_date"
      trial_ends_on: "trial_ends_on"
      subscription_start_date: "subscription_start_date"
  API_Entities_Metadata_kas:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      externalUrl:
        type: "string"
        example: "grpc://gitlab.example.com:8150"
      version:
        type: "string"
        example: "15.0.0"
    example:
      externalUrl: "grpc://gitlab.example.com:8150"
      version: "15.0.0"
      enabled: true
